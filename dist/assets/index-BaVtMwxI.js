var WU=Object.defineProperty;var GU=(n,e,t)=>e in n?WU(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var $N=(n,e,t)=>GU(n,typeof e!="symbol"?e+"":e,t);function HU(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const i=Object.getOwnPropertyDescriptor(s,r);i&&Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();var FN=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function jU(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function XU(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var O1={exports:{}},dp={},L1={exports:{}},pn={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var PN;function qU(){if(PN)return pn;PN=1;var n=Symbol.for("react.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),o=Symbol.for("react.context"),a=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),d=Symbol.iterator;function p(j){return j===null||typeof j!="object"?null:(j=d&&j[d]||j["@@iterator"],typeof j=="function"?j:null)}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,b={};function y(j,se,be){this.props=j,this.context=se,this.refs=b,this.updater=be||m}y.prototype.isReactComponent={},y.prototype.setState=function(j,se){if(typeof j!="object"&&typeof j!="function"&&j!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,j,se,"setState")},y.prototype.forceUpdate=function(j){this.updater.enqueueForceUpdate(this,j,"forceUpdate")};function v(){}v.prototype=y.prototype;function w(j,se,be){this.props=j,this.context=se,this.refs=b,this.updater=be||m}var E=w.prototype=new v;E.constructor=w,g(E,y.prototype),E.isPureReactComponent=!0;var T=Array.isArray,I=Object.prototype.hasOwnProperty,M={current:null},$={key:!0,ref:!0,__self:!0,__source:!0};function O(j,se,be){var ae,de={},Se=null,Te=null;if(se!=null)for(ae in se.ref!==void 0&&(Te=se.ref),se.key!==void 0&&(Se=""+se.key),se)I.call(se,ae)&&!$.hasOwnProperty(ae)&&(de[ae]=se[ae]);var De=arguments.length-2;if(De===1)de.children=be;else if(1<De){for(var Ue=Array(De),We=0;We<De;We++)Ue[We]=arguments[We+2];de.children=Ue}if(j&&j.defaultProps)for(ae in De=j.defaultProps,De)de[ae]===void 0&&(de[ae]=De[ae]);return{$$typeof:n,type:j,key:Se,ref:Te,props:de,_owner:M.current}}function k(j,se){return{$$typeof:n,type:j.type,key:se,ref:j.ref,props:j.props,_owner:j._owner}}function N(j){return typeof j=="object"&&j!==null&&j.$$typeof===n}function A(j){var se={"=":"=0",":":"=2"};return"$"+j.replace(/[=:]/g,function(be){return se[be]})}var B=/\/+/g;function W(j,se){return typeof j=="object"&&j!==null&&j.key!=null?A(""+j.key):se.toString(36)}function K(j,se,be,ae,de){var Se=typeof j;(Se==="undefined"||Se==="boolean")&&(j=null);var Te=!1;if(j===null)Te=!0;else switch(Se){case"string":case"number":Te=!0;break;case"object":switch(j.$$typeof){case n:case e:Te=!0}}if(Te)return Te=j,de=de(Te),j=ae===""?"."+W(Te,0):ae,T(de)?(be="",j!=null&&(be=j.replace(B,"$&/")+"/"),K(de,se,be,"",function(We){return We})):de!=null&&(N(de)&&(de=k(de,be+(!de.key||Te&&Te.key===de.key?"":(""+de.key).replace(B,"$&/")+"/")+j)),se.push(de)),1;if(Te=0,ae=ae===""?".":ae+":",T(j))for(var De=0;De<j.length;De++){Se=j[De];var Ue=ae+W(Se,De);Te+=K(Se,se,be,Ue,de)}else if(Ue=p(j),typeof Ue=="function")for(j=Ue.call(j),De=0;!(Se=j.next()).done;)Se=Se.value,Ue=ae+W(Se,De++),Te+=K(Se,se,be,Ue,de);else if(Se==="object")throw se=String(j),Error("Objects are not valid as a React child (found: "+(se==="[object Object]"?"object with keys {"+Object.keys(j).join(", ")+"}":se)+"). If you meant to render a collection of children, use an array instead.");return Te}function q(j,se,be){if(j==null)return j;var ae=[],de=0;return K(j,ae,"","",function(Se){return se.call(be,Se,de++)}),ae}function Y(j){if(j._status===-1){var se=j._result;se=se(),se.then(function(be){(j._status===0||j._status===-1)&&(j._status=1,j._result=be)},function(be){(j._status===0||j._status===-1)&&(j._status=2,j._result=be)}),j._status===-1&&(j._status=0,j._result=se)}if(j._status===1)return j._result.default;throw j._result}var J={current:null},G={transition:null},ee={ReactCurrentDispatcher:J,ReactCurrentBatchConfig:G,ReactCurrentOwner:M};function te(){throw Error("act(...) is not supported in production builds of React.")}return pn.Children={map:q,forEach:function(j,se,be){q(j,function(){se.apply(this,arguments)},be)},count:function(j){var se=0;return q(j,function(){se++}),se},toArray:function(j){return q(j,function(se){return se})||[]},only:function(j){if(!N(j))throw Error("React.Children.only expected to receive a single React element child.");return j}},pn.Component=y,pn.Fragment=t,pn.Profiler=r,pn.PureComponent=w,pn.StrictMode=s,pn.Suspense=l,pn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ee,pn.act=te,pn.cloneElement=function(j,se,be){if(j==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+j+".");var ae=g({},j.props),de=j.key,Se=j.ref,Te=j._owner;if(se!=null){if(se.ref!==void 0&&(Se=se.ref,Te=M.current),se.key!==void 0&&(de=""+se.key),j.type&&j.type.defaultProps)var De=j.type.defaultProps;for(Ue in se)I.call(se,Ue)&&!$.hasOwnProperty(Ue)&&(ae[Ue]=se[Ue]===void 0&&De!==void 0?De[Ue]:se[Ue])}var Ue=arguments.length-2;if(Ue===1)ae.children=be;else if(1<Ue){De=Array(Ue);for(var We=0;We<Ue;We++)De[We]=arguments[We+2];ae.children=De}return{$$typeof:n,type:j.type,key:de,ref:Se,props:ae,_owner:Te}},pn.createContext=function(j){return j={$$typeof:o,_currentValue:j,_currentValue2:j,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},j.Provider={$$typeof:i,_context:j},j.Consumer=j},pn.createElement=O,pn.createFactory=function(j){var se=O.bind(null,j);return se.type=j,se},pn.createRef=function(){return{current:null}},pn.forwardRef=function(j){return{$$typeof:a,render:j}},pn.isValidElement=N,pn.lazy=function(j){return{$$typeof:h,_payload:{_status:-1,_result:j},_init:Y}},pn.memo=function(j,se){return{$$typeof:u,type:j,compare:se===void 0?null:se}},pn.startTransition=function(j){var se=G.transition;G.transition={};try{j()}finally{G.transition=se}},pn.unstable_act=te,pn.useCallback=function(j,se){return J.current.useCallback(j,se)},pn.useContext=function(j){return J.current.useContext(j)},pn.useDebugValue=function(){},pn.useDeferredValue=function(j){return J.current.useDeferredValue(j)},pn.useEffect=function(j,se){return J.current.useEffect(j,se)},pn.useId=function(){return J.current.useId()},pn.useImperativeHandle=function(j,se,be){return J.current.useImperativeHandle(j,se,be)},pn.useInsertionEffect=function(j,se){return J.current.useInsertionEffect(j,se)},pn.useLayoutEffect=function(j,se){return J.current.useLayoutEffect(j,se)},pn.useMemo=function(j,se){return J.current.useMemo(j,se)},pn.useReducer=function(j,se,be){return J.current.useReducer(j,se,be)},pn.useRef=function(j){return J.current.useRef(j)},pn.useState=function(j){return J.current.useState(j)},pn.useSyncExternalStore=function(j,se,be){return J.current.useSyncExternalStore(j,se,be)},pn.useTransition=function(){return J.current.useTransition()},pn.version="18.3.1",pn}var ON;function AT(){return ON||(ON=1,L1.exports=qU()),L1.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var LN;function KU(){if(LN)return dp;LN=1;var n=AT(),e=Symbol.for("react.element"),t=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,r=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i={key:!0,ref:!0,__self:!0,__source:!0};function o(a,l,u){var h,d={},p=null,m=null;u!==void 0&&(p=""+u),l.key!==void 0&&(p=""+l.key),l.ref!==void 0&&(m=l.ref);for(h in l)s.call(l,h)&&!i.hasOwnProperty(h)&&(d[h]=l[h]);if(a&&a.defaultProps)for(h in l=a.defaultProps,l)d[h]===void 0&&(d[h]=l[h]);return{$$typeof:e,type:a,key:p,ref:m,props:d,_owner:r.current}}return dp.Fragment=t,dp.jsx=o,dp.jsxs=o,dp}var UN;function YU(){return UN||(UN=1,O1.exports=KU()),O1.exports}var $i=YU(),Di=AT(),Yy={},U1={exports:{}},hi={},z1={exports:{}},B1={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var zN;function ZU(){return zN||(zN=1,function(n){function e(G,ee){var te=G.length;G.push(ee);e:for(;0<te;){var j=te-1>>>1,se=G[j];if(0<r(se,ee))G[j]=ee,G[te]=se,te=j;else break e}}function t(G){return G.length===0?null:G[0]}function s(G){if(G.length===0)return null;var ee=G[0],te=G.pop();if(te!==ee){G[0]=te;e:for(var j=0,se=G.length,be=se>>>1;j<be;){var ae=2*(j+1)-1,de=G[ae],Se=ae+1,Te=G[Se];if(0>r(de,te))Se<se&&0>r(Te,de)?(G[j]=Te,G[Se]=te,j=Se):(G[j]=de,G[ae]=te,j=ae);else if(Se<se&&0>r(Te,te))G[j]=Te,G[Se]=te,j=Se;else break e}}return ee}function r(G,ee){var te=G.sortIndex-ee.sortIndex;return te!==0?te:G.id-ee.id}if(typeof performance=="object"&&typeof performance.now=="function"){var i=performance;n.unstable_now=function(){return i.now()}}else{var o=Date,a=o.now();n.unstable_now=function(){return o.now()-a}}var l=[],u=[],h=1,d=null,p=3,m=!1,g=!1,b=!1,y=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(G){for(var ee=t(u);ee!==null;){if(ee.callback===null)s(u);else if(ee.startTime<=G)s(u),ee.sortIndex=ee.expirationTime,e(l,ee);else break;ee=t(u)}}function T(G){if(b=!1,E(G),!g)if(t(l)!==null)g=!0,Y(I);else{var ee=t(u);ee!==null&&J(T,ee.startTime-G)}}function I(G,ee){g=!1,b&&(b=!1,v(O),O=-1),m=!0;var te=p;try{for(E(ee),d=t(l);d!==null&&(!(d.expirationTime>ee)||G&&!A());){var j=d.callback;if(typeof j=="function"){d.callback=null,p=d.priorityLevel;var se=j(d.expirationTime<=ee);ee=n.unstable_now(),typeof se=="function"?d.callback=se:d===t(l)&&s(l),E(ee)}else s(l);d=t(l)}if(d!==null)var be=!0;else{var ae=t(u);ae!==null&&J(T,ae.startTime-ee),be=!1}return be}finally{d=null,p=te,m=!1}}var M=!1,$=null,O=-1,k=5,N=-1;function A(){return!(n.unstable_now()-N<k)}function B(){if($!==null){var G=n.unstable_now();N=G;var ee=!0;try{ee=$(!0,G)}finally{ee?W():(M=!1,$=null)}}else M=!1}var W;if(typeof w=="function")W=function(){w(B)};else if(typeof MessageChannel<"u"){var K=new MessageChannel,q=K.port2;K.port1.onmessage=B,W=function(){q.postMessage(null)}}else W=function(){y(B,0)};function Y(G){$=G,M||(M=!0,W())}function J(G,ee){O=y(function(){G(n.unstable_now())},ee)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(G){G.callback=null},n.unstable_continueExecution=function(){g||m||(g=!0,Y(I))},n.unstable_forceFrameRate=function(G){0>G||125<G?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):k=0<G?Math.floor(1e3/G):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return t(l)},n.unstable_next=function(G){switch(p){case 1:case 2:case 3:var ee=3;break;default:ee=p}var te=p;p=ee;try{return G()}finally{p=te}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(G,ee){switch(G){case 1:case 2:case 3:case 4:case 5:break;default:G=3}var te=p;p=G;try{return ee()}finally{p=te}},n.unstable_scheduleCallback=function(G,ee,te){var j=n.unstable_now();switch(typeof te=="object"&&te!==null?(te=te.delay,te=typeof te=="number"&&0<te?j+te:j):te=j,G){case 1:var se=-1;break;case 2:se=250;break;case 5:se=1073741823;break;case 4:se=1e4;break;default:se=5e3}return se=te+se,G={id:h++,callback:ee,priorityLevel:G,startTime:te,expirationTime:se,sortIndex:-1},te>j?(G.sortIndex=te,e(u,G),t(l)===null&&G===t(u)&&(b?(v(O),O=-1):b=!0,J(T,te-j))):(G.sortIndex=se,e(l,G),g||m||(g=!0,Y(I))),G},n.unstable_shouldYield=A,n.unstable_wrapCallback=function(G){var ee=p;return function(){var te=p;p=ee;try{return G.apply(this,arguments)}finally{p=te}}}}(B1)),B1}var BN;function QU(){return BN||(BN=1,z1.exports=ZU()),z1.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var VN;function JU(){if(VN)return hi;VN=1;var n=AT(),e=QU();function t(c){for(var f="https://reactjs.org/docs/error-decoder.html?invariant="+c,x=1;x<arguments.length;x++)f+="&args[]="+encodeURIComponent(arguments[x]);return"Minified React error #"+c+"; visit "+f+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var s=new Set,r={};function i(c,f){o(c,f),o(c+"Capture",f)}function o(c,f){for(r[c]=f,c=0;c<f.length;c++)s.add(f[c])}var a=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),l=Object.prototype.hasOwnProperty,u=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},d={};function p(c){return l.call(d,c)?!0:l.call(h,c)?!1:u.test(c)?d[c]=!0:(h[c]=!0,!1)}function m(c,f,x,_){if(x!==null&&x.type===0)return!1;switch(typeof f){case"function":case"symbol":return!0;case"boolean":return _?!1:x!==null?!x.acceptsBooleans:(c=c.toLowerCase().slice(0,5),c!=="data-"&&c!=="aria-");default:return!1}}function g(c,f,x,_){if(f===null||typeof f>"u"||m(c,f,x,_))return!0;if(_)return!1;if(x!==null)switch(x.type){case 3:return!f;case 4:return f===!1;case 5:return isNaN(f);case 6:return isNaN(f)||1>f}return!1}function b(c,f,x,_,C,D,U){this.acceptsBooleans=f===2||f===3||f===4,this.attributeName=_,this.attributeNamespace=C,this.mustUseProperty=x,this.propertyName=c,this.type=f,this.sanitizeURL=D,this.removeEmptyString=U}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(c){y[c]=new b(c,0,!1,c,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(c){var f=c[0];y[f]=new b(f,1,!1,c[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(c){y[c]=new b(c,2,!1,c.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(c){y[c]=new b(c,2,!1,c,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(c){y[c]=new b(c,3,!1,c.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(c){y[c]=new b(c,3,!0,c,null,!1,!1)}),["capture","download"].forEach(function(c){y[c]=new b(c,4,!1,c,null,!1,!1)}),["cols","rows","size","span"].forEach(function(c){y[c]=new b(c,6,!1,c,null,!1,!1)}),["rowSpan","start"].forEach(function(c){y[c]=new b(c,5,!1,c.toLowerCase(),null,!1,!1)});var v=/[\-:]([a-z])/g;function w(c){return c[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(c){var f=c.replace(v,w);y[f]=new b(f,1,!1,c,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(c){var f=c.replace(v,w);y[f]=new b(f,1,!1,c,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(c){var f=c.replace(v,w);y[f]=new b(f,1,!1,c,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(c){y[c]=new b(c,1,!1,c.toLowerCase(),null,!1,!1)}),y.xlinkHref=new b("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(c){y[c]=new b(c,1,!1,c.toLowerCase(),null,!0,!0)});function E(c,f,x,_){var C=y.hasOwnProperty(f)?y[f]:null;(C!==null?C.type!==0:_||!(2<f.length)||f[0]!=="o"&&f[0]!=="O"||f[1]!=="n"&&f[1]!=="N")&&(g(f,x,C,_)&&(x=null),_||C===null?p(f)&&(x===null?c.removeAttribute(f):c.setAttribute(f,""+x)):C.mustUseProperty?c[C.propertyName]=x===null?C.type===3?!1:"":x:(f=C.attributeName,_=C.attributeNamespace,x===null?c.removeAttribute(f):(C=C.type,x=C===3||C===4&&x===!0?"":""+x,_?c.setAttributeNS(_,f,x):c.setAttribute(f,x))))}var T=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,I=Symbol.for("react.element"),M=Symbol.for("react.portal"),$=Symbol.for("react.fragment"),O=Symbol.for("react.strict_mode"),k=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),A=Symbol.for("react.context"),B=Symbol.for("react.forward_ref"),W=Symbol.for("react.suspense"),K=Symbol.for("react.suspense_list"),q=Symbol.for("react.memo"),Y=Symbol.for("react.lazy"),J=Symbol.for("react.offscreen"),G=Symbol.iterator;function ee(c){return c===null||typeof c!="object"?null:(c=G&&c[G]||c["@@iterator"],typeof c=="function"?c:null)}var te=Object.assign,j;function se(c){if(j===void 0)try{throw Error()}catch(x){var f=x.stack.trim().match(/\n( *(at )?)/);j=f&&f[1]||""}return`
`+j+c}var be=!1;function ae(c,f){if(!c||be)return"";be=!0;var x=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(f)if(f=function(){throw Error()},Object.defineProperty(f.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(f,[])}catch(ke){var _=ke}Reflect.construct(c,[],f)}else{try{f.call()}catch(ke){_=ke}c.call(f.prototype)}else{try{throw Error()}catch(ke){_=ke}c()}}catch(ke){if(ke&&_&&typeof ke.stack=="string"){for(var C=ke.stack.split(`
`),D=_.stack.split(`
`),U=C.length-1,oe=D.length-1;1<=U&&0<=oe&&C[U]!==D[oe];)oe--;for(;1<=U&&0<=oe;U--,oe--)if(C[U]!==D[oe]){if(U!==1||oe!==1)do if(U--,oe--,0>oe||C[U]!==D[oe]){var fe=`
`+C[U].replace(" at new "," at ");return c.displayName&&fe.includes("<anonymous>")&&(fe=fe.replace("<anonymous>",c.displayName)),fe}while(1<=U&&0<=oe);break}}}finally{be=!1,Error.prepareStackTrace=x}return(c=c?c.displayName||c.name:"")?se(c):""}function de(c){switch(c.tag){case 5:return se(c.type);case 16:return se("Lazy");case 13:return se("Suspense");case 19:return se("SuspenseList");case 0:case 2:case 15:return c=ae(c.type,!1),c;case 11:return c=ae(c.type.render,!1),c;case 1:return c=ae(c.type,!0),c;default:return""}}function Se(c){if(c==null)return null;if(typeof c=="function")return c.displayName||c.name||null;if(typeof c=="string")return c;switch(c){case $:return"Fragment";case M:return"Portal";case k:return"Profiler";case O:return"StrictMode";case W:return"Suspense";case K:return"SuspenseList"}if(typeof c=="object")switch(c.$$typeof){case A:return(c.displayName||"Context")+".Consumer";case N:return(c._context.displayName||"Context")+".Provider";case B:var f=c.render;return c=c.displayName,c||(c=f.displayName||f.name||"",c=c!==""?"ForwardRef("+c+")":"ForwardRef"),c;case q:return f=c.displayName||null,f!==null?f:Se(c.type)||"Memo";case Y:f=c._payload,c=c._init;try{return Se(c(f))}catch{}}return null}function Te(c){var f=c.type;switch(c.tag){case 24:return"Cache";case 9:return(f.displayName||"Context")+".Consumer";case 10:return(f._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return c=f.render,c=c.displayName||c.name||"",f.displayName||(c!==""?"ForwardRef("+c+")":"ForwardRef");case 7:return"Fragment";case 5:return f;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Se(f);case 8:return f===O?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof f=="function")return f.displayName||f.name||null;if(typeof f=="string")return f}return null}function De(c){switch(typeof c){case"boolean":case"number":case"string":case"undefined":return c;case"object":return c;default:return""}}function Ue(c){var f=c.type;return(c=c.nodeName)&&c.toLowerCase()==="input"&&(f==="checkbox"||f==="radio")}function We(c){var f=Ue(c)?"checked":"value",x=Object.getOwnPropertyDescriptor(c.constructor.prototype,f),_=""+c[f];if(!c.hasOwnProperty(f)&&typeof x<"u"&&typeof x.get=="function"&&typeof x.set=="function"){var C=x.get,D=x.set;return Object.defineProperty(c,f,{configurable:!0,get:function(){return C.call(this)},set:function(U){_=""+U,D.call(this,U)}}),Object.defineProperty(c,f,{enumerable:x.enumerable}),{getValue:function(){return _},setValue:function(U){_=""+U},stopTracking:function(){c._valueTracker=null,delete c[f]}}}}function lt(c){c._valueTracker||(c._valueTracker=We(c))}function Ft(c){if(!c)return!1;var f=c._valueTracker;if(!f)return!0;var x=f.getValue(),_="";return c&&(_=Ue(c)?c.checked?"true":"false":c.value),c=_,c!==x?(f.setValue(c),!0):!1}function Je(c){if(c=c||(typeof document<"u"?document:void 0),typeof c>"u")return null;try{return c.activeElement||c.body}catch{return c.body}}function ie(c,f){var x=f.checked;return te({},f,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:x??c._wrapperState.initialChecked})}function Kt(c,f){var x=f.defaultValue==null?"":f.defaultValue,_=f.checked!=null?f.checked:f.defaultChecked;x=De(f.value!=null?f.value:x),c._wrapperState={initialChecked:_,initialValue:x,controlled:f.type==="checkbox"||f.type==="radio"?f.checked!=null:f.value!=null}}function bt(c,f){f=f.checked,f!=null&&E(c,"checked",f,!1)}function _t(c,f){bt(c,f);var x=De(f.value),_=f.type;if(x!=null)_==="number"?(x===0&&c.value===""||c.value!=x)&&(c.value=""+x):c.value!==""+x&&(c.value=""+x);else if(_==="submit"||_==="reset"){c.removeAttribute("value");return}f.hasOwnProperty("value")?nn(c,f.type,x):f.hasOwnProperty("defaultValue")&&nn(c,f.type,De(f.defaultValue)),f.checked==null&&f.defaultChecked!=null&&(c.defaultChecked=!!f.defaultChecked)}function tt(c,f,x){if(f.hasOwnProperty("value")||f.hasOwnProperty("defaultValue")){var _=f.type;if(!(_!=="submit"&&_!=="reset"||f.value!==void 0&&f.value!==null))return;f=""+c._wrapperState.initialValue,x||f===c.value||(c.value=f),c.defaultValue=f}x=c.name,x!==""&&(c.name=""),c.defaultChecked=!!c._wrapperState.initialChecked,x!==""&&(c.name=x)}function nn(c,f,x){(f!=="number"||Je(c.ownerDocument)!==c)&&(x==null?c.defaultValue=""+c._wrapperState.initialValue:c.defaultValue!==""+x&&(c.defaultValue=""+x))}var nt=Array.isArray;function Z(c,f,x,_){if(c=c.options,f){f={};for(var C=0;C<x.length;C++)f["$"+x[C]]=!0;for(x=0;x<c.length;x++)C=f.hasOwnProperty("$"+c[x].value),c[x].selected!==C&&(c[x].selected=C),C&&_&&(c[x].defaultSelected=!0)}else{for(x=""+De(x),f=null,C=0;C<c.length;C++){if(c[C].value===x){c[C].selected=!0,_&&(c[C].defaultSelected=!0);return}f!==null||c[C].disabled||(f=c[C])}f!==null&&(f.selected=!0)}}function V(c,f){if(f.dangerouslySetInnerHTML!=null)throw Error(t(91));return te({},f,{value:void 0,defaultValue:void 0,children:""+c._wrapperState.initialValue})}function Ie(c,f){var x=f.value;if(x==null){if(x=f.children,f=f.defaultValue,x!=null){if(f!=null)throw Error(t(92));if(nt(x)){if(1<x.length)throw Error(t(93));x=x[0]}f=x}f==null&&(f=""),x=f}c._wrapperState={initialValue:De(x)}}function Oe(c,f){var x=De(f.value),_=De(f.defaultValue);x!=null&&(x=""+x,x!==c.value&&(c.value=x),f.defaultValue==null&&c.defaultValue!==x&&(c.defaultValue=x)),_!=null&&(c.defaultValue=""+_)}function Be(c){var f=c.textContent;f===c._wrapperState.initialValue&&f!==""&&f!==null&&(c.value=f)}function Le(c){switch(c){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function gt(c,f){return c==null||c==="http://www.w3.org/1999/xhtml"?Le(f):c==="http://www.w3.org/2000/svg"&&f==="foreignObject"?"http://www.w3.org/1999/xhtml":c}var et,ut=function(c){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(f,x,_,C){MSApp.execUnsafeLocalFunction(function(){return c(f,x,_,C)})}:c}(function(c,f){if(c.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in c)c.innerHTML=f;else{for(et=et||document.createElement("div"),et.innerHTML="<svg>"+f.valueOf().toString()+"</svg>",f=et.firstChild;c.firstChild;)c.removeChild(c.firstChild);for(;f.firstChild;)c.appendChild(f.firstChild)}});function Zt(c,f){if(f){var x=c.firstChild;if(x&&x===c.lastChild&&x.nodeType===3){x.nodeValue=f;return}}c.textContent=f}var Xe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},yt=["Webkit","ms","Moz","O"];Object.keys(Xe).forEach(function(c){yt.forEach(function(f){f=f+c.charAt(0).toUpperCase()+c.substring(1),Xe[f]=Xe[c]})});function Rt(c,f,x){return f==null||typeof f=="boolean"||f===""?"":x||typeof f!="number"||f===0||Xe.hasOwnProperty(c)&&Xe[c]?(""+f).trim():f+"px"}function Ut(c,f){c=c.style;for(var x in f)if(f.hasOwnProperty(x)){var _=x.indexOf("--")===0,C=Rt(x,f[x],_);x==="float"&&(x="cssFloat"),_?c.setProperty(x,C):c[x]=C}}var xt=te({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ln(c,f){if(f){if(xt[c]&&(f.children!=null||f.dangerouslySetInnerHTML!=null))throw Error(t(137,c));if(f.dangerouslySetInnerHTML!=null){if(f.children!=null)throw Error(t(60));if(typeof f.dangerouslySetInnerHTML!="object"||!("__html"in f.dangerouslySetInnerHTML))throw Error(t(61))}if(f.style!=null&&typeof f.style!="object")throw Error(t(62))}}function Xt(c,f){if(c.indexOf("-")===-1)return typeof f.is=="string";switch(c){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var En=null;function ge(c){return c=c.target||c.srcElement||window,c.correspondingUseElement&&(c=c.correspondingUseElement),c.nodeType===3?c.parentNode:c}var st=null,Pe=null,ze=null;function ct(c){if(c=Zf(c)){if(typeof st!="function")throw Error(t(280));var f=c.stateNode;f&&(f=hy(f),st(c.stateNode,c.type,f))}}function ht(c){Pe?ze?ze.push(c):ze=[c]:Pe=c}function Bt(){if(Pe){var c=Pe,f=ze;if(ze=Pe=null,ct(c),f)for(c=0;c<f.length;c++)ct(f[c])}}function On(c,f){return c(f)}function ps(){}var fn=!1;function Us(c,f,x){if(fn)return c(f,x);fn=!0;try{return On(c,f,x)}finally{fn=!1,(Pe!==null||ze!==null)&&(ps(),Bt())}}function gr(c,f){var x=c.stateNode;if(x===null)return null;var _=hy(x);if(_===null)return null;x=_[f];e:switch(f){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(_=!_.disabled)||(c=c.type,_=!(c==="button"||c==="input"||c==="select"||c==="textarea")),c=!_;break e;default:c=!1}if(c)return null;if(x&&typeof x!="function")throw Error(t(231,f,typeof x));return x}var Ci=!1;if(a)try{var zo={};Object.defineProperty(zo,"passive",{get:function(){Ci=!0}}),window.addEventListener("test",zo,zo),window.removeEventListener("test",zo,zo)}catch{Ci=!1}function zs(c,f,x,_,C,D,U,oe,fe){var ke=Array.prototype.slice.call(arguments,3);try{f.apply(x,ke)}catch(je){this.onError(je)}}var yr=!1,Bo=null,Ln=!1,Bs=null,hl={onError:function(c){yr=!0,Bo=c}};function dl(c,f,x,_,C,D,U,oe,fe){yr=!1,Bo=null,zs.apply(hl,arguments)}function Sa(c,f,x,_,C,D,U,oe,fe){if(dl.apply(this,arguments),yr){if(yr){var ke=Bo;yr=!1,Bo=null}else throw Error(t(198));Ln||(Ln=!0,Bs=ke)}}function ri(c){var f=c,x=c;if(c.alternate)for(;f.return;)f=f.return;else{c=f;do f=c,f.flags&4098&&(x=f.return),c=f.return;while(c)}return f.tag===3?x:null}function _a(c){if(c.tag===13){var f=c.memoizedState;if(f===null&&(c=c.alternate,c!==null&&(f=c.memoizedState)),f!==null)return f.dehydrated}return null}function Vo(c){if(ri(c)!==c)throw Error(t(188))}function Jc(c){var f=c.alternate;if(!f){if(f=ri(c),f===null)throw Error(t(188));return f!==c?null:c}for(var x=c,_=f;;){var C=x.return;if(C===null)break;var D=C.alternate;if(D===null){if(_=C.return,_!==null){x=_;continue}break}if(C.child===D.child){for(D=C.child;D;){if(D===x)return Vo(C),c;if(D===_)return Vo(C),f;D=D.sibling}throw Error(t(188))}if(x.return!==_.return)x=C,_=D;else{for(var U=!1,oe=C.child;oe;){if(oe===x){U=!0,x=C,_=D;break}if(oe===_){U=!0,_=C,x=D;break}oe=oe.sibling}if(!U){for(oe=D.child;oe;){if(oe===x){U=!0,x=D,_=C;break}if(oe===_){U=!0,_=D,x=C;break}oe=oe.sibling}if(!U)throw Error(t(189))}}if(x.alternate!==_)throw Error(t(190))}if(x.tag!==3)throw Error(t(188));return x.stateNode.current===x?c:f}function fl(c){return c=Jc(c),c!==null?pl(c):null}function pl(c){if(c.tag===5||c.tag===6)return c;for(c=c.child;c!==null;){var f=pl(c);if(f!==null)return f;c=c.sibling}return null}var Eu=e.unstable_scheduleCallback,X=e.unstable_cancelCallback,ve=e.unstable_shouldYield,Ae=e.unstable_requestPaint,Ee=e.unstable_now,we=e.unstable_getCurrentPriorityLevel,Ke=e.unstable_ImmediatePriority,at=e.unstable_UserBlockingPriority,it=e.unstable_NormalPriority,wt=e.unstable_LowPriority,zt=e.unstable_IdlePriority,Dt=null,St=null;function xn(c){if(St&&typeof St.onCommitFiberRoot=="function")try{St.onCommitFiberRoot(Dt,c,void 0,(c.current.flags&128)===128)}catch{}}var Qt=Math.clz32?Math.clz32:bn,qn=Math.log,Kn=Math.LN2;function bn(c){return c>>>=0,c===0?32:31-(qn(c)/Kn|0)|0}var Pt=64,Zn=4194304;function hn(c){switch(c&-c){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return c&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return c&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return c}}function Vs(c,f){var x=c.pendingLanes;if(x===0)return 0;var _=0,C=c.suspendedLanes,D=c.pingedLanes,U=x&268435455;if(U!==0){var oe=U&~C;oe!==0?_=hn(oe):(D&=U,D!==0&&(_=hn(D)))}else U=x&~C,U!==0?_=hn(U):D!==0&&(_=hn(D));if(_===0)return 0;if(f!==0&&f!==_&&!(f&C)&&(C=_&-_,D=f&-f,C>=D||C===16&&(D&4194240)!==0))return f;if(_&4&&(_|=x&16),f=c.entangledLanes,f!==0)for(c=c.entanglements,f&=_;0<f;)x=31-Qt(f),C=1<<x,_|=c[x],f&=~C;return _}function us(c,f){switch(c){case 1:case 2:case 4:return f+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return f+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function nr(c,f){for(var x=c.suspendedLanes,_=c.pingedLanes,C=c.expirationTimes,D=c.pendingLanes;0<D;){var U=31-Qt(D),oe=1<<U,fe=C[U];fe===-1?(!(oe&x)||oe&_)&&(C[U]=us(oe,f)):fe<=f&&(c.expiredLanes|=oe),D&=~oe}}function ji(c){return c=c.pendingLanes&-1073741825,c!==0?c:c&1073741824?1073741824:0}function Nn(){var c=Pt;return Pt<<=1,!(Pt&4194240)&&(Pt=64),c}function Ws(c){for(var f=[],x=0;31>x;x++)f.push(c);return f}function _s(c,f,x){c.pendingLanes|=f,f!==536870912&&(c.suspendedLanes=0,c.pingedLanes=0),c=c.eventTimes,f=31-Qt(f),c[f]=x}function Gs(c,f){var x=c.pendingLanes&~f;c.pendingLanes=f,c.suspendedLanes=0,c.pingedLanes=0,c.expiredLanes&=f,c.mutableReadLanes&=f,c.entangledLanes&=f,f=c.entanglements;var _=c.eventTimes;for(c=c.expirationTimes;0<x;){var C=31-Qt(x),D=1<<C;f[C]=0,_[C]=-1,c[C]=-1,x&=~D}}function As(c,f){var x=c.entangledLanes|=f;for(c=c.entanglements;x;){var _=31-Qt(x),C=1<<_;C&f|c[_]&f&&(c[_]|=f),x&=~C}}var wn=0;function Ii(c){return c&=-c,1<c?4<c?c&268435455?16:536870912:4:1}var Cu,eh,Pf,ml,jg,Of=!1,th=[],Wo=null,Xi=null,ii=null,Iu=new Map,Nu=new Map,Go=[],lw="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function nh(c,f){switch(c){case"focusin":case"focusout":Wo=null;break;case"dragenter":case"dragleave":Xi=null;break;case"mouseover":case"mouseout":ii=null;break;case"pointerover":case"pointerout":Iu.delete(f.pointerId);break;case"gotpointercapture":case"lostpointercapture":Nu.delete(f.pointerId)}}function gl(c,f,x,_,C,D){return c===null||c.nativeEvent!==D?(c={blockedOn:f,domEventName:x,eventSystemFlags:_,nativeEvent:D,targetContainers:[C]},f!==null&&(f=Zf(f),f!==null&&eh(f)),c):(c.eventSystemFlags|=_,f=c.targetContainers,C!==null&&f.indexOf(C)===-1&&f.push(C),c)}function Xg(c,f,x,_,C){switch(f){case"focusin":return Wo=gl(Wo,c,f,x,_,C),!0;case"dragenter":return Xi=gl(Xi,c,f,x,_,C),!0;case"mouseover":return ii=gl(ii,c,f,x,_,C),!0;case"pointerover":var D=C.pointerId;return Iu.set(D,gl(Iu.get(D)||null,c,f,x,_,C)),!0;case"gotpointercapture":return D=C.pointerId,Nu.set(D,gl(Nu.get(D)||null,c,f,x,_,C)),!0}return!1}function yl(c){var f=Du(c.target);if(f!==null){var x=ri(f);if(x!==null){if(f=x.tag,f===13){if(f=_a(x),f!==null){c.blockedOn=f,jg(c.priority,function(){Pf(x)});return}}else if(f===3&&x.stateNode.current.memoizedState.isDehydrated){c.blockedOn=x.tag===3?x.stateNode.containerInfo:null;return}}}c.blockedOn=null}function Tr(c){if(c.blockedOn!==null)return!1;for(var f=c.targetContainers;0<f.length;){var x=Lf(c.domEventName,c.eventSystemFlags,f[0],c.nativeEvent);if(x===null){x=c.nativeEvent;var _=new x.constructor(x.type,x);En=_,x.target.dispatchEvent(_),En=null}else return f=Zf(x),f!==null&&eh(f),c.blockedOn=x,!1;f.shift()}return!0}function qg(c,f,x){Tr(c)&&x.delete(f)}function uw(){Of=!1,Wo!==null&&Tr(Wo)&&(Wo=null),Xi!==null&&Tr(Xi)&&(Xi=null),ii!==null&&Tr(ii)&&(ii=null),Iu.forEach(qg),Nu.forEach(qg)}function xl(c,f){c.blockedOn===f&&(c.blockedOn=null,Of||(Of=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,uw)))}function vl(c){function f(C){return xl(C,c)}if(0<th.length){xl(th[0],c);for(var x=1;x<th.length;x++){var _=th[x];_.blockedOn===c&&(_.blockedOn=null)}}for(Wo!==null&&xl(Wo,c),Xi!==null&&xl(Xi,c),ii!==null&&xl(ii,c),Iu.forEach(f),Nu.forEach(f),x=0;x<Go.length;x++)_=Go[x],_.blockedOn===c&&(_.blockedOn=null);for(;0<Go.length&&(x=Go[0],x.blockedOn===null);)yl(x),x.blockedOn===null&&Go.shift()}var Ho=T.ReactCurrentBatchConfig,bl=!0;function wl(c,f,x,_){var C=wn,D=Ho.transition;Ho.transition=null;try{wn=1,Au(c,f,x,_)}finally{wn=C,Ho.transition=D}}function Kg(c,f,x,_){var C=wn,D=Ho.transition;Ho.transition=null;try{wn=4,Au(c,f,x,_)}finally{wn=C,Ho.transition=D}}function Au(c,f,x,_){if(bl){var C=Lf(c,f,x,_);if(C===null)Iw(c,f,_,sh,x),nh(c,_);else if(Xg(C,c,f,x,_))_.stopPropagation();else if(nh(c,_),f&4&&-1<lw.indexOf(c)){for(;C!==null;){var D=Zf(C);if(D!==null&&Cu(D),D=Lf(c,f,x,_),D===null&&Iw(c,f,_,sh,x),D===C)break;C=D}C!==null&&_.stopPropagation()}else Iw(c,f,_,null,x)}}var sh=null;function Lf(c,f,x,_){if(sh=null,c=ge(_),c=Du(c),c!==null)if(f=ri(c),f===null)c=null;else if(x=f.tag,x===13){if(c=_a(f),c!==null)return c;c=null}else if(x===3){if(f.stateNode.current.memoizedState.isDehydrated)return f.tag===3?f.stateNode.containerInfo:null;c=null}else f!==c&&(c=null);return sh=c,null}function Sl(c){switch(c){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(we()){case Ke:return 1;case at:return 4;case it:case wt:return 16;case zt:return 536870912;default:return 16}default:return 16}}var ho=null,rh=null,ih=null;function Yg(){if(ih)return ih;var c,f=rh,x=f.length,_,C="value"in ho?ho.value:ho.textContent,D=C.length;for(c=0;c<x&&f[c]===C[c];c++);var U=x-c;for(_=1;_<=U&&f[x-_]===C[D-_];_++);return ih=C.slice(c,1<_?1-_:void 0)}function Ta(c){var f=c.keyCode;return"charCode"in c?(c=c.charCode,c===0&&f===13&&(c=13)):c=f,c===10&&(c=13),32<=c||c===13?c:0}function Ru(){return!0}function Zg(){return!1}function Er(c){function f(x,_,C,D,U){this._reactName=x,this._targetInst=C,this.type=_,this.nativeEvent=D,this.target=U,this.currentTarget=null;for(var oe in c)c.hasOwnProperty(oe)&&(x=c[oe],this[oe]=x?x(D):D[oe]);return this.isDefaultPrevented=(D.defaultPrevented!=null?D.defaultPrevented:D.returnValue===!1)?Ru:Zg,this.isPropagationStopped=Zg,this}return te(f.prototype,{preventDefault:function(){this.defaultPrevented=!0;var x=this.nativeEvent;x&&(x.preventDefault?x.preventDefault():typeof x.returnValue!="unknown"&&(x.returnValue=!1),this.isDefaultPrevented=Ru)},stopPropagation:function(){var x=this.nativeEvent;x&&(x.stopPropagation?x.stopPropagation():typeof x.cancelBubble!="unknown"&&(x.cancelBubble=!0),this.isPropagationStopped=Ru)},persist:function(){},isPersistent:Ru}),f}var _l={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(c){return c.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Uf=Er(_l),Ea=te({},_l,{view:0,detail:0}),Qg=Er(Ea),zf,Bf,ku,oh=te({},Ea,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:P,button:0,buttons:0,relatedTarget:function(c){return c.relatedTarget===void 0?c.fromElement===c.srcElement?c.toElement:c.fromElement:c.relatedTarget},movementX:function(c){return"movementX"in c?c.movementX:(c!==ku&&(ku&&c.type==="mousemove"?(zf=c.screenX-ku.screenX,Bf=c.screenY-ku.screenY):Bf=zf=0,ku=c),zf)},movementY:function(c){return"movementY"in c?c.movementY:Bf}}),Vf=Er(oh),cw=te({},oh,{dataTransfer:0}),hw=Er(cw),Wf=te({},Ea,{relatedTarget:0}),Gf=Er(Wf),dw=te({},_l,{animationName:0,elapsedTime:0,pseudoElement:0}),fw=Er(dw),ah=te({},_l,{clipboardData:function(c){return"clipboardData"in c?c.clipboardData:window.clipboardData}}),pw=Er(ah),mw=te({},_l,{data:0}),Jg=Er(mw),ey={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ty={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},S={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function R(c){var f=this.nativeEvent;return f.getModifierState?f.getModifierState(c):(c=S[c])?!!f[c]:!1}function P(){return R}var L=te({},Ea,{key:function(c){if(c.key){var f=ey[c.key]||c.key;if(f!=="Unidentified")return f}return c.type==="keypress"?(c=Ta(c),c===13?"Enter":String.fromCharCode(c)):c.type==="keydown"||c.type==="keyup"?ty[c.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:P,charCode:function(c){return c.type==="keypress"?Ta(c):0},keyCode:function(c){return c.type==="keydown"||c.type==="keyup"?c.keyCode:0},which:function(c){return c.type==="keypress"?Ta(c):c.type==="keydown"||c.type==="keyup"?c.keyCode:0}}),Q=Er(L),re=te({},oh,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),ne=Er(re),me=te({},Ea,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:P}),Re=Er(me),qe=te({},_l,{propertyName:0,elapsedTime:0,pseudoElement:0}),rt=Er(qe),Ht=te({},oh,{deltaX:function(c){return"deltaX"in c?c.deltaX:"wheelDeltaX"in c?-c.wheelDeltaX:0},deltaY:function(c){return"deltaY"in c?c.deltaY:"wheelDeltaY"in c?-c.wheelDeltaY:"wheelDelta"in c?-c.wheelDelta:0},deltaZ:0,deltaMode:0}),Ot=Er(Ht),ft=[9,13,27,32],Vt=a&&"CompositionEvent"in window,Jt=null;a&&"documentMode"in document&&(Jt=document.documentMode);var Gn=a&&"TextEvent"in window&&!Jt,Un=a&&(!Vt||Jt&&8<Jt&&11>=Jt),Rs=" ",Hr=!1;function xr(c,f){switch(c){case"keyup":return ft.indexOf(f.keyCode)!==-1;case"keydown":return f.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Sn(c){return c=c.detail,typeof c=="object"&&"data"in c?c.data:null}var ns=!1;function jo(c,f){switch(c){case"compositionend":return Sn(f);case"keypress":return f.which!==32?null:(Hr=!0,Rs);case"textInput":return c=f.data,c===Rs&&Hr?null:c;default:return null}}function gw(c,f){if(ns)return c==="compositionend"||!Vt&&xr(c,f)?(c=Yg(),ih=rh=ho=null,ns=!1,c):null;switch(c){case"paste":return null;case"keypress":if(!(f.ctrlKey||f.altKey||f.metaKey)||f.ctrlKey&&f.altKey){if(f.char&&1<f.char.length)return f.char;if(f.which)return String.fromCharCode(f.which)}return null;case"compositionend":return Un&&f.locale!=="ko"?null:f.data;default:return null}}var yw={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ny(c){var f=c&&c.nodeName&&c.nodeName.toLowerCase();return f==="input"?!!yw[c.type]:f==="textarea"}function sy(c,f,x,_){ht(_),f=ly(f,"onChange"),0<f.length&&(x=new Uf("onChange","change",null,x,_),c.push({event:x,listeners:f}))}var Mu=null,Xo=null;function G3(c){YI(c,0)}function ry(c){var f=dh(c);if(Ft(f))return c}function H3(c,f){if(c==="change")return f}var DI=!1;if(a){var xw;if(a){var vw="oninput"in document;if(!vw){var $I=document.createElement("div");$I.setAttribute("oninput","return;"),vw=typeof $I.oninput=="function"}xw=vw}else xw=!1;DI=xw&&(!document.documentMode||9<document.documentMode)}function FI(){Mu&&(Mu.detachEvent("onpropertychange",PI),Xo=Mu=null)}function PI(c){if(c.propertyName==="value"&&ry(Xo)){var f=[];sy(f,Xo,c,ge(c)),Us(G3,f)}}function j3(c,f,x){c==="focusin"?(FI(),Mu=f,Xo=x,Mu.attachEvent("onpropertychange",PI)):c==="focusout"&&FI()}function X3(c){if(c==="selectionchange"||c==="keyup"||c==="keydown")return ry(Xo)}function q3(c,f){if(c==="click")return ry(f)}function K3(c,f){if(c==="input"||c==="change")return ry(f)}function Y3(c,f){return c===f&&(c!==0||1/c===1/f)||c!==c&&f!==f}var fo=typeof Object.is=="function"?Object.is:Y3;function Hf(c,f){if(fo(c,f))return!0;if(typeof c!="object"||c===null||typeof f!="object"||f===null)return!1;var x=Object.keys(c),_=Object.keys(f);if(x.length!==_.length)return!1;for(_=0;_<x.length;_++){var C=x[_];if(!l.call(f,C)||!fo(c[C],f[C]))return!1}return!0}function OI(c){for(;c&&c.firstChild;)c=c.firstChild;return c}function LI(c,f){var x=OI(c);c=0;for(var _;x;){if(x.nodeType===3){if(_=c+x.textContent.length,c<=f&&_>=f)return{node:x,offset:f-c};c=_}e:{for(;x;){if(x.nextSibling){x=x.nextSibling;break e}x=x.parentNode}x=void 0}x=OI(x)}}function UI(c,f){return c&&f?c===f?!0:c&&c.nodeType===3?!1:f&&f.nodeType===3?UI(c,f.parentNode):"contains"in c?c.contains(f):c.compareDocumentPosition?!!(c.compareDocumentPosition(f)&16):!1:!1}function zI(){for(var c=window,f=Je();f instanceof c.HTMLIFrameElement;){try{var x=typeof f.contentWindow.location.href=="string"}catch{x=!1}if(x)c=f.contentWindow;else break;f=Je(c.document)}return f}function bw(c){var f=c&&c.nodeName&&c.nodeName.toLowerCase();return f&&(f==="input"&&(c.type==="text"||c.type==="search"||c.type==="tel"||c.type==="url"||c.type==="password")||f==="textarea"||c.contentEditable==="true")}function Z3(c){var f=zI(),x=c.focusedElem,_=c.selectionRange;if(f!==x&&x&&x.ownerDocument&&UI(x.ownerDocument.documentElement,x)){if(_!==null&&bw(x)){if(f=_.start,c=_.end,c===void 0&&(c=f),"selectionStart"in x)x.selectionStart=f,x.selectionEnd=Math.min(c,x.value.length);else if(c=(f=x.ownerDocument||document)&&f.defaultView||window,c.getSelection){c=c.getSelection();var C=x.textContent.length,D=Math.min(_.start,C);_=_.end===void 0?D:Math.min(_.end,C),!c.extend&&D>_&&(C=_,_=D,D=C),C=LI(x,D);var U=LI(x,_);C&&U&&(c.rangeCount!==1||c.anchorNode!==C.node||c.anchorOffset!==C.offset||c.focusNode!==U.node||c.focusOffset!==U.offset)&&(f=f.createRange(),f.setStart(C.node,C.offset),c.removeAllRanges(),D>_?(c.addRange(f),c.extend(U.node,U.offset)):(f.setEnd(U.node,U.offset),c.addRange(f)))}}for(f=[],c=x;c=c.parentNode;)c.nodeType===1&&f.push({element:c,left:c.scrollLeft,top:c.scrollTop});for(typeof x.focus=="function"&&x.focus(),x=0;x<f.length;x++)c=f[x],c.element.scrollLeft=c.left,c.element.scrollTop=c.top}}var Q3=a&&"documentMode"in document&&11>=document.documentMode,lh=null,ww=null,jf=null,Sw=!1;function BI(c,f,x){var _=x.window===x?x.document:x.nodeType===9?x:x.ownerDocument;Sw||lh==null||lh!==Je(_)||(_=lh,"selectionStart"in _&&bw(_)?_={start:_.selectionStart,end:_.selectionEnd}:(_=(_.ownerDocument&&_.ownerDocument.defaultView||window).getSelection(),_={anchorNode:_.anchorNode,anchorOffset:_.anchorOffset,focusNode:_.focusNode,focusOffset:_.focusOffset}),jf&&Hf(jf,_)||(jf=_,_=ly(ww,"onSelect"),0<_.length&&(f=new Uf("onSelect","select",null,f,x),c.push({event:f,listeners:_}),f.target=lh)))}function iy(c,f){var x={};return x[c.toLowerCase()]=f.toLowerCase(),x["Webkit"+c]="webkit"+f,x["Moz"+c]="moz"+f,x}var uh={animationend:iy("Animation","AnimationEnd"),animationiteration:iy("Animation","AnimationIteration"),animationstart:iy("Animation","AnimationStart"),transitionend:iy("Transition","TransitionEnd")},_w={},VI={};a&&(VI=document.createElement("div").style,"AnimationEvent"in window||(delete uh.animationend.animation,delete uh.animationiteration.animation,delete uh.animationstart.animation),"TransitionEvent"in window||delete uh.transitionend.transition);function oy(c){if(_w[c])return _w[c];if(!uh[c])return c;var f=uh[c],x;for(x in f)if(f.hasOwnProperty(x)&&x in VI)return _w[c]=f[x];return c}var WI=oy("animationend"),GI=oy("animationiteration"),HI=oy("animationstart"),jI=oy("transitionend"),XI=new Map,qI="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Tl(c,f){XI.set(c,f),i(f,[c])}for(var Tw=0;Tw<qI.length;Tw++){var Ew=qI[Tw],J3=Ew.toLowerCase(),eU=Ew[0].toUpperCase()+Ew.slice(1);Tl(J3,"on"+eU)}Tl(WI,"onAnimationEnd"),Tl(GI,"onAnimationIteration"),Tl(HI,"onAnimationStart"),Tl("dblclick","onDoubleClick"),Tl("focusin","onFocus"),Tl("focusout","onBlur"),Tl(jI,"onTransitionEnd"),o("onMouseEnter",["mouseout","mouseover"]),o("onMouseLeave",["mouseout","mouseover"]),o("onPointerEnter",["pointerout","pointerover"]),o("onPointerLeave",["pointerout","pointerover"]),i("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),i("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),i("onBeforeInput",["compositionend","keypress","textInput","paste"]),i("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),i("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),i("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),tU=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xf));function KI(c,f,x){var _=c.type||"unknown-event";c.currentTarget=x,Sa(_,f,void 0,c),c.currentTarget=null}function YI(c,f){f=(f&4)!==0;for(var x=0;x<c.length;x++){var _=c[x],C=_.event;_=_.listeners;e:{var D=void 0;if(f)for(var U=_.length-1;0<=U;U--){var oe=_[U],fe=oe.instance,ke=oe.currentTarget;if(oe=oe.listener,fe!==D&&C.isPropagationStopped())break e;KI(C,oe,ke),D=fe}else for(U=0;U<_.length;U++){if(oe=_[U],fe=oe.instance,ke=oe.currentTarget,oe=oe.listener,fe!==D&&C.isPropagationStopped())break e;KI(C,oe,ke),D=fe}}}if(Ln)throw c=Bs,Ln=!1,Bs=null,c}function Qn(c,f){var x=f[Dw];x===void 0&&(x=f[Dw]=new Set);var _=c+"__bubble";x.has(_)||(ZI(f,c,2,!1),x.add(_))}function Cw(c,f,x){var _=0;f&&(_|=4),ZI(x,c,_,f)}var ay="_reactListening"+Math.random().toString(36).slice(2);function qf(c){if(!c[ay]){c[ay]=!0,s.forEach(function(x){x!=="selectionchange"&&(tU.has(x)||Cw(x,!1,c),Cw(x,!0,c))});var f=c.nodeType===9?c:c.ownerDocument;f===null||f[ay]||(f[ay]=!0,Cw("selectionchange",!1,f))}}function ZI(c,f,x,_){switch(Sl(f)){case 1:var C=wl;break;case 4:C=Kg;break;default:C=Au}x=C.bind(null,f,x,c),C=void 0,!Ci||f!=="touchstart"&&f!=="touchmove"&&f!=="wheel"||(C=!0),_?C!==void 0?c.addEventListener(f,x,{capture:!0,passive:C}):c.addEventListener(f,x,!0):C!==void 0?c.addEventListener(f,x,{passive:C}):c.addEventListener(f,x,!1)}function Iw(c,f,x,_,C){var D=_;if(!(f&1)&&!(f&2)&&_!==null)e:for(;;){if(_===null)return;var U=_.tag;if(U===3||U===4){var oe=_.stateNode.containerInfo;if(oe===C||oe.nodeType===8&&oe.parentNode===C)break;if(U===4)for(U=_.return;U!==null;){var fe=U.tag;if((fe===3||fe===4)&&(fe=U.stateNode.containerInfo,fe===C||fe.nodeType===8&&fe.parentNode===C))return;U=U.return}for(;oe!==null;){if(U=Du(oe),U===null)return;if(fe=U.tag,fe===5||fe===6){_=D=U;continue e}oe=oe.parentNode}}_=_.return}Us(function(){var ke=D,je=ge(x),Ye=[];e:{var He=XI.get(c);if(He!==void 0){var vt=Uf,It=c;switch(c){case"keypress":if(Ta(x)===0)break e;case"keydown":case"keyup":vt=Q;break;case"focusin":It="focus",vt=Gf;break;case"focusout":It="blur",vt=Gf;break;case"beforeblur":case"afterblur":vt=Gf;break;case"click":if(x.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":vt=Vf;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":vt=hw;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":vt=Re;break;case WI:case GI:case HI:vt=fw;break;case jI:vt=rt;break;case"scroll":vt=Qg;break;case"wheel":vt=Ot;break;case"copy":case"cut":case"paste":vt=pw;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":vt=ne}var Mt=(f&4)!==0,Ts=!Mt&&c==="scroll",Ce=Mt?He!==null?He+"Capture":null:He;Mt=[];for(var ye=ke,Ne;ye!==null;){Ne=ye;var Qe=Ne.stateNode;if(Ne.tag===5&&Qe!==null&&(Ne=Qe,Ce!==null&&(Qe=gr(ye,Ce),Qe!=null&&Mt.push(Kf(ye,Qe,Ne)))),Ts)break;ye=ye.return}0<Mt.length&&(He=new vt(He,It,null,x,je),Ye.push({event:He,listeners:Mt}))}}if(!(f&7)){e:{if(He=c==="mouseover"||c==="pointerover",vt=c==="mouseout"||c==="pointerout",He&&x!==En&&(It=x.relatedTarget||x.fromElement)&&(Du(It)||It[Ca]))break e;if((vt||He)&&(He=je.window===je?je:(He=je.ownerDocument)?He.defaultView||He.parentWindow:window,vt?(It=x.relatedTarget||x.toElement,vt=ke,It=It?Du(It):null,It!==null&&(Ts=ri(It),It!==Ts||It.tag!==5&&It.tag!==6)&&(It=null)):(vt=null,It=ke),vt!==It)){if(Mt=Vf,Qe="onMouseLeave",Ce="onMouseEnter",ye="mouse",(c==="pointerout"||c==="pointerover")&&(Mt=ne,Qe="onPointerLeave",Ce="onPointerEnter",ye="pointer"),Ts=vt==null?He:dh(vt),Ne=It==null?He:dh(It),He=new Mt(Qe,ye+"leave",vt,x,je),He.target=Ts,He.relatedTarget=Ne,Qe=null,Du(je)===ke&&(Mt=new Mt(Ce,ye+"enter",It,x,je),Mt.target=Ne,Mt.relatedTarget=Ts,Qe=Mt),Ts=Qe,vt&&It)t:{for(Mt=vt,Ce=It,ye=0,Ne=Mt;Ne;Ne=ch(Ne))ye++;for(Ne=0,Qe=Ce;Qe;Qe=ch(Qe))Ne++;for(;0<ye-Ne;)Mt=ch(Mt),ye--;for(;0<Ne-ye;)Ce=ch(Ce),Ne--;for(;ye--;){if(Mt===Ce||Ce!==null&&Mt===Ce.alternate)break t;Mt=ch(Mt),Ce=ch(Ce)}Mt=null}else Mt=null;vt!==null&&QI(Ye,He,vt,Mt,!1),It!==null&&Ts!==null&&QI(Ye,Ts,It,Mt,!0)}}e:{if(He=ke?dh(ke):window,vt=He.nodeName&&He.nodeName.toLowerCase(),vt==="select"||vt==="input"&&He.type==="file")var $t=H3;else if(ny(He))if(DI)$t=K3;else{$t=X3;var Wt=j3}else(vt=He.nodeName)&&vt.toLowerCase()==="input"&&(He.type==="checkbox"||He.type==="radio")&&($t=q3);if($t&&($t=$t(c,ke))){sy(Ye,$t,x,je);break e}Wt&&Wt(c,He,ke),c==="focusout"&&(Wt=He._wrapperState)&&Wt.controlled&&He.type==="number"&&nn(He,"number",He.value)}switch(Wt=ke?dh(ke):window,c){case"focusin":(ny(Wt)||Wt.contentEditable==="true")&&(lh=Wt,ww=ke,jf=null);break;case"focusout":jf=ww=lh=null;break;case"mousedown":Sw=!0;break;case"contextmenu":case"mouseup":case"dragend":Sw=!1,BI(Ye,x,je);break;case"selectionchange":if(Q3)break;case"keydown":case"keyup":BI(Ye,x,je)}var Gt;if(Vt)e:{switch(c){case"compositionstart":var qt="onCompositionStart";break e;case"compositionend":qt="onCompositionEnd";break e;case"compositionupdate":qt="onCompositionUpdate";break e}qt=void 0}else ns?xr(c,x)&&(qt="onCompositionEnd"):c==="keydown"&&x.keyCode===229&&(qt="onCompositionStart");qt&&(Un&&x.locale!=="ko"&&(ns||qt!=="onCompositionStart"?qt==="onCompositionEnd"&&ns&&(Gt=Yg()):(ho=je,rh="value"in ho?ho.value:ho.textContent,ns=!0)),Wt=ly(ke,qt),0<Wt.length&&(qt=new Jg(qt,c,null,x,je),Ye.push({event:qt,listeners:Wt}),Gt?qt.data=Gt:(Gt=Sn(x),Gt!==null&&(qt.data=Gt)))),(Gt=Gn?jo(c,x):gw(c,x))&&(ke=ly(ke,"onBeforeInput"),0<ke.length&&(je=new Jg("onBeforeInput","beforeinput",null,x,je),Ye.push({event:je,listeners:ke}),je.data=Gt))}YI(Ye,f)})}function Kf(c,f,x){return{instance:c,listener:f,currentTarget:x}}function ly(c,f){for(var x=f+"Capture",_=[];c!==null;){var C=c,D=C.stateNode;C.tag===5&&D!==null&&(C=D,D=gr(c,x),D!=null&&_.unshift(Kf(c,D,C)),D=gr(c,f),D!=null&&_.push(Kf(c,D,C))),c=c.return}return _}function ch(c){if(c===null)return null;do c=c.return;while(c&&c.tag!==5);return c||null}function QI(c,f,x,_,C){for(var D=f._reactName,U=[];x!==null&&x!==_;){var oe=x,fe=oe.alternate,ke=oe.stateNode;if(fe!==null&&fe===_)break;oe.tag===5&&ke!==null&&(oe=ke,C?(fe=gr(x,D),fe!=null&&U.unshift(Kf(x,fe,oe))):C||(fe=gr(x,D),fe!=null&&U.push(Kf(x,fe,oe)))),x=x.return}U.length!==0&&c.push({event:f,listeners:U})}var nU=/\r\n?/g,sU=/\u0000|\uFFFD/g;function JI(c){return(typeof c=="string"?c:""+c).replace(nU,`
`).replace(sU,"")}function uy(c,f,x){if(f=JI(f),JI(c)!==f&&x)throw Error(t(425))}function cy(){}var Nw=null,Aw=null;function Rw(c,f){return c==="textarea"||c==="noscript"||typeof f.children=="string"||typeof f.children=="number"||typeof f.dangerouslySetInnerHTML=="object"&&f.dangerouslySetInnerHTML!==null&&f.dangerouslySetInnerHTML.__html!=null}var kw=typeof setTimeout=="function"?setTimeout:void 0,rU=typeof clearTimeout=="function"?clearTimeout:void 0,e2=typeof Promise=="function"?Promise:void 0,iU=typeof queueMicrotask=="function"?queueMicrotask:typeof e2<"u"?function(c){return e2.resolve(null).then(c).catch(oU)}:kw;function oU(c){setTimeout(function(){throw c})}function Mw(c,f){var x=f,_=0;do{var C=x.nextSibling;if(c.removeChild(x),C&&C.nodeType===8)if(x=C.data,x==="/$"){if(_===0){c.removeChild(C),vl(f);return}_--}else x!=="$"&&x!=="$?"&&x!=="$!"||_++;x=C}while(x);vl(f)}function El(c){for(;c!=null;c=c.nextSibling){var f=c.nodeType;if(f===1||f===3)break;if(f===8){if(f=c.data,f==="$"||f==="$!"||f==="$?")break;if(f==="/$")return null}}return c}function t2(c){c=c.previousSibling;for(var f=0;c;){if(c.nodeType===8){var x=c.data;if(x==="$"||x==="$!"||x==="$?"){if(f===0)return c;f--}else x==="/$"&&f++}c=c.previousSibling}return null}var hh=Math.random().toString(36).slice(2),qo="__reactFiber$"+hh,Yf="__reactProps$"+hh,Ca="__reactContainer$"+hh,Dw="__reactEvents$"+hh,aU="__reactListeners$"+hh,lU="__reactHandles$"+hh;function Du(c){var f=c[qo];if(f)return f;for(var x=c.parentNode;x;){if(f=x[Ca]||x[qo]){if(x=f.alternate,f.child!==null||x!==null&&x.child!==null)for(c=t2(c);c!==null;){if(x=c[qo])return x;c=t2(c)}return f}c=x,x=c.parentNode}return null}function Zf(c){return c=c[qo]||c[Ca],!c||c.tag!==5&&c.tag!==6&&c.tag!==13&&c.tag!==3?null:c}function dh(c){if(c.tag===5||c.tag===6)return c.stateNode;throw Error(t(33))}function hy(c){return c[Yf]||null}var $w=[],fh=-1;function Cl(c){return{current:c}}function Jn(c){0>fh||(c.current=$w[fh],$w[fh]=null,fh--)}function Yn(c,f){fh++,$w[fh]=c.current,c.current=f}var Il={},Cr=Cl(Il),oi=Cl(!1),$u=Il;function ph(c,f){var x=c.type.contextTypes;if(!x)return Il;var _=c.stateNode;if(_&&_.__reactInternalMemoizedUnmaskedChildContext===f)return _.__reactInternalMemoizedMaskedChildContext;var C={},D;for(D in x)C[D]=f[D];return _&&(c=c.stateNode,c.__reactInternalMemoizedUnmaskedChildContext=f,c.__reactInternalMemoizedMaskedChildContext=C),C}function ai(c){return c=c.childContextTypes,c!=null}function dy(){Jn(oi),Jn(Cr)}function n2(c,f,x){if(Cr.current!==Il)throw Error(t(168));Yn(Cr,f),Yn(oi,x)}function s2(c,f,x){var _=c.stateNode;if(f=f.childContextTypes,typeof _.getChildContext!="function")return x;_=_.getChildContext();for(var C in _)if(!(C in f))throw Error(t(108,Te(c)||"Unknown",C));return te({},x,_)}function fy(c){return c=(c=c.stateNode)&&c.__reactInternalMemoizedMergedChildContext||Il,$u=Cr.current,Yn(Cr,c),Yn(oi,oi.current),!0}function r2(c,f,x){var _=c.stateNode;if(!_)throw Error(t(169));x?(c=s2(c,f,$u),_.__reactInternalMemoizedMergedChildContext=c,Jn(oi),Jn(Cr),Yn(Cr,c)):Jn(oi),Yn(oi,x)}var Ia=null,py=!1,Fw=!1;function i2(c){Ia===null?Ia=[c]:Ia.push(c)}function uU(c){py=!0,i2(c)}function Nl(){if(!Fw&&Ia!==null){Fw=!0;var c=0,f=wn;try{var x=Ia;for(wn=1;c<x.length;c++){var _=x[c];do _=_(!0);while(_!==null)}Ia=null,py=!1}catch(C){throw Ia!==null&&(Ia=Ia.slice(c+1)),Eu(Ke,Nl),C}finally{wn=f,Fw=!1}}return null}var mh=[],gh=0,my=null,gy=0,qi=[],Ki=0,Fu=null,Na=1,Aa="";function Pu(c,f){mh[gh++]=gy,mh[gh++]=my,my=c,gy=f}function o2(c,f,x){qi[Ki++]=Na,qi[Ki++]=Aa,qi[Ki++]=Fu,Fu=c;var _=Na;c=Aa;var C=32-Qt(_)-1;_&=~(1<<C),x+=1;var D=32-Qt(f)+C;if(30<D){var U=C-C%5;D=(_&(1<<U)-1).toString(32),_>>=U,C-=U,Na=1<<32-Qt(f)+C|x<<C|_,Aa=D+c}else Na=1<<D|x<<C|_,Aa=c}function Pw(c){c.return!==null&&(Pu(c,1),o2(c,1,0))}function Ow(c){for(;c===my;)my=mh[--gh],mh[gh]=null,gy=mh[--gh],mh[gh]=null;for(;c===Fu;)Fu=qi[--Ki],qi[Ki]=null,Aa=qi[--Ki],qi[Ki]=null,Na=qi[--Ki],qi[Ki]=null}var Ni=null,Ai=null,ss=!1,po=null;function a2(c,f){var x=Ji(5,null,null,0);x.elementType="DELETED",x.stateNode=f,x.return=c,f=c.deletions,f===null?(c.deletions=[x],c.flags|=16):f.push(x)}function l2(c,f){switch(c.tag){case 5:var x=c.type;return f=f.nodeType!==1||x.toLowerCase()!==f.nodeName.toLowerCase()?null:f,f!==null?(c.stateNode=f,Ni=c,Ai=El(f.firstChild),!0):!1;case 6:return f=c.pendingProps===""||f.nodeType!==3?null:f,f!==null?(c.stateNode=f,Ni=c,Ai=null,!0):!1;case 13:return f=f.nodeType!==8?null:f,f!==null?(x=Fu!==null?{id:Na,overflow:Aa}:null,c.memoizedState={dehydrated:f,treeContext:x,retryLane:1073741824},x=Ji(18,null,null,0),x.stateNode=f,x.return=c,c.child=x,Ni=c,Ai=null,!0):!1;default:return!1}}function Lw(c){return(c.mode&1)!==0&&(c.flags&128)===0}function Uw(c){if(ss){var f=Ai;if(f){var x=f;if(!l2(c,f)){if(Lw(c))throw Error(t(418));f=El(x.nextSibling);var _=Ni;f&&l2(c,f)?a2(_,x):(c.flags=c.flags&-4097|2,ss=!1,Ni=c)}}else{if(Lw(c))throw Error(t(418));c.flags=c.flags&-4097|2,ss=!1,Ni=c}}}function u2(c){for(c=c.return;c!==null&&c.tag!==5&&c.tag!==3&&c.tag!==13;)c=c.return;Ni=c}function yy(c){if(c!==Ni)return!1;if(!ss)return u2(c),ss=!0,!1;var f;if((f=c.tag!==3)&&!(f=c.tag!==5)&&(f=c.type,f=f!=="head"&&f!=="body"&&!Rw(c.type,c.memoizedProps)),f&&(f=Ai)){if(Lw(c))throw c2(),Error(t(418));for(;f;)a2(c,f),f=El(f.nextSibling)}if(u2(c),c.tag===13){if(c=c.memoizedState,c=c!==null?c.dehydrated:null,!c)throw Error(t(317));e:{for(c=c.nextSibling,f=0;c;){if(c.nodeType===8){var x=c.data;if(x==="/$"){if(f===0){Ai=El(c.nextSibling);break e}f--}else x!=="$"&&x!=="$!"&&x!=="$?"||f++}c=c.nextSibling}Ai=null}}else Ai=Ni?El(c.stateNode.nextSibling):null;return!0}function c2(){for(var c=Ai;c;)c=El(c.nextSibling)}function yh(){Ai=Ni=null,ss=!1}function zw(c){po===null?po=[c]:po.push(c)}var cU=T.ReactCurrentBatchConfig;function Qf(c,f,x){if(c=x.ref,c!==null&&typeof c!="function"&&typeof c!="object"){if(x._owner){if(x=x._owner,x){if(x.tag!==1)throw Error(t(309));var _=x.stateNode}if(!_)throw Error(t(147,c));var C=_,D=""+c;return f!==null&&f.ref!==null&&typeof f.ref=="function"&&f.ref._stringRef===D?f.ref:(f=function(U){var oe=C.refs;U===null?delete oe[D]:oe[D]=U},f._stringRef=D,f)}if(typeof c!="string")throw Error(t(284));if(!x._owner)throw Error(t(290,c))}return c}function xy(c,f){throw c=Object.prototype.toString.call(f),Error(t(31,c==="[object Object]"?"object with keys {"+Object.keys(f).join(", ")+"}":c))}function h2(c){var f=c._init;return f(c._payload)}function d2(c){function f(Ce,ye){if(c){var Ne=Ce.deletions;Ne===null?(Ce.deletions=[ye],Ce.flags|=16):Ne.push(ye)}}function x(Ce,ye){if(!c)return null;for(;ye!==null;)f(Ce,ye),ye=ye.sibling;return null}function _(Ce,ye){for(Ce=new Map;ye!==null;)ye.key!==null?Ce.set(ye.key,ye):Ce.set(ye.index,ye),ye=ye.sibling;return Ce}function C(Ce,ye){return Ce=Pl(Ce,ye),Ce.index=0,Ce.sibling=null,Ce}function D(Ce,ye,Ne){return Ce.index=Ne,c?(Ne=Ce.alternate,Ne!==null?(Ne=Ne.index,Ne<ye?(Ce.flags|=2,ye):Ne):(Ce.flags|=2,ye)):(Ce.flags|=1048576,ye)}function U(Ce){return c&&Ce.alternate===null&&(Ce.flags|=2),Ce}function oe(Ce,ye,Ne,Qe){return ye===null||ye.tag!==6?(ye=k1(Ne,Ce.mode,Qe),ye.return=Ce,ye):(ye=C(ye,Ne),ye.return=Ce,ye)}function fe(Ce,ye,Ne,Qe){var $t=Ne.type;return $t===$?je(Ce,ye,Ne.props.children,Qe,Ne.key):ye!==null&&(ye.elementType===$t||typeof $t=="object"&&$t!==null&&$t.$$typeof===Y&&h2($t)===ye.type)?(Qe=C(ye,Ne.props),Qe.ref=Qf(Ce,ye,Ne),Qe.return=Ce,Qe):(Qe=Vy(Ne.type,Ne.key,Ne.props,null,Ce.mode,Qe),Qe.ref=Qf(Ce,ye,Ne),Qe.return=Ce,Qe)}function ke(Ce,ye,Ne,Qe){return ye===null||ye.tag!==4||ye.stateNode.containerInfo!==Ne.containerInfo||ye.stateNode.implementation!==Ne.implementation?(ye=M1(Ne,Ce.mode,Qe),ye.return=Ce,ye):(ye=C(ye,Ne.children||[]),ye.return=Ce,ye)}function je(Ce,ye,Ne,Qe,$t){return ye===null||ye.tag!==7?(ye=Gu(Ne,Ce.mode,Qe,$t),ye.return=Ce,ye):(ye=C(ye,Ne),ye.return=Ce,ye)}function Ye(Ce,ye,Ne){if(typeof ye=="string"&&ye!==""||typeof ye=="number")return ye=k1(""+ye,Ce.mode,Ne),ye.return=Ce,ye;if(typeof ye=="object"&&ye!==null){switch(ye.$$typeof){case I:return Ne=Vy(ye.type,ye.key,ye.props,null,Ce.mode,Ne),Ne.ref=Qf(Ce,null,ye),Ne.return=Ce,Ne;case M:return ye=M1(ye,Ce.mode,Ne),ye.return=Ce,ye;case Y:var Qe=ye._init;return Ye(Ce,Qe(ye._payload),Ne)}if(nt(ye)||ee(ye))return ye=Gu(ye,Ce.mode,Ne,null),ye.return=Ce,ye;xy(Ce,ye)}return null}function He(Ce,ye,Ne,Qe){var $t=ye!==null?ye.key:null;if(typeof Ne=="string"&&Ne!==""||typeof Ne=="number")return $t!==null?null:oe(Ce,ye,""+Ne,Qe);if(typeof Ne=="object"&&Ne!==null){switch(Ne.$$typeof){case I:return Ne.key===$t?fe(Ce,ye,Ne,Qe):null;case M:return Ne.key===$t?ke(Ce,ye,Ne,Qe):null;case Y:return $t=Ne._init,He(Ce,ye,$t(Ne._payload),Qe)}if(nt(Ne)||ee(Ne))return $t!==null?null:je(Ce,ye,Ne,Qe,null);xy(Ce,Ne)}return null}function vt(Ce,ye,Ne,Qe,$t){if(typeof Qe=="string"&&Qe!==""||typeof Qe=="number")return Ce=Ce.get(Ne)||null,oe(ye,Ce,""+Qe,$t);if(typeof Qe=="object"&&Qe!==null){switch(Qe.$$typeof){case I:return Ce=Ce.get(Qe.key===null?Ne:Qe.key)||null,fe(ye,Ce,Qe,$t);case M:return Ce=Ce.get(Qe.key===null?Ne:Qe.key)||null,ke(ye,Ce,Qe,$t);case Y:var Wt=Qe._init;return vt(Ce,ye,Ne,Wt(Qe._payload),$t)}if(nt(Qe)||ee(Qe))return Ce=Ce.get(Ne)||null,je(ye,Ce,Qe,$t,null);xy(ye,Qe)}return null}function It(Ce,ye,Ne,Qe){for(var $t=null,Wt=null,Gt=ye,qt=ye=0,ir=null;Gt!==null&&qt<Ne.length;qt++){Gt.index>qt?(ir=Gt,Gt=null):ir=Gt.sibling;var An=He(Ce,Gt,Ne[qt],Qe);if(An===null){Gt===null&&(Gt=ir);break}c&&Gt&&An.alternate===null&&f(Ce,Gt),ye=D(An,ye,qt),Wt===null?$t=An:Wt.sibling=An,Wt=An,Gt=ir}if(qt===Ne.length)return x(Ce,Gt),ss&&Pu(Ce,qt),$t;if(Gt===null){for(;qt<Ne.length;qt++)Gt=Ye(Ce,Ne[qt],Qe),Gt!==null&&(ye=D(Gt,ye,qt),Wt===null?$t=Gt:Wt.sibling=Gt,Wt=Gt);return ss&&Pu(Ce,qt),$t}for(Gt=_(Ce,Gt);qt<Ne.length;qt++)ir=vt(Gt,Ce,qt,Ne[qt],Qe),ir!==null&&(c&&ir.alternate!==null&&Gt.delete(ir.key===null?qt:ir.key),ye=D(ir,ye,qt),Wt===null?$t=ir:Wt.sibling=ir,Wt=ir);return c&&Gt.forEach(function(Ol){return f(Ce,Ol)}),ss&&Pu(Ce,qt),$t}function Mt(Ce,ye,Ne,Qe){var $t=ee(Ne);if(typeof $t!="function")throw Error(t(150));if(Ne=$t.call(Ne),Ne==null)throw Error(t(151));for(var Wt=$t=null,Gt=ye,qt=ye=0,ir=null,An=Ne.next();Gt!==null&&!An.done;qt++,An=Ne.next()){Gt.index>qt?(ir=Gt,Gt=null):ir=Gt.sibling;var Ol=He(Ce,Gt,An.value,Qe);if(Ol===null){Gt===null&&(Gt=ir);break}c&&Gt&&Ol.alternate===null&&f(Ce,Gt),ye=D(Ol,ye,qt),Wt===null?$t=Ol:Wt.sibling=Ol,Wt=Ol,Gt=ir}if(An.done)return x(Ce,Gt),ss&&Pu(Ce,qt),$t;if(Gt===null){for(;!An.done;qt++,An=Ne.next())An=Ye(Ce,An.value,Qe),An!==null&&(ye=D(An,ye,qt),Wt===null?$t=An:Wt.sibling=An,Wt=An);return ss&&Pu(Ce,qt),$t}for(Gt=_(Ce,Gt);!An.done;qt++,An=Ne.next())An=vt(Gt,Ce,qt,An.value,Qe),An!==null&&(c&&An.alternate!==null&&Gt.delete(An.key===null?qt:An.key),ye=D(An,ye,qt),Wt===null?$t=An:Wt.sibling=An,Wt=An);return c&&Gt.forEach(function(VU){return f(Ce,VU)}),ss&&Pu(Ce,qt),$t}function Ts(Ce,ye,Ne,Qe){if(typeof Ne=="object"&&Ne!==null&&Ne.type===$&&Ne.key===null&&(Ne=Ne.props.children),typeof Ne=="object"&&Ne!==null){switch(Ne.$$typeof){case I:e:{for(var $t=Ne.key,Wt=ye;Wt!==null;){if(Wt.key===$t){if($t=Ne.type,$t===$){if(Wt.tag===7){x(Ce,Wt.sibling),ye=C(Wt,Ne.props.children),ye.return=Ce,Ce=ye;break e}}else if(Wt.elementType===$t||typeof $t=="object"&&$t!==null&&$t.$$typeof===Y&&h2($t)===Wt.type){x(Ce,Wt.sibling),ye=C(Wt,Ne.props),ye.ref=Qf(Ce,Wt,Ne),ye.return=Ce,Ce=ye;break e}x(Ce,Wt);break}else f(Ce,Wt);Wt=Wt.sibling}Ne.type===$?(ye=Gu(Ne.props.children,Ce.mode,Qe,Ne.key),ye.return=Ce,Ce=ye):(Qe=Vy(Ne.type,Ne.key,Ne.props,null,Ce.mode,Qe),Qe.ref=Qf(Ce,ye,Ne),Qe.return=Ce,Ce=Qe)}return U(Ce);case M:e:{for(Wt=Ne.key;ye!==null;){if(ye.key===Wt)if(ye.tag===4&&ye.stateNode.containerInfo===Ne.containerInfo&&ye.stateNode.implementation===Ne.implementation){x(Ce,ye.sibling),ye=C(ye,Ne.children||[]),ye.return=Ce,Ce=ye;break e}else{x(Ce,ye);break}else f(Ce,ye);ye=ye.sibling}ye=M1(Ne,Ce.mode,Qe),ye.return=Ce,Ce=ye}return U(Ce);case Y:return Wt=Ne._init,Ts(Ce,ye,Wt(Ne._payload),Qe)}if(nt(Ne))return It(Ce,ye,Ne,Qe);if(ee(Ne))return Mt(Ce,ye,Ne,Qe);xy(Ce,Ne)}return typeof Ne=="string"&&Ne!==""||typeof Ne=="number"?(Ne=""+Ne,ye!==null&&ye.tag===6?(x(Ce,ye.sibling),ye=C(ye,Ne),ye.return=Ce,Ce=ye):(x(Ce,ye),ye=k1(Ne,Ce.mode,Qe),ye.return=Ce,Ce=ye),U(Ce)):x(Ce,ye)}return Ts}var xh=d2(!0),f2=d2(!1),vy=Cl(null),by=null,vh=null,Bw=null;function Vw(){Bw=vh=by=null}function Ww(c){var f=vy.current;Jn(vy),c._currentValue=f}function Gw(c,f,x){for(;c!==null;){var _=c.alternate;if((c.childLanes&f)!==f?(c.childLanes|=f,_!==null&&(_.childLanes|=f)):_!==null&&(_.childLanes&f)!==f&&(_.childLanes|=f),c===x)break;c=c.return}}function bh(c,f){by=c,Bw=vh=null,c=c.dependencies,c!==null&&c.firstContext!==null&&(c.lanes&f&&(li=!0),c.firstContext=null)}function Yi(c){var f=c._currentValue;if(Bw!==c)if(c={context:c,memoizedValue:f,next:null},vh===null){if(by===null)throw Error(t(308));vh=c,by.dependencies={lanes:0,firstContext:c}}else vh=vh.next=c;return f}var Ou=null;function Hw(c){Ou===null?Ou=[c]:Ou.push(c)}function p2(c,f,x,_){var C=f.interleaved;return C===null?(x.next=x,Hw(f)):(x.next=C.next,C.next=x),f.interleaved=x,Ra(c,_)}function Ra(c,f){c.lanes|=f;var x=c.alternate;for(x!==null&&(x.lanes|=f),x=c,c=c.return;c!==null;)c.childLanes|=f,x=c.alternate,x!==null&&(x.childLanes|=f),x=c,c=c.return;return x.tag===3?x.stateNode:null}var Al=!1;function jw(c){c.updateQueue={baseState:c.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function m2(c,f){c=c.updateQueue,f.updateQueue===c&&(f.updateQueue={baseState:c.baseState,firstBaseUpdate:c.firstBaseUpdate,lastBaseUpdate:c.lastBaseUpdate,shared:c.shared,effects:c.effects})}function ka(c,f){return{eventTime:c,lane:f,tag:0,payload:null,callback:null,next:null}}function Rl(c,f,x){var _=c.updateQueue;if(_===null)return null;if(_=_.shared,In&2){var C=_.pending;return C===null?f.next=f:(f.next=C.next,C.next=f),_.pending=f,Ra(c,x)}return C=_.interleaved,C===null?(f.next=f,Hw(_)):(f.next=C.next,C.next=f),_.interleaved=f,Ra(c,x)}function wy(c,f,x){if(f=f.updateQueue,f!==null&&(f=f.shared,(x&4194240)!==0)){var _=f.lanes;_&=c.pendingLanes,x|=_,f.lanes=x,As(c,x)}}function g2(c,f){var x=c.updateQueue,_=c.alternate;if(_!==null&&(_=_.updateQueue,x===_)){var C=null,D=null;if(x=x.firstBaseUpdate,x!==null){do{var U={eventTime:x.eventTime,lane:x.lane,tag:x.tag,payload:x.payload,callback:x.callback,next:null};D===null?C=D=U:D=D.next=U,x=x.next}while(x!==null);D===null?C=D=f:D=D.next=f}else C=D=f;x={baseState:_.baseState,firstBaseUpdate:C,lastBaseUpdate:D,shared:_.shared,effects:_.effects},c.updateQueue=x;return}c=x.lastBaseUpdate,c===null?x.firstBaseUpdate=f:c.next=f,x.lastBaseUpdate=f}function Sy(c,f,x,_){var C=c.updateQueue;Al=!1;var D=C.firstBaseUpdate,U=C.lastBaseUpdate,oe=C.shared.pending;if(oe!==null){C.shared.pending=null;var fe=oe,ke=fe.next;fe.next=null,U===null?D=ke:U.next=ke,U=fe;var je=c.alternate;je!==null&&(je=je.updateQueue,oe=je.lastBaseUpdate,oe!==U&&(oe===null?je.firstBaseUpdate=ke:oe.next=ke,je.lastBaseUpdate=fe))}if(D!==null){var Ye=C.baseState;U=0,je=ke=fe=null,oe=D;do{var He=oe.lane,vt=oe.eventTime;if((_&He)===He){je!==null&&(je=je.next={eventTime:vt,lane:0,tag:oe.tag,payload:oe.payload,callback:oe.callback,next:null});e:{var It=c,Mt=oe;switch(He=f,vt=x,Mt.tag){case 1:if(It=Mt.payload,typeof It=="function"){Ye=It.call(vt,Ye,He);break e}Ye=It;break e;case 3:It.flags=It.flags&-65537|128;case 0:if(It=Mt.payload,He=typeof It=="function"?It.call(vt,Ye,He):It,He==null)break e;Ye=te({},Ye,He);break e;case 2:Al=!0}}oe.callback!==null&&oe.lane!==0&&(c.flags|=64,He=C.effects,He===null?C.effects=[oe]:He.push(oe))}else vt={eventTime:vt,lane:He,tag:oe.tag,payload:oe.payload,callback:oe.callback,next:null},je===null?(ke=je=vt,fe=Ye):je=je.next=vt,U|=He;if(oe=oe.next,oe===null){if(oe=C.shared.pending,oe===null)break;He=oe,oe=He.next,He.next=null,C.lastBaseUpdate=He,C.shared.pending=null}}while(!0);if(je===null&&(fe=Ye),C.baseState=fe,C.firstBaseUpdate=ke,C.lastBaseUpdate=je,f=C.shared.interleaved,f!==null){C=f;do U|=C.lane,C=C.next;while(C!==f)}else D===null&&(C.shared.lanes=0);zu|=U,c.lanes=U,c.memoizedState=Ye}}function y2(c,f,x){if(c=f.effects,f.effects=null,c!==null)for(f=0;f<c.length;f++){var _=c[f],C=_.callback;if(C!==null){if(_.callback=null,_=x,typeof C!="function")throw Error(t(191,C));C.call(_)}}}var Jf={},Ko=Cl(Jf),ep=Cl(Jf),tp=Cl(Jf);function Lu(c){if(c===Jf)throw Error(t(174));return c}function Xw(c,f){switch(Yn(tp,f),Yn(ep,c),Yn(Ko,Jf),c=f.nodeType,c){case 9:case 11:f=(f=f.documentElement)?f.namespaceURI:gt(null,"");break;default:c=c===8?f.parentNode:f,f=c.namespaceURI||null,c=c.tagName,f=gt(f,c)}Jn(Ko),Yn(Ko,f)}function wh(){Jn(Ko),Jn(ep),Jn(tp)}function x2(c){Lu(tp.current);var f=Lu(Ko.current),x=gt(f,c.type);f!==x&&(Yn(ep,c),Yn(Ko,x))}function qw(c){ep.current===c&&(Jn(Ko),Jn(ep))}var cs=Cl(0);function _y(c){for(var f=c;f!==null;){if(f.tag===13){var x=f.memoizedState;if(x!==null&&(x=x.dehydrated,x===null||x.data==="$?"||x.data==="$!"))return f}else if(f.tag===19&&f.memoizedProps.revealOrder!==void 0){if(f.flags&128)return f}else if(f.child!==null){f.child.return=f,f=f.child;continue}if(f===c)break;for(;f.sibling===null;){if(f.return===null||f.return===c)return null;f=f.return}f.sibling.return=f.return,f=f.sibling}return null}var Kw=[];function Yw(){for(var c=0;c<Kw.length;c++)Kw[c]._workInProgressVersionPrimary=null;Kw.length=0}var Ty=T.ReactCurrentDispatcher,Zw=T.ReactCurrentBatchConfig,Uu=0,hs=null,Hs=null,sr=null,Ey=!1,np=!1,sp=0,hU=0;function Ir(){throw Error(t(321))}function Qw(c,f){if(f===null)return!1;for(var x=0;x<f.length&&x<c.length;x++)if(!fo(c[x],f[x]))return!1;return!0}function Jw(c,f,x,_,C,D){if(Uu=D,hs=f,f.memoizedState=null,f.updateQueue=null,f.lanes=0,Ty.current=c===null||c.memoizedState===null?mU:gU,c=x(_,C),np){D=0;do{if(np=!1,sp=0,25<=D)throw Error(t(301));D+=1,sr=Hs=null,f.updateQueue=null,Ty.current=yU,c=x(_,C)}while(np)}if(Ty.current=Ny,f=Hs!==null&&Hs.next!==null,Uu=0,sr=Hs=hs=null,Ey=!1,f)throw Error(t(300));return c}function e1(){var c=sp!==0;return sp=0,c}function Yo(){var c={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return sr===null?hs.memoizedState=sr=c:sr=sr.next=c,sr}function Zi(){if(Hs===null){var c=hs.alternate;c=c!==null?c.memoizedState:null}else c=Hs.next;var f=sr===null?hs.memoizedState:sr.next;if(f!==null)sr=f,Hs=c;else{if(c===null)throw Error(t(310));Hs=c,c={memoizedState:Hs.memoizedState,baseState:Hs.baseState,baseQueue:Hs.baseQueue,queue:Hs.queue,next:null},sr===null?hs.memoizedState=sr=c:sr=sr.next=c}return sr}function rp(c,f){return typeof f=="function"?f(c):f}function t1(c){var f=Zi(),x=f.queue;if(x===null)throw Error(t(311));x.lastRenderedReducer=c;var _=Hs,C=_.baseQueue,D=x.pending;if(D!==null){if(C!==null){var U=C.next;C.next=D.next,D.next=U}_.baseQueue=C=D,x.pending=null}if(C!==null){D=C.next,_=_.baseState;var oe=U=null,fe=null,ke=D;do{var je=ke.lane;if((Uu&je)===je)fe!==null&&(fe=fe.next={lane:0,action:ke.action,hasEagerState:ke.hasEagerState,eagerState:ke.eagerState,next:null}),_=ke.hasEagerState?ke.eagerState:c(_,ke.action);else{var Ye={lane:je,action:ke.action,hasEagerState:ke.hasEagerState,eagerState:ke.eagerState,next:null};fe===null?(oe=fe=Ye,U=_):fe=fe.next=Ye,hs.lanes|=je,zu|=je}ke=ke.next}while(ke!==null&&ke!==D);fe===null?U=_:fe.next=oe,fo(_,f.memoizedState)||(li=!0),f.memoizedState=_,f.baseState=U,f.baseQueue=fe,x.lastRenderedState=_}if(c=x.interleaved,c!==null){C=c;do D=C.lane,hs.lanes|=D,zu|=D,C=C.next;while(C!==c)}else C===null&&(x.lanes=0);return[f.memoizedState,x.dispatch]}function n1(c){var f=Zi(),x=f.queue;if(x===null)throw Error(t(311));x.lastRenderedReducer=c;var _=x.dispatch,C=x.pending,D=f.memoizedState;if(C!==null){x.pending=null;var U=C=C.next;do D=c(D,U.action),U=U.next;while(U!==C);fo(D,f.memoizedState)||(li=!0),f.memoizedState=D,f.baseQueue===null&&(f.baseState=D),x.lastRenderedState=D}return[D,_]}function v2(){}function b2(c,f){var x=hs,_=Zi(),C=f(),D=!fo(_.memoizedState,C);if(D&&(_.memoizedState=C,li=!0),_=_.queue,s1(_2.bind(null,x,_,c),[c]),_.getSnapshot!==f||D||sr!==null&&sr.memoizedState.tag&1){if(x.flags|=2048,ip(9,S2.bind(null,x,_,C,f),void 0,null),rr===null)throw Error(t(349));Uu&30||w2(x,f,C)}return C}function w2(c,f,x){c.flags|=16384,c={getSnapshot:f,value:x},f=hs.updateQueue,f===null?(f={lastEffect:null,stores:null},hs.updateQueue=f,f.stores=[c]):(x=f.stores,x===null?f.stores=[c]:x.push(c))}function S2(c,f,x,_){f.value=x,f.getSnapshot=_,T2(f)&&E2(c)}function _2(c,f,x){return x(function(){T2(f)&&E2(c)})}function T2(c){var f=c.getSnapshot;c=c.value;try{var x=f();return!fo(c,x)}catch{return!0}}function E2(c){var f=Ra(c,1);f!==null&&xo(f,c,1,-1)}function C2(c){var f=Yo();return typeof c=="function"&&(c=c()),f.memoizedState=f.baseState=c,c={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:rp,lastRenderedState:c},f.queue=c,c=c.dispatch=pU.bind(null,hs,c),[f.memoizedState,c]}function ip(c,f,x,_){return c={tag:c,create:f,destroy:x,deps:_,next:null},f=hs.updateQueue,f===null?(f={lastEffect:null,stores:null},hs.updateQueue=f,f.lastEffect=c.next=c):(x=f.lastEffect,x===null?f.lastEffect=c.next=c:(_=x.next,x.next=c,c.next=_,f.lastEffect=c)),c}function I2(){return Zi().memoizedState}function Cy(c,f,x,_){var C=Yo();hs.flags|=c,C.memoizedState=ip(1|f,x,void 0,_===void 0?null:_)}function Iy(c,f,x,_){var C=Zi();_=_===void 0?null:_;var D=void 0;if(Hs!==null){var U=Hs.memoizedState;if(D=U.destroy,_!==null&&Qw(_,U.deps)){C.memoizedState=ip(f,x,D,_);return}}hs.flags|=c,C.memoizedState=ip(1|f,x,D,_)}function N2(c,f){return Cy(8390656,8,c,f)}function s1(c,f){return Iy(2048,8,c,f)}function A2(c,f){return Iy(4,2,c,f)}function R2(c,f){return Iy(4,4,c,f)}function k2(c,f){if(typeof f=="function")return c=c(),f(c),function(){f(null)};if(f!=null)return c=c(),f.current=c,function(){f.current=null}}function M2(c,f,x){return x=x!=null?x.concat([c]):null,Iy(4,4,k2.bind(null,f,c),x)}function r1(){}function D2(c,f){var x=Zi();f=f===void 0?null:f;var _=x.memoizedState;return _!==null&&f!==null&&Qw(f,_[1])?_[0]:(x.memoizedState=[c,f],c)}function $2(c,f){var x=Zi();f=f===void 0?null:f;var _=x.memoizedState;return _!==null&&f!==null&&Qw(f,_[1])?_[0]:(c=c(),x.memoizedState=[c,f],c)}function F2(c,f,x){return Uu&21?(fo(x,f)||(x=Nn(),hs.lanes|=x,zu|=x,c.baseState=!0),f):(c.baseState&&(c.baseState=!1,li=!0),c.memoizedState=x)}function dU(c,f){var x=wn;wn=x!==0&&4>x?x:4,c(!0);var _=Zw.transition;Zw.transition={};try{c(!1),f()}finally{wn=x,Zw.transition=_}}function P2(){return Zi().memoizedState}function fU(c,f,x){var _=$l(c);if(x={lane:_,action:x,hasEagerState:!1,eagerState:null,next:null},O2(c))L2(f,x);else if(x=p2(c,f,x,_),x!==null){var C=Xr();xo(x,c,_,C),U2(x,f,_)}}function pU(c,f,x){var _=$l(c),C={lane:_,action:x,hasEagerState:!1,eagerState:null,next:null};if(O2(c))L2(f,C);else{var D=c.alternate;if(c.lanes===0&&(D===null||D.lanes===0)&&(D=f.lastRenderedReducer,D!==null))try{var U=f.lastRenderedState,oe=D(U,x);if(C.hasEagerState=!0,C.eagerState=oe,fo(oe,U)){var fe=f.interleaved;fe===null?(C.next=C,Hw(f)):(C.next=fe.next,fe.next=C),f.interleaved=C;return}}catch{}finally{}x=p2(c,f,C,_),x!==null&&(C=Xr(),xo(x,c,_,C),U2(x,f,_))}}function O2(c){var f=c.alternate;return c===hs||f!==null&&f===hs}function L2(c,f){np=Ey=!0;var x=c.pending;x===null?f.next=f:(f.next=x.next,x.next=f),c.pending=f}function U2(c,f,x){if(x&4194240){var _=f.lanes;_&=c.pendingLanes,x|=_,f.lanes=x,As(c,x)}}var Ny={readContext:Yi,useCallback:Ir,useContext:Ir,useEffect:Ir,useImperativeHandle:Ir,useInsertionEffect:Ir,useLayoutEffect:Ir,useMemo:Ir,useReducer:Ir,useRef:Ir,useState:Ir,useDebugValue:Ir,useDeferredValue:Ir,useTransition:Ir,useMutableSource:Ir,useSyncExternalStore:Ir,useId:Ir,unstable_isNewReconciler:!1},mU={readContext:Yi,useCallback:function(c,f){return Yo().memoizedState=[c,f===void 0?null:f],c},useContext:Yi,useEffect:N2,useImperativeHandle:function(c,f,x){return x=x!=null?x.concat([c]):null,Cy(4194308,4,k2.bind(null,f,c),x)},useLayoutEffect:function(c,f){return Cy(4194308,4,c,f)},useInsertionEffect:function(c,f){return Cy(4,2,c,f)},useMemo:function(c,f){var x=Yo();return f=f===void 0?null:f,c=c(),x.memoizedState=[c,f],c},useReducer:function(c,f,x){var _=Yo();return f=x!==void 0?x(f):f,_.memoizedState=_.baseState=f,c={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:c,lastRenderedState:f},_.queue=c,c=c.dispatch=fU.bind(null,hs,c),[_.memoizedState,c]},useRef:function(c){var f=Yo();return c={current:c},f.memoizedState=c},useState:C2,useDebugValue:r1,useDeferredValue:function(c){return Yo().memoizedState=c},useTransition:function(){var c=C2(!1),f=c[0];return c=dU.bind(null,c[1]),Yo().memoizedState=c,[f,c]},useMutableSource:function(){},useSyncExternalStore:function(c,f,x){var _=hs,C=Yo();if(ss){if(x===void 0)throw Error(t(407));x=x()}else{if(x=f(),rr===null)throw Error(t(349));Uu&30||w2(_,f,x)}C.memoizedState=x;var D={value:x,getSnapshot:f};return C.queue=D,N2(_2.bind(null,_,D,c),[c]),_.flags|=2048,ip(9,S2.bind(null,_,D,x,f),void 0,null),x},useId:function(){var c=Yo(),f=rr.identifierPrefix;if(ss){var x=Aa,_=Na;x=(_&~(1<<32-Qt(_)-1)).toString(32)+x,f=":"+f+"R"+x,x=sp++,0<x&&(f+="H"+x.toString(32)),f+=":"}else x=hU++,f=":"+f+"r"+x.toString(32)+":";return c.memoizedState=f},unstable_isNewReconciler:!1},gU={readContext:Yi,useCallback:D2,useContext:Yi,useEffect:s1,useImperativeHandle:M2,useInsertionEffect:A2,useLayoutEffect:R2,useMemo:$2,useReducer:t1,useRef:I2,useState:function(){return t1(rp)},useDebugValue:r1,useDeferredValue:function(c){var f=Zi();return F2(f,Hs.memoizedState,c)},useTransition:function(){var c=t1(rp)[0],f=Zi().memoizedState;return[c,f]},useMutableSource:v2,useSyncExternalStore:b2,useId:P2,unstable_isNewReconciler:!1},yU={readContext:Yi,useCallback:D2,useContext:Yi,useEffect:s1,useImperativeHandle:M2,useInsertionEffect:A2,useLayoutEffect:R2,useMemo:$2,useReducer:n1,useRef:I2,useState:function(){return n1(rp)},useDebugValue:r1,useDeferredValue:function(c){var f=Zi();return Hs===null?f.memoizedState=c:F2(f,Hs.memoizedState,c)},useTransition:function(){var c=n1(rp)[0],f=Zi().memoizedState;return[c,f]},useMutableSource:v2,useSyncExternalStore:b2,useId:P2,unstable_isNewReconciler:!1};function mo(c,f){if(c&&c.defaultProps){f=te({},f),c=c.defaultProps;for(var x in c)f[x]===void 0&&(f[x]=c[x]);return f}return f}function i1(c,f,x,_){f=c.memoizedState,x=x(_,f),x=x==null?f:te({},f,x),c.memoizedState=x,c.lanes===0&&(c.updateQueue.baseState=x)}var Ay={isMounted:function(c){return(c=c._reactInternals)?ri(c)===c:!1},enqueueSetState:function(c,f,x){c=c._reactInternals;var _=Xr(),C=$l(c),D=ka(_,C);D.payload=f,x!=null&&(D.callback=x),f=Rl(c,D,C),f!==null&&(xo(f,c,C,_),wy(f,c,C))},enqueueReplaceState:function(c,f,x){c=c._reactInternals;var _=Xr(),C=$l(c),D=ka(_,C);D.tag=1,D.payload=f,x!=null&&(D.callback=x),f=Rl(c,D,C),f!==null&&(xo(f,c,C,_),wy(f,c,C))},enqueueForceUpdate:function(c,f){c=c._reactInternals;var x=Xr(),_=$l(c),C=ka(x,_);C.tag=2,f!=null&&(C.callback=f),f=Rl(c,C,_),f!==null&&(xo(f,c,_,x),wy(f,c,_))}};function z2(c,f,x,_,C,D,U){return c=c.stateNode,typeof c.shouldComponentUpdate=="function"?c.shouldComponentUpdate(_,D,U):f.prototype&&f.prototype.isPureReactComponent?!Hf(x,_)||!Hf(C,D):!0}function B2(c,f,x){var _=!1,C=Il,D=f.contextType;return typeof D=="object"&&D!==null?D=Yi(D):(C=ai(f)?$u:Cr.current,_=f.contextTypes,D=(_=_!=null)?ph(c,C):Il),f=new f(x,D),c.memoizedState=f.state!==null&&f.state!==void 0?f.state:null,f.updater=Ay,c.stateNode=f,f._reactInternals=c,_&&(c=c.stateNode,c.__reactInternalMemoizedUnmaskedChildContext=C,c.__reactInternalMemoizedMaskedChildContext=D),f}function V2(c,f,x,_){c=f.state,typeof f.componentWillReceiveProps=="function"&&f.componentWillReceiveProps(x,_),typeof f.UNSAFE_componentWillReceiveProps=="function"&&f.UNSAFE_componentWillReceiveProps(x,_),f.state!==c&&Ay.enqueueReplaceState(f,f.state,null)}function o1(c,f,x,_){var C=c.stateNode;C.props=x,C.state=c.memoizedState,C.refs={},jw(c);var D=f.contextType;typeof D=="object"&&D!==null?C.context=Yi(D):(D=ai(f)?$u:Cr.current,C.context=ph(c,D)),C.state=c.memoizedState,D=f.getDerivedStateFromProps,typeof D=="function"&&(i1(c,f,D,x),C.state=c.memoizedState),typeof f.getDerivedStateFromProps=="function"||typeof C.getSnapshotBeforeUpdate=="function"||typeof C.UNSAFE_componentWillMount!="function"&&typeof C.componentWillMount!="function"||(f=C.state,typeof C.componentWillMount=="function"&&C.componentWillMount(),typeof C.UNSAFE_componentWillMount=="function"&&C.UNSAFE_componentWillMount(),f!==C.state&&Ay.enqueueReplaceState(C,C.state,null),Sy(c,x,C,_),C.state=c.memoizedState),typeof C.componentDidMount=="function"&&(c.flags|=4194308)}function Sh(c,f){try{var x="",_=f;do x+=de(_),_=_.return;while(_);var C=x}catch(D){C=`
Error generating stack: `+D.message+`
`+D.stack}return{value:c,source:f,stack:C,digest:null}}function a1(c,f,x){return{value:c,source:null,stack:x??null,digest:f??null}}function l1(c,f){try{console.error(f.value)}catch(x){setTimeout(function(){throw x})}}var xU=typeof WeakMap=="function"?WeakMap:Map;function W2(c,f,x){x=ka(-1,x),x.tag=3,x.payload={element:null};var _=f.value;return x.callback=function(){Py||(Py=!0,_1=_),l1(c,f)},x}function G2(c,f,x){x=ka(-1,x),x.tag=3;var _=c.type.getDerivedStateFromError;if(typeof _=="function"){var C=f.value;x.payload=function(){return _(C)},x.callback=function(){l1(c,f)}}var D=c.stateNode;return D!==null&&typeof D.componentDidCatch=="function"&&(x.callback=function(){l1(c,f),typeof _!="function"&&(Ml===null?Ml=new Set([this]):Ml.add(this));var U=f.stack;this.componentDidCatch(f.value,{componentStack:U!==null?U:""})}),x}function H2(c,f,x){var _=c.pingCache;if(_===null){_=c.pingCache=new xU;var C=new Set;_.set(f,C)}else C=_.get(f),C===void 0&&(C=new Set,_.set(f,C));C.has(x)||(C.add(x),c=MU.bind(null,c,f,x),f.then(c,c))}function j2(c){do{var f;if((f=c.tag===13)&&(f=c.memoizedState,f=f!==null?f.dehydrated!==null:!0),f)return c;c=c.return}while(c!==null);return null}function X2(c,f,x,_,C){return c.mode&1?(c.flags|=65536,c.lanes=C,c):(c===f?c.flags|=65536:(c.flags|=128,x.flags|=131072,x.flags&=-52805,x.tag===1&&(x.alternate===null?x.tag=17:(f=ka(-1,1),f.tag=2,Rl(x,f,1))),x.lanes|=1),c)}var vU=T.ReactCurrentOwner,li=!1;function jr(c,f,x,_){f.child=c===null?f2(f,null,x,_):xh(f,c.child,x,_)}function q2(c,f,x,_,C){x=x.render;var D=f.ref;return bh(f,C),_=Jw(c,f,x,_,D,C),x=e1(),c!==null&&!li?(f.updateQueue=c.updateQueue,f.flags&=-2053,c.lanes&=~C,Ma(c,f,C)):(ss&&x&&Pw(f),f.flags|=1,jr(c,f,_,C),f.child)}function K2(c,f,x,_,C){if(c===null){var D=x.type;return typeof D=="function"&&!R1(D)&&D.defaultProps===void 0&&x.compare===null&&x.defaultProps===void 0?(f.tag=15,f.type=D,Y2(c,f,D,_,C)):(c=Vy(x.type,null,_,f,f.mode,C),c.ref=f.ref,c.return=f,f.child=c)}if(D=c.child,!(c.lanes&C)){var U=D.memoizedProps;if(x=x.compare,x=x!==null?x:Hf,x(U,_)&&c.ref===f.ref)return Ma(c,f,C)}return f.flags|=1,c=Pl(D,_),c.ref=f.ref,c.return=f,f.child=c}function Y2(c,f,x,_,C){if(c!==null){var D=c.memoizedProps;if(Hf(D,_)&&c.ref===f.ref)if(li=!1,f.pendingProps=_=D,(c.lanes&C)!==0)c.flags&131072&&(li=!0);else return f.lanes=c.lanes,Ma(c,f,C)}return u1(c,f,x,_,C)}function Z2(c,f,x){var _=f.pendingProps,C=_.children,D=c!==null?c.memoizedState:null;if(_.mode==="hidden")if(!(f.mode&1))f.memoizedState={baseLanes:0,cachePool:null,transitions:null},Yn(Th,Ri),Ri|=x;else{if(!(x&1073741824))return c=D!==null?D.baseLanes|x:x,f.lanes=f.childLanes=1073741824,f.memoizedState={baseLanes:c,cachePool:null,transitions:null},f.updateQueue=null,Yn(Th,Ri),Ri|=c,null;f.memoizedState={baseLanes:0,cachePool:null,transitions:null},_=D!==null?D.baseLanes:x,Yn(Th,Ri),Ri|=_}else D!==null?(_=D.baseLanes|x,f.memoizedState=null):_=x,Yn(Th,Ri),Ri|=_;return jr(c,f,C,x),f.child}function Q2(c,f){var x=f.ref;(c===null&&x!==null||c!==null&&c.ref!==x)&&(f.flags|=512,f.flags|=2097152)}function u1(c,f,x,_,C){var D=ai(x)?$u:Cr.current;return D=ph(f,D),bh(f,C),x=Jw(c,f,x,_,D,C),_=e1(),c!==null&&!li?(f.updateQueue=c.updateQueue,f.flags&=-2053,c.lanes&=~C,Ma(c,f,C)):(ss&&_&&Pw(f),f.flags|=1,jr(c,f,x,C),f.child)}function J2(c,f,x,_,C){if(ai(x)){var D=!0;fy(f)}else D=!1;if(bh(f,C),f.stateNode===null)ky(c,f),B2(f,x,_),o1(f,x,_,C),_=!0;else if(c===null){var U=f.stateNode,oe=f.memoizedProps;U.props=oe;var fe=U.context,ke=x.contextType;typeof ke=="object"&&ke!==null?ke=Yi(ke):(ke=ai(x)?$u:Cr.current,ke=ph(f,ke));var je=x.getDerivedStateFromProps,Ye=typeof je=="function"||typeof U.getSnapshotBeforeUpdate=="function";Ye||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(oe!==_||fe!==ke)&&V2(f,U,_,ke),Al=!1;var He=f.memoizedState;U.state=He,Sy(f,_,U,C),fe=f.memoizedState,oe!==_||He!==fe||oi.current||Al?(typeof je=="function"&&(i1(f,x,je,_),fe=f.memoizedState),(oe=Al||z2(f,x,oe,_,He,fe,ke))?(Ye||typeof U.UNSAFE_componentWillMount!="function"&&typeof U.componentWillMount!="function"||(typeof U.componentWillMount=="function"&&U.componentWillMount(),typeof U.UNSAFE_componentWillMount=="function"&&U.UNSAFE_componentWillMount()),typeof U.componentDidMount=="function"&&(f.flags|=4194308)):(typeof U.componentDidMount=="function"&&(f.flags|=4194308),f.memoizedProps=_,f.memoizedState=fe),U.props=_,U.state=fe,U.context=ke,_=oe):(typeof U.componentDidMount=="function"&&(f.flags|=4194308),_=!1)}else{U=f.stateNode,m2(c,f),oe=f.memoizedProps,ke=f.type===f.elementType?oe:mo(f.type,oe),U.props=ke,Ye=f.pendingProps,He=U.context,fe=x.contextType,typeof fe=="object"&&fe!==null?fe=Yi(fe):(fe=ai(x)?$u:Cr.current,fe=ph(f,fe));var vt=x.getDerivedStateFromProps;(je=typeof vt=="function"||typeof U.getSnapshotBeforeUpdate=="function")||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(oe!==Ye||He!==fe)&&V2(f,U,_,fe),Al=!1,He=f.memoizedState,U.state=He,Sy(f,_,U,C);var It=f.memoizedState;oe!==Ye||He!==It||oi.current||Al?(typeof vt=="function"&&(i1(f,x,vt,_),It=f.memoizedState),(ke=Al||z2(f,x,ke,_,He,It,fe)||!1)?(je||typeof U.UNSAFE_componentWillUpdate!="function"&&typeof U.componentWillUpdate!="function"||(typeof U.componentWillUpdate=="function"&&U.componentWillUpdate(_,It,fe),typeof U.UNSAFE_componentWillUpdate=="function"&&U.UNSAFE_componentWillUpdate(_,It,fe)),typeof U.componentDidUpdate=="function"&&(f.flags|=4),typeof U.getSnapshotBeforeUpdate=="function"&&(f.flags|=1024)):(typeof U.componentDidUpdate!="function"||oe===c.memoizedProps&&He===c.memoizedState||(f.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||oe===c.memoizedProps&&He===c.memoizedState||(f.flags|=1024),f.memoizedProps=_,f.memoizedState=It),U.props=_,U.state=It,U.context=fe,_=ke):(typeof U.componentDidUpdate!="function"||oe===c.memoizedProps&&He===c.memoizedState||(f.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||oe===c.memoizedProps&&He===c.memoizedState||(f.flags|=1024),_=!1)}return c1(c,f,x,_,D,C)}function c1(c,f,x,_,C,D){Q2(c,f);var U=(f.flags&128)!==0;if(!_&&!U)return C&&r2(f,x,!1),Ma(c,f,D);_=f.stateNode,vU.current=f;var oe=U&&typeof x.getDerivedStateFromError!="function"?null:_.render();return f.flags|=1,c!==null&&U?(f.child=xh(f,c.child,null,D),f.child=xh(f,null,oe,D)):jr(c,f,oe,D),f.memoizedState=_.state,C&&r2(f,x,!0),f.child}function eN(c){var f=c.stateNode;f.pendingContext?n2(c,f.pendingContext,f.pendingContext!==f.context):f.context&&n2(c,f.context,!1),Xw(c,f.containerInfo)}function tN(c,f,x,_,C){return yh(),zw(C),f.flags|=256,jr(c,f,x,_),f.child}var h1={dehydrated:null,treeContext:null,retryLane:0};function d1(c){return{baseLanes:c,cachePool:null,transitions:null}}function nN(c,f,x){var _=f.pendingProps,C=cs.current,D=!1,U=(f.flags&128)!==0,oe;if((oe=U)||(oe=c!==null&&c.memoizedState===null?!1:(C&2)!==0),oe?(D=!0,f.flags&=-129):(c===null||c.memoizedState!==null)&&(C|=1),Yn(cs,C&1),c===null)return Uw(f),c=f.memoizedState,c!==null&&(c=c.dehydrated,c!==null)?(f.mode&1?c.data==="$!"?f.lanes=8:f.lanes=1073741824:f.lanes=1,null):(U=_.children,c=_.fallback,D?(_=f.mode,D=f.child,U={mode:"hidden",children:U},!(_&1)&&D!==null?(D.childLanes=0,D.pendingProps=U):D=Wy(U,_,0,null),c=Gu(c,_,x,null),D.return=f,c.return=f,D.sibling=c,f.child=D,f.child.memoizedState=d1(x),f.memoizedState=h1,c):f1(f,U));if(C=c.memoizedState,C!==null&&(oe=C.dehydrated,oe!==null))return bU(c,f,U,_,oe,C,x);if(D){D=_.fallback,U=f.mode,C=c.child,oe=C.sibling;var fe={mode:"hidden",children:_.children};return!(U&1)&&f.child!==C?(_=f.child,_.childLanes=0,_.pendingProps=fe,f.deletions=null):(_=Pl(C,fe),_.subtreeFlags=C.subtreeFlags&14680064),oe!==null?D=Pl(oe,D):(D=Gu(D,U,x,null),D.flags|=2),D.return=f,_.return=f,_.sibling=D,f.child=_,_=D,D=f.child,U=c.child.memoizedState,U=U===null?d1(x):{baseLanes:U.baseLanes|x,cachePool:null,transitions:U.transitions},D.memoizedState=U,D.childLanes=c.childLanes&~x,f.memoizedState=h1,_}return D=c.child,c=D.sibling,_=Pl(D,{mode:"visible",children:_.children}),!(f.mode&1)&&(_.lanes=x),_.return=f,_.sibling=null,c!==null&&(x=f.deletions,x===null?(f.deletions=[c],f.flags|=16):x.push(c)),f.child=_,f.memoizedState=null,_}function f1(c,f){return f=Wy({mode:"visible",children:f},c.mode,0,null),f.return=c,c.child=f}function Ry(c,f,x,_){return _!==null&&zw(_),xh(f,c.child,null,x),c=f1(f,f.pendingProps.children),c.flags|=2,f.memoizedState=null,c}function bU(c,f,x,_,C,D,U){if(x)return f.flags&256?(f.flags&=-257,_=a1(Error(t(422))),Ry(c,f,U,_)):f.memoizedState!==null?(f.child=c.child,f.flags|=128,null):(D=_.fallback,C=f.mode,_=Wy({mode:"visible",children:_.children},C,0,null),D=Gu(D,C,U,null),D.flags|=2,_.return=f,D.return=f,_.sibling=D,f.child=_,f.mode&1&&xh(f,c.child,null,U),f.child.memoizedState=d1(U),f.memoizedState=h1,D);if(!(f.mode&1))return Ry(c,f,U,null);if(C.data==="$!"){if(_=C.nextSibling&&C.nextSibling.dataset,_)var oe=_.dgst;return _=oe,D=Error(t(419)),_=a1(D,_,void 0),Ry(c,f,U,_)}if(oe=(U&c.childLanes)!==0,li||oe){if(_=rr,_!==null){switch(U&-U){case 4:C=2;break;case 16:C=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:C=32;break;case 536870912:C=268435456;break;default:C=0}C=C&(_.suspendedLanes|U)?0:C,C!==0&&C!==D.retryLane&&(D.retryLane=C,Ra(c,C),xo(_,c,C,-1))}return A1(),_=a1(Error(t(421))),Ry(c,f,U,_)}return C.data==="$?"?(f.flags|=128,f.child=c.child,f=DU.bind(null,c),C._reactRetry=f,null):(c=D.treeContext,Ai=El(C.nextSibling),Ni=f,ss=!0,po=null,c!==null&&(qi[Ki++]=Na,qi[Ki++]=Aa,qi[Ki++]=Fu,Na=c.id,Aa=c.overflow,Fu=f),f=f1(f,_.children),f.flags|=4096,f)}function sN(c,f,x){c.lanes|=f;var _=c.alternate;_!==null&&(_.lanes|=f),Gw(c.return,f,x)}function p1(c,f,x,_,C){var D=c.memoizedState;D===null?c.memoizedState={isBackwards:f,rendering:null,renderingStartTime:0,last:_,tail:x,tailMode:C}:(D.isBackwards=f,D.rendering=null,D.renderingStartTime=0,D.last=_,D.tail=x,D.tailMode=C)}function rN(c,f,x){var _=f.pendingProps,C=_.revealOrder,D=_.tail;if(jr(c,f,_.children,x),_=cs.current,_&2)_=_&1|2,f.flags|=128;else{if(c!==null&&c.flags&128)e:for(c=f.child;c!==null;){if(c.tag===13)c.memoizedState!==null&&sN(c,x,f);else if(c.tag===19)sN(c,x,f);else if(c.child!==null){c.child.return=c,c=c.child;continue}if(c===f)break e;for(;c.sibling===null;){if(c.return===null||c.return===f)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}_&=1}if(Yn(cs,_),!(f.mode&1))f.memoizedState=null;else switch(C){case"forwards":for(x=f.child,C=null;x!==null;)c=x.alternate,c!==null&&_y(c)===null&&(C=x),x=x.sibling;x=C,x===null?(C=f.child,f.child=null):(C=x.sibling,x.sibling=null),p1(f,!1,C,x,D);break;case"backwards":for(x=null,C=f.child,f.child=null;C!==null;){if(c=C.alternate,c!==null&&_y(c)===null){f.child=C;break}c=C.sibling,C.sibling=x,x=C,C=c}p1(f,!0,x,null,D);break;case"together":p1(f,!1,null,null,void 0);break;default:f.memoizedState=null}return f.child}function ky(c,f){!(f.mode&1)&&c!==null&&(c.alternate=null,f.alternate=null,f.flags|=2)}function Ma(c,f,x){if(c!==null&&(f.dependencies=c.dependencies),zu|=f.lanes,!(x&f.childLanes))return null;if(c!==null&&f.child!==c.child)throw Error(t(153));if(f.child!==null){for(c=f.child,x=Pl(c,c.pendingProps),f.child=x,x.return=f;c.sibling!==null;)c=c.sibling,x=x.sibling=Pl(c,c.pendingProps),x.return=f;x.sibling=null}return f.child}function wU(c,f,x){switch(f.tag){case 3:eN(f),yh();break;case 5:x2(f);break;case 1:ai(f.type)&&fy(f);break;case 4:Xw(f,f.stateNode.containerInfo);break;case 10:var _=f.type._context,C=f.memoizedProps.value;Yn(vy,_._currentValue),_._currentValue=C;break;case 13:if(_=f.memoizedState,_!==null)return _.dehydrated!==null?(Yn(cs,cs.current&1),f.flags|=128,null):x&f.child.childLanes?nN(c,f,x):(Yn(cs,cs.current&1),c=Ma(c,f,x),c!==null?c.sibling:null);Yn(cs,cs.current&1);break;case 19:if(_=(x&f.childLanes)!==0,c.flags&128){if(_)return rN(c,f,x);f.flags|=128}if(C=f.memoizedState,C!==null&&(C.rendering=null,C.tail=null,C.lastEffect=null),Yn(cs,cs.current),_)break;return null;case 22:case 23:return f.lanes=0,Z2(c,f,x)}return Ma(c,f,x)}var iN,m1,oN,aN;iN=function(c,f){for(var x=f.child;x!==null;){if(x.tag===5||x.tag===6)c.appendChild(x.stateNode);else if(x.tag!==4&&x.child!==null){x.child.return=x,x=x.child;continue}if(x===f)break;for(;x.sibling===null;){if(x.return===null||x.return===f)return;x=x.return}x.sibling.return=x.return,x=x.sibling}},m1=function(){},oN=function(c,f,x,_){var C=c.memoizedProps;if(C!==_){c=f.stateNode,Lu(Ko.current);var D=null;switch(x){case"input":C=ie(c,C),_=ie(c,_),D=[];break;case"select":C=te({},C,{value:void 0}),_=te({},_,{value:void 0}),D=[];break;case"textarea":C=V(c,C),_=V(c,_),D=[];break;default:typeof C.onClick!="function"&&typeof _.onClick=="function"&&(c.onclick=cy)}ln(x,_);var U;x=null;for(ke in C)if(!_.hasOwnProperty(ke)&&C.hasOwnProperty(ke)&&C[ke]!=null)if(ke==="style"){var oe=C[ke];for(U in oe)oe.hasOwnProperty(U)&&(x||(x={}),x[U]="")}else ke!=="dangerouslySetInnerHTML"&&ke!=="children"&&ke!=="suppressContentEditableWarning"&&ke!=="suppressHydrationWarning"&&ke!=="autoFocus"&&(r.hasOwnProperty(ke)?D||(D=[]):(D=D||[]).push(ke,null));for(ke in _){var fe=_[ke];if(oe=C!=null?C[ke]:void 0,_.hasOwnProperty(ke)&&fe!==oe&&(fe!=null||oe!=null))if(ke==="style")if(oe){for(U in oe)!oe.hasOwnProperty(U)||fe&&fe.hasOwnProperty(U)||(x||(x={}),x[U]="");for(U in fe)fe.hasOwnProperty(U)&&oe[U]!==fe[U]&&(x||(x={}),x[U]=fe[U])}else x||(D||(D=[]),D.push(ke,x)),x=fe;else ke==="dangerouslySetInnerHTML"?(fe=fe?fe.__html:void 0,oe=oe?oe.__html:void 0,fe!=null&&oe!==fe&&(D=D||[]).push(ke,fe)):ke==="children"?typeof fe!="string"&&typeof fe!="number"||(D=D||[]).push(ke,""+fe):ke!=="suppressContentEditableWarning"&&ke!=="suppressHydrationWarning"&&(r.hasOwnProperty(ke)?(fe!=null&&ke==="onScroll"&&Qn("scroll",c),D||oe===fe||(D=[])):(D=D||[]).push(ke,fe))}x&&(D=D||[]).push("style",x);var ke=D;(f.updateQueue=ke)&&(f.flags|=4)}},aN=function(c,f,x,_){x!==_&&(f.flags|=4)};function op(c,f){if(!ss)switch(c.tailMode){case"hidden":f=c.tail;for(var x=null;f!==null;)f.alternate!==null&&(x=f),f=f.sibling;x===null?c.tail=null:x.sibling=null;break;case"collapsed":x=c.tail;for(var _=null;x!==null;)x.alternate!==null&&(_=x),x=x.sibling;_===null?f||c.tail===null?c.tail=null:c.tail.sibling=null:_.sibling=null}}function Nr(c){var f=c.alternate!==null&&c.alternate.child===c.child,x=0,_=0;if(f)for(var C=c.child;C!==null;)x|=C.lanes|C.childLanes,_|=C.subtreeFlags&14680064,_|=C.flags&14680064,C.return=c,C=C.sibling;else for(C=c.child;C!==null;)x|=C.lanes|C.childLanes,_|=C.subtreeFlags,_|=C.flags,C.return=c,C=C.sibling;return c.subtreeFlags|=_,c.childLanes=x,f}function SU(c,f,x){var _=f.pendingProps;switch(Ow(f),f.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Nr(f),null;case 1:return ai(f.type)&&dy(),Nr(f),null;case 3:return _=f.stateNode,wh(),Jn(oi),Jn(Cr),Yw(),_.pendingContext&&(_.context=_.pendingContext,_.pendingContext=null),(c===null||c.child===null)&&(yy(f)?f.flags|=4:c===null||c.memoizedState.isDehydrated&&!(f.flags&256)||(f.flags|=1024,po!==null&&(C1(po),po=null))),m1(c,f),Nr(f),null;case 5:qw(f);var C=Lu(tp.current);if(x=f.type,c!==null&&f.stateNode!=null)oN(c,f,x,_,C),c.ref!==f.ref&&(f.flags|=512,f.flags|=2097152);else{if(!_){if(f.stateNode===null)throw Error(t(166));return Nr(f),null}if(c=Lu(Ko.current),yy(f)){_=f.stateNode,x=f.type;var D=f.memoizedProps;switch(_[qo]=f,_[Yf]=D,c=(f.mode&1)!==0,x){case"dialog":Qn("cancel",_),Qn("close",_);break;case"iframe":case"object":case"embed":Qn("load",_);break;case"video":case"audio":for(C=0;C<Xf.length;C++)Qn(Xf[C],_);break;case"source":Qn("error",_);break;case"img":case"image":case"link":Qn("error",_),Qn("load",_);break;case"details":Qn("toggle",_);break;case"input":Kt(_,D),Qn("invalid",_);break;case"select":_._wrapperState={wasMultiple:!!D.multiple},Qn("invalid",_);break;case"textarea":Ie(_,D),Qn("invalid",_)}ln(x,D),C=null;for(var U in D)if(D.hasOwnProperty(U)){var oe=D[U];U==="children"?typeof oe=="string"?_.textContent!==oe&&(D.suppressHydrationWarning!==!0&&uy(_.textContent,oe,c),C=["children",oe]):typeof oe=="number"&&_.textContent!==""+oe&&(D.suppressHydrationWarning!==!0&&uy(_.textContent,oe,c),C=["children",""+oe]):r.hasOwnProperty(U)&&oe!=null&&U==="onScroll"&&Qn("scroll",_)}switch(x){case"input":lt(_),tt(_,D,!0);break;case"textarea":lt(_),Be(_);break;case"select":case"option":break;default:typeof D.onClick=="function"&&(_.onclick=cy)}_=C,f.updateQueue=_,_!==null&&(f.flags|=4)}else{U=C.nodeType===9?C:C.ownerDocument,c==="http://www.w3.org/1999/xhtml"&&(c=Le(x)),c==="http://www.w3.org/1999/xhtml"?x==="script"?(c=U.createElement("div"),c.innerHTML="<script><\/script>",c=c.removeChild(c.firstChild)):typeof _.is=="string"?c=U.createElement(x,{is:_.is}):(c=U.createElement(x),x==="select"&&(U=c,_.multiple?U.multiple=!0:_.size&&(U.size=_.size))):c=U.createElementNS(c,x),c[qo]=f,c[Yf]=_,iN(c,f,!1,!1),f.stateNode=c;e:{switch(U=Xt(x,_),x){case"dialog":Qn("cancel",c),Qn("close",c),C=_;break;case"iframe":case"object":case"embed":Qn("load",c),C=_;break;case"video":case"audio":for(C=0;C<Xf.length;C++)Qn(Xf[C],c);C=_;break;case"source":Qn("error",c),C=_;break;case"img":case"image":case"link":Qn("error",c),Qn("load",c),C=_;break;case"details":Qn("toggle",c),C=_;break;case"input":Kt(c,_),C=ie(c,_),Qn("invalid",c);break;case"option":C=_;break;case"select":c._wrapperState={wasMultiple:!!_.multiple},C=te({},_,{value:void 0}),Qn("invalid",c);break;case"textarea":Ie(c,_),C=V(c,_),Qn("invalid",c);break;default:C=_}ln(x,C),oe=C;for(D in oe)if(oe.hasOwnProperty(D)){var fe=oe[D];D==="style"?Ut(c,fe):D==="dangerouslySetInnerHTML"?(fe=fe?fe.__html:void 0,fe!=null&&ut(c,fe)):D==="children"?typeof fe=="string"?(x!=="textarea"||fe!=="")&&Zt(c,fe):typeof fe=="number"&&Zt(c,""+fe):D!=="suppressContentEditableWarning"&&D!=="suppressHydrationWarning"&&D!=="autoFocus"&&(r.hasOwnProperty(D)?fe!=null&&D==="onScroll"&&Qn("scroll",c):fe!=null&&E(c,D,fe,U))}switch(x){case"input":lt(c),tt(c,_,!1);break;case"textarea":lt(c),Be(c);break;case"option":_.value!=null&&c.setAttribute("value",""+De(_.value));break;case"select":c.multiple=!!_.multiple,D=_.value,D!=null?Z(c,!!_.multiple,D,!1):_.defaultValue!=null&&Z(c,!!_.multiple,_.defaultValue,!0);break;default:typeof C.onClick=="function"&&(c.onclick=cy)}switch(x){case"button":case"input":case"select":case"textarea":_=!!_.autoFocus;break e;case"img":_=!0;break e;default:_=!1}}_&&(f.flags|=4)}f.ref!==null&&(f.flags|=512,f.flags|=2097152)}return Nr(f),null;case 6:if(c&&f.stateNode!=null)aN(c,f,c.memoizedProps,_);else{if(typeof _!="string"&&f.stateNode===null)throw Error(t(166));if(x=Lu(tp.current),Lu(Ko.current),yy(f)){if(_=f.stateNode,x=f.memoizedProps,_[qo]=f,(D=_.nodeValue!==x)&&(c=Ni,c!==null))switch(c.tag){case 3:uy(_.nodeValue,x,(c.mode&1)!==0);break;case 5:c.memoizedProps.suppressHydrationWarning!==!0&&uy(_.nodeValue,x,(c.mode&1)!==0)}D&&(f.flags|=4)}else _=(x.nodeType===9?x:x.ownerDocument).createTextNode(_),_[qo]=f,f.stateNode=_}return Nr(f),null;case 13:if(Jn(cs),_=f.memoizedState,c===null||c.memoizedState!==null&&c.memoizedState.dehydrated!==null){if(ss&&Ai!==null&&f.mode&1&&!(f.flags&128))c2(),yh(),f.flags|=98560,D=!1;else if(D=yy(f),_!==null&&_.dehydrated!==null){if(c===null){if(!D)throw Error(t(318));if(D=f.memoizedState,D=D!==null?D.dehydrated:null,!D)throw Error(t(317));D[qo]=f}else yh(),!(f.flags&128)&&(f.memoizedState=null),f.flags|=4;Nr(f),D=!1}else po!==null&&(C1(po),po=null),D=!0;if(!D)return f.flags&65536?f:null}return f.flags&128?(f.lanes=x,f):(_=_!==null,_!==(c!==null&&c.memoizedState!==null)&&_&&(f.child.flags|=8192,f.mode&1&&(c===null||cs.current&1?js===0&&(js=3):A1())),f.updateQueue!==null&&(f.flags|=4),Nr(f),null);case 4:return wh(),m1(c,f),c===null&&qf(f.stateNode.containerInfo),Nr(f),null;case 10:return Ww(f.type._context),Nr(f),null;case 17:return ai(f.type)&&dy(),Nr(f),null;case 19:if(Jn(cs),D=f.memoizedState,D===null)return Nr(f),null;if(_=(f.flags&128)!==0,U=D.rendering,U===null)if(_)op(D,!1);else{if(js!==0||c!==null&&c.flags&128)for(c=f.child;c!==null;){if(U=_y(c),U!==null){for(f.flags|=128,op(D,!1),_=U.updateQueue,_!==null&&(f.updateQueue=_,f.flags|=4),f.subtreeFlags=0,_=x,x=f.child;x!==null;)D=x,c=_,D.flags&=14680066,U=D.alternate,U===null?(D.childLanes=0,D.lanes=c,D.child=null,D.subtreeFlags=0,D.memoizedProps=null,D.memoizedState=null,D.updateQueue=null,D.dependencies=null,D.stateNode=null):(D.childLanes=U.childLanes,D.lanes=U.lanes,D.child=U.child,D.subtreeFlags=0,D.deletions=null,D.memoizedProps=U.memoizedProps,D.memoizedState=U.memoizedState,D.updateQueue=U.updateQueue,D.type=U.type,c=U.dependencies,D.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext}),x=x.sibling;return Yn(cs,cs.current&1|2),f.child}c=c.sibling}D.tail!==null&&Ee()>Eh&&(f.flags|=128,_=!0,op(D,!1),f.lanes=4194304)}else{if(!_)if(c=_y(U),c!==null){if(f.flags|=128,_=!0,x=c.updateQueue,x!==null&&(f.updateQueue=x,f.flags|=4),op(D,!0),D.tail===null&&D.tailMode==="hidden"&&!U.alternate&&!ss)return Nr(f),null}else 2*Ee()-D.renderingStartTime>Eh&&x!==1073741824&&(f.flags|=128,_=!0,op(D,!1),f.lanes=4194304);D.isBackwards?(U.sibling=f.child,f.child=U):(x=D.last,x!==null?x.sibling=U:f.child=U,D.last=U)}return D.tail!==null?(f=D.tail,D.rendering=f,D.tail=f.sibling,D.renderingStartTime=Ee(),f.sibling=null,x=cs.current,Yn(cs,_?x&1|2:x&1),f):(Nr(f),null);case 22:case 23:return N1(),_=f.memoizedState!==null,c!==null&&c.memoizedState!==null!==_&&(f.flags|=8192),_&&f.mode&1?Ri&1073741824&&(Nr(f),f.subtreeFlags&6&&(f.flags|=8192)):Nr(f),null;case 24:return null;case 25:return null}throw Error(t(156,f.tag))}function _U(c,f){switch(Ow(f),f.tag){case 1:return ai(f.type)&&dy(),c=f.flags,c&65536?(f.flags=c&-65537|128,f):null;case 3:return wh(),Jn(oi),Jn(Cr),Yw(),c=f.flags,c&65536&&!(c&128)?(f.flags=c&-65537|128,f):null;case 5:return qw(f),null;case 13:if(Jn(cs),c=f.memoizedState,c!==null&&c.dehydrated!==null){if(f.alternate===null)throw Error(t(340));yh()}return c=f.flags,c&65536?(f.flags=c&-65537|128,f):null;case 19:return Jn(cs),null;case 4:return wh(),null;case 10:return Ww(f.type._context),null;case 22:case 23:return N1(),null;case 24:return null;default:return null}}var My=!1,Ar=!1,TU=typeof WeakSet=="function"?WeakSet:Set,Tt=null;function _h(c,f){var x=c.ref;if(x!==null)if(typeof x=="function")try{x(null)}catch(_){ms(c,f,_)}else x.current=null}function g1(c,f,x){try{x()}catch(_){ms(c,f,_)}}var lN=!1;function EU(c,f){if(Nw=bl,c=zI(),bw(c)){if("selectionStart"in c)var x={start:c.selectionStart,end:c.selectionEnd};else e:{x=(x=c.ownerDocument)&&x.defaultView||window;var _=x.getSelection&&x.getSelection();if(_&&_.rangeCount!==0){x=_.anchorNode;var C=_.anchorOffset,D=_.focusNode;_=_.focusOffset;try{x.nodeType,D.nodeType}catch{x=null;break e}var U=0,oe=-1,fe=-1,ke=0,je=0,Ye=c,He=null;t:for(;;){for(var vt;Ye!==x||C!==0&&Ye.nodeType!==3||(oe=U+C),Ye!==D||_!==0&&Ye.nodeType!==3||(fe=U+_),Ye.nodeType===3&&(U+=Ye.nodeValue.length),(vt=Ye.firstChild)!==null;)He=Ye,Ye=vt;for(;;){if(Ye===c)break t;if(He===x&&++ke===C&&(oe=U),He===D&&++je===_&&(fe=U),(vt=Ye.nextSibling)!==null)break;Ye=He,He=Ye.parentNode}Ye=vt}x=oe===-1||fe===-1?null:{start:oe,end:fe}}else x=null}x=x||{start:0,end:0}}else x=null;for(Aw={focusedElem:c,selectionRange:x},bl=!1,Tt=f;Tt!==null;)if(f=Tt,c=f.child,(f.subtreeFlags&1028)!==0&&c!==null)c.return=f,Tt=c;else for(;Tt!==null;){f=Tt;try{var It=f.alternate;if(f.flags&1024)switch(f.tag){case 0:case 11:case 15:break;case 1:if(It!==null){var Mt=It.memoizedProps,Ts=It.memoizedState,Ce=f.stateNode,ye=Ce.getSnapshotBeforeUpdate(f.elementType===f.type?Mt:mo(f.type,Mt),Ts);Ce.__reactInternalSnapshotBeforeUpdate=ye}break;case 3:var Ne=f.stateNode.containerInfo;Ne.nodeType===1?Ne.textContent="":Ne.nodeType===9&&Ne.documentElement&&Ne.removeChild(Ne.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(t(163))}}catch(Qe){ms(f,f.return,Qe)}if(c=f.sibling,c!==null){c.return=f.return,Tt=c;break}Tt=f.return}return It=lN,lN=!1,It}function ap(c,f,x){var _=f.updateQueue;if(_=_!==null?_.lastEffect:null,_!==null){var C=_=_.next;do{if((C.tag&c)===c){var D=C.destroy;C.destroy=void 0,D!==void 0&&g1(f,x,D)}C=C.next}while(C!==_)}}function Dy(c,f){if(f=f.updateQueue,f=f!==null?f.lastEffect:null,f!==null){var x=f=f.next;do{if((x.tag&c)===c){var _=x.create;x.destroy=_()}x=x.next}while(x!==f)}}function y1(c){var f=c.ref;if(f!==null){var x=c.stateNode;switch(c.tag){case 5:c=x;break;default:c=x}typeof f=="function"?f(c):f.current=c}}function uN(c){var f=c.alternate;f!==null&&(c.alternate=null,uN(f)),c.child=null,c.deletions=null,c.sibling=null,c.tag===5&&(f=c.stateNode,f!==null&&(delete f[qo],delete f[Yf],delete f[Dw],delete f[aU],delete f[lU])),c.stateNode=null,c.return=null,c.dependencies=null,c.memoizedProps=null,c.memoizedState=null,c.pendingProps=null,c.stateNode=null,c.updateQueue=null}function cN(c){return c.tag===5||c.tag===3||c.tag===4}function hN(c){e:for(;;){for(;c.sibling===null;){if(c.return===null||cN(c.return))return null;c=c.return}for(c.sibling.return=c.return,c=c.sibling;c.tag!==5&&c.tag!==6&&c.tag!==18;){if(c.flags&2||c.child===null||c.tag===4)continue e;c.child.return=c,c=c.child}if(!(c.flags&2))return c.stateNode}}function x1(c,f,x){var _=c.tag;if(_===5||_===6)c=c.stateNode,f?x.nodeType===8?x.parentNode.insertBefore(c,f):x.insertBefore(c,f):(x.nodeType===8?(f=x.parentNode,f.insertBefore(c,x)):(f=x,f.appendChild(c)),x=x._reactRootContainer,x!=null||f.onclick!==null||(f.onclick=cy));else if(_!==4&&(c=c.child,c!==null))for(x1(c,f,x),c=c.sibling;c!==null;)x1(c,f,x),c=c.sibling}function v1(c,f,x){var _=c.tag;if(_===5||_===6)c=c.stateNode,f?x.insertBefore(c,f):x.appendChild(c);else if(_!==4&&(c=c.child,c!==null))for(v1(c,f,x),c=c.sibling;c!==null;)v1(c,f,x),c=c.sibling}var vr=null,go=!1;function kl(c,f,x){for(x=x.child;x!==null;)dN(c,f,x),x=x.sibling}function dN(c,f,x){if(St&&typeof St.onCommitFiberUnmount=="function")try{St.onCommitFiberUnmount(Dt,x)}catch{}switch(x.tag){case 5:Ar||_h(x,f);case 6:var _=vr,C=go;vr=null,kl(c,f,x),vr=_,go=C,vr!==null&&(go?(c=vr,x=x.stateNode,c.nodeType===8?c.parentNode.removeChild(x):c.removeChild(x)):vr.removeChild(x.stateNode));break;case 18:vr!==null&&(go?(c=vr,x=x.stateNode,c.nodeType===8?Mw(c.parentNode,x):c.nodeType===1&&Mw(c,x),vl(c)):Mw(vr,x.stateNode));break;case 4:_=vr,C=go,vr=x.stateNode.containerInfo,go=!0,kl(c,f,x),vr=_,go=C;break;case 0:case 11:case 14:case 15:if(!Ar&&(_=x.updateQueue,_!==null&&(_=_.lastEffect,_!==null))){C=_=_.next;do{var D=C,U=D.destroy;D=D.tag,U!==void 0&&(D&2||D&4)&&g1(x,f,U),C=C.next}while(C!==_)}kl(c,f,x);break;case 1:if(!Ar&&(_h(x,f),_=x.stateNode,typeof _.componentWillUnmount=="function"))try{_.props=x.memoizedProps,_.state=x.memoizedState,_.componentWillUnmount()}catch(oe){ms(x,f,oe)}kl(c,f,x);break;case 21:kl(c,f,x);break;case 22:x.mode&1?(Ar=(_=Ar)||x.memoizedState!==null,kl(c,f,x),Ar=_):kl(c,f,x);break;default:kl(c,f,x)}}function fN(c){var f=c.updateQueue;if(f!==null){c.updateQueue=null;var x=c.stateNode;x===null&&(x=c.stateNode=new TU),f.forEach(function(_){var C=$U.bind(null,c,_);x.has(_)||(x.add(_),_.then(C,C))})}}function yo(c,f){var x=f.deletions;if(x!==null)for(var _=0;_<x.length;_++){var C=x[_];try{var D=c,U=f,oe=U;e:for(;oe!==null;){switch(oe.tag){case 5:vr=oe.stateNode,go=!1;break e;case 3:vr=oe.stateNode.containerInfo,go=!0;break e;case 4:vr=oe.stateNode.containerInfo,go=!0;break e}oe=oe.return}if(vr===null)throw Error(t(160));dN(D,U,C),vr=null,go=!1;var fe=C.alternate;fe!==null&&(fe.return=null),C.return=null}catch(ke){ms(C,f,ke)}}if(f.subtreeFlags&12854)for(f=f.child;f!==null;)pN(f,c),f=f.sibling}function pN(c,f){var x=c.alternate,_=c.flags;switch(c.tag){case 0:case 11:case 14:case 15:if(yo(f,c),Zo(c),_&4){try{ap(3,c,c.return),Dy(3,c)}catch(Mt){ms(c,c.return,Mt)}try{ap(5,c,c.return)}catch(Mt){ms(c,c.return,Mt)}}break;case 1:yo(f,c),Zo(c),_&512&&x!==null&&_h(x,x.return);break;case 5:if(yo(f,c),Zo(c),_&512&&x!==null&&_h(x,x.return),c.flags&32){var C=c.stateNode;try{Zt(C,"")}catch(Mt){ms(c,c.return,Mt)}}if(_&4&&(C=c.stateNode,C!=null)){var D=c.memoizedProps,U=x!==null?x.memoizedProps:D,oe=c.type,fe=c.updateQueue;if(c.updateQueue=null,fe!==null)try{oe==="input"&&D.type==="radio"&&D.name!=null&&bt(C,D),Xt(oe,U);var ke=Xt(oe,D);for(U=0;U<fe.length;U+=2){var je=fe[U],Ye=fe[U+1];je==="style"?Ut(C,Ye):je==="dangerouslySetInnerHTML"?ut(C,Ye):je==="children"?Zt(C,Ye):E(C,je,Ye,ke)}switch(oe){case"input":_t(C,D);break;case"textarea":Oe(C,D);break;case"select":var He=C._wrapperState.wasMultiple;C._wrapperState.wasMultiple=!!D.multiple;var vt=D.value;vt!=null?Z(C,!!D.multiple,vt,!1):He!==!!D.multiple&&(D.defaultValue!=null?Z(C,!!D.multiple,D.defaultValue,!0):Z(C,!!D.multiple,D.multiple?[]:"",!1))}C[Yf]=D}catch(Mt){ms(c,c.return,Mt)}}break;case 6:if(yo(f,c),Zo(c),_&4){if(c.stateNode===null)throw Error(t(162));C=c.stateNode,D=c.memoizedProps;try{C.nodeValue=D}catch(Mt){ms(c,c.return,Mt)}}break;case 3:if(yo(f,c),Zo(c),_&4&&x!==null&&x.memoizedState.isDehydrated)try{vl(f.containerInfo)}catch(Mt){ms(c,c.return,Mt)}break;case 4:yo(f,c),Zo(c);break;case 13:yo(f,c),Zo(c),C=c.child,C.flags&8192&&(D=C.memoizedState!==null,C.stateNode.isHidden=D,!D||C.alternate!==null&&C.alternate.memoizedState!==null||(S1=Ee())),_&4&&fN(c);break;case 22:if(je=x!==null&&x.memoizedState!==null,c.mode&1?(Ar=(ke=Ar)||je,yo(f,c),Ar=ke):yo(f,c),Zo(c),_&8192){if(ke=c.memoizedState!==null,(c.stateNode.isHidden=ke)&&!je&&c.mode&1)for(Tt=c,je=c.child;je!==null;){for(Ye=Tt=je;Tt!==null;){switch(He=Tt,vt=He.child,He.tag){case 0:case 11:case 14:case 15:ap(4,He,He.return);break;case 1:_h(He,He.return);var It=He.stateNode;if(typeof It.componentWillUnmount=="function"){_=He,x=He.return;try{f=_,It.props=f.memoizedProps,It.state=f.memoizedState,It.componentWillUnmount()}catch(Mt){ms(_,x,Mt)}}break;case 5:_h(He,He.return);break;case 22:if(He.memoizedState!==null){yN(Ye);continue}}vt!==null?(vt.return=He,Tt=vt):yN(Ye)}je=je.sibling}e:for(je=null,Ye=c;;){if(Ye.tag===5){if(je===null){je=Ye;try{C=Ye.stateNode,ke?(D=C.style,typeof D.setProperty=="function"?D.setProperty("display","none","important"):D.display="none"):(oe=Ye.stateNode,fe=Ye.memoizedProps.style,U=fe!=null&&fe.hasOwnProperty("display")?fe.display:null,oe.style.display=Rt("display",U))}catch(Mt){ms(c,c.return,Mt)}}}else if(Ye.tag===6){if(je===null)try{Ye.stateNode.nodeValue=ke?"":Ye.memoizedProps}catch(Mt){ms(c,c.return,Mt)}}else if((Ye.tag!==22&&Ye.tag!==23||Ye.memoizedState===null||Ye===c)&&Ye.child!==null){Ye.child.return=Ye,Ye=Ye.child;continue}if(Ye===c)break e;for(;Ye.sibling===null;){if(Ye.return===null||Ye.return===c)break e;je===Ye&&(je=null),Ye=Ye.return}je===Ye&&(je=null),Ye.sibling.return=Ye.return,Ye=Ye.sibling}}break;case 19:yo(f,c),Zo(c),_&4&&fN(c);break;case 21:break;default:yo(f,c),Zo(c)}}function Zo(c){var f=c.flags;if(f&2){try{e:{for(var x=c.return;x!==null;){if(cN(x)){var _=x;break e}x=x.return}throw Error(t(160))}switch(_.tag){case 5:var C=_.stateNode;_.flags&32&&(Zt(C,""),_.flags&=-33);var D=hN(c);v1(c,D,C);break;case 3:case 4:var U=_.stateNode.containerInfo,oe=hN(c);x1(c,oe,U);break;default:throw Error(t(161))}}catch(fe){ms(c,c.return,fe)}c.flags&=-3}f&4096&&(c.flags&=-4097)}function CU(c,f,x){Tt=c,mN(c)}function mN(c,f,x){for(var _=(c.mode&1)!==0;Tt!==null;){var C=Tt,D=C.child;if(C.tag===22&&_){var U=C.memoizedState!==null||My;if(!U){var oe=C.alternate,fe=oe!==null&&oe.memoizedState!==null||Ar;oe=My;var ke=Ar;if(My=U,(Ar=fe)&&!ke)for(Tt=C;Tt!==null;)U=Tt,fe=U.child,U.tag===22&&U.memoizedState!==null?xN(C):fe!==null?(fe.return=U,Tt=fe):xN(C);for(;D!==null;)Tt=D,mN(D),D=D.sibling;Tt=C,My=oe,Ar=ke}gN(c)}else C.subtreeFlags&8772&&D!==null?(D.return=C,Tt=D):gN(c)}}function gN(c){for(;Tt!==null;){var f=Tt;if(f.flags&8772){var x=f.alternate;try{if(f.flags&8772)switch(f.tag){case 0:case 11:case 15:Ar||Dy(5,f);break;case 1:var _=f.stateNode;if(f.flags&4&&!Ar)if(x===null)_.componentDidMount();else{var C=f.elementType===f.type?x.memoizedProps:mo(f.type,x.memoizedProps);_.componentDidUpdate(C,x.memoizedState,_.__reactInternalSnapshotBeforeUpdate)}var D=f.updateQueue;D!==null&&y2(f,D,_);break;case 3:var U=f.updateQueue;if(U!==null){if(x=null,f.child!==null)switch(f.child.tag){case 5:x=f.child.stateNode;break;case 1:x=f.child.stateNode}y2(f,U,x)}break;case 5:var oe=f.stateNode;if(x===null&&f.flags&4){x=oe;var fe=f.memoizedProps;switch(f.type){case"button":case"input":case"select":case"textarea":fe.autoFocus&&x.focus();break;case"img":fe.src&&(x.src=fe.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(f.memoizedState===null){var ke=f.alternate;if(ke!==null){var je=ke.memoizedState;if(je!==null){var Ye=je.dehydrated;Ye!==null&&vl(Ye)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(t(163))}Ar||f.flags&512&&y1(f)}catch(He){ms(f,f.return,He)}}if(f===c){Tt=null;break}if(x=f.sibling,x!==null){x.return=f.return,Tt=x;break}Tt=f.return}}function yN(c){for(;Tt!==null;){var f=Tt;if(f===c){Tt=null;break}var x=f.sibling;if(x!==null){x.return=f.return,Tt=x;break}Tt=f.return}}function xN(c){for(;Tt!==null;){var f=Tt;try{switch(f.tag){case 0:case 11:case 15:var x=f.return;try{Dy(4,f)}catch(fe){ms(f,x,fe)}break;case 1:var _=f.stateNode;if(typeof _.componentDidMount=="function"){var C=f.return;try{_.componentDidMount()}catch(fe){ms(f,C,fe)}}var D=f.return;try{y1(f)}catch(fe){ms(f,D,fe)}break;case 5:var U=f.return;try{y1(f)}catch(fe){ms(f,U,fe)}}}catch(fe){ms(f,f.return,fe)}if(f===c){Tt=null;break}var oe=f.sibling;if(oe!==null){oe.return=f.return,Tt=oe;break}Tt=f.return}}var IU=Math.ceil,$y=T.ReactCurrentDispatcher,b1=T.ReactCurrentOwner,Qi=T.ReactCurrentBatchConfig,In=0,rr=null,ks=null,br=0,Ri=0,Th=Cl(0),js=0,lp=null,zu=0,Fy=0,w1=0,up=null,ui=null,S1=0,Eh=1/0,Da=null,Py=!1,_1=null,Ml=null,Oy=!1,Dl=null,Ly=0,cp=0,T1=null,Uy=-1,zy=0;function Xr(){return In&6?Ee():Uy!==-1?Uy:Uy=Ee()}function $l(c){return c.mode&1?In&2&&br!==0?br&-br:cU.transition!==null?(zy===0&&(zy=Nn()),zy):(c=wn,c!==0||(c=window.event,c=c===void 0?16:Sl(c.type)),c):1}function xo(c,f,x,_){if(50<cp)throw cp=0,T1=null,Error(t(185));_s(c,x,_),(!(In&2)||c!==rr)&&(c===rr&&(!(In&2)&&(Fy|=x),js===4&&Fl(c,br)),ci(c,_),x===1&&In===0&&!(f.mode&1)&&(Eh=Ee()+500,py&&Nl()))}function ci(c,f){var x=c.callbackNode;nr(c,f);var _=Vs(c,c===rr?br:0);if(_===0)x!==null&&X(x),c.callbackNode=null,c.callbackPriority=0;else if(f=_&-_,c.callbackPriority!==f){if(x!=null&&X(x),f===1)c.tag===0?uU(bN.bind(null,c)):i2(bN.bind(null,c)),iU(function(){!(In&6)&&Nl()}),x=null;else{switch(Ii(_)){case 1:x=Ke;break;case 4:x=at;break;case 16:x=it;break;case 536870912:x=zt;break;default:x=it}x=NN(x,vN.bind(null,c))}c.callbackPriority=f,c.callbackNode=x}}function vN(c,f){if(Uy=-1,zy=0,In&6)throw Error(t(327));var x=c.callbackNode;if(Ch()&&c.callbackNode!==x)return null;var _=Vs(c,c===rr?br:0);if(_===0)return null;if(_&30||_&c.expiredLanes||f)f=By(c,_);else{f=_;var C=In;In|=2;var D=SN();(rr!==c||br!==f)&&(Da=null,Eh=Ee()+500,Vu(c,f));do try{RU();break}catch(oe){wN(c,oe)}while(!0);Vw(),$y.current=D,In=C,ks!==null?f=0:(rr=null,br=0,f=js)}if(f!==0){if(f===2&&(C=ji(c),C!==0&&(_=C,f=E1(c,C))),f===1)throw x=lp,Vu(c,0),Fl(c,_),ci(c,Ee()),x;if(f===6)Fl(c,_);else{if(C=c.current.alternate,!(_&30)&&!NU(C)&&(f=By(c,_),f===2&&(D=ji(c),D!==0&&(_=D,f=E1(c,D))),f===1))throw x=lp,Vu(c,0),Fl(c,_),ci(c,Ee()),x;switch(c.finishedWork=C,c.finishedLanes=_,f){case 0:case 1:throw Error(t(345));case 2:Wu(c,ui,Da);break;case 3:if(Fl(c,_),(_&130023424)===_&&(f=S1+500-Ee(),10<f)){if(Vs(c,0)!==0)break;if(C=c.suspendedLanes,(C&_)!==_){Xr(),c.pingedLanes|=c.suspendedLanes&C;break}c.timeoutHandle=kw(Wu.bind(null,c,ui,Da),f);break}Wu(c,ui,Da);break;case 4:if(Fl(c,_),(_&4194240)===_)break;for(f=c.eventTimes,C=-1;0<_;){var U=31-Qt(_);D=1<<U,U=f[U],U>C&&(C=U),_&=~D}if(_=C,_=Ee()-_,_=(120>_?120:480>_?480:1080>_?1080:1920>_?1920:3e3>_?3e3:4320>_?4320:1960*IU(_/1960))-_,10<_){c.timeoutHandle=kw(Wu.bind(null,c,ui,Da),_);break}Wu(c,ui,Da);break;case 5:Wu(c,ui,Da);break;default:throw Error(t(329))}}}return ci(c,Ee()),c.callbackNode===x?vN.bind(null,c):null}function E1(c,f){var x=up;return c.current.memoizedState.isDehydrated&&(Vu(c,f).flags|=256),c=By(c,f),c!==2&&(f=ui,ui=x,f!==null&&C1(f)),c}function C1(c){ui===null?ui=c:ui.push.apply(ui,c)}function NU(c){for(var f=c;;){if(f.flags&16384){var x=f.updateQueue;if(x!==null&&(x=x.stores,x!==null))for(var _=0;_<x.length;_++){var C=x[_],D=C.getSnapshot;C=C.value;try{if(!fo(D(),C))return!1}catch{return!1}}}if(x=f.child,f.subtreeFlags&16384&&x!==null)x.return=f,f=x;else{if(f===c)break;for(;f.sibling===null;){if(f.return===null||f.return===c)return!0;f=f.return}f.sibling.return=f.return,f=f.sibling}}return!0}function Fl(c,f){for(f&=~w1,f&=~Fy,c.suspendedLanes|=f,c.pingedLanes&=~f,c=c.expirationTimes;0<f;){var x=31-Qt(f),_=1<<x;c[x]=-1,f&=~_}}function bN(c){if(In&6)throw Error(t(327));Ch();var f=Vs(c,0);if(!(f&1))return ci(c,Ee()),null;var x=By(c,f);if(c.tag!==0&&x===2){var _=ji(c);_!==0&&(f=_,x=E1(c,_))}if(x===1)throw x=lp,Vu(c,0),Fl(c,f),ci(c,Ee()),x;if(x===6)throw Error(t(345));return c.finishedWork=c.current.alternate,c.finishedLanes=f,Wu(c,ui,Da),ci(c,Ee()),null}function I1(c,f){var x=In;In|=1;try{return c(f)}finally{In=x,In===0&&(Eh=Ee()+500,py&&Nl())}}function Bu(c){Dl!==null&&Dl.tag===0&&!(In&6)&&Ch();var f=In;In|=1;var x=Qi.transition,_=wn;try{if(Qi.transition=null,wn=1,c)return c()}finally{wn=_,Qi.transition=x,In=f,!(In&6)&&Nl()}}function N1(){Ri=Th.current,Jn(Th)}function Vu(c,f){c.finishedWork=null,c.finishedLanes=0;var x=c.timeoutHandle;if(x!==-1&&(c.timeoutHandle=-1,rU(x)),ks!==null)for(x=ks.return;x!==null;){var _=x;switch(Ow(_),_.tag){case 1:_=_.type.childContextTypes,_!=null&&dy();break;case 3:wh(),Jn(oi),Jn(Cr),Yw();break;case 5:qw(_);break;case 4:wh();break;case 13:Jn(cs);break;case 19:Jn(cs);break;case 10:Ww(_.type._context);break;case 22:case 23:N1()}x=x.return}if(rr=c,ks=c=Pl(c.current,null),br=Ri=f,js=0,lp=null,w1=Fy=zu=0,ui=up=null,Ou!==null){for(f=0;f<Ou.length;f++)if(x=Ou[f],_=x.interleaved,_!==null){x.interleaved=null;var C=_.next,D=x.pending;if(D!==null){var U=D.next;D.next=C,_.next=U}x.pending=_}Ou=null}return c}function wN(c,f){do{var x=ks;try{if(Vw(),Ty.current=Ny,Ey){for(var _=hs.memoizedState;_!==null;){var C=_.queue;C!==null&&(C.pending=null),_=_.next}Ey=!1}if(Uu=0,sr=Hs=hs=null,np=!1,sp=0,b1.current=null,x===null||x.return===null){js=1,lp=f,ks=null;break}e:{var D=c,U=x.return,oe=x,fe=f;if(f=br,oe.flags|=32768,fe!==null&&typeof fe=="object"&&typeof fe.then=="function"){var ke=fe,je=oe,Ye=je.tag;if(!(je.mode&1)&&(Ye===0||Ye===11||Ye===15)){var He=je.alternate;He?(je.updateQueue=He.updateQueue,je.memoizedState=He.memoizedState,je.lanes=He.lanes):(je.updateQueue=null,je.memoizedState=null)}var vt=j2(U);if(vt!==null){vt.flags&=-257,X2(vt,U,oe,D,f),vt.mode&1&&H2(D,ke,f),f=vt,fe=ke;var It=f.updateQueue;if(It===null){var Mt=new Set;Mt.add(fe),f.updateQueue=Mt}else It.add(fe);break e}else{if(!(f&1)){H2(D,ke,f),A1();break e}fe=Error(t(426))}}else if(ss&&oe.mode&1){var Ts=j2(U);if(Ts!==null){!(Ts.flags&65536)&&(Ts.flags|=256),X2(Ts,U,oe,D,f),zw(Sh(fe,oe));break e}}D=fe=Sh(fe,oe),js!==4&&(js=2),up===null?up=[D]:up.push(D),D=U;do{switch(D.tag){case 3:D.flags|=65536,f&=-f,D.lanes|=f;var Ce=W2(D,fe,f);g2(D,Ce);break e;case 1:oe=fe;var ye=D.type,Ne=D.stateNode;if(!(D.flags&128)&&(typeof ye.getDerivedStateFromError=="function"||Ne!==null&&typeof Ne.componentDidCatch=="function"&&(Ml===null||!Ml.has(Ne)))){D.flags|=65536,f&=-f,D.lanes|=f;var Qe=G2(D,oe,f);g2(D,Qe);break e}}D=D.return}while(D!==null)}TN(x)}catch($t){f=$t,ks===x&&x!==null&&(ks=x=x.return);continue}break}while(!0)}function SN(){var c=$y.current;return $y.current=Ny,c===null?Ny:c}function A1(){(js===0||js===3||js===2)&&(js=4),rr===null||!(zu&268435455)&&!(Fy&268435455)||Fl(rr,br)}function By(c,f){var x=In;In|=2;var _=SN();(rr!==c||br!==f)&&(Da=null,Vu(c,f));do try{AU();break}catch(C){wN(c,C)}while(!0);if(Vw(),In=x,$y.current=_,ks!==null)throw Error(t(261));return rr=null,br=0,js}function AU(){for(;ks!==null;)_N(ks)}function RU(){for(;ks!==null&&!ve();)_N(ks)}function _N(c){var f=IN(c.alternate,c,Ri);c.memoizedProps=c.pendingProps,f===null?TN(c):ks=f,b1.current=null}function TN(c){var f=c;do{var x=f.alternate;if(c=f.return,f.flags&32768){if(x=_U(x,f),x!==null){x.flags&=32767,ks=x;return}if(c!==null)c.flags|=32768,c.subtreeFlags=0,c.deletions=null;else{js=6,ks=null;return}}else if(x=SU(x,f,Ri),x!==null){ks=x;return}if(f=f.sibling,f!==null){ks=f;return}ks=f=c}while(f!==null);js===0&&(js=5)}function Wu(c,f,x){var _=wn,C=Qi.transition;try{Qi.transition=null,wn=1,kU(c,f,x,_)}finally{Qi.transition=C,wn=_}return null}function kU(c,f,x,_){do Ch();while(Dl!==null);if(In&6)throw Error(t(327));x=c.finishedWork;var C=c.finishedLanes;if(x===null)return null;if(c.finishedWork=null,c.finishedLanes=0,x===c.current)throw Error(t(177));c.callbackNode=null,c.callbackPriority=0;var D=x.lanes|x.childLanes;if(Gs(c,D),c===rr&&(ks=rr=null,br=0),!(x.subtreeFlags&2064)&&!(x.flags&2064)||Oy||(Oy=!0,NN(it,function(){return Ch(),null})),D=(x.flags&15990)!==0,x.subtreeFlags&15990||D){D=Qi.transition,Qi.transition=null;var U=wn;wn=1;var oe=In;In|=4,b1.current=null,EU(c,x),pN(x,c),Z3(Aw),bl=!!Nw,Aw=Nw=null,c.current=x,CU(x),Ae(),In=oe,wn=U,Qi.transition=D}else c.current=x;if(Oy&&(Oy=!1,Dl=c,Ly=C),D=c.pendingLanes,D===0&&(Ml=null),xn(x.stateNode),ci(c,Ee()),f!==null)for(_=c.onRecoverableError,x=0;x<f.length;x++)C=f[x],_(C.value,{componentStack:C.stack,digest:C.digest});if(Py)throw Py=!1,c=_1,_1=null,c;return Ly&1&&c.tag!==0&&Ch(),D=c.pendingLanes,D&1?c===T1?cp++:(cp=0,T1=c):cp=0,Nl(),null}function Ch(){if(Dl!==null){var c=Ii(Ly),f=Qi.transition,x=wn;try{if(Qi.transition=null,wn=16>c?16:c,Dl===null)var _=!1;else{if(c=Dl,Dl=null,Ly=0,In&6)throw Error(t(331));var C=In;for(In|=4,Tt=c.current;Tt!==null;){var D=Tt,U=D.child;if(Tt.flags&16){var oe=D.deletions;if(oe!==null){for(var fe=0;fe<oe.length;fe++){var ke=oe[fe];for(Tt=ke;Tt!==null;){var je=Tt;switch(je.tag){case 0:case 11:case 15:ap(8,je,D)}var Ye=je.child;if(Ye!==null)Ye.return=je,Tt=Ye;else for(;Tt!==null;){je=Tt;var He=je.sibling,vt=je.return;if(uN(je),je===ke){Tt=null;break}if(He!==null){He.return=vt,Tt=He;break}Tt=vt}}}var It=D.alternate;if(It!==null){var Mt=It.child;if(Mt!==null){It.child=null;do{var Ts=Mt.sibling;Mt.sibling=null,Mt=Ts}while(Mt!==null)}}Tt=D}}if(D.subtreeFlags&2064&&U!==null)U.return=D,Tt=U;else e:for(;Tt!==null;){if(D=Tt,D.flags&2048)switch(D.tag){case 0:case 11:case 15:ap(9,D,D.return)}var Ce=D.sibling;if(Ce!==null){Ce.return=D.return,Tt=Ce;break e}Tt=D.return}}var ye=c.current;for(Tt=ye;Tt!==null;){U=Tt;var Ne=U.child;if(U.subtreeFlags&2064&&Ne!==null)Ne.return=U,Tt=Ne;else e:for(U=ye;Tt!==null;){if(oe=Tt,oe.flags&2048)try{switch(oe.tag){case 0:case 11:case 15:Dy(9,oe)}}catch($t){ms(oe,oe.return,$t)}if(oe===U){Tt=null;break e}var Qe=oe.sibling;if(Qe!==null){Qe.return=oe.return,Tt=Qe;break e}Tt=oe.return}}if(In=C,Nl(),St&&typeof St.onPostCommitFiberRoot=="function")try{St.onPostCommitFiberRoot(Dt,c)}catch{}_=!0}return _}finally{wn=x,Qi.transition=f}}return!1}function EN(c,f,x){f=Sh(x,f),f=W2(c,f,1),c=Rl(c,f,1),f=Xr(),c!==null&&(_s(c,1,f),ci(c,f))}function ms(c,f,x){if(c.tag===3)EN(c,c,x);else for(;f!==null;){if(f.tag===3){EN(f,c,x);break}else if(f.tag===1){var _=f.stateNode;if(typeof f.type.getDerivedStateFromError=="function"||typeof _.componentDidCatch=="function"&&(Ml===null||!Ml.has(_))){c=Sh(x,c),c=G2(f,c,1),f=Rl(f,c,1),c=Xr(),f!==null&&(_s(f,1,c),ci(f,c));break}}f=f.return}}function MU(c,f,x){var _=c.pingCache;_!==null&&_.delete(f),f=Xr(),c.pingedLanes|=c.suspendedLanes&x,rr===c&&(br&x)===x&&(js===4||js===3&&(br&130023424)===br&&500>Ee()-S1?Vu(c,0):w1|=x),ci(c,f)}function CN(c,f){f===0&&(c.mode&1?(f=Zn,Zn<<=1,!(Zn&130023424)&&(Zn=4194304)):f=1);var x=Xr();c=Ra(c,f),c!==null&&(_s(c,f,x),ci(c,x))}function DU(c){var f=c.memoizedState,x=0;f!==null&&(x=f.retryLane),CN(c,x)}function $U(c,f){var x=0;switch(c.tag){case 13:var _=c.stateNode,C=c.memoizedState;C!==null&&(x=C.retryLane);break;case 19:_=c.stateNode;break;default:throw Error(t(314))}_!==null&&_.delete(f),CN(c,x)}var IN;IN=function(c,f,x){if(c!==null)if(c.memoizedProps!==f.pendingProps||oi.current)li=!0;else{if(!(c.lanes&x)&&!(f.flags&128))return li=!1,wU(c,f,x);li=!!(c.flags&131072)}else li=!1,ss&&f.flags&1048576&&o2(f,gy,f.index);switch(f.lanes=0,f.tag){case 2:var _=f.type;ky(c,f),c=f.pendingProps;var C=ph(f,Cr.current);bh(f,x),C=Jw(null,f,_,c,C,x);var D=e1();return f.flags|=1,typeof C=="object"&&C!==null&&typeof C.render=="function"&&C.$$typeof===void 0?(f.tag=1,f.memoizedState=null,f.updateQueue=null,ai(_)?(D=!0,fy(f)):D=!1,f.memoizedState=C.state!==null&&C.state!==void 0?C.state:null,jw(f),C.updater=Ay,f.stateNode=C,C._reactInternals=f,o1(f,_,c,x),f=c1(null,f,_,!0,D,x)):(f.tag=0,ss&&D&&Pw(f),jr(null,f,C,x),f=f.child),f;case 16:_=f.elementType;e:{switch(ky(c,f),c=f.pendingProps,C=_._init,_=C(_._payload),f.type=_,C=f.tag=PU(_),c=mo(_,c),C){case 0:f=u1(null,f,_,c,x);break e;case 1:f=J2(null,f,_,c,x);break e;case 11:f=q2(null,f,_,c,x);break e;case 14:f=K2(null,f,_,mo(_.type,c),x);break e}throw Error(t(306,_,""))}return f;case 0:return _=f.type,C=f.pendingProps,C=f.elementType===_?C:mo(_,C),u1(c,f,_,C,x);case 1:return _=f.type,C=f.pendingProps,C=f.elementType===_?C:mo(_,C),J2(c,f,_,C,x);case 3:e:{if(eN(f),c===null)throw Error(t(387));_=f.pendingProps,D=f.memoizedState,C=D.element,m2(c,f),Sy(f,_,null,x);var U=f.memoizedState;if(_=U.element,D.isDehydrated)if(D={element:_,isDehydrated:!1,cache:U.cache,pendingSuspenseBoundaries:U.pendingSuspenseBoundaries,transitions:U.transitions},f.updateQueue.baseState=D,f.memoizedState=D,f.flags&256){C=Sh(Error(t(423)),f),f=tN(c,f,_,x,C);break e}else if(_!==C){C=Sh(Error(t(424)),f),f=tN(c,f,_,x,C);break e}else for(Ai=El(f.stateNode.containerInfo.firstChild),Ni=f,ss=!0,po=null,x=f2(f,null,_,x),f.child=x;x;)x.flags=x.flags&-3|4096,x=x.sibling;else{if(yh(),_===C){f=Ma(c,f,x);break e}jr(c,f,_,x)}f=f.child}return f;case 5:return x2(f),c===null&&Uw(f),_=f.type,C=f.pendingProps,D=c!==null?c.memoizedProps:null,U=C.children,Rw(_,C)?U=null:D!==null&&Rw(_,D)&&(f.flags|=32),Q2(c,f),jr(c,f,U,x),f.child;case 6:return c===null&&Uw(f),null;case 13:return nN(c,f,x);case 4:return Xw(f,f.stateNode.containerInfo),_=f.pendingProps,c===null?f.child=xh(f,null,_,x):jr(c,f,_,x),f.child;case 11:return _=f.type,C=f.pendingProps,C=f.elementType===_?C:mo(_,C),q2(c,f,_,C,x);case 7:return jr(c,f,f.pendingProps,x),f.child;case 8:return jr(c,f,f.pendingProps.children,x),f.child;case 12:return jr(c,f,f.pendingProps.children,x),f.child;case 10:e:{if(_=f.type._context,C=f.pendingProps,D=f.memoizedProps,U=C.value,Yn(vy,_._currentValue),_._currentValue=U,D!==null)if(fo(D.value,U)){if(D.children===C.children&&!oi.current){f=Ma(c,f,x);break e}}else for(D=f.child,D!==null&&(D.return=f);D!==null;){var oe=D.dependencies;if(oe!==null){U=D.child;for(var fe=oe.firstContext;fe!==null;){if(fe.context===_){if(D.tag===1){fe=ka(-1,x&-x),fe.tag=2;var ke=D.updateQueue;if(ke!==null){ke=ke.shared;var je=ke.pending;je===null?fe.next=fe:(fe.next=je.next,je.next=fe),ke.pending=fe}}D.lanes|=x,fe=D.alternate,fe!==null&&(fe.lanes|=x),Gw(D.return,x,f),oe.lanes|=x;break}fe=fe.next}}else if(D.tag===10)U=D.type===f.type?null:D.child;else if(D.tag===18){if(U=D.return,U===null)throw Error(t(341));U.lanes|=x,oe=U.alternate,oe!==null&&(oe.lanes|=x),Gw(U,x,f),U=D.sibling}else U=D.child;if(U!==null)U.return=D;else for(U=D;U!==null;){if(U===f){U=null;break}if(D=U.sibling,D!==null){D.return=U.return,U=D;break}U=U.return}D=U}jr(c,f,C.children,x),f=f.child}return f;case 9:return C=f.type,_=f.pendingProps.children,bh(f,x),C=Yi(C),_=_(C),f.flags|=1,jr(c,f,_,x),f.child;case 14:return _=f.type,C=mo(_,f.pendingProps),C=mo(_.type,C),K2(c,f,_,C,x);case 15:return Y2(c,f,f.type,f.pendingProps,x);case 17:return _=f.type,C=f.pendingProps,C=f.elementType===_?C:mo(_,C),ky(c,f),f.tag=1,ai(_)?(c=!0,fy(f)):c=!1,bh(f,x),B2(f,_,C),o1(f,_,C,x),c1(null,f,_,!0,c,x);case 19:return rN(c,f,x);case 22:return Z2(c,f,x)}throw Error(t(156,f.tag))};function NN(c,f){return Eu(c,f)}function FU(c,f,x,_){this.tag=c,this.key=x,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=f,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=_,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ji(c,f,x,_){return new FU(c,f,x,_)}function R1(c){return c=c.prototype,!(!c||!c.isReactComponent)}function PU(c){if(typeof c=="function")return R1(c)?1:0;if(c!=null){if(c=c.$$typeof,c===B)return 11;if(c===q)return 14}return 2}function Pl(c,f){var x=c.alternate;return x===null?(x=Ji(c.tag,f,c.key,c.mode),x.elementType=c.elementType,x.type=c.type,x.stateNode=c.stateNode,x.alternate=c,c.alternate=x):(x.pendingProps=f,x.type=c.type,x.flags=0,x.subtreeFlags=0,x.deletions=null),x.flags=c.flags&14680064,x.childLanes=c.childLanes,x.lanes=c.lanes,x.child=c.child,x.memoizedProps=c.memoizedProps,x.memoizedState=c.memoizedState,x.updateQueue=c.updateQueue,f=c.dependencies,x.dependencies=f===null?null:{lanes:f.lanes,firstContext:f.firstContext},x.sibling=c.sibling,x.index=c.index,x.ref=c.ref,x}function Vy(c,f,x,_,C,D){var U=2;if(_=c,typeof c=="function")R1(c)&&(U=1);else if(typeof c=="string")U=5;else e:switch(c){case $:return Gu(x.children,C,D,f);case O:U=8,C|=8;break;case k:return c=Ji(12,x,f,C|2),c.elementType=k,c.lanes=D,c;case W:return c=Ji(13,x,f,C),c.elementType=W,c.lanes=D,c;case K:return c=Ji(19,x,f,C),c.elementType=K,c.lanes=D,c;case J:return Wy(x,C,D,f);default:if(typeof c=="object"&&c!==null)switch(c.$$typeof){case N:U=10;break e;case A:U=9;break e;case B:U=11;break e;case q:U=14;break e;case Y:U=16,_=null;break e}throw Error(t(130,c==null?c:typeof c,""))}return f=Ji(U,x,f,C),f.elementType=c,f.type=_,f.lanes=D,f}function Gu(c,f,x,_){return c=Ji(7,c,_,f),c.lanes=x,c}function Wy(c,f,x,_){return c=Ji(22,c,_,f),c.elementType=J,c.lanes=x,c.stateNode={isHidden:!1},c}function k1(c,f,x){return c=Ji(6,c,null,f),c.lanes=x,c}function M1(c,f,x){return f=Ji(4,c.children!==null?c.children:[],c.key,f),f.lanes=x,f.stateNode={containerInfo:c.containerInfo,pendingChildren:null,implementation:c.implementation},f}function OU(c,f,x,_,C){this.tag=f,this.containerInfo=c,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Ws(0),this.expirationTimes=Ws(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ws(0),this.identifierPrefix=_,this.onRecoverableError=C,this.mutableSourceEagerHydrationData=null}function D1(c,f,x,_,C,D,U,oe,fe){return c=new OU(c,f,x,oe,fe),f===1?(f=1,D===!0&&(f|=8)):f=0,D=Ji(3,null,null,f),c.current=D,D.stateNode=c,D.memoizedState={element:_,isDehydrated:x,cache:null,transitions:null,pendingSuspenseBoundaries:null},jw(D),c}function LU(c,f,x){var _=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:M,key:_==null?null:""+_,children:c,containerInfo:f,implementation:x}}function AN(c){if(!c)return Il;c=c._reactInternals;e:{if(ri(c)!==c||c.tag!==1)throw Error(t(170));var f=c;do{switch(f.tag){case 3:f=f.stateNode.context;break e;case 1:if(ai(f.type)){f=f.stateNode.__reactInternalMemoizedMergedChildContext;break e}}f=f.return}while(f!==null);throw Error(t(171))}if(c.tag===1){var x=c.type;if(ai(x))return s2(c,x,f)}return f}function RN(c,f,x,_,C,D,U,oe,fe){return c=D1(x,_,!0,c,C,D,U,oe,fe),c.context=AN(null),x=c.current,_=Xr(),C=$l(x),D=ka(_,C),D.callback=f??null,Rl(x,D,C),c.current.lanes=C,_s(c,C,_),ci(c,_),c}function Gy(c,f,x,_){var C=f.current,D=Xr(),U=$l(C);return x=AN(x),f.context===null?f.context=x:f.pendingContext=x,f=ka(D,U),f.payload={element:c},_=_===void 0?null:_,_!==null&&(f.callback=_),c=Rl(C,f,U),c!==null&&(xo(c,C,U,D),wy(c,C,U)),U}function Hy(c){if(c=c.current,!c.child)return null;switch(c.child.tag){case 5:return c.child.stateNode;default:return c.child.stateNode}}function kN(c,f){if(c=c.memoizedState,c!==null&&c.dehydrated!==null){var x=c.retryLane;c.retryLane=x!==0&&x<f?x:f}}function $1(c,f){kN(c,f),(c=c.alternate)&&kN(c,f)}var MN=typeof reportError=="function"?reportError:function(c){console.error(c)};function F1(c){this._internalRoot=c}jy.prototype.render=F1.prototype.render=function(c){var f=this._internalRoot;if(f===null)throw Error(t(409));Gy(c,f,null,null)},jy.prototype.unmount=F1.prototype.unmount=function(){var c=this._internalRoot;if(c!==null){this._internalRoot=null;var f=c.containerInfo;Bu(function(){Gy(null,c,null,null)}),f[Ca]=null}};function jy(c){this._internalRoot=c}jy.prototype.unstable_scheduleHydration=function(c){if(c){var f=ml();c={blockedOn:null,target:c,priority:f};for(var x=0;x<Go.length&&f!==0&&f<Go[x].priority;x++);Go.splice(x,0,c),x===0&&yl(c)}};function P1(c){return!(!c||c.nodeType!==1&&c.nodeType!==9&&c.nodeType!==11)}function Xy(c){return!(!c||c.nodeType!==1&&c.nodeType!==9&&c.nodeType!==11&&(c.nodeType!==8||c.nodeValue!==" react-mount-point-unstable "))}function DN(){}function UU(c,f,x,_,C){if(C){if(typeof _=="function"){var D=_;_=function(){var ke=Hy(U);D.call(ke)}}var U=RN(f,_,c,0,null,!1,!1,"",DN);return c._reactRootContainer=U,c[Ca]=U.current,qf(c.nodeType===8?c.parentNode:c),Bu(),U}for(;C=c.lastChild;)c.removeChild(C);if(typeof _=="function"){var oe=_;_=function(){var ke=Hy(fe);oe.call(ke)}}var fe=D1(c,0,!1,null,null,!1,!1,"",DN);return c._reactRootContainer=fe,c[Ca]=fe.current,qf(c.nodeType===8?c.parentNode:c),Bu(function(){Gy(f,fe,x,_)}),fe}function qy(c,f,x,_,C){var D=x._reactRootContainer;if(D){var U=D;if(typeof C=="function"){var oe=C;C=function(){var fe=Hy(U);oe.call(fe)}}Gy(f,U,c,C)}else U=UU(x,f,c,C,_);return Hy(U)}Cu=function(c){switch(c.tag){case 3:var f=c.stateNode;if(f.current.memoizedState.isDehydrated){var x=hn(f.pendingLanes);x!==0&&(As(f,x|1),ci(f,Ee()),!(In&6)&&(Eh=Ee()+500,Nl()))}break;case 13:Bu(function(){var _=Ra(c,1);if(_!==null){var C=Xr();xo(_,c,1,C)}}),$1(c,1)}},eh=function(c){if(c.tag===13){var f=Ra(c,134217728);if(f!==null){var x=Xr();xo(f,c,134217728,x)}$1(c,134217728)}},Pf=function(c){if(c.tag===13){var f=$l(c),x=Ra(c,f);if(x!==null){var _=Xr();xo(x,c,f,_)}$1(c,f)}},ml=function(){return wn},jg=function(c,f){var x=wn;try{return wn=c,f()}finally{wn=x}},st=function(c,f,x){switch(f){case"input":if(_t(c,x),f=x.name,x.type==="radio"&&f!=null){for(x=c;x.parentNode;)x=x.parentNode;for(x=x.querySelectorAll("input[name="+JSON.stringify(""+f)+'][type="radio"]'),f=0;f<x.length;f++){var _=x[f];if(_!==c&&_.form===c.form){var C=hy(_);if(!C)throw Error(t(90));Ft(_),_t(_,C)}}}break;case"textarea":Oe(c,x);break;case"select":f=x.value,f!=null&&Z(c,!!x.multiple,f,!1)}},On=I1,ps=Bu;var zU={usingClientEntryPoint:!1,Events:[Zf,dh,hy,ht,Bt,I1]},hp={findFiberByHostInstance:Du,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},BU={bundleType:hp.bundleType,version:hp.version,rendererPackageName:hp.rendererPackageName,rendererConfig:hp.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:T.ReactCurrentDispatcher,findHostInstanceByFiber:function(c){return c=fl(c),c===null?null:c.stateNode},findFiberByHostInstance:hp.findFiberByHostInstance,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Ky=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ky.isDisabled&&Ky.supportsFiber)try{Dt=Ky.inject(BU),St=Ky}catch{}}return hi.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=zU,hi.createPortal=function(c,f){var x=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!P1(f))throw Error(t(200));return LU(c,f,null,x)},hi.createRoot=function(c,f){if(!P1(c))throw Error(t(299));var x=!1,_="",C=MN;return f!=null&&(f.unstable_strictMode===!0&&(x=!0),f.identifierPrefix!==void 0&&(_=f.identifierPrefix),f.onRecoverableError!==void 0&&(C=f.onRecoverableError)),f=D1(c,1,!1,null,null,x,!1,_,C),c[Ca]=f.current,qf(c.nodeType===8?c.parentNode:c),new F1(f)},hi.findDOMNode=function(c){if(c==null)return null;if(c.nodeType===1)return c;var f=c._reactInternals;if(f===void 0)throw typeof c.render=="function"?Error(t(188)):(c=Object.keys(c).join(","),Error(t(268,c)));return c=fl(f),c=c===null?null:c.stateNode,c},hi.flushSync=function(c){return Bu(c)},hi.hydrate=function(c,f,x){if(!Xy(f))throw Error(t(200));return qy(null,c,f,!0,x)},hi.hydrateRoot=function(c,f,x){if(!P1(c))throw Error(t(405));var _=x!=null&&x.hydratedSources||null,C=!1,D="",U=MN;if(x!=null&&(x.unstable_strictMode===!0&&(C=!0),x.identifierPrefix!==void 0&&(D=x.identifierPrefix),x.onRecoverableError!==void 0&&(U=x.onRecoverableError)),f=RN(f,null,c,1,x??null,C,!1,D,U),c[Ca]=f.current,qf(c),_)for(c=0;c<_.length;c++)x=_[c],C=x._getVersion,C=C(x._source),f.mutableSourceEagerHydrationData==null?f.mutableSourceEagerHydrationData=[x,C]:f.mutableSourceEagerHydrationData.push(x,C);return new jy(f)},hi.render=function(c,f,x){if(!Xy(f))throw Error(t(200));return qy(null,c,f,!1,x)},hi.unmountComponentAtNode=function(c){if(!Xy(c))throw Error(t(40));return c._reactRootContainer?(Bu(function(){qy(null,null,c,!1,function(){c._reactRootContainer=null,c[Ca]=null})}),!0):!1},hi.unstable_batchedUpdates=I1,hi.unstable_renderSubtreeIntoContainer=function(c,f,x,_){if(!Xy(x))throw Error(t(200));if(c==null||c._reactInternals===void 0)throw Error(t(38));return qy(c,f,x,!1,_)},hi.version="18.3.1-next-f1338f8080-20240426",hi}var WN;function ez(){if(WN)return U1.exports;WN=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),U1.exports=JU(),U1.exports}var GN;function tz(){if(GN)return Yy;GN=1;var n=ez();return Yy.createRoot=n.createRoot,Yy.hydrateRoot=n.hydrateRoot,Yy}var nz=tz();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sz=1e-7,rz=1e-4;class RT{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Lx{refCount(e){return di("refCount")}incRef(e){return di("incRef")}timerAvailable(){return!0}time(e){return di("time")}read(e){return di("read")}readSync(e){return di("readSync")}readToGPU(e,t){return di("readToGPU")}numDataIds(){return di("numDataIds")}disposeData(e,t){return di("disposeData")}write(e,t,s){return di("write")}move(e,t,s,r,i){return di("move")}createTensorFromGPUData(e,t,s){return di("createTensorFromGPUData")}memory(){return di("memory")}floatPrecision(){return di("floatPrecision")}epsilon(){return this.floatPrecision()===32?sz:rz}dispose(){return di("dispose")}}function di(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Wa(n,e,t)}function iz(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,s=0;for(;t>0;)s=Math.random()*t|0,t--,Wa(n,t,s),Wa(e,t,s)}function eu(n,e,t){return Math.max(n,Math.min(e,t))}function Ux(n){return n%2===0?n:n+1}function Wa(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function Kk(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function oz(n,e){const t=Math.random();return e*t+(1-t)*n}function az(n,e){let t=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(e[s]);t+=r*r}return t}function z(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function hr(n,e,t=""){z(dn(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Lc(n){z(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Me(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function lz(n){return n.length===0}function Yk(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function dn(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Sc(n){return n%1===0}function uz(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function ix(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function cz(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return kT(e),e}function mc(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function HS(n,e=r=>0,t,s){return new Promise((r,i)=>{let o=0;const a=()=>{if(n()){r();return}o++;const l=e(o);if(t!=null&&o>=t){i();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function MT(n,e){let t=1,s=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function an(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),z(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),z(n.every(s=>Sc(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function sl(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||r?null:an(e,n).sort();let o=0;for(let a=0;a<n.length;++a){if(i!=null){if(i[o]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(i[o]==null||i[o]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),i[o]<=a&&o++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function Ys(n,e){return fs(n,e)}function fs(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Zk(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function Qk(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function DT(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Dp(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Jk(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function na(n){return typeof n=="string"||n instanceof String}function eM(n){return typeof n=="boolean"}function ox(n){return typeof n=="number"}function Uc(n){return Array.isArray(n)?Uc(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":ox(n)?"float32":na(n)?"string":eM(n)?"bool":"float32"}function tu(n){return!!(n&&n.constructor&&n.call&&n.apply)}function ax(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Lt(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function tM(n,e,t,s=!1){const r=new Array;if(e.length===1){const i=e[0]*(s?2:1);for(let o=0;o<i;o++)r[o]=t[n+o]}else{const i=e[0],o=e.slice(1),a=o.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<i;l++)r[l]=tM(n+l*a,o,t,s)}return r}function zi(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,i)=>r*i)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return tM(0,n,e,t)}function nM(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function zx(n,e){const t=cr(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function cr(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function $T(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return zi(n,new Float32Array(t));if(e==="int32")return zi(n,new Int32Array(t));if(e==="bool")return zi(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Ei(n){n.forEach(e=>{z(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Ro(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function zc(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function nu(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN="tfjsflags";class sM{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=hz,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(_e().getBool("IS_TEST")||_e().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];_e().getBool("IS_TEST")||_e().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(nu(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);HN in e&&e[HN].split(",").forEach(s=>{const[r,i]=s.split(":");this.urlFlags[r]=fz(r,i)})}}function hz(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(dz(e,s[0],s[1]),s.join("="))),e}function dz(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function fz(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function _e(){return FT}let FT=null;function pz(n){FT=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let V1;function rM(){if(V1==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");V1=n}return V1}function mz(){const n=rM();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function PT(n,e){const t=mz();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const tm="Abs",wd="Acos",Sd="Acosh",Bc="Add",nm="AddN",Bx="All",Vx="Any",sm="ArgMax",rm="ArgMin",_d="Asin",Td="Asinh",Ed="Atan",Cd="Atanh",Id="Atan2",im="AvgPool",Wx="AvgPoolGrad",om="AvgPool3D",Gx="AvgPool3DGrad",am="BatchMatMul",lm="BatchToSpaceND",Hx="Bincount",um="BitwiseAnd",iM="BroadcastTo",jx="BroadcastArgs",Nd="Cast",Ad="Ceil",Rd="ClipByValue",Xx="Complex",cm="ComplexAbs",hm="Concat",dm="Conv2D",qx="Conv2DBackpropFilter",fm="Conv2DBackpropInput",pm="Conv3D",Kx="Conv3DBackpropFilterV2",Yx="Conv3DBackpropInputV2",kd="Cos",Md="Cosh",Zx="Cumprod",mm="Cumsum",Qx="CropAndResize",Jx="DenseBincount",ev="DepthToSpace",gm="DepthwiseConv2dNative",tv="DepthwiseConv2dNativeBackpropFilter",nv="DepthwiseConv2dNativeBackpropInput",sv="Diag",ym="Dilation2D",lx="Dilation2DBackpropInput",ux="Dilation2DBackpropFilter",rv="Draw",Dd="RealDiv",iv="Einsum",$d="Elu",ov="EluGrad",Fd="Erf",xm="Equal",Pd="Exp",vm="ExpandDims",Od="Expm1",av="FFT",lv="Fill",uv="FlipLeftRight",Ld="Floor",Ud="FloorDiv",bm="FusedBatchNorm",wm="GatherV2",cv="GatherNd",Sm="Greater",zd="GreaterEqual",Bd="Identity",hv="IFFT",dv="Imag",Vd="IsFinite",Wd="IsInf",Gd="IsNan",_m="LeakyRelu",Tm="Less",Em="LessEqual",fv="LinSpace",Hd="Log",jd="Log1p",Cm="LogicalAnd",Im="LogicalNot",Nm="LogicalOr",gz="LogicalXor",oM="LogSoftmax",yz="LowerBound",Am="LRN",pv="LRNGrad",xz="MatrixBandPart",Rm="Max",Xd="Maximum",km="MaxPool",mv="MaxPoolGrad",Mm="MaxPool3D",gv="MaxPool3DGrad",yv="MaxPoolWithArgmax",Dm="Mean",$m="Min",qd="Minimum",Fm="MirrorPad",Kd="Mod",xv="Multinomial",Yd="Multiply",Pm="Neg",Om="NotEqual",vv="NonMaxSuppressionV3",bv="NonMaxSuppressionV4",wv="NonMaxSuppressionV5",Lm="OnesLike",Um="OneHot",zm="Pack",Bm="PadV2",vz="Pool",Zd="Pow",Vm="Prelu",Wm="Prod",Sv="RaggedGather",_v="RaggedRange",Tv="RaggedTensorToTensor",Ev="Range",Cv="Real",Qd="Reciprocal",Jd="Relu",Gm="Reshape",Hm="ResizeNearestNeighbor",Iv="ResizeNearestNeighborGrad",jm="ResizeBilinear",Nv="ResizeBilinearGrad",ef="Relu6",Xm="Reverse",tf="Round",nf="Rsqrt",Av="ScatterNd",Rv="TensorScatterUpdate",kv="SearchSorted",qm="Select",sf="Selu",Km="Slice",rf="Sin",of="Sinh",af="Sign",lf="Sigmoid",uf="Softplus",cf="Sqrt",Ym="Sum",Zm="SpaceToBatchND",Qm="SplitV",Jm="Softmax",Mv="SparseFillEmptyRows",Dv="SparseReshape",$v="SparseSegmentMean",Fv="SparseSegmentSum",Pv="SparseToDense",hf="SquaredDifference",Ov="Square",eg="StaticRegexReplace",Lv="StridedSlice",Uv="StringNGrams",zv="StringSplit",Bv="StringToHashBucketFast",df="Sub",ff="Tan",pf="Tanh",mf="Tile",Vv="TopK",Wv="Transform",gc="Transpose",Gv="Unique",tg="Unpack",ng="UnsortedSegmentSum",bz="UpperBound",sg="ZerosLike",gf="Step",cx="FromPixels",Hv="RotateWithOffset",$p="_FusedMatMul",Fp="FusedConv2D",Pp="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pi(...n){_e().getBool("IS_TEST")||_e().getBool("PROD")||console.warn(...n)}function wz(...n){_e().getBool("IS_TEST")||_e().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const td=PT("kernelRegistry",()=>new Map),Op=PT("gradRegistry",()=>new Map);function Lp(n,e){const t=OT(n,e);return td.get(t)}function jS(n){return Op.get(n)}function hx(n){const e=td.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,o]=r,[a]=i.split("_");a===n&&t.push(o)}return t}function jv(n){const{kernelName:e,backendName:t}=n,s=OT(e,t);td.has(s)&&Pi(`The kernel '${e}' for backend '${t}' is already registered`),td.set(s,n)}function aM(n){const{kernelName:e}=n;Op.has(e)&&_e().getBool("DEBUG")&&Pi(`Overriding the gradient for '${e}'`),Op.set(e,n)}function Sz(n,e){const t=OT(n,e);if(!td.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);td.delete(t)}function _z(n){if(!Op.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Op.delete(n)}function Tz(n,e){hx(n).forEach(s=>{const r=Object.assign({},s,{backendName:e});jv(r)})}function OT(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var W1,jN;function Ez(){if(jN)return W1;jN=1,W1=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(N,A,B){this.low=N|0,this.high=A|0,this.unsigned=!!B}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(N){return(N&&N.__isLong__)===!0}e.isLong=t;var s={},r={};function i(N,A){var B,W,K;return A?(N>>>=0,(K=0<=N&&N<256)&&(W=r[N],W)?W:(B=a(N,(N|0)<0?-1:0,!0),K&&(r[N]=B),B)):(N|=0,(K=-128<=N&&N<128)&&(W=s[N],W)?W:(B=a(N,N<0?-1:0,!1),K&&(s[N]=B),B))}e.fromInt=i;function o(N,A){if(isNaN(N))return A?w:v;if(A){if(N<0)return w;if(N>=g)return $}else{if(N<=-9223372036854776e3)return O;if(N+1>=b)return M}return N<0?o(-N,A).neg():a(N%m|0,N/m|0,A)}e.fromNumber=o;function a(N,A,B){return new e(N,A,B)}e.fromBits=a;var l=Math.pow;function u(N,A,B){if(N.length===0)throw Error("empty string");if(N==="NaN"||N==="Infinity"||N==="+Infinity"||N==="-Infinity")return v;if(typeof A=="number"?(B=A,A=!1):A=!!A,B=B||10,B<2||36<B)throw RangeError("radix");var W;if((W=N.indexOf("-"))>0)throw Error("interior hyphen");if(W===0)return u(N.substring(1),A,B).neg();for(var K=o(l(B,8)),q=v,Y=0;Y<N.length;Y+=8){var J=Math.min(8,N.length-Y),G=parseInt(N.substring(Y,Y+J),B);if(J<8){var ee=o(l(B,J));q=q.mul(ee).add(o(G))}else q=q.mul(K),q=q.add(o(G))}return q.unsigned=A,q}e.fromString=u;function h(N,A){return typeof N=="number"?o(N,A):typeof N=="string"?u(N,A):a(N.low,N.high,typeof A=="boolean"?A:N.unsigned)}e.fromValue=h;var d=65536,p=1<<24,m=d*d,g=m*m,b=g/2,y=i(p),v=i(0);e.ZERO=v;var w=i(0,!0);e.UZERO=w;var E=i(1);e.ONE=E;var T=i(1,!0);e.UONE=T;var I=i(-1);e.NEG_ONE=I;var M=a(-1,2147483647,!1);e.MAX_VALUE=M;var $=a(-1,-1,!0);e.MAX_UNSIGNED_VALUE=$;var O=a(0,-2147483648,!1);e.MIN_VALUE=O;var k=e.prototype;return k.toInt=function(){return this.unsigned?this.low>>>0:this.low},k.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},k.toString=function(A){if(A=A||10,A<2||36<A)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(O)){var B=o(A),W=this.div(B),K=W.mul(B).sub(this);return W.toString(A)+K.toInt().toString(A)}else return"-"+this.neg().toString(A);for(var q=o(l(A,6),this.unsigned),Y=this,J="";;){var G=Y.div(q),ee=Y.sub(G.mul(q)).toInt()>>>0,te=ee.toString(A);if(Y=G,Y.isZero())return te+J;for(;te.length<6;)te="0"+te;J=""+te+J}},k.getHighBits=function(){return this.high},k.getHighBitsUnsigned=function(){return this.high>>>0},k.getLowBits=function(){return this.low},k.getLowBitsUnsigned=function(){return this.low>>>0},k.getNumBitsAbs=function(){if(this.isNegative())return this.eq(O)?64:this.neg().getNumBitsAbs();for(var A=this.high!=0?this.high:this.low,B=31;B>0&&!(A&1<<B);B--);return this.high!=0?B+33:B+1},k.isZero=function(){return this.high===0&&this.low===0},k.eqz=k.isZero,k.isNegative=function(){return!this.unsigned&&this.high<0},k.isPositive=function(){return this.unsigned||this.high>=0},k.isOdd=function(){return(this.low&1)===1},k.isEven=function(){return(this.low&1)===0},k.equals=function(A){return t(A)||(A=h(A)),this.unsigned!==A.unsigned&&this.high>>>31===1&&A.high>>>31===1?!1:this.high===A.high&&this.low===A.low},k.eq=k.equals,k.notEquals=function(A){return!this.eq(A)},k.neq=k.notEquals,k.ne=k.notEquals,k.lessThan=function(A){return this.comp(A)<0},k.lt=k.lessThan,k.lessThanOrEqual=function(A){return this.comp(A)<=0},k.lte=k.lessThanOrEqual,k.le=k.lessThanOrEqual,k.greaterThan=function(A){return this.comp(A)>0},k.gt=k.greaterThan,k.greaterThanOrEqual=function(A){return this.comp(A)>=0},k.gte=k.greaterThanOrEqual,k.ge=k.greaterThanOrEqual,k.compare=function(A){if(t(A)||(A=h(A)),this.eq(A))return 0;var B=this.isNegative(),W=A.isNegative();return B&&!W?-1:!B&&W?1:this.unsigned?A.high>>>0>this.high>>>0||A.high===this.high&&A.low>>>0>this.low>>>0?-1:1:this.sub(A).isNegative()?-1:1},k.comp=k.compare,k.negate=function(){return!this.unsigned&&this.eq(O)?O:this.not().add(E)},k.neg=k.negate,k.add=function(A){t(A)||(A=h(A));var B=this.high>>>16,W=this.high&65535,K=this.low>>>16,q=this.low&65535,Y=A.high>>>16,J=A.high&65535,G=A.low>>>16,ee=A.low&65535,te=0,j=0,se=0,be=0;return be+=q+ee,se+=be>>>16,be&=65535,se+=K+G,j+=se>>>16,se&=65535,j+=W+J,te+=j>>>16,j&=65535,te+=B+Y,te&=65535,a(se<<16|be,te<<16|j,this.unsigned)},k.subtract=function(A){return t(A)||(A=h(A)),this.add(A.neg())},k.sub=k.subtract,k.multiply=function(A){if(this.isZero())return v;if(t(A)||(A=h(A)),n){var B=n.mul(this.low,this.high,A.low,A.high);return a(B,n.get_high(),this.unsigned)}if(A.isZero())return v;if(this.eq(O))return A.isOdd()?O:v;if(A.eq(O))return this.isOdd()?O:v;if(this.isNegative())return A.isNegative()?this.neg().mul(A.neg()):this.neg().mul(A).neg();if(A.isNegative())return this.mul(A.neg()).neg();if(this.lt(y)&&A.lt(y))return o(this.toNumber()*A.toNumber(),this.unsigned);var W=this.high>>>16,K=this.high&65535,q=this.low>>>16,Y=this.low&65535,J=A.high>>>16,G=A.high&65535,ee=A.low>>>16,te=A.low&65535,j=0,se=0,be=0,ae=0;return ae+=Y*te,be+=ae>>>16,ae&=65535,be+=q*te,se+=be>>>16,be&=65535,be+=Y*ee,se+=be>>>16,be&=65535,se+=K*te,j+=se>>>16,se&=65535,se+=q*ee,j+=se>>>16,se&=65535,se+=Y*G,j+=se>>>16,se&=65535,j+=W*te+K*ee+q*G+Y*J,j&=65535,a(be<<16|ae,j<<16|se,this.unsigned)},k.mul=k.multiply,k.divide=function(A){if(t(A)||(A=h(A)),A.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&A.low===-1&&A.high===-1)return this;var B=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,A.low,A.high);return a(B,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:v;var W,K,q;if(this.unsigned){if(A.unsigned||(A=A.toUnsigned()),A.gt(this))return w;if(A.gt(this.shru(1)))return T;q=w}else{if(this.eq(O)){if(A.eq(E)||A.eq(I))return O;if(A.eq(O))return E;var Y=this.shr(1);return W=Y.div(A).shl(1),W.eq(v)?A.isNegative()?E:I:(K=this.sub(A.mul(W)),q=W.add(K.div(A)),q)}else if(A.eq(O))return this.unsigned?w:v;if(this.isNegative())return A.isNegative()?this.neg().div(A.neg()):this.neg().div(A).neg();if(A.isNegative())return this.div(A.neg()).neg();q=v}for(K=this;K.gte(A);){W=Math.max(1,Math.floor(K.toNumber()/A.toNumber()));for(var J=Math.ceil(Math.log(W)/Math.LN2),G=J<=48?1:l(2,J-48),ee=o(W),te=ee.mul(A);te.isNegative()||te.gt(K);)W-=G,ee=o(W,this.unsigned),te=ee.mul(A);ee.isZero()&&(ee=E),q=q.add(ee),K=K.sub(te)}return q},k.div=k.divide,k.modulo=function(A){if(t(A)||(A=h(A)),n){var B=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,A.low,A.high);return a(B,n.get_high(),this.unsigned)}return this.sub(this.div(A).mul(A))},k.mod=k.modulo,k.rem=k.modulo,k.not=function(){return a(~this.low,~this.high,this.unsigned)},k.and=function(A){return t(A)||(A=h(A)),a(this.low&A.low,this.high&A.high,this.unsigned)},k.or=function(A){return t(A)||(A=h(A)),a(this.low|A.low,this.high|A.high,this.unsigned)},k.xor=function(A){return t(A)||(A=h(A)),a(this.low^A.low,this.high^A.high,this.unsigned)},k.shiftLeft=function(A){return t(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?a(this.low<<A,this.high<<A|this.low>>>32-A,this.unsigned):a(0,this.low<<A-32,this.unsigned)},k.shl=k.shiftLeft,k.shiftRight=function(A){return t(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?a(this.low>>>A|this.high<<32-A,this.high>>A,this.unsigned):a(this.high>>A-32,this.high>=0?0:-1,this.unsigned)},k.shr=k.shiftRight,k.shiftRightUnsigned=function(A){if(t(A)&&(A=A.toInt()),A&=63,A===0)return this;var B=this.high;if(A<32){var W=this.low;return a(W>>>A|B<<32-A,B>>>A,this.unsigned)}else return A===32?a(B,0,this.unsigned):a(B>>>A-32,0,this.unsigned)},k.shru=k.shiftRightUnsigned,k.shr_u=k.shiftRightUnsigned,k.toSigned=function(){return this.unsigned?a(this.low,this.high,!1):this},k.toUnsigned=function(){return this.unsigned?this:a(this.low,this.high,!0)},k.toBytes=function(A){return A?this.toBytesLE():this.toBytesBE()},k.toBytesLE=function(){var A=this.high,B=this.low;return[B&255,B>>>8&255,B>>>16&255,B>>>24,A&255,A>>>8&255,A>>>16&255,A>>>24]},k.toBytesBE=function(){var A=this.high,B=this.low;return[A>>>24,A>>>16&255,A>>>8&255,A&255,B>>>24,B>>>16&255,B>>>8&255,B&255]},e.fromBytes=function(A,B,W){return W?e.fromBytesLE(A,B):e.fromBytesBE(A,B)},e.fromBytesLE=function(A,B){return new e(A[0]|A[1]<<8|A[2]<<16|A[3]<<24,A[4]|A[5]<<8|A[6]<<16|A[7]<<24,B)},e.fromBytesBE=function(A,B){return new e(A[4]<<24|A[5]<<16|A[6]<<8|A[7],A[0]<<24|A[1]<<16|A[2]<<8|A[3],B)},W1}var uM=Ez();const cM=jU(uM),Cz=HU({__proto__:null,default:cM},[uM]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rc=cM||Cz;function rg(n){return rc.fromString(n,!0,16)}const hM=rg("c3a5c85c97cb3127"),ec=rg("b492b66fbe98f273"),Fr=rg("9ae16a3b2f90404f");function XS(n){return n.xor(n.shru(47))}function dM(n,e,t){const s=n.slice(e,e+t);return rc.fromBytes(Array.from(s),!0,!0)}function Hn(n,e){return dM(n,e,8)}function XN(n,e){return dM(n,e,4)}function Xs(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Kl(n,e,t=rg("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function Iz(n,e,t,s,r,i){r=r.add(n),i=Xs(i.add(r).add(s),21);const o=r;return r=r.add(e),r=r.add(t),i=i.add(Xs(r,44)),[r.add(s),i.add(o)]}function Zy(n,e,t,s){return Iz(Hn(n,e),Hn(n,e+8),Hn(n,e+16),Hn(n,e+24),t,s)}function Nz(n,e=n.length){if(e>=8){const t=Fr.add(e*2),s=Hn(n,0).add(Fr),r=Hn(n,e-8),i=Xs(r,37).mul(t).add(s),o=Xs(s,25).add(r).mul(t);return Kl(i,o,t)}if(e>=4){const t=Fr.add(e*2),s=XN(n,0);return Kl(s.shl(3).add(e),XN(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],i=t+(s<<8),o=e+(r<<2);return XS(Fr.mul(i).xor(hM.mul(o))).mul(Fr)}return Fr}function Az(n,e=n.length){const t=Fr.add(e*2),s=Hn(n,0).mul(ec),r=Hn(n,8),i=Hn(n,e-8).mul(t),o=Hn(n,e-16).mul(Fr);return Kl(Xs(s.add(r),43).add(Xs(i,30)).add(o),s.add(Xs(r.add(Fr),18)).add(i),t)}function Rz(n,e=n.length){const t=Fr.add(e*2),s=Hn(n,0).mul(Fr),r=Hn(n,8),i=Hn(n,e-8).mul(t),o=Hn(n,e-16).mul(Fr),a=Xs(s.add(r),43).add(Xs(i,30)).add(o),l=Kl(a,s.add(Xs(r.add(Fr),18)).add(i),t),u=Hn(n,16).mul(t),h=Hn(n,24),d=a.add(Hn(n,e-32)).mul(t),p=l.add(Hn(n,e-24)).mul(t);return Kl(Xs(u.add(h),43).add(Xs(d,30)).add(p),u.add(Xs(h.add(s),18)).add(d),t)}function fM(n,e=n.length){const t=rc.fromNumber(81,!0);if(e<=32)return e<=16?Nz(n,e):Az(n,e);if(e<=64)return Rz(n,e);let s=t,r=t.mul(ec).add(113),i=XS(r.mul(Fr).add(113)).mul(Fr),o=[rc.UZERO,rc.UZERO],a=[rc.UZERO,rc.UZERO];s=s.mul(Fr).add(Hn(n,0));let l=0;const u=(e-1>>6)*64,h=u+(e-1&63)-63;do s=Xs(s.add(r).add(o[0]).add(Hn(n,l+8)),37).mul(ec),r=Xs(r.add(o[1]).add(Hn(n,l+48)),42).mul(ec),s=s.xor(a[1]),r=r.add(o[0]).add(Hn(n,l+40)),i=Xs(i.add(a[0]),33).mul(ec),o=Zy(n,l,o[1].mul(ec),s.add(a[0])),a=Zy(n,l+32,i.add(a[1]),r.add(Hn(n,l+16))),[i,s]=[s,i],l+=64;while(l!==u);const d=ec.add(i.and(255).shl(1));return l=h,a[0]=a[0].add(e-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),s=Xs(s.add(r).add(o[0]).add(Hn(n,l+8)),37).mul(d),r=Xs(r.add(o[1]).add(Hn(n,l+48)),42).mul(d),s=s.xor(a[1].mul(9)),r=r.add(o[0].mul(9).add(Hn(n,l+40))),i=Xs(i.add(a[0]),33).mul(d),o=Zy(n,l,o[1].mul(d),s.add(a[0])),a=Zy(n,l+32,i.add(a[1]),r.add(Hn(n,l+16))),[i,s]=[s,i],Kl(Kl(o[0],a[0],d).add(XS(r).mul(hM)).add(i),Kl(o[1],a[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rl(n,e){return e==="string"?oa(n):mu([n],e)}function kz(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function mu(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=da(n)),_e().getBool("DEBUG")&&Zk(n,e),kz(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Dr(){return _e().platform.now()}function Mz(n,e){return _e().platform.fetch(n,e)}function oa(n,e="utf-8"){return e=e||"utf-8",_e().platform.encode(n,e)}function Ya(n,e="utf-8"){return e=e||"utf-8",_e().platform.decode(n,e)}function qs(n){return _e().platform.isTypedArray!=null?_e().platform.isTypedArray(n):lM(n)}function da(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||nu(n)||n==null||qs(n)&&t)e.push(n);else if(Array.isArray(n)||qs(n))for(let s=0;s<n.length;++s)da(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)da(n[r],e,t)}return e}const Dz=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:dn,arraysEqualWithNull:Yk,assert:z,assertNonNegativeIntegerDimensions:Ei,assertNonNull:Lc,assertShapesMatch:hr,bytesFromStringArray:Jk,bytesPerElement:Dp,checkConversionForErrors:Zk,clamp:eu,computeStrides:Lt,convertBackendValuesAndArrayBuffer:nM,createScalarValue:rl,createShuffledIndices:cz,decodeString:Ya,distSquared:az,encodeString:oa,fetch:Mz,fingerPrint64:fM,flatten:da,getArrayFromDType:fs,getTypedArrayFromDType:Ys,hasEncodingLoss:DT,hexToLong:rg,indexToLoc:zc,inferDtype:Uc,inferFromImplicitShape:MT,isBoolean:eM,isFunction:tu,isInt:Sc,isNumber:ox,isPromise:nu,isScalarShape:lz,isString:na,isTypedArray:qs,isValidDtype:Qk,locToIndex:Ro,makeOnesTypedArray:zx,makeZerosNestedTypedArray:$T,makeZerosTypedArray:cr,nearestDivisor:ax,nearestLargerEven:Ux,now:Dr,parseAxisParam:an,randUniform:oz,repeatedTry:HS,rightPad:mc,shuffle:kT,shuffleCombo:iz,sizeFromShape:Me,sizeToSquarishShape:ix,squeezeShape:sl,sum:Kk,swap:Wa,tanh:uz,toNestedArray:zi,toTypedArray:mu},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $z{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new Pz)}profileKernel(e,t,s){let r;const i=()=>{r=s()};let o;const a=Dr();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(i);else{i();for(const u of r)u.dataSync();o=Promise.resolve({kernelMs:Dr()-a})}if(_e().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const h=r[u];h.data().then(d=>{Fz(d,h.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(u=>u.kernelMs),extraInfo:o.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:i,extraInfo:o}=e;s.forEach(a=>{Promise.all([a.data(),r,o]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],i,l[2])})})}}function Fz(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class Pz{logKernelProfile(e,t,s,r,i,o){const a=typeof r=="number"?mc(`${r}ms`,9):r.error,l=mc(e,25),u=t.rank,h=t.size,d=mc(t.shape.toString(),14);let p="";for(const m in i){const g=i[m];if(g!=null){const b=g.shape||t.shape,y=b.length;p+=`${m}: ${y}D ${y>0?b:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${d}	%c${h}	%c${p}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(n,e,t){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],h=u.inputs;for(const d in h){const p=h[d];let m=!1;for(let g=0;g<e.length;g++)if(s[p.id]){u.outputs.forEach(b=>s[b.id]=!0),m=!0,r[u.id]=!0;break}if(m)break}}const i={};i[t.id]=!0;const o={};for(let l=n.length-1;l>=0;l--){const u=n[l],h=u.inputs;for(let d=0;d<u.outputs.length;d++)if(i[u.outputs[d].id]){for(const p in h)i[h[p].id]=!0,o[u.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&o[u.id]){const h={};for(const p in u.inputs){const m=u.inputs[p];s[m.id]&&(h[p]=m)}const d=Object.assign({},u);d.inputs=h,d.outputs=u.outputs,a.push(d)}}return a}function Lz(n,e,t,s){for(let r=e.length-1;r>=0;r--){const i=e[r],o=[];if(i.outputs.forEach(l=>{const u=n[l.id];u!=null?o.push(u):o.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const u=t(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const h=i.inputs[l];if(!dn(u.shape,h.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${h.shape}'`);if(n[h.id]==null)n[h.id]=u;else{const d=n[h.id];n[h.id]=s(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qN=20,fp=3,G1=7;function Uz(n,e,t,s){const r=Lt(e),i=zz(n,e,t,r),o=e.length,a=V0(n,e,t,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${o}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function zz(n,e,t,s){const r=Me(e),i=s[s.length-1],o=new Array(i).fill(0),a=e.length,l=t==="complex64"?Tp(n):n;if(a>1)for(let u=0;u<r/i;u++){const h=u*i;for(let d=0;d<i;d++)o[d]=Math.max(o[d],_p(l[h+d],0,t).length)}return o}function _p(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(G1))} + ${parseFloat(n[1].toFixed(G1))}j`:na(n)?s=`'${n}'`:t==="bool"?s=pM(n):s=parseFloat(n.toFixed(G1)).toString(),mc(s,e)}function pM(n){return n===0?"false":"true"}function V0(n,e,t,s,r,i=!0){const o=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const b=Tp(n);return[_p(b[0],0,t)]}return t==="bool"?[pM(n[0])]:[n[0].toString()]}if(l===1){if(a>qN){const y=fp*o;let v=Array.from(n.slice(0,y)),w=Array.from(n.slice((a-fp)*o,a*o));return t==="complex64"&&(v=Tp(v),w=Tp(w)),["["+v.map((E,T)=>_p(E,r[T],t)).join(", ")+", ..., "+w.map((E,T)=>_p(E,r[a-fp+T],t)).join(", ")+"]"]}return["["+(t==="complex64"?Tp(n):Array.from(n)).map((y,v)=>_p(y,r[v],t)).join(", ")+"]"]}const u=e.slice(1),h=s.slice(1),d=s[0]*o,p=[];if(a>qN){for(let b=0;b<fp;b++){const y=b*d,v=y+d;p.push(...V0(n.slice(y,v),u,t,h,r,!1))}p.push("...");for(let b=a-fp;b<a;b++){const y=b*d,v=y+d;p.push(...V0(n.slice(y,v),u,t,h,r,b===a-1))}}else for(let b=0;b<a;b++){const y=b*d,v=y+d;p.push(...V0(n.slice(y,v),u,t,h,r,b===a-1))}const m=l===2?",":"";p[0]="["+(a>0?p[0]+m:"");for(let b=1;b<p.length-1;b++)p[b]=" "+p[b]+m;let g=`,
`;for(let b=2;b<l;b++)g+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(i?"":g),p}function Tp(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Is{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=Me(e),s!=null){const r=s.length;z(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||fs(t,this.size),this.strides=Lt(e)}set(e,...t){t.length===0&&(t=[0]),z(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return To().makeTensor(this.values,this.shape,this.dtype)}}let To=null,Gh=null;function Bz(n){To=n}function Vz(n){Gh=n}class gn{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Me(e),this.strides=Lt(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Gh.buffer(this.shape,this.dtype,e)}bufferSync(){return Gh.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return zi(this.shape,e,this.dtype==="complex64")}arraySync(){return zi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=To().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Ya(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),To().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=To().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Ya(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await To().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),To().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Gh.print(this,e)}clone(){return this.throwIfDisposed(),Gh.clone(this)}toString(e=!1){const t=this.dataSync();return Uz(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Gh.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),To().makeVariable(this,e,t,s)}}Object.defineProperty(gn,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function Fe(){return PT("Tensor",()=>gn)}Fe();class Up extends gn{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!dn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);To().disposeTensor(this),this.dataId=e.dataId,To().incRef(this,null)}dispose(){To().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Up,Symbol.hasInstance,{value:n=>n instanceof gn&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qS;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(qS||(qS={}));var KS;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(KS||(KS={}));var YS;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(YS||(YS={}));var ZS;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(ZS||(ZS={}));var QS;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(QS||(QS={}));const Wz={float32:ZS,int32:KS,bool:YS,complex64:QS};function Qr(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return Wz[n][e]}function Xv(n){return Qr(n,"int32")}function mM(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function gM(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(n,e){if(n.dtype===e.dtype)return[n,e];const t=Qr(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function yM(n,e){z(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function Gz(n,e){return e.some(t=>t.id===n.id)}function LT(n){const e=[];return xM(n,e,new Set),e}function xM(n,e,t){if(n==null)return;if(n instanceof gn){e.push(n);return}if(!Hz(n))return;const s=n;for(const r in s){const i=s[r];t.has(i)||(t.add(i),xM(i,e,t))}}function Hz(n){return Array.isArray(n)||typeof n=="object"}const jz=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:yM,getTensorsInContainer:LT,isTensorInList:Gz,makeTypesMatch:as},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H1(n){return n.kernelName!=null}class KN{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class nd{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new KN}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Pi(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new $z(this.backendInstance),!0}setupRegisteredKernels(){hx(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){hx(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Lx)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(o=>r<this.pendingBackendInitId?!1:(this.registry[e]=o,this.pendingBackendInit=null,!0)).catch(o=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Pi(`Initialization of backend ${e} failed`),Pi(o.stack||o.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Pi(`Initialization of backend ${e} failed`),Pi(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,i=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,i,s.shape,s.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return nd.nextTensorId++}nextVariableId(){return nd.nextVariableId++}clone(e){const t=le.runKernel(Bd,{x:e}),s={x:e},r=o=>({x:()=>{const a="float32",l={x:o},u={dtype:a};return le.runKernel(Nd,l,u)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,i,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Lp(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let i=0;s.forEach(l=>{i+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-i-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),i=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const u=H1(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(H1(e)){const{kernelName:g,inputs:b,attrs:y}=e;this.backendName==null&&this.backend;const v=Lp(g,this.backendName);z(v!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),a=()=>{const w=this.backend.numDataIds();l=v.kernelFunc({inputs:b,attrs:y,backend:this.backend});const E=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,w,E);const T=E.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(r){const I=this.getTensorsForGradient(g,b,T);s=this.saveTensorsForBackwardMode(I)}return T}}else{const{forwardFunc:g}=e,b=y=>{r&&(s=y.map(v=>this.keep(this.clone(v))))};a=()=>{const y=this.backend.numDataIds();l=this.tidy(()=>g(this.backend,b));const v=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,v),v}}const{inputs:h,attrs:d}=e,p=H1(e)?null:e.backwardsFunc;let m;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(m=this.profiler.profileKernel(u,h,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),t=m.outputs)}),r&&this.addTapeNode(u,h,t,p,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(g=>h[g]!=null?h[g].shape:null),outputShapes:t.map(g=>g.shape),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=jS(e);if(r!=null){const i=r.inputsToSave||[],o=r.outputsToSave||[];let a;r.saveAllInputs?(z(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(u=>t[u])):a=i.map(u=>t[u]);const l=s.filter((u,h)=>o[h]);return a.concat(l)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=e;s==="string"&&na(e[0])&&(i=e.map(l=>oa(l)));const o=r.write(i,t,s),a=new gn(t,s,o,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(o),u=Jk(i);this.state.numBytes+=u-l.bytes,l.bytes=u}return a}makeTensorFromDataId(e,t,s,r){s=s||"float32";const i={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:i}=e,o=new gn(r,i,s,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const i=new Up(e,t,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Dp(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Up||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Dp(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,i,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:i},l=jS(e);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=u=>(u=u.map((h,d)=>{if(h==null){const p=s[d],m=cr(p.size,p.dtype);return this.makeTensor(m,p.shape,p.dtype)}return h}),r(u.length>1?u:u[0],i,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=LT(e),s=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const o=this.state.activeScope.track[i];!o.kept&&!s.has(o.id)&&o.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(e,t,s,r=!1){if(z(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));z(i instanceof gn,()=>"The result y returned by f() must be a tensor.");const o=Oz(this.state.activeTape,t,i);if(!r&&o.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[i.id]=s??Xz(i.shape),Lz(a,o,u=>this.tidy(u),qz);const l=t.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const h of u.saved)h.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(e){return z(tu(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{z(t.every(a=>a instanceof gn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((a,l)=>{r[l]=a});const i=(a,l)=>(s=e(...t,l),z(s.value instanceof gn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),z(tu(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),o=(a,l)=>{const u=s.gradFunc(a,l),h=Array.isArray(u)?u:[u];z(h.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),z(h.every(p=>p instanceof gn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return h.forEach((p,m)=>{d[m]=()=>p}),d};return this.runKernelFunc({forwardFunc:i,backwardsFunc:o,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Dr(),s=await this.backend.time(e);return s.wallMs=Dr()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new KN;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}nd.nextTensorId=0;nd.nextVariableId=0;function Xz(n){const e=zx(Me(n),"float32");return le.makeTensor(e,n,"float32")}function vM(){const n=rM();if(n._tfengine==null){const e=new sM(n);n._tfengine=new nd(e)}return pz(n._tfengine.ENV),Bz(()=>n._tfengine),n._tfengine}const le=vM();function qz(n,e){const t={a:n,b:e};return le.runKernel(Bc,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(){return typeof navigator<"u"&&navigator!=null}let JS;function Yz(n){JS=n}function UT(n){if(JS!==void 0)return JS;if(n||Kz()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function zT(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const Zz=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:zT,isMobile:UT,mockIsMobile:Yz},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr=_e();Jr.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Jr.registerFlag("IS_BROWSER",()=>zT());Jr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Jr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Jr.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Jr.registerFlag("PROD",()=>!1);Jr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Jr.getBool("DEBUG"));Jr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Jr.registerFlag("IS_TEST",()=>!1);Jr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Jr.getBool("DEBUG"));Jr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Jr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Jr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa(n,e){let t=n;if(qs(n))return e==="string"?[]:[n.length];if(mM(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(gM(n))return[n.buffer.size/(e==null?4:Dp(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||qs(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&_e().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&bM(n,s,[]),s}function bM(n,e,t){if(t=t||[],!Array.isArray(n)&&!qs(n)){z(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}z(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),z(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)bM(n[r],s,t.concat(r))}function YN(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function H(n,e,t,s="numeric"){if(n instanceof Fe())return YN(s,n.dtype,e,t),n;let r=Uc(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),YN(s,r,e,t),n==null||!qs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const i=fa(n,r);!qs(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?mu(n,r):da(n,[],!0);return le.makeTensor(a,i,r)}function zp(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,o)=>H(i,`${e}[${o}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BT="__op";function ue(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+BT;const r=(...i)=>{le.startScope(t);try{const o=s(...i);return nu(o)&&console.error("Cannot return a Promise inside of tidy."),le.endScope(o),o}catch(o){throw le.endScope(null),o}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n,e){const t=H(n,"real","complex"),s=H(e,"imag","complex");hr(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return le.runKernel(Xx,r)}const Za=ue({complex_:Qz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gu(n,e,t,s){if(s==null)s=Uc(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(gM(n)||mM(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return le.backend.createTensorFromGPUData(n,e||t,s)}if(!qs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Ei(e);const r=Me(e),i=Me(t);z(r===i,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${i}`);for(let o=0;o<t.length;++o){const a=t[o],l=o===t.length-1?a!==Me(e.slice(o)):!0;z(t[o]===e[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!qs(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?mu(n,s):da(n,[],!0),le.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bi(n,e,t){const s=fa(n,t);return gu(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _c={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Oo{static join(e){return new Oo(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>qs(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=t+r.byteLength;this.shards.push({buffer:r,start:t,end:i}),t=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,i=new ArrayBuffer(r),o=new Uint8Array(i);let a=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],d=e+a-u.start,p=a,g=Math.min(t,u.end)-u.start,b=new Uint8Array(u.buffer,d,g-d);if(o.set(b,p),a+=b.length,t<u.end)break}return i}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=Jz(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function Jz(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,i=e(n[r]);if(i===0)return r;i<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(){_e().set("PROD",!0)}function tB(){_e().set("DEBUG",!0)}function nB(){_e().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function sB(n){_e().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function rB(){le.disposeVariables()}function Fi(){return le}function e_(){return le.memory()}function iB(n){return le.profile(n)}function xe(n,e){return le.tidy(n,e)}function on(n){LT(n).forEach(t=>t.dispose())}function Ds(n){return le.keep(n)}function oB(n){return le.time(n)}function wM(n){return le.setBackend(n)}function SM(){return le.ready()}function VT(){return le.backendName}function aB(n){le.removeBackend(n)}function lB(n){return le.findBackend(n)}function uB(n){return le.findBackendFactory(n)}function WT(n,e,t=1){return le.registerBackend(n,e,t)}function qv(){return le.backend}function cB(n,e){_e().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const su=4;async function t_(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<r.length;++o){const a=r[o],l=Array.isArray(n)?n[o].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const h=new Promise(async d=>{const p=await l.bytes(),m=p.reduce((y,v)=>y+v.length,0)+su*p.length,g=new Uint8Array(m);let b=0;for(let y=0;y<p.length;y++){const v=p[y],w=new Uint8Array(new Uint32Array([v.length]).buffer);g.set(w,b),b+=su,g.set(v,b),b+=v.length}d(g)});s.push(h)}else s.push(l.data());e!=null&&(u.group=e),t.push(u)}const i=await Promise.all(s);return{data:fB(i),specs:t}}function _M(n,e){const t=new Oo(n),s={};let r=0;for(const i of e){const o=hB(i,(a,l)=>t.slice(r+a,r+l));s[i.name]=TM(i,t.slice(r,r+o)),r+=o}return s}function hB(n,e){const t=Me(n.shape);let s;if("quantization"in n){const r=n.quantization;s=_c[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<t;i++)r+=su+new Uint32Array(e(r,r+su))[0];return r}else s=_c[n.dtype];return t*s}async function dB(n,e){const t=Me(n.shape);let s;if("quantization"in n){const r=n.quantization;s=_c[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<t;i++)r+=su+new Uint32Array(await e(r,r+su))[0];return r}else s=_c[n.dtype];return t*s}function TM(n,e){const t=n.name,s=n.dtype,r=n.shape,i=Me(r);let o,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=_c[l.dtype],h=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){o=new Float32Array(h.length);for(let d=0;d<h.length;d++){const p=h[d];o[d]=p*l.scale+l.min}}else if(l.dtype==="float16")o=vB()(h);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);o=new Int32Array(h.length);for(let d=0;d<h.length;d++){const p=h[d];o[d]=Math.round(p*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=i*u}else if(s==="string"){const l=Me(n.shape);o=[];for(let u=0;u<l;u++){const h=new Uint32Array(e.slice(a,a+su))[0];a+=su;const d=new Uint8Array(e.slice(a,a+h));o.push(d),a+=h}}else{const l=_c[s];if(s==="float32")o=new Float32Array(e);else if(s==="int32")o=new Int32Array(e);else if(s==="bool")o=new Uint8Array(e);else if(s==="complex64"){o=new Float32Array(e);const u=new Float32Array(o.length/2),h=new Float32Array(o.length/2);for(let g=0;g<u.length;g++)u[g]=o[g*2],h[g]=o[g*2+1];const d=Bi(u,r,"float32"),p=Bi(h,r,"float32"),m=Za(d,p);return d.dispose(),p.dispose(),m}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=i*l}return Bi(o,r,s)}async function ZN(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:i}=await n.read();if(r&&i==null){const a=t-s.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const o=new Uint8Array(s.length+i.byteLength);o.set(s,0),o.set(new Uint8Array(i),s.length),s=o}return s.buffer}async function EM(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const i of e){const o=await dB(i,async(u,h)=>(r=await ZN(s,r,h),r.slice(u,h)));r=await ZN(s,r,o);const a=r.slice(0,o);r=r.slice(o);const l=TM(i,a);if(t[i.name]=l,VT()==="webgpu"){const u=qv();"uploadToGPU"in u&&Me(l.shape)>=_e().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return t}function fB(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const GT=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function QN(n){return GT?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function pB(n){if(GT)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function mB(n){if(GT){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function CM(n){return Oo.join(n)}function JN(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function IM(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function NM(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function HT(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),NM(n,t,s)}function ig(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:QN(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:QN(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Oo(n.weightData).byteLength}}function n_(n){const e=[];for(const t of n)e.push(...t.weights);return e}function gB(){const n=t=>{let s=t<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function yB(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function xB(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function vB(){const n=gB(),e=yB(),t=xB();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let o=0;o<s.length;o++){const a=s[o],l=n[t[a>>10]+(a&1023)]+e[a>>10];i[o]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return rs.instance==null&&(rs.instance=new rs),rs.instance}static registerSaveRouter(e){rs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){rs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return rs.getHandlers(e,"save")}static getLoadHandlers(e,t){return rs.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?rs.getInstance().loadRouters:rs.getInstance().saveRouters).forEach(o=>{const a=o(e,s);a!==null&&r.push(a)}),r}}const bB=n=>rs.registerSaveRouter(n),wB=n=>rs.registerLoadRouter(n),AM=n=>rs.getSaveHandlers(n),SB=(n,e)=>rs.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s_="tensorflowjs",r_=1,hc="models_store",jl="model_info_store";function RM(){if(!_e().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function i_(n){const e=n.result;e.createObjectStore(hc,{keyPath:"modelPath"}),e.createObjectStore(jl,{keyPath:"modelPath"})}class Tc{constructor(e){if(this.indexedDB=RM(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const i=this.indexedDB.open(s_,r_);i.onupgradeneeded=()=>i_(i),i.onsuccess=()=>{const o=i.result;if(t==null){const a=o.transaction(hc,"readonly"),u=a.objectStore(hc).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=h=>(o.close(),r(u.error)),a.oncomplete=()=>o.close()}else{t.weightData=Oo.join(t.weightData);const a=ig(t),l=o.transaction(jl,"readwrite");let u=l.objectStore(jl),h;try{h=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(p){return r(p)}let d;h.onsuccess=()=>{d=o.transaction(hc,"readwrite");const p=d.objectStore(hc);let m;try{m=p.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(g){return r(g)}m.onsuccess=()=>s({modelArtifactsInfo:a}),m.onerror=g=>{u=l.objectStore(jl);const b=u.delete(this.modelPath);b.onsuccess=()=>(o.close(),r(m.error)),b.onerror=y=>(o.close(),r(m.error))}},h.onerror=p=>(o.close(),r(h.error)),l.oncomplete=()=>{d==null?o.close():d.oncomplete=()=>o.close()}}},i.onerror=o=>r(i.error)})}}Tc.URL_SCHEME="indexeddb://";const kM=n=>_e().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Tc.URL_SCHEME)?_B(n.slice(Tc.URL_SCHEME.length)):null;rs.registerSaveRouter(kM);rs.registerLoadRouter(kM);function _B(n){return new Tc(n)}function TB(n){return n.startsWith(Tc.URL_SCHEME)?n.slice(Tc.URL_SCHEME.length):n}class EB{constructor(){this.indexedDB=RM()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(s_,r_);s.onupgradeneeded=()=>i_(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(jl,"readonly"),a=i.objectStore(jl).getAll();a.onsuccess=()=>{const l={};for(const u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(r.close(),t(a.error)),i.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=TB(e),new Promise((t,s)=>{const r=this.indexedDB.open(s_,r_);r.onupgradeneeded=()=>i_(r),r.onsuccess=()=>{const i=r.result,o=i.transaction(jl,"readwrite"),a=o.objectStore(jl),l=a.get(e);let u;l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const h=a.delete(e),d=()=>{u=i.transaction(hc,"readwrite");const m=u.objectStore(hc).delete(e);m.onsuccess=()=>t(l.result.modelArtifactsInfo),m.onerror=g=>s(l.error)};h.onsuccess=d,h.onerror=p=>(d(),i.close(),s(l.error))}},l.onerror=h=>(i.close(),s(l.error)),o.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ga="/",Hh="tensorflowjs_models",MM="info",CB="model_topology",IB="weight_specs",NB="weight_data",AB="model_metadata";function DM(n){return{info:[Hh,n,MM].join(Ga),topology:[Hh,n,CB].join(Ga),weightSpecs:[Hh,n,IB].join(Ga),weightData:[Hh,n,NB].join(Ga),modelMetadata:[Hh,n,AB].join(Ga)}}function $M(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function RB(n){const e=n.split(Ga);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Ga)}function kB(n){return n.startsWith(Ec.URL_SCHEME)?n.slice(Ec.URL_SCHEME.length):n}class Ec{constructor(e){if(!_e().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=DM(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=ig(e),i=Oo.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,pB(i));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw $M(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const a=JSON.parse(i);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=mB(o),t}}Ec.URL_SCHEME="localstorage://";const FM=n=>_e().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ec.URL_SCHEME)?MB(n.slice(Ec.URL_SCHEME.length)):null;rs.registerSaveRouter(FM);rs.registerLoadRouter(FM);function MB(n){return new Ec(n)}class DB{constructor(){z(_e().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),z(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Hh+Ga,s=Ga+MM;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(t)&&i.endsWith(s)){const o=RB(i);e[o]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=kB(e);const t=DM(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return $M(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qh="://";class $r{constructor(){this.managers={}}static getInstance(){return $r.instance==null&&($r.instance=new $r),$r.instance}static registerManager(e,t){z(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(qh)&&(e=e.slice(0,e.indexOf(qh))),z(e.length>0,()=>"scheme must not be an empty string.");const s=$r.getInstance();z(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=$r.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys($r.getInstance().managers)}}function W0(n){if(n.indexOf(qh)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${$r.getSchemes().join(",")}`);return{scheme:n.split(qh)[0],path:n.split(qh)[1]}}async function PM(n,e,t=!1){z(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=rs.getLoadHandlers(n);z(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),z(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],i=rs.getSaveHandlers(e);z(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),z(i.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const o=i[0],a=W0(n).scheme,l=W0(n).path,u=a===W0(n).scheme,h=await r.load();t&&u&&await $r.getManager(a).removeModel(l);const d=await o.save(h);return t&&!u&&await $r.getManager(a).removeModel(l),d.modelArtifactsInfo}async function $B(){const n=$r.getSchemes(),e={};for(const t of n){const s=await $r.getManager(t).listModels();for(const r in s){const i=t+qh+r;e[i]=s[r]}}return e}async function FB(n){const e=W0(n);return $r.getManager(e.scheme).removeModel(e.path)}async function PB(n,e){return PM(n,e,!1)}async function OB(n,e){return PM(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LB{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!_e().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return lM(e)}}if(_e().get("IS_BROWSER")){_e().setPlatform("browser",new LB);try{$r.registerManager(Ec.URL_SCHEME,new DB)}catch{}try{$r.registerManager(Tc.URL_SCHEME,new EB)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UB={importFetch:()=>require("node-fetch")};let j1;class zB{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return _e().global.fetch!=null?_e().global.fetch(e,t):(j1==null&&(j1=UB.importFetch()),j1(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}_e().get("IS_NODE")&&!_e().get("IS_BROWSER")&&_e().setPlatform("node",new zB);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(n,e="float32",t){return e=e||"float32",Ei(n),new Is(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n,e){const t=H(n,"x","cast");if(!Qk(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return le.runKernel(Nd,s,r)}const Ze=ue({cast_:BB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n){const t={x:H(n,"x","clone","string_or_numeric")};return le.runKernel(Bd,t)}const aa=ue({clone_:VB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */vM();const WB={buffer:tn,cast:Ze,clone:aa,print:jT};Vz(WB);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n,e){let t=H(n,"a","add"),s=H(e,"b","add");[t,s]=as(t,s);const r={a:t,b:s};return le.runKernel(Bc,r)}const Ve=ue({add_:GB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n,e){let t=H(n,"a","floorDiv"),s=H(e,"b","floorDiv");[t,s]=as(t,s);const r={a:t,b:s};return le.runKernel(Ud,r)}const Kv=ue({floorDiv_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n,e){let t=H(n,"a","div"),s=H(e,"b","div");if([t,s]=as(t,s),t.dtype==="int32"&&s.dtype==="int32")return Kv(t,s);const r={a:t,b:s},i={};return le.runKernel(Dd,r,i)}const Nt=ue({div_:jB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n,e){let t=H(n,"a","mul"),s=H(e,"b","mul");[t,s]=as(t,s);const r={a:t,b:s};return le.runKernel(Yd,r)}const ce=ue({mul_:XB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n){const e=H(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return le.runKernel(cm,t)}else{const t={x:e};return le.runKernel(tm,t)}}const Es=ue({abs_:qB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n){const t={x:H(n,"x","acos")};return le.runKernel(wd,t)}const XT=ue({acos_:KB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const t={x:H(n,"x","acosh")};return le.runKernel(Sd,t)}const qT=ue({acosh_:YB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n){z(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),z(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,i)=>H(r,`tensors${i}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!dn(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return le.runKernel(nm,s)}const OM=ue({addN_:ZB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n,e=null,t=!1){const r={x:H(n,"x","all","bool")},i={axis:e,keepDims:t};return le.runKernel(Bx,r,i)}const Yv=ue({all_:QB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n,e=null,t=!1){const r={x:H(n,"x","any","bool")},i={axis:e,keepDims:t};return le.runKernel(Vx,r,i)}const Bp=ue({any_:JB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n,e=0){const s={x:H(n,"x","argMax")},r={axis:e};return le.runKernel(sm,s,r)}const ru=ue({argMax_:e4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n,e=0){const s={x:H(n,"x","argMin")},r={axis:e};return le.runKernel(rm,s,r)}const KT=ue({argMin_:t4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n){const t={x:H(n,"x","asin")};return le.runKernel(_d,t)}const YT=ue({asin_:n4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n){const t={x:H(n,"x","asinh")};return le.runKernel(Td,t)}const ZT=ue({asinh_:s4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n){const t={x:H(n,"x","atan")};return le.runKernel(Ed,t)}const QT=ue({atan_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n,e){let t=H(n,"a","atan2"),s=H(e,"b","atan2");[t,s]=as(t,s);const r={a:t,b:s};return le.runKernel(Id,r)}const JT=ue({atan2_:i4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n){const t={x:H(n,"x","atanh")};return le.runKernel(Cd,t)}const eE=ue({atanh_:o4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function og(n,e,t,s,r="NHWC",i){const o=n[3],a=[...e,o],l=ol(r);return er(n,a,t,i,s,null,null,l)}function lo(n,e,t,s,r,i,o="channelsLast"){const[a,l]=Vp(e);let u;if(o==="channelsLast")u=[a,l,n[3],n[3]];else if(o==="channelsFirst")u=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return er(n,u,t,s,r,i,!1,o)}function il(n,e,t,s,r,i,o="NDHWC"){const[a,l,u]=o_(e);let h,d;if(o==="NDHWC")d="channelsLast",h=[a,l,u,n[4],n[4]];else if(o==="NCDHW")d="channelsFirst",h=[a,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return yu(n,h,t,s,r,!1,d,i)}function er(n,e,t,s,r,i,o=!1,a="channelsLast"){let[l,u,h,d]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,h,d]=n;else if(a==="channelsFirst")[l,d,u,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,m,,g]=e,[b,y]=Vp(t),[v,w]=Vp(s),E=Kh(p,v),T=Kh(m,w),{padInfo:I,outHeight:M,outWidth:$}=u4(r,u,h,b,y,E,T,i,a),O=o?g*d:g;let k;return a==="channelsFirst"?k=[l,O,M,$]:a==="channelsLast"&&(k=[l,M,$,O]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:h,inChannels:d,outHeight:M,outWidth:$,outChannels:O,padInfo:I,strideHeight:b,strideWidth:y,filterHeight:p,filterWidth:m,effectiveFilterHeight:E,effectiveFilterWidth:T,dilationHeight:v,dilationWidth:w,inShape:n,outShape:k,filterShape:e}}function yu(n,e,t,s,r,i=!1,o="channelsLast",a){let[l,u,h,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,u,h,d,p]=n;else if(o==="channelsFirst")[l,p,u,h,d]=n;else throw new Error(`Unknown dataFormat ${o}`);const[m,g,b,,y]=e,[v,w,E]=o_(t),[T,I,M]=o_(s),$=Kh(m,T),O=Kh(g,I),k=Kh(b,M),{padInfo:N,outDepth:A,outHeight:B,outWidth:W}=c4(r,u,h,d,v,w,E,$,O,k,a),K=i?y*p:y;let q;return o==="channelsFirst"?q=[l,K,A,B,W]:o==="channelsLast"&&(q=[l,A,B,W,K]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:h,inWidth:d,inChannels:p,outDepth:A,outHeight:B,outWidth:W,outChannels:K,padInfo:N,strideDepth:v,strideHeight:w,strideWidth:E,filterDepth:m,filterHeight:g,filterWidth:b,effectiveFilterDepth:$,effectiveFilterHeight:O,effectiveFilterWidth:k,dilationDepth:T,dilationHeight:I,dilationWidth:M,inShape:n,outShape:q,filterShape:e}}function a4(n,e,t,s,r){s==null&&(s=tE(n,e,t));const i=n[0],o=n[1],a=Wp((i-e+2*s)/t+1,r),l=Wp((o-e+2*s)/t+1,r);return[a,l]}function l4(n,e,t,s,r,i){r==null&&(r=tE(n,e[0],s[0]));const o=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*r>=e[a]&&(o[a]=Wp((n[a]-e[a]+2*r)/s[a]+1,i));return o}function tE(n,e,t,s=1){const r=Kh(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function Vp(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function o_(n){return typeof n=="number"?[n,n,n]:n}function Kh(n,e){return e<=1?n:n+(n-1)*(e-1)}function u4(n,e,t,s,r,i,o,a,l){let u,h,d;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const m=a4([e,t],i,s,n,a);h=m[0],d=m[1]}else if(n==="same"){h=Math.ceil(e/s),d=Math.ceil(t/r);const p=Math.max(0,(h-1)*s+i-e),m=Math.max(0,(d-1)*r+o-t),g=Math.floor(p/2),b=p-g,y=Math.floor(m/2),v=m-y;u={top:g,bottom:b,left:y,right:v,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/s),d=Math.ceil((t-o+1)/r);else if(typeof n=="object"){const p=l==="channelsLast"?n[1][0]:n[2][0],m=l==="channelsLast"?n[1][1]:n[2][1],g=l==="channelsLast"?n[2][0]:n[3][0],b=l==="channelsLast"?n[2][1]:n[3][1];u={top:p,bottom:m,left:g,right:b,type:p===0&&m===0&&g===0&&b===0?"VALID":"EXPLICIT"},h=Wp((e-i+p+m)/s+1,a),d=Wp((t-o+g+b)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:h,outWidth:d}}function c4(n,e,t,s,r,i,o,a,l,u,h){let d,p,m,g;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const y=l4([e,t,s,1],[a,l,u],1,[r,i,o],n,h);p=y[0],m=y[1],g=y[2]}else if(n==="same"){p=Math.ceil(e/r),m=Math.ceil(t/i),g=Math.ceil(s/o);const b=(p-1)*r+a-e,y=(m-1)*i+l-t,v=(g-1)*o+u-s,w=Math.floor(b/2),E=b-w,T=Math.floor(y/2),I=y-T,M=Math.floor(v/2),$=v-M;d={top:T,bottom:I,left:M,right:$,front:w,back:E,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:p,outHeight:m,outWidth:g}}function Wp(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function iu(n){const[e,t,s]=Vp(n);return e===1&&t===1&&s===1}function dr(n,e){return iu(n)||iu(e)}function Cc(n){return Vp(n).every(e=>e>0)}function ol(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Vr(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")z(Sc(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{z(Sc(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n,e){const s={x:H(n,"x","reshape","string_or_numeric")},r={shape:e};return le.runKernel(Gm,s,r)}const he=ue({reshape_:h4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n,e,t,s,r){const i=H(n,"x","avgPool","float32"),o=1;z(dr(t,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=he(i,[1,i.shape[0],i.shape[1],i.shape[2]])),z(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Vr("avgPool",s,r);const u={x:a},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let d=le.runKernel(im,u,h);return d=Ze(d,i.dtype),l?he(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const ag=ue({avgPool_:d4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n,e,t,s,r,i="NDHWC"){const o=H(n,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=he(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),z(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),z(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Vr("avgPool3d",s,r);const u={x:a},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:i};let d=le.runKernel(om,u,h);return d=Ze(d,a.dtype),l?he(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const nE=ue({avgPool3d_:f4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n,e=0){z(n.length>=1,()=>"Pass at least one tensor to concat");const t=zp(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return aa(t[0]);const s=t,r={axis:e};return le.runKernel(hm,s,r)}const ys=ue({concat_:p4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n,e,t=!1,s=!1){let r=H(n,"a","matMul"),i=H(e,"b","matMul");[r,i]=as(r,i);const o={a:r,b:i},a={transposeA:t,transposeB:s};return le.runKernel(am,o,a)}const en=ue({matMul_:m4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(n){const t={x:H(n,"x","sigmoid","float32")};return le.runKernel(lf,t)}const yi=ue({sigmoid_:g4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n,e,t){const s=H(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:t};return le.runKernel(Km,r,i)}const mn=ue({slice_:y4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n){const t={x:H(n,"x","tanh","float32")};return le.runKernel(pf,t)}const ou=ue({tanh_:x4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,e,t,s,r,i){const o=H(n,"forgetBias","basicLSTMCell"),a=H(e,"lstmKernel","basicLSTMCell"),l=H(t,"lstmBias","basicLSTMCell"),u=H(s,"data","basicLSTMCell"),h=H(r,"c","basicLSTMCell"),d=H(i,"h","basicLSTMCell"),p=ys([u,d],1),m=en(p,a),g=Ve(m,l),b=g.shape[0],y=g.shape[1]/4,v=[b,y],w=mn(g,[0,0],v),E=mn(g,[0,y],v),T=mn(g,[0,y*2],v),I=mn(g,[0,y*3],v),M=Ve(ce(yi(w),ou(E)),ce(h,yi(Ve(o,T)))),$=ce(ou(M),yi(I));return[M,$]}const LM=ue({basicLSTMCell_:v4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,e,t){const s=H(n,"x","batchToSpaceND"),r=e.reduce((a,l)=>a*l);z(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),z(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),z(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const i={x:s},o={blockShape:e,crops:t};return le.runKernel(lm,i,o)}const lg=ue({batchToSpaceND_:b4});function w4(n){let e;return n.rank===0||n.rank===1?e=he(n,[1,1,1,n.size]):n.rank===2?e=he(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=he(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,e,t,s,r,i){i==null&&(i=.001);const o=H(n,"x","batchNorm"),a=H(e,"mean","batchNorm"),l=H(t,"variance","batchNorm");let u;r!=null&&(u=H(r,"scale","batchNorm"));let h;s!=null&&(h=H(s,"offset","batchNorm")),z(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(h==null||a.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p={x:w4(o),scale:u,offset:h,mean:a,variance:l},m={varianceEpsilon:i},g=le.runKernel(bm,p,m);return he(g,o.shape)}const yf=ue({batchNorm_:S4});function _4(n,e,t,s,r,i){const o=H(n,"x","batchNorm"),a=H(e,"mean","batchNorm"),l=H(t,"variance","batchNorm");let u;r!=null&&(u=H(r,"scale","batchNorm"));let h;return s!=null&&(h=H(s,"offset","batchNorm")),z(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),z(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),z(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&z(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),h!=null&&z(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),yf(o,a,l,h,u,i)}const sE=ue({batchNorm2d_:_4});function T4(n,e,t,s,r,i){const o=H(n,"x","batchNorm"),a=H(e,"mean","batchNorm"),l=H(t,"variance","batchNorm");let u;r!=null&&(u=H(r,"scale","batchNorm"));let h;return s!=null&&(h=H(s,"offset","batchNorm")),z(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),z(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),z(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&z(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),h!=null&&z(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),yf(o,a,l,h,u,i)}const rE=ue({batchNorm3d_:T4});function E4(n,e,t,s,r,i){const o=H(n,"x","batchNorm"),a=H(e,"mean","batchNorm"),l=H(t,"variance","batchNorm");let u;r!=null&&(u=H(r,"scale","batchNorm"));let h;return s!=null&&(h=H(s,"offset","batchNorm")),z(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),z(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),z(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&z(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),h!=null&&z(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),yf(o,a,l,h,u,i)}const iE=ue({batchNorm4d_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n,e,t){const s=H(n,"x","bincount"),r=H(e,"weights","bincount");z(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),z(t>=0,()=>`size must be non-negative, but got ${t}.`),z(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const i={x:s,weights:r},o={size:t};return le.runKernel(Hx,i,o)}const oE=ue({bincount_:C4});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n,e){const t=H(n,"x","bitwiseAnd"),s=H(e,"y","bitwiseAnd");if(!dn(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return le.runKernel(um,r)}const UM=ue({bitwiseAnd_:I4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n,e){const t=H(n,"s0","broadcastArgs","int32"),s=H(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return le.runKernel(jx,r)}const zM=ue({broadcastArgs_:N4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n,e){let t=H(n,"broadcastTo","x");const s=t.shape;if(Ei(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=he(t,u)}const r=t.shape,i=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])i[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(i.map((u,h)=>u>1?h:-1).filter(u=>u>=0).length===0)return aa(t);const a={x:t},l={reps:i};return le.runKernel(mf,a,l)}const yc=ue({broadcastTo_:A4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(n){const t={x:H(n,"x","ceil","float32")};return le.runKernel(Ad,t)}const aE=ue({ceil_:R4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(n,e,t){Ei(n),t=t||Uc(e);const s={shape:n,value:e,dtype:t};return le.runKernel(lv,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(n,e,t){const s=H(n,"x","clipByValue");if(z(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Vc(s.shape,e,s.dtype);const r={x:s},i={clipValueMin:e,clipValueMax:t};return le.runKernel(Rd,r,i)}const ei=ue({clipByValue_:k4});function M4(n){return ys(n,0)}const lE=ue({concat1d_:M4});function D4(n,e){return ys(n,e)}const uE=ue({concat2d_:D4});function $4(n,e){return ys(n,e)}const cE=ue({concat3d_:$4});function F4(n,e){return ys(n,e)}const hE=ue({concat4d_:F4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n,e,t,s,r="NHWC",i=[1,1],o){const a=H(n,"x","conv2d","float32"),l=H(e,"filter","conv2d","float32");let u=a,h=!1;a.rank===3&&(h=!0,u=he(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),z(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Vr("conv2d",s,o);const d=r==="NHWC"?u.shape[3]:u.shape[1];z(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),z(dr(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),z(Cc(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),z(Cc(t),()=>"Error in conv2D: Strides should be larger than 0.");const p={x:u,filter:l},m={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},g=le.runKernel(dm,p,m);return h?he(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Qa=ue({conv2d_:P4});function O4(n,e,t,s,r="NWC",i=1,o){const a=H(n,"x","conv1d"),l=H(e,"filter","conv1d");let u=a,h=!1;a.rank===2&&(h=!0,u=he(a,[1,a.shape[0],a.shape[1]])),z(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),z(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Vr("conv1d",s,o),z(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),z(dr(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),z(Cc(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),z(Cc(t),()=>"Error in conv1D: Stride should be larger than 0."),z(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=he(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=he(u,[u.shape[0],1,u.shape[1],u.shape[2]]),y=Qa(p,d,[1,t],s,"NHWC",[1,i],o);return h?he(y,[y.shape[2],y.shape[3]]):he(y,[y.shape[0],y.shape[2],y.shape[3]])}const Zv=ue({conv1d_:O4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(n,e,t,s,r,i="NHWC",o){z(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,u=!1;e.rank===3&&(u=!0,l=he(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),z(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),z(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),z(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const h=i==="NHWC"?a[3]:a[1],d=i==="NHWC"?l.shape[3]:l.shape[1];z(h===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${t.shape[2]}.`),z(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),Vr("conv2dDerInput",r,o);const p={dy:l,filter:t},m={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,inputShape:a},g=le.runKernel(fm,p,m);return u?he(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const dE=ue({conv2DBackpropInput_:L4});function U4(n,e,t,s,r,i){const o=H(n,"x","conv2dTranspose"),a=H(e,"filter","conv2dTranspose");return dE(t,o,a,s,r,"NHWC",i)}const Qv=ue({conv2dTranspose_:U4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(n,e,t,s,r="NDHWC",i=[1,1,1]){const o=H(n,"x","conv3d"),a=H(e,"filter","conv3d");let l=o,u=!1;o.rank===4&&(u=!0,l=he(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),z(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),z(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),z(dr(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),z(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),z(Cc(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),z(Cc(t),()=>"Error in conv3D: Strides should be larger than 0.");const h={x:l,filter:a},d={strides:t,pad:s,dataFormat:r,dilations:i},p=le.runKernel(pm,h,d);return u?he(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const fE=ue({conv3d_:z4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n,e,t,s,r){z(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,o=e,a=!1;e.rank===4&&(a=!0,o=he(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],u=o.shape[4];z(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),z(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),z(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),z(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),z(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const h={dy:o,filter:t},d={pad:r,strides:s,inputShape:i},p=le.runKernel(Yx,h,d);return a?he(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const BM=ue({conv3DBackpropInput_:B4});function V4(n,e,t,s,r){const i=H(n,"x","conv3dTranspose"),o=H(e,"filter","conv3dTranspose");return BM(t,i,o,s,r)}const pE=ue({conv3dTranspose_:V4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(n){const t={x:H(n,"x","cos","float32")};return le.runKernel(kd,t)}const ug=ue({cos_:W4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n){const t={x:H(n,"x","cosh","float32")};return le.runKernel(Md,t)}const Jv=ue({cosh_:G4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H4(n,e=0,t=!1,s=!1){const i={x:H(n,"x","cumprod")},o={axis:e,exclusive:t,reverse:s};return le.runKernel(Zx,i,o)}const Gp=ue({cumprod_:H4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(n,e=0,t=!1,s=!1){const i={x:H(n,"x","cumsum")},o={axis:e,exclusive:t,reverse:s};return le.runKernel(mm,i,o)}const eb=ue({cumsum_:j4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n,e,t,s=!1){const r=H(n,"x","denseBincount"),i=H(e,"weights","denseBincount");z(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),z(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),z(t>=0,()=>`size must be non-negative, but got ${t}.`),z(i.size===r.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);const o={x:r,weights:i},a={size:t,binaryOutput:s};return le.runKernel(Jx,o,a)}const dx=ue({denseBincount_:X4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(n,e,t="NHWC"){const s=H(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],i=t==="NHWC"?s.shape[2]:s.shape[3],o=t==="NHWC"?s.shape[3]:s.shape[1];z(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),z(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),z(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${s.shape}`),z(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return le.runKernel(ev,a,l)}const mE=ue({depthToSpace_:q4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(n,e,t,s,r="NHWC",i=[1,1],o){const a=H(n,"x","depthwiseConv2d","float32"),l=H(e,"filter","depthwiseConv2d","float32");let u=a,h=!1;a.rank===3&&(h=!0,u=he(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),z(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const d=r==="NHWC"?u.shape[3]:u.shape[1];z(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),Vr("depthwiseConv2d",s,o);const p={x:u,filter:l},m={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},g=le.runKernel(gm,p,m);return h?he(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const xf=ue({depthwiseConv2d_:K4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n){const t={x:H(n,"x","diag")};return le.runKernel(sv,t)}const VM=ue({diag_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n,e,t,s,r=[1,1],i="NHWC"){const o=H(n,"x","dilation2d"),a=H(e,"filter","dilation2d");z(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),z(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),z(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=o,u=!1;o.rank===3&&(l=he(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0),z(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const h={x:l,filter:a},d={strides:t,pad:s,dilations:r},p=le.runKernel(ym,h,d);return u?he(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const gE=ue({dilation2d_:Z4});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ic(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const i=t-1-r,o=n[i]||1;(e[e.length-1-r]||1)>1&&o===1&&s.unshift(i)}return s}function Ns(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],i=e.length-s-1,o=e[i];(r==null||r===1&&o>1)&&t.unshift(i)}return t}function Yt(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let i=n[n.length-r-1];i==null&&(i=1);let o=e[e.length-r-1];if(o==null&&(o=1),i===1)s[t-r-1]=o;else if(o===1)s[t-r-1]=i;else if(i!==o){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-r-1]=i}return s}const Q4=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Yt,getBroadcastDims:Ic,getReductionAxes:Ns},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n,e){let t=H(n,"a","equal","string_or_numeric"),s=H(e,"b","equal","string_or_numeric");[t,s]=as(t,s),Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(xm,r)}const bi=ue({equal_:J4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n,e,t){const s=H(e,"a","where"),r=H(t,"b","where"),i=H(n,"condition","where","bool"),o=Yt(Yt(i.shape,s.shape),r.shape),a=yc(i,o),l=yc(s,o),u=yc(r,o),h={condition:a,t:l,e:u};return le.runKernel(qm,h)}const ur=ue({where_:eV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n){const t={x:H(n,"x","zerosLike")};return le.runKernel(sg,t)}const vn=ue({zerosLike_:tV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(n,e){let t=H(n,"a","div"),s=H(e,"b","div");[t,s]=as(t,s);const r=Nt(t,s),i=vn(r),o=bi(s,i);return ur(o,i,r)}const yE=ue({divNoNan_:nV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(n,e){const t=H(n,"t1","dot"),s=H(e,"t2","dot");z((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],i=s.rank===1?s.size:s.shape[0];if(z(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),t.rank===1&&s.rank===1){const o=he(t,[1,-1]),a=he(s,[-1,1]),l=en(o,a);return he(l,[])}else if(t.rank===1&&s.rank===2){const o=he(t,[1,-1]),a=he(s,[s.shape[0],s.shape[1]]),l=en(o,a);return he(l,[l.size])}else if(t.rank===2&&s.rank===1){const o=he(s,[-1,1]),a=en(t,o);return he(a,[a.size])}else{const o=he(s,[s.shape[0],s.shape[1]]);return en(t,o)}}const xE=ue({dot_:sV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(n,...e){const t=e.map((r,i)=>H(r,`tensors${i}`,"einsum")),s={equation:n};return le.runKernel(iv,t,s)}const ic=ue({einsum_:rV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const t={x:H(n,"x","elu","float32")};return le.runKernel($d,t)}const vf=ue({elu_:iV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(n,e){const t=H(n,"x","ensureShape","string_or_numeric");if(!Yk(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const WM=ue({ensureShape_:oV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){let e=H(n,"x","erf");z(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Ze(e,"float32"));const t={x:e};return le.runKernel(Fd,t)}const tb=ue({erf_:aV});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function GM(n,e,t){const s=n.length+e.length,r=[];let i=0,o=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?r.push(n[i++]):r.push(e[o++]);return r}function tr(n,e){const t=[],s=n.length;for(let i=0;i<s;i++)e.indexOf(i)===-1&&t.push(n[i]);const r=e.map(i=>n[i]);return[t,r]}function vs(n,e){const t=e.map(s=>1);return GM(n,t,e)}function fr(n,e,t){z(vE(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function ls(n,e){if(vE(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function xu(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function bs(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(n,e=null,t=!1){const r={x:H(n,"x","max")},i={reductionIndices:e,keepDims:t};return le.runKernel(Rm,r,i)}const Vi=ue({max_:lV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n,e=null,t=!1){const r={x:H(n,"x","min")},i={axis:e,keepDims:t};return le.runKernel($m,r,i)}const sd=ue({min_:uV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n,e){let t=H(n,"base","pow"),s=H(e,"exp","pow");[t,s]=as(t,s);const r={a:t,b:s};return le.runKernel(Zd,r)}const pa=ue({pow_:cV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kt(n,e){if((qs(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&qs(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return gu(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n){const t={x:H(n,"x","sqrt","float32")};return le.runKernel(cf,t)}const Zs=ue({sqrt_:hV});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const e=H(n,"x","square"),t={};return le.runKernel("Square",{x:e},t)}const zn=ue({square_:dV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n,e=null,t=!1){let s=H(n,"x","sum");s.dtype==="bool"&&(s=Ze(s,"int32"));const r={x:s},i={axis:e,keepDims:t};return le.runKernel(Ym,r,i)}const Et=ue({sum_:fV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(n,e="euclidean",t=null,s=!1){n=H(n,"x","norm");const r=HM(n,e,t);let i=r.shape;if(s){const o=an(t,n.shape);i=vs(r.shape,o)}return he(r,i)}function HM(n,e,t=null){if(n.rank===0)return Es(n);if(n.rank!==1&&t===null)return HM(he(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Et(Es(n),t);if(e===1/0)return Vi(Es(n),t);if(e===-1/0)return sd(Es(n),t);if(e==="euclidean"||e===2)return Zs(Et(pa(Es(n),kt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Vi(Et(Es(n),t[0]),t[1]-1);if(e===1/0)return Vi(Et(Es(n),t[1]),t[0]);if(e===-1/0)return sd(Et(Es(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Zs(Et(zn(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const bf=ue({norm_:pV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n,e=null,t=!1){return bf(n,"euclidean",e,t)}const bE=ue({euclideanNorm_:mV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n){const t={x:H(n,"x","exp")};return le.runKernel(Pd,t)}const ti=ue({exp_:gV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n,e=0){const t=H(n,"x","expandDims","string_or_numeric");z(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return le.runKernel(vm,s,r)}const ds=ue({expandDims_:yV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(n){const t={x:H(n,"x","expm1")};return le.runKernel(Od,t)}const wE=ue({expm1_:xV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n,e){const t=H(n,"x","tile","string_or_numeric");z(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return le.runKernel(mf,s,r)}const Li=ue({tile_:vV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n,e,t,s="float32"){e==null&&(e=n);const r=tn([n,e],s),i=n<=e?n:e;for(let a=0;a<i;++a)r.set(1,a,a);const o=he(r.toTensor(),[n,e]);if(t==null)return o;if(t.length===1)return Li(ds(o,0),[t[0],1,1]);if(t.length===2)return Li(ds(ds(o,0),0),[t[0],t[1],1,1]);if(t.length===3)return Li(ds(ds(ds(o,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const nb=ue({eye_:bV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n){const t={x:H(n,"x","floor","float32")};return le.runKernel(Ld,t)}const wf=ue({floor_:wV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n,e,t=0,s=0){const r=H(n,"x","gather"),i=H(e,"indices","gather","int32"),o={x:r,indices:i},a={axis:t,batchDims:s};return le.runKernel(wm,o,a)}const Sf=ue({gather_:SV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n,e){let t=H(n,"a","greater","string_or_numeric"),s=H(e,"b","greater","string_or_numeric");[t,s]=as(t,s),Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(Sm,r)}const Wr=ue({greater_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n,e){let t=H(n,"a","greaterEqual","string_or_numeric"),s=H(e,"b","greaterEqual","string_or_numeric");[t,s]=as(t,s),Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(zd,r)}const al=ue({greaterEqual_:TV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n){const t={input:H(n,"input","imag")};return le.runKernel(dv,t)}const cg=ue({imag_:EV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const t={x:H(n,"x","isFinite")};return le.runKernel(Vd,t)}const SE=ue({isFinite_:CV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n){const t={x:H(n,"x","isInf")};return le.runKernel(Wd,t)}const _E=ue({isInf_:IV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n){const t={x:H(n,"x","isNaN")};return le.runKernel(Gd,t)}const TE=ue({isNaN_:NV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n,e=.2){const s={x:H(n,"x","leakyRelu")},r={alpha:e};return le.runKernel(_m,s,r)}const hg=ue({leakyRelu_:AV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n,e){let t=H(n,"a","less","string_or_numeric"),s=H(e,"b","less","string_or_numeric");[t,s]=as(t,s),Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(Tm,r)}const rd=ue({less_:RV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n,e){let t=H(n,"a","lessEqual","string_or_numeric"),s=H(e,"b","lessEqual","string_or_numeric");[t,s]=as(t,s),Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(Em,r)}const vu=ue({lessEqual_:kV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return le.runKernel(fv,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n,e=5,t=1,s=1,r=.5){const i=H(n,"x","localResponseNormalization");z(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),z(Sc(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=i,a=!1;i.rank===3&&(a=!0,o=he(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:o},u={depthRadius:e,bias:t,alpha:s,beta:r},h=le.runKernel(Am,l,u);return a?he(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const EE=ue({localResponseNormalization_:MV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const t={x:H(n,"x","log","float32")};return le.runKernel(Hd,t)}const wi=ue({log_:DV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n){const t={x:H(n,"x","log1p")};return le.runKernel(jd,t)}const dg=ue({log1p_:$V});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n){return z(tu(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const s=H(e,"x","tf.grad","string_or_numeric"),r=t!=null?H(t,"dy","tf.grad"):null;return le.tidy(()=>{const{value:i,grads:o}=le.gradients(()=>n(s),[s],r);return r!=null&&hr(i.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),sb(o),o[0]})}}function PV(n){return z(tu(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{z(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=zp(e,"args","tf.grads","string_or_numeric"),r=t!=null?H(t,"dy","tf.grads"):null;return le.tidy(()=>{const{value:i,grads:o}=le.gradients(()=>n(...s),s,r);return r!=null&&hr(i.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),sb(o),o})}}function OV(n){return z(tu(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{z(e instanceof gn,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),z(t==null||t instanceof gn,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:r}=le.gradients(()=>n(e),[e],t);return sb(s),{grad:s[0],value:r}}}function LV(n){return z(tu(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{z(Array.isArray(e)&&e.every(r=>r instanceof gn),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),z(t==null||t instanceof gn,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=le.gradients(()=>n(...e),e,t);return t!=null&&hr(s.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),sb(s.grads),s}}function XM(n,e){z(tu(n),()=>"The f passed in variableGrads(f) must be a function"),z(e==null||Array.isArray(e)&&e.every(u=>u instanceof Up),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in le.registeredVariables)e.push(le.registeredVariables[u])}const s=t?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),z(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:o,grads:a}=le.gradients(n,e,null,i);z(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),z(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return e.forEach((u,h)=>{a[h]!=null&&(l[u.name]=a[h])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:o,grads:l}}function ma(n){return le.customGrad(n)}function sb(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const t={x:H(n,"x","neg")};return le.runKernel(Pm,t)}const jn=ue({neg_:UV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(n){const t={x:H(n,"x","softplus")};return le.runKernel(uf,t)}const Wc=ue({softplus_:zV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n){const e=H(n,"x","logSigmoid");return ma(s=>({value:jn(Wc(jn(s))),gradFunc:o=>ce(o,yi(jn(s)))}))(e)}const CE=ue({logSigmoid_:BV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n,e){let t=H(n,"a","sub"),s=H(e,"b","sub");[t,s]=as(t,s);const r={a:t,b:s};return le.runKernel(df,r)}const mt=ue({sub_:VV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(n,e=-1){const t=H(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return ma((r,i)=>{const a=Vi(r,e,!0),l=mt(r,a),u=mt(Ze(l,"float32"),wi(Et(ti(l),e,!0)));return i([u]),{value:u,gradFunc:(d,p)=>{const[m]=p,g=!0,b=ti(m);return mt(d,ce(Et(d,e,g),b))}}})(t)}const rb=ue({logSoftmax_:WV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n,e=null,t=!1){const s=H(n,"x","logSumExp"),r=an(e,s.shape),i=Vi(s,r,!0),o=mt(s,i),a=ti(o),l=Et(a,r),u=wi(l),h=Ve(he(i,u.shape),u);if(t){const d=vs(h.shape,r);return he(h,d)}return h}const fg=ue({logSumExp_:GV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(n,e){const t=H(n,"a","logicalAnd","bool"),s=H(e,"b","logicalAnd","bool");Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(Cm,r)}const Do=ue({logicalAnd_:HV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(n){const t={x:H(n,"x","logicalNot","bool")};return le.runKernel(Im,t)}const pg=ue({logicalNot_:jV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n,e){const t=H(n,"a","logicalOr","bool"),s=H(e,"b","logicalOr","bool");Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(Nm,r)}const ib=ue({logicalOr_:XV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(n,e){const t=H(n,"a","logicalXor","bool"),s=H(e,"b","logicalXor","bool");return Yt(t.shape,s.shape),Do(ib(n,e),pg(Do(n,e)))}const IE=ue({logicalXor_:qV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qy=2147483648;function KV(n,e,t="left"){const s=H(n,"sortedSequence","searchSorted"),r=H(e,"values","searchSorted"),i=s.shape[s.shape.length-1],o=r.shape[r.shape.length-1],a=he(s,[-1,i]),l=he(r,[-1,o]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Me(l.shape)>=Qy)throw new Error(`values tensor size must less than ${Qy}`);if(a.shape[1]>=Qy)throw new Error(`trailing dim_size must less than ${Qy} for int32 output type, was ${a.shape[1]}`);const u={sortedSequence:a,values:l},h={side:t};return le.runKernel(kv,u,h)}const ob=ue({searchSorted_:KV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n,e){return ob(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n,e,t,s,r){const i=H(n,"x","maxPool"),o=1;let a=i,l=!1;i.rank===3&&(l=!0,a=he(i,[1,i.shape[0],i.shape[1],i.shape[2]])),z(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),z(dr(t,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Vr("maxPool",s,r);const u={x:a},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r},d=le.runKernel(km,u,h);return l?he(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const mg=ue({maxPool_:YV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n,e=[1,1,1],t,s,r,i="NDHWC"){const o=H(n,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=he(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),z(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Vr("maxPool3d",s,r);const u={x:a},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:i},d=le.runKernel(Mm,u,h);return l?he(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const NE=ue({maxPool3d_:ZV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n,e,t,s,r=!1){const o={x:H(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},l=le.runKernel(yv,o,a);return{result:l[0],indexes:l[1]}}const KM=ue({maxPoolWithArgmax_:QV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n,e){let t=H(n,"a","maximum"),s=H(e,"b","maximum");[t,s]=as(t,s),t.dtype==="bool"&&(t=Ze(t,"int32"),s=Ze(s,"int32")),Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(Xd,r)}const va=ue({maximum_:JV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n,e=null,t=!1){const r={x:H(n,"x","mean")},i={axis:e,keepDims:t};return le.runKernel(Dm,r,i)}const is=ue({mean_:eW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cs(n,e="float32"){if(Ei(n),e==="complex64"){const s=Cs(n,"float32"),r=Cs(n,"float32");return Za(s,r)}const t=cr(Me(n),e);return le.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(n,e="float32"){if(Ei(n),e==="complex64"){const s=Yr(n,"float32"),r=Cs(n,"float32");return Za(s,r)}const t=zx(Me(n),e);return le.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=H(n,"x","meshgrid",n instanceof gn?n.dtype:"float32");if(e===void 0)return[s];let r=H(e,"y","meshgrid",e instanceof gn?e.dtype:"float32");const i=Me(s.shape),o=Me(r.shape);return t==="xy"?(s=he(s,[1,-1]),r=he(r,[-1,1]),[en(Yr([o,1],s.dtype),s),en(r,Yr([1,i],r.dtype))]):(s=he(s,[-1,1]),r=he(r,[1,-1]),[en(s,Yr([1,o],s.dtype)),en(Yr([i,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(n,e){let t=H(n,"a","minimum"),s=H(e,"b","minimum");[t,s]=as(t,s),t.dtype==="bool"&&(t=Ze(t,"int32"),s=Ze(s,"int32")),Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(qd,r)}const au=ue({minimum_:tW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(n,e,t){z(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=H(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");z(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)z(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),z(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:e,mode:t},o={x:s};return le.runKernel(Fm,o,i)}const ab=ue({mirrorPad_:nW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(n,e){let t=H(n,"a","mod"),s=H(e,"b","mod");[t,s]=as(t,s);const r={a:t,b:s};return le.runKernel(Kd,r)}const AE=ue({mod_:sW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n,e=null,t=!1){n=H(n,"x","moments");const s=an(e,n.shape),r=is(n,s,t);let i=r.shape;t||(i=vs(r.shape,s));const o=zn(mt(Ze(n,"float32"),he(r,i))),a=is(o,s,t);return{mean:r,variance:a}}const gg=ue({moments_:rW});function iW(n,e,t,s){const r=H(e,"data","multiRNNCell"),i=zp(t,"c","multiRNNCell"),o=zp(s,"h","multiRNNCell");let a=r;const l=[];for(let d=0;d<n.length;d++){const p=n[d](a,i[d],o[d]);l.push(p[0]),l.push(p[1]),a=p[1]}const u=[],h=[];for(let d=0;d<l.length;d+=2)u.push(l[d]),h.push(l[d+1]);return[u,h]}const ZM=ue({multiRNNCell_:iW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n,e,t,s=!1){const r=H(n,"logits","multinomial"),i=r.size,o=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);t=t||Math.random();const l={logits:o===1?he(r,[1,-1]):r},u={numSamples:e,seed:t,normalized:s},h=le.runKernel(xv,l,u);return o===1?he(h,[h.size]):h}const QM=ue({multinomial_:oW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(n,e){let t=H(n,"a","notEqual","string_or_numeric"),s=H(e,"b","notEqual","string_or_numeric");[t,s]=as(t,s),Yt(t.shape,s.shape);const r={a:t,b:s};return le.runKernel(Om,r)}const Nc=ue({notEqual_:aW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:H(n,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:t,offValue:s};return le.runKernel(Um,o,a)}const Ac=ue({oneHot_:lW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(n){const t={x:H(n,"x","onesLike")};return le.runKernel(Lm,t)}const Si=ue({onesLike_:uW});function cW(n,e){const t=H(n,"v1","outerProduct"),s=H(e,"v2","outerProduct");z(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=he(t,[-1,1]),i=he(s,[1,-1]);return en(r,i)}const JM=ue({outerProduct_:cW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(n,e,t=0){const s=H(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},i={x:s};return le.runKernel(Bm,i,r)}const ba=ue({pad_:hW});function dW(n,e,t=0){return z(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),ba(n,[e],t)}const eD=ue({pad1d_:dW});function fW(n,e,t=0){return z(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ba(n,e,t)}const tD=ue({pad2d_:fW});function pW(n,e,t=0){return z(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ba(n,e,t)}const RE=ue({pad3d_:pW});function mW(n,e,t=0){return z(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ba(n,e,t)}const nD=ue({pad4d_:mW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(n,e,t){const s=H(n,"x","spaceToBatchND");z(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),z(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),z(s.shape.reduce((o,a,l)=>l>0&&l<=e.length?o&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},i={blockShape:e,paddings:t};return le.runKernel(Zm,r,i)}const yg=ue({spaceToBatchND_:gW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(n,e,t,s,r,i,o){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const a=H(n,"x","maxPool");let l=a,u=!1;a.rank===3&&(u=!0,l=he(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(dr(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const h=lo(l.shape,e,i,r,s),d=[h.dilationHeight,h.dilationWidth];let p;s==="same"?p=vW([h.filterHeight,h.filterWidth],d):p=[[0,0],[0,0]];const m=d[0]===1&&d[1]===1,[g,b]=xW([h.inHeight,h.inWidth],d,p),y=m?s:"valid",v=m?l:yg(l,d,g),E=(t==="avg"?()=>ag(v,e,i,y,o):()=>mg(v,e,i,y,o))(),T=m?E:lg(E,d,b);return u?he(T,[T.shape[1],T.shape[2],T.shape[3]]):T}function xW(n,e,t){const s=t.map(h=>h[0]),r=t.map(h=>h[1]),i=n.concat(s,r),o=e.map((h,d)=>(h-i[d]%h)%h),a=r.map((h,d)=>h+o[d]),l=e.map((h,d)=>[s[d],a[d]]),u=e.map((h,d)=>[0,o[d]]);return[l,u]}function vW(n,e){const s=n.map((o,a)=>o+(o-1)*(e[a]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),i=s.map((o,a)=>o-r[a]);return s.map((o,a)=>[r[a],i[a]])}const kE=ue({pool_:yW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(n,e){const t=H(n,"x","prelu"),s=H(e,"alpha","prelu"),r={x:t,alpha:s};return le.runKernel(Vm,r)}const xg=ue({prelu_:bW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(n,e=null,t=!1){let s=H(n,"x","prod");s.dtype==="bool"&&(s=Ze(s,"int32"));const r={x:s},i={axis:e,keepDims:t};return le.runKernel(Wm,r,i)}const ME=ue({prod_:wW});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(n,e,t,s){const r=n.map((h,d)=>H(h,`tensors${d}`,"raggedGather","int32")),i=H(e,"paramsDenseValues","raggedGather"),o=H(t,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:i,indices:o},l={outputRaggedRank:s},u=le.runKernel(Sv,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const sD=ue({raggedGather_:SW});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(n,e,t){const s=H(n,"starts","raggedRange"),r=H(e,"limits","raggedRange",s.dtype),i=H(t,"deltas","raggedRange",s.dtype),o={starts:s,limits:r,deltas:i},a=le.runKernel(_v,o);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const rD=ue({raggedRange_:_W});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(n,e,t,s,r){const i=H(n,"shape","raggedTensorToTensor","int32"),o=H(e,"values","raggedTensorToTensor"),a=H(t,"defaultValue","raggedTensorToTensor",o.dtype),l=s.map((d,p)=>H(d,`tensors${p}`,"raggedTensorToTensor","int32")),u={shape:i,values:o,defaultValue:a,rowPartitionTensors:l},h={rowPartitionTypes:r};return le.runKernel(Tv,u,h)}const iD=ue({raggedTensorToTensor_:TW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(n,e,t){Ei(n);const s=Me(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let i=0;i<s;i++)r[i]=e();return le.makeTensor(r,n,t)}const oD=ue({rand_:EW});var G0={exports:{}},CW=G0.exports,eA;function IW(){return eA||(eA=1,function(n){(function(e,t,s){function r(l){var u=this,h=a();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=h(" "),u.s1=h(" "),u.s2=h(" "),u.s0-=h(l),u.s0<0&&(u.s0+=1),u.s1-=h(l),u.s1<0&&(u.s1+=1),u.s2-=h(l),u.s2<0&&(u.s2+=1),h=null}function i(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function o(l,u){var h=new r(l),d=u&&u.state,p=h.next;return p.int32=function(){return h.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&i(d,h),p.state=function(){return i(h,{})}),p}function a(){var l=4022871197,u=function(h){h=String(h);for(var d=0;d<h.length;d++){l+=h.charCodeAt(d);var p=.02519603282416938*l;l=p>>>0,p-=l,p*=l,l=p>>>0,p-=l,l+=p*4294967296}return(l>>>0)*23283064365386963e-26};return u}t.exports?t.exports=o:this.alea=o})(CW,n)}(G0)),G0.exports}var H0={exports:{}},NW=H0.exports,tA;function AW(){return tA||(tA=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},a===(a|0)?l.x=a:u+=a;for(var h=0;h<u.length+64;h++)l.x^=u.charCodeAt(h)|0,l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var u=new r(a),h=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,g=(p+m)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&i(h,u),d.state=function(){return i(u,{})}),d}t.exports?t.exports=o:this.xor128=o})(NW,n)}(H0)),H0.exports}var j0={exports:{}},RW=j0.exports,nA;function kW(){return nA||(nA=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:u+=a;for(var h=0;h<u.length+64;h++)l.x^=u.charCodeAt(h)|0,h==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var u=new r(a),h=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,g=(p+m)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&i(h,u),d.state=function(){return i(u,{})}),d}t.exports?t.exports=o:this.xorwow=o})(RW,n)}(j0)),j0.exports}var X0={exports:{}},MW=X0.exports,sA;function DW(){return sA||(sA=1,function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var h=l.x,d=l.i,p,m;return p=h[d],p^=p>>>7,m=p^p<<24,p=h[d+1&7],m^=p^p>>>10,p=h[d+3&7],m^=p^p>>>3,p=h[d+4&7],m^=p^p<<7,p=h[d+7&7],p=p^p<<13,m^=p^p<<9,h[d]=m,l.i=d+1&7,m};function u(h,d){var p,m=[];if(d===(d|0))m[0]=d;else for(d=""+d,p=0;p<d.length;++p)m[p&7]=m[p&7]<<15^d.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?m[7]=-1:m[p],h.x=m,h.i=0,p=256;p>0;--p)h.next()}u(l,a)}function i(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var u=new r(a),h=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,g=(p+m)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,h&&(h.x&&i(h,u),d.state=function(){return i(u,{})}),d}t.exports?t.exports=o:this.xorshift7=o})(MW,n)}(X0)),X0.exports}var q0={exports:{}},$W=q0.exports,rA;function FW(){return rA||(rA=1,function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var h=l.w,d=l.X,p=l.i,m,g;return l.w=h=h+1640531527|0,g=d[p+34&127],m=d[p=p+1&127],g^=g<<13,m^=m<<17,g^=g>>>15,m^=m>>>12,g=d[p]=g^m,l.i=p,g+(h^h>>>16)|0};function u(h,d){var p,m,g,b,y,v=[],w=128;for(d===(d|0)?(m=d,d=null):(d=d+"\0",m=0,w=Math.max(w,d.length)),g=0,b=-32;b<w;++b)d&&(m^=d.charCodeAt((b+32)%d.length)),b===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,b>=0&&(y=y+1640531527|0,p=v[b&127]^=m+y,g=p==0?g+1:0);for(g>=128&&(v[(d&&d.length||0)&127]=-1),g=127,b=4*128;b>0;--b)m=v[g+34&127],p=v[g=g+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,v[g]=m^p;h.w=y,h.X=v,h.i=g}u(l,a)}function i(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var u=new r(a),h=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,g=(p+m)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,h&&(h.X&&i(h,u),d.state=function(){return i(u,{})}),d}t.exports?t.exports=o:this.xor4096=o})($W,n)}(q0)),q0.exports}var K0={exports:{}},PW=K0.exports,iA;function OW(){return iA||(iA=1,function(n){(function(e,t,s){function r(a){var l=this,u="";l.next=function(){var d=l.b,p=l.c,m=l.d,g=l.a;return d=d<<25^d>>>7^p,p=p-m|0,m=m<<24^m>>>8^g,g=g-d|0,l.b=d=d<<20^d>>>12^p,l.c=p=p-m|0,l.d=m<<16^p>>>16^g,l.a=g-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):u+=a;for(var h=0;h<u.length+20;h++)l.b^=u.charCodeAt(h)|0,l.next()}function i(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var u=new r(a),h=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,g=(p+m)/(1<<21);while(g===0);return g},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&i(h,u),d.state=function(){return i(u,{})}),d}t.exports?t.exports=o:this.tychei=o})(PW,n)}(K0)),K0.exports}var Y0={exports:{}};const LW={},UW=Object.freeze(Object.defineProperty({__proto__:null,default:LW},Symbol.toStringTag,{value:"Module"})),zW=XU(UW);var BW=Y0.exports,oA;function VW(){return oA||(oA=1,function(n){(function(e,t,s){var r=256,i=6,o=52,a="random",l=s.pow(r,i),u=s.pow(2,o),h=u*2,d=r-1,p;function m(T,I,M){var $=[];I=I==!0?{entropy:!0}:I||{};var O=v(y(I.entropy?[T,E(t)]:T??w(),3),$),k=new g($),N=function(){for(var A=k.g(i),B=l,W=0;A<u;)A=(A+W)*r,B*=r,W=k.g(1);for(;A>=h;)A/=2,B/=2,W>>>=1;return(A+W)/B};return N.int32=function(){return k.g(4)|0},N.quick=function(){return k.g(4)/4294967296},N.double=N,v(E(k.S),t),(I.pass||M||function(A,B,W,K){return K&&(K.S&&b(K,k),A.state=function(){return b(k,{})}),W?(s[a]=A,B):A})(N,O,"global"in I?I.global:this==s,I.state)}function g(T){var I,M=T.length,$=this,O=0,k=$.i=$.j=0,N=$.S=[];for(M||(T=[M++]);O<r;)N[O]=O++;for(O=0;O<r;O++)N[O]=N[k=d&k+T[O%M]+(I=N[O])],N[k]=I;($.g=function(A){for(var B,W=0,K=$.i,q=$.j,Y=$.S;A--;)B=Y[K=d&K+1],W=W*r+Y[d&(Y[K]=Y[q=d&q+B])+(Y[q]=B)];return $.i=K,$.j=q,W})(r)}function b(T,I){return I.i=T.i,I.j=T.j,I.S=T.S.slice(),I}function y(T,I){var M=[],$=typeof T,O;if(I&&$=="object")for(O in T)try{M.push(y(T[O],I-1))}catch{}return M.length?M:$=="string"?T:T+"\0"}function v(T,I){for(var M=T+"",$,O=0;O<M.length;)I[d&O]=d&($^=I[d&O]*19)+M.charCodeAt(O++);return E(I)}function w(){try{var T;return p&&(T=p.randomBytes)?T=T(r):(T=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(T)),E(T)}catch{var I=e.navigator,M=I&&I.plugins;return[+new Date,e,M,e.screen,E(t)]}}function E(T){return String.fromCharCode.apply(0,T)}if(v(s.random(),t),n.exports){n.exports=m;try{p=zW}catch{}}else s["seed"+a]=m})(typeof self<"u"?self:BW,[],Math)}(Y0)),Y0.exports}var X1,aA;function WW(){if(aA)return X1;aA=1;var n=IW(),e=AW(),t=kW(),s=DW(),r=FW(),i=OW(),o=VW();return o.alea=n,o.xor128=e,o.xorwow=t,o.xorshift7=s,o.xor4096=r,o.tychei=i,X1=o,X1}var lb=WW();/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GW=.001,aD=.1;function HW(n,e,t){return t==null&&(t=DE()),a_(n,e,(s,r)=>$E(s,r,t))}function DE(){return le.backend.floatPrecision()===32?GW:aD}function a_(n,e,t){let s=!0;if((qs(n)||qs(e))&&(s=!1),qs(n)&&qs(e)&&(s=!0),s){const o=n.constructor.name,a=e.constructor.name;if(o!==a)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${a}`)}if(Array.isArray(n)&&Array.isArray(e)){const o=fa(n),a=fa(e);if(!dn(o,a))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${a}]`)}const r=qs(n)?n:da(n),i=qs(e)?e:da(e);if(r.length!==i.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${i.length}.
Actual:   ${r}.
Expected: ${i}.`);for(let o=0;o<i.length;++o){const a=r[o],l=i[o];if(!t(a,l))throw new Error(`Arrays differ: actual[${o}] = ${a}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${i}.`)}typeof expect<"u"&&expect().nothing()}function jW(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function XW(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return na(n)||na(n[0])||na(e)||na(e[0])?a_(n,t,(s,r)=>s==r):a_(n,e,(s,r)=>$E(s,r,0))}function qW(n,e,t){if(t==null&&(t=DE()),!$E(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function $E(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function KW(n,e,t){for(let s=0;s<n.length;s++)if(n[s]<e||n[s]>t)throw new Error(`Value out of range:${n[s]} low: ${e}, high: ${t}`)}function YW(n,e){const t=new Float32Array(n),s=new Float32Array(e);if(t.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${t.length}`);for(let r=0;r<s.length;r++)if(t[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${t[r]} instead`)}function lD(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?lD(t):n[e]=oa(t)}return n}function ZW(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",s=>t(e)),e.load()})}async function QW(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const JW=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:aD,createVideoElement:ZW,encodeStrings:lD,expectArrayBuffersEqual:YW,expectArraysClose:HW,expectArraysEqual:XW,expectNumbersClose:qW,expectPromiseToFail:jW,expectValuesInRange:KW,play:QW,testEpsilon:DE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FE{constructor(e,t,s,r,i){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=i||Math.random();this.random=lb.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,i,o;do r=2*this.random()-1,i=2*this.random()-1,o=r*r+i*i;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class eG{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const i=r||Math.random();this.randu=lb.alea(i.toString()),this.randn=new FE(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,i,o;for(;;){do r=this.randn.nextValue(),o=1+this.c*r;while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-o+Math.log(o)),i=this.randu(),i<t||Math.log(i)<s)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class tG{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=lb.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nG(n,e,t=1,s="float32",r){if(Ei(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const i=new eG(e,t,s,r),o=tn(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const uD=ue({randomGamma_:nG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(n,e=0,t=1,s,r){if(Ei(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new FE(e,t,s,!1,r),o=tn(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const ub=ue({randomNormal_:sG});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return ub(n,0,1,e,t)}const cD=ue({randomStandardNormal_:rG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iG(n,e=0,t=1,s="float32",r){Ei(n);const i=tn(n,s),o=new tG(e,t,null,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const bu=ue({randomUniform_:iG});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(n,e,t,s){return bu(n,e,t,"int32",s)}const hD=ue({randomUniformInt_:oG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ja(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return le.runKernel(Ev,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(n){const t={input:H(n,"input","real")};return le.runKernel(Cv,t)}const id=ue({real_:aG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(n){const t={x:H(n,"x","reciprocal")};return le.runKernel(Qd,t)}const PE=ue({reciprocal_:lG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(n){const t={x:H(n,"x","relu")};return le.runKernel(Jd,t)}const Lo=ue({relu_:uG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(n){const t={x:H(n,"x","relu6")};return le.runKernel(ef,t)}const cb=ue({relu6_:cG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(n,e){const s={x:H(n,"x","reverse")},r={dims:e};return le.runKernel(Xm,s,r)}const Wi=ue({reverse_:hG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(n){const e=H(n,"x","reverse");return z(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Wi(e,0)}const dD=ue({reverse1d_:dG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(n,e){const t=H(n,"x","reverse");return z(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Wi(t,e)}const fD=ue({reverse2d_:fG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(n,e){const t=H(n,"x","reverse");return z(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Wi(t,e)}const pD=ue({reverse3d_:pG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(n,e){const t=H(n,"x","reverse");return z(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Wi(t,e)}const mD=ue({reverse4d_:mG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(n){const t={x:H(n,"x","round")};return le.runKernel(tf,t)}const hb=ue({round_:gG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(n){const t={x:H(n,"x","rsqrt","float32")};return le.runKernel(nf,t)}const db=ue({rsqrt_:yG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(n){const t={x:H(n,"x","selu")};return le.runKernel(sf,t)}const fb=ue({selu_:xG});function vG(n,e,t,s,r,i=[1,1],o="NHWC"){const a=H(n,"x","separableConv2d"),l=H(e,"depthwiseFilter","separableConv2d"),u=H(t,"pointwiseFilter","separableConv2d");let h=a,d=!1;if(a.rank===3&&(d=!0,h=he(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");z(h.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),z(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),z(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),z(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),z(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const p=l.shape[2],m=l.shape[3];z(u.shape[2]===p*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*m}, but got ${u.shape[2]}.`);const g=xf(h,l,s,r,o,i),y=Qa(g,u,1,"valid",o);return d?he(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const pb=ue({separableConv2d_:vG});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function bG(n,e){const t=H(n,"x","setdiff1d"),s=H(e,"y","setdiff1d");z(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),z(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),z(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),i=await s.data(),o=new Set(i);let a=0;for(let h=0;h<r.length;h++)o.has(r[h])||a++;const l=new Is([a],t.dtype),u=new Is([a],"int32");for(let h=0,d=0;h<r.length;h++)o.has(r[h])||(l.values[d]=r[h],u.values[d]=h,d++);return[l.toTensor(),u.toTensor()]}const gD=bG;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(n){const t={x:H(n,"x","sign")};return le.runKernel(af,t)}const OE=ue({sign_:wG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(n){const t={x:H(n,"x","sin","float32")};return le.runKernel(rf,t)}const mb=ue({sin_:SG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(n){const t={x:H(n,"x","sinh")};return le.runKernel(of,t)}const gb=ue({sinh_:_G});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(n,e,t){const s=H(n,"x","slice1d");return z(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),mn(s,[e],[t])}const vg=ue({slice1d_:TG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(n,e,t){const s=H(n,"x","slice2d");return z(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),mn(s,e,t)}const yb=ue({slice2d_:EG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(n,e,t){const s=H(n,"x","slice3d");return z(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),mn(s,e,t)}const bg=ue({slice3d_:CG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(n,e,t){const s=H(n,"x","slice4d");return z(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),mn(s,e,t)}const od=ue({slice4d_:IG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(n,e=-1){const t=H(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return le.runKernel(Jm,s,r)}const wg=ue({softmax_:NG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(n){z(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return le.runKernel(av,e)}const Sg=ue({fft_:AG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(n){z(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return le.runKernel(hv,e)}const ad=ue({ifft_:RG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=he(n,[t,e]);s=ad(r)}else{const r=[t,2*(e-1)],i=he(id(n),[t,e]),o=he(cg(n),[t,e]),a=Wi(mn(i,[0,1],[t,e-2]),1),l=ce(Wi(mn(o,[0,1],[t,e-2]),1),kt(-1)),u=ys([i,a],1),h=ys([o,l],1),d=he(Za(u,h),[r[0],r[1]]);s=ad(d)}if(s=id(s),n.rank===3&&n.shape[0]!==0){const r=s,i=n.shape[0];s=he(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const xb=ue({irfft_:kG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(n,e,t=0){const r={x:H(n,"x","split")},i={numOrSizeSplits:e,axis:t};return le.runKernel(Qm,r,i)}const Zr=ue({split_:MG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(n,e){z(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const g=n.shape.map(y=>0),b=n.shape.map(y=>y);b[n.shape.length-1]=e,r=mn(n,g,b),t=e}else if(e!=null&&e>t){const g=n.shape.map(b=>b);g[n.shape.length-1]=e-t,r=ys([n,Cs(g)],n.shape.length-1),t=e}else r=n;const i=vn(r),o=he(Za(r,i),[s,t]),a=Sg(o),l=Math.floor(t/2)+1,u=id(a),h=cg(a),d=Zr(u,[l,t-l],u.shape.length-1),p=Zr(h,[l,t-l],h.shape.length-1),m=r.shape.slice();return m[r.shape.length-1]=l,he(Za(d[0],p[0]),m)}const _g=ue({rfft_:DG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(n,e){let t=H(n,"a","squaredDifference"),s=H(e,"b","squaredDifference");[t,s]=as(t,s),Yt(t.shape,s.shape);const r={a:t,b:s},i={};return le.runKernel(hf,r,i)}const vb=ue({squaredDifference_:$G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FG(n,e){const t=H(n,"x","squeeze","string_or_numeric");return he(t,sl(t.shape,e).newShape)}const Lr=ue({squeeze_:FG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(n,e=0){const t=zp(n,"tensors","stack","string_or_numeric");z(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&z(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return le.runKernel(zm,s,r)}const ni=ue({stack_:PG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OG(n,e=0){const s={x:H(n,"x","step")},r={alpha:e};return le.runKernel(gf,s,r)}const Gc=ue({step_:OG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(n,e,t,s,r=0,i=0,o=0,a=0,l=0){const h={x:H(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:s,beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return le.runKernel(Lv,h,d)}const LE=ue({stridedSlice_:LG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(n){const t={x:H(n,"x","tan","float32")};return le.runKernel(ff,t)}const UE=ue({tan_:UG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wr(n,e){Lc(n);const t=fa(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return gu(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xc(n,e,t){if(Lc(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=fa(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return gu(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,e,t){if(Lc(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=fa(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return gu(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,e,t){if(Lc(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=fa(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return gu(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(n,e,t){if(Lc(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=fa(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return gu(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vD(n,e,t){if(Lc(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=fa(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,gu(n,e,s,t)}function BE(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(i+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(i+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(i+` update.rank != ${r+n.length-s}`);for(let o=0;o<r;++o)if(t.shape[o]!==e.shape[o])throw new Error(i+` updates.shape[${o}] (${t.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<t.rank-r;++o)if(t.shape[o+r]!==n[o+s])throw new Error(i+` updates.shape[${o+r}] (${t.shape[o+r]}) != shape[${o+r}] (${n[o+r]})`)}function bb(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}BE(t,e,n)}function wu(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=t.length;let o=1;for(let d=r;d<i;++d)o*=t[d];const a=r<1?1:r,l=Me(e.shape)/a,u=[...Lt(t.slice(0,r)),1],h=Me(t);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:u,outputSize:h}}const zG=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:wu,validateInput:bb,validateUpdateShape:BE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(n,e,t){const s=H(n,"tensor","tensorScatterupdate"),r=H(e,"indices","tensorScatterupdate","int32"),i=H(t,"updates","tensorScatterupdate");if(bb(i,r,s.shape),s.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${i.dtype}.`);const o={tensor:s,indices:r,updates:i},a={};return le.runKernel(Rv,o,a)}const bD=ue({tensorScatterUpdate_:BG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VG(n,e=1,t=!0){const s=H(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},o={k:e,sorted:t},[a,l]=le.runKernel(Vv,i,o);return{values:a,indices:l}}const VE=ue({topk_:VG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(n,e=0,t=1,s,r){if(Ei(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new FE(e,t,s,!0,r),o=tn(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const wb=ue({truncatedNormal_:WG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n,e=0){const t=H(n,"x","unique","string_or_numeric");z(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[i,o]=le.runKernel(Gv,s,r);return{values:i,indices:o}}const WE=ue({unique_:GG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(n,e,t){const s=H(n,"x","unsortedSegmentSum"),r=H(e,"segmentIds","unsortedSegmentSum","int32");z(Sc(t),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},o={numSegments:t};return le.runKernel(ng,i,o)}const Sb=ue({unsortedSegmentSum_:HG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n,e=0){const t=H(n,"x","unstack","string_or_numeric");z(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return le.runKernel(tg,s,r)}const Gi=ue({unstack_:jG});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n,e){return ob(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,e=!0,t,s){return le.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const s=tn(n,"int32"),r=tn([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const o=s.indexToLoc(t[i]),a=i*n.length;r.values.set(o,a)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function XG(n){const e=H(n,"condition","whereAsync","bool"),t=await e.data(),s=_b(e.shape,t);return n!==e&&e.dispose(),s}const HE=XG;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qG(n,e,t){const s=H(n,"tensor","boolMask"),r=H(e,"mask","boolMask","bool"),i=t??0,o=r.rank,a=s.shape;z(o>0,()=>"mask cannot be scalar"),hr(a.slice(i,i+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let b=i;b<i+o;b++)l*=a[b];const u=a.slice(0,i).concat([l],a.slice(i+o)),h=he(s,u),d=he(r,[-1]),p=await HE(d),m=Lr(p,[1]),g=Sf(h,m,i);return n!==s&&s.dispose(),e!==r&&r.dispose(),m.dispose(),h.dispose(),d.dispose(),p.dispose(),g}const SD=qG;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(n,e,t){const s=H(n,"x","transpose");if(e==null&&(e=s.shape.map((o,a)=>a).reverse()),z(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(o=>{z(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},i={perm:e};return s.dtype==="complex64"?xe(()=>{let o=id(s),a=cg(s);return o=le.runKernel(gc,{x:o},i),a=le.runKernel(gc,{x:a},i),t&&(a=jn(a)),Za(o,a)}):le.runKernel(gc,r,i)}const yn=ue({transpose_:KG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(n,e,t,s,r=!0){const i=H(n,"v","movingAverage"),o=H(e,"x","movingAverage"),a=H(t,"decay","movingAverage");yM(i,o),z(dn(i.shape,o.shape),()=>"Shape mismatch in v and x");const l=kt(1),u=mt(l,a);let h=ce(mt(o,i),u);if(r){z(s!=null,()=>"When using zeroDebias: true, step is required.");const d=H(s,"step","movingAverage");h=Nt(h,mt(l,pa(a,d)))}return Ve(i,h)}const _D=ue({movingAverage_:YG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(n,e,t){Ei(t);const s=H(n,"indices","scatterND","int32"),r=H(e,"updates","scatterND");bb(r,s,t);const i={indices:s,updates:r},o={shape:t};return le.runKernel(Av,i,o)}const TD=ue({scatterND_:ZG});function QG(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,i=n.rank>1?n.shape[1]:1;if(t.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${i}.`);const o=e.size;if(!(e.rank===0||e.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JG(n,e,t,s=0){Ei(t);const r=H(n,"sparseIndices","sparseToDense","int32"),i=H(e,"sparseValues","sparseToDense","string_or_numeric"),o=H(s,"defaultValue","sparseToDense",i.dtype);QG(r,i,t,o);const a={sparseIndices:r,sparseValues:i,defaultValue:o},l={outputShape:t};return le.runKernel(Pv,a,l)}const ED=ue({sparseToDense_:JG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n,e){const t=H(e,"indices","gatherND","int32"),r={params:H(n,"x","gatherND","string_or_numeric"),indices:t};return le.runKernel(cv,r)}const CD=ue({gatherND_:eH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(n,e){if(e==null)return n.shape.slice();if(dn(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(n,e,t,s){const r=H(n,"x","dropout");if(z(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),z(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof gn?r.clone():r;const i=tH(r,t),o=1-e,a=Nt(wf(Ve(bu(i,0,1,"float32",s),o)),o);return ce(r,a)}const jE=ue({dropout_:nH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Tb(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let i=0;i<n;++i){const o=2*Math.PI*i/(n+s-1);r[i]=e-t*Math.cos(o)}return wr(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sH(n,e,t=1){const s=H(n,"predictions","inTopK"),r=H(e,"targets","inTopK");z(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),z(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),hr(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=s.shape[s.shape.length-1];z(t>0&&t<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${t}`);const o=await s.data(),a=await r.data(),[l,u]=[o.length/i,i],h=Ys("bool",l);for(let d=0;d<l;d++){const p=d*u,m=o.subarray(p,p+u),g=[];for(let b=0;b<m.length;b++)g.push({value:m[b],index:b});g.sort((b,y)=>y.value-b.value),h[d]=0;for(let b=0;b<t;b++)if(g[b].index===a[d]){h[d]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Bi(h,r.shape,"bool")}const ID=sH;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n,e,t,s,r,i="NHWC",o){let a=n;n.rank===3&&(a=he(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=he(e,[1,e.shape[0],e.shape[1],e.shape[2]])),z(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),z(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),z(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=i==="NHWC"?a.shape[3]:a.shape[1],h=i==="NHWC"?l.shape[3]:l.shape[1];z(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),z(h===t[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${t[3]}).`),Vr("conv2dDerFilter",r,o);const d={x:a,dy:l},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,filterShape:t};return le.runKernel(qx,d,p)}const qE=ue({conv2DBackpropFilter_:rH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eb(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return ce(n,Gc(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Cb(n,e){let t=e;const s=Ns(n.shape,e.shape);return s.length>0&&(t=Et(t,s)),he(t,n.shape)}function Ib(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Lo(n);if(e==="elu")return vf(n);if(e==="relu6")return cb(n);if(e==="prelu")return xg(n,t);if(e==="leakyrelu")return hg(n,s);if(e==="sigmoid")return yi(n);throw new Error(`Unknown fused activation ${e}.`)}const Nb=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",Nb(le.state.gradientDepth,l)===!1){z(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let M=Qa(n,e,t,s,r,i,o);return a!=null&&(M=Ve(M,a)),Ib(M,l,u,h)}const d=H(n,"x","conv2d","float32"),p=H(e,"filter","conv2d","float32");let m=d,g=!1;d.rank===3&&(g=!0,m=he(d,[1,d.shape[0],d.shape[1],d.shape[2]])),z(m.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),z(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),Vr("fused conv2d",s,o);const b=r==="NHWC"?m.shape[3]:m.shape[1];z(p.shape[2]===b,()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${p.shape[2]}.`),z(dr(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const y=er(m.shape,p.shape,t,i,s,o);let v;a!=null&&(v=H(a,"bias","fused conv2d"),[v]=as(v,d),r==="NHWC"?Yt(y.outShape,v.shape):(z(v.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${v.shape.length}.`),z(v.shape.length===0||v.shape[0]===y.outChannels||v.shape[0]===1,()=>`Error in fused conv2d: bias shape (${v.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let w;if(u!=null){const M=u.shape;if(z(M.length<=1||M.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${M.length}.`),M.length===1)z(M[0]===1||M[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the number of output channels (${y.outChannels}).`);else if(M.length===3)try{Yt(M,y.outShape)}catch{const O=`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(O)}w=H(u,"prelu weights","fused conv2d")}const E=(M,$)=>{z(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[O,k,N,A]=$,B=Eb(M,N,l);z(iu(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const W=dE(k.shape,B,O,t,s),K=qE(k,B,O.shape,t,s),q=[W,K];if(A!=null){const Y=Cb(A,B);q.push(Y)}return q},T={x:m,filter:p,bias:v,preluActivationWeights:w},I={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:h};return a==null?ma(($,O,k)=>{let N=le.runKernel(Fp,T,I);return k([O,$,N]),g&&(N=he(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:E}})(m,p):ma(($,O,k,N)=>{let A=le.runKernel(Fp,T,I);return N([O,$,A,k]),g&&(A=he(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:E}})(m,p,v)}const ND=ue({fusedConv2d_:iH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(n,e,t,s,r,i=[1,1],o){let a=n;n.rank===3&&(a=he(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=he(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:a,dy:l},h={strides:s,pad:r,dimRoundingMode:o,dilations:i,filterShape:t};return le.runKernel(tv,u,h)}const AD=ue({depthwiseConv2dNativeBackpropFilter_:oH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(n,e,t,s,r,i=[1,1],o){let a=e,l=!1;e.rank===3&&(l=!0,a=he(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:a,filter:t},h={strides:s,pad:r,dimRoundingMode:o,dilations:i,inputShape:n},d=le.runKernel(nv,u,h);return l?he(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const RD=ue({depthwiseConv2dNativeBackpropInput_:aH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(Nb(le.state.gradientDepth,l)===!1){let I=xf(n,e,t,s,r,i,o);return a!=null&&(I=Ve(I,a)),Ib(I,l,u,h)}const d=H(n,"x","depthwiseConv2d","float32"),p=H(e,"filter","depthwiseConv2d","float32");let m=d,g=!1;d.rank===3&&(g=!0,m=he(d,[1,d.shape[0],d.shape[1],d.shape[2]])),z(m.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),z(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),z(m.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),i==null&&(i=[1,1]),z(dr(t,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Vr("fused depthwiseConv2d",s,o);const b=er(m.shape,p.shape,t,i,s,o,!0);let y;a!=null&&(y=H(a,"bias","fused conv2d"),[y]=as(y,d),Yt(b.outShape,y.shape));let v;u!=null&&(v=H(u,"prelu weights","fused depthwiseConv2d"));const w=(I,M)=>{z(iu(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[$,O,k,N]=M,A=Eb(I,k,l),B=RD(O.shape,A,$,t,s,i,o),W=AD(O,A,$.shape,t,s,i,o);if(N!=null){const K=Cb(y,A);return[B,W,K]}return[B,W]},E={x:m,filter:p,bias:y,preluActivationWeights:v},T={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:h};return a==null?ma((M,$,O)=>{let k=le.runKernel(Pp,E,T);return O([$,M,k]),g&&(k=he(k,[k.shape[1],k.shape[2],k.shape[3]])),{value:k,gradFunc:w}})(m,p):ma((M,$,O,k)=>{let N=le.runKernel(Pp,E,T);return k([$,M,N,O]),g&&(N=he(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:w}})(m,p,y)}const uH=ue({fusedDepthwiseConv2d_:lH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(Nb(le.state.gradientDepth,i)===!1){let A=en(n,e,t,s);return r!=null&&(A=Ve(A,r)),Ib(A,i,o,a)}let l=H(n,"a","fused matMul"),u=H(e,"b","fused matMul");[l,u]=as(l,u);const h=t?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=t?l.shape[l.rank-1]:l.shape[l.rank-2],m=s?u.shape[u.rank-2]:u.shape[u.rank-1],g=l.shape.slice(0,-2),b=u.shape.slice(0,-2),y=Me(g),v=Me(b);z(h===d,()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${s} must match.`);const E=Yt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,m]),T=t?he(l,[y,h,p]):he(l,[y,p,h]),I=s?he(u,[v,m,d]):he(u,[v,d,m]);let M;r!=null&&(M=H(r,"bias","fused matMul"),[M]=as(M,l),Yt(E,M.shape));let $;o!=null&&($=H(o,"prelu weights","fused matMul"));const O=(A,B)=>{const[W,K,q,Y]=B,J=Eb(he(A,q.shape),q,i);let G,ee;if(!t&&!s?(G=en(J,K,!1,!0),ee=en(W,J,!0,!1)):!t&&s?(G=en(J,K,!1,!1),ee=en(J,W,!0,!1)):t&&!s?(G=en(K,J,!1,!0),ee=en(W,J,!1,!1)):(G=en(K,J,!0,!0),ee=en(J,W,!0,!0)),r!=null){const te=Cb(Y,J);return[G,ee,te]}else return[G,ee]},k={a:T,b:I,bias:M,preluActivationWeights:$},N={transposeA:t,transposeB:s,activation:i,leakyreluAlpha:a};return r==null?ma((B,W,K)=>{const q=le.runKernel($p,k,N);return K([B,W,q]),{value:he(q,E),gradFunc:O}})(T,I):ma((B,W,K,q)=>{const Y=le.runKernel($p,k,N);return q([B,W,Y,K]),{value:he(Y,E),gradFunc:O}})(T,I,M)}const l_=ue({fusedMatMul_:cH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kD=Object.freeze(Object.defineProperty({__proto__:null,conv2d:ND,depthwiseConv2d:uH,matMul:l_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(n){return Tb(n,.54,.46)}const dH=ue({hammingWindow_:hH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(n){return Tb(n,.5,.5)}const MD=ue({hannWindow_:fH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(n,e,t,s=!1,r=0){let i=0;const o=[];for(;i+e<=n.size;)o.push(mn(n,i,e)),i+=t;if(s)for(;i<n.size;){const a=i+e-n.size,l=ys([mn(n,i,e-a),Vc([a],r)]);o.push(l),i+=t}return o.length===0?xc([],[0,e]):he(ys(o),[o.length,e])}const DD=ue({frame_:pH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(n,e,t,s,r=MD){s==null&&(s=XE(e));const i=DD(n,e,t),o=ce(i,r(e));return _g(o,s)}const gH=ue({stft_:mH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(n,e,t,s,r="bilinear",i=0){const o=H(n,"image","cropAndResize"),a=H(e,"boxes","cropAndResize","float32"),l=H(t,"boxInd","cropAndResize","int32"),u=a.shape[0];z(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),z(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),z(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),z(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),z(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),z(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const h={image:o,boxes:a,boxInd:l},d={method:r,extrapolationValue:i,cropSize:s};return le.runKernel(Qx,h,d)}const xH=ue({cropAndResize_:yH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(n){const e=H(n,"image","flipLeftRight","float32");z(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return le.runKernel(uv,t,{})}const bH=ue({flipLeftRight_:vH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const e=H(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];z(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),z(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Li(e,r)}const SH=ue({grayscaleToRGB_:wH});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(n){const e=H(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];z(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),z(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,i=Ze(e,"float32"),o=wr([.2989,.587,.114]);let a;switch(e.rank){case 2:a=ic("ij,j->i",i,o);break;case 3:a=ic("ijk,k->ij",i,o);break;case 4:a=ic("ijkl,l->ijk",i,o);break;case 5:a=ic("ijklm,m->ijkl",i,o);break;case 6:a=ic("ijklmn,n->ijklm",i,o);break;default:throw new Error("Not a valid tensor rank.")}return a=ds(a,-1),Ze(a,r)}const TH=ue({rgbToGrayscale_:_H});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n,e,t=0,s=.5){const r=H(n,"image","rotateWithOffset","float32");z(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},o={radians:e,fillValue:t,center:s};return le.runKernel(Hv,i,o)}const CH=ue({rotateWithOffset_:EH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _f(n,e,t,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const o=n.shape[0];return t=Math.min(t,o),z(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),z(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),z(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),z(e.rank===1,()=>"scores must be a 1D tensor"),z(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),z(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const i=H(n,"boxes","nonMaxSuppression","float32"),o=H(e,"scores","nonMaxSuppression","float32"),a=_f(i,o,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return le.runKernel(vv,{boxes:i,scores:o},l)}const NH=ue({nonMaxSuppression_:IH});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(n,e,t){const s=RH(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function RH(n,e,t){return kH(n,e,t)}function kH(n,e,t){let s=0,r=n.length,i=0,o=!1;for(;s<r;){i=s+(r-s>>>1);const a=t(e,n[i]);a>0?s=i+1:(r=i,o=!a)}return o?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ab(n,e,t,s,r){return KE(n,e,t,s,r,0)}function Rb(n,e,t,s,r,i){return KE(n,e,t,s,r,0,!1,i,!0)}function kb(n,e,t,s,r,i){return KE(n,e,t,s,r,i,!0)}function KE(n,e,t,s,r,i,o=!1,a=!1,l=!1){const u=[];for(let y=0;y<e.length;y++)e[y]>r&&u.push({score:e[y],boxIndex:y,suppressBeginIndex:0});u.sort(lA);const h=i>0?-.5/i:0,d=[],p=[];for(;d.length<t&&u.length>0;){const y=u.pop(),{score:v,boxIndex:w,suppressBeginIndex:E}=y;if(v<r)break;let T=!1;for(let I=d.length-1;I>=E;--I){const M=MH(n,w,d[I]);if(M>=s){T=!0;break}if(y.score=y.score*DH(s,h,M),y.score<=r)break}y.suppressBeginIndex=d.length,T||(y.score===v?(d.push(w),p.push(y.score)):y.score>r&&AH(u,y,lA))}const m=d.length,g=t-m;a&&g>0&&(d.push(...new Array(g).fill(0)),p.push(...new Array(g).fill(0)));const b={selectedIndices:d};return o&&(b.selectedScores=p),l&&(b.validOutputs=m),b}function MH(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),i=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),h=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),m=(a-i)*(l-o),g=(d-u)*(p-h);if(m<=0||g<=0)return 0;const b=Math.max(i,u),y=Math.max(o,h),v=Math.min(a,d),w=Math.min(l,p),E=Math.max(v-b,0)*Math.max(w-y,0);return E/(m+g-E)}function DH(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function lA(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function $H(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const i=H(n,"boxes","nonMaxSuppressionAsync"),o=H(e,"scores","nonMaxSuppressionAsync"),a=_f(i,o,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([i.data(),o.data()]),u=l[0],h=l[1],{selectedIndices:d}=Ab(u,h,t,s,r);return i!==n&&i.dispose(),o!==e&&o.dispose(),wr(d,"int32")}const FH=$H;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PH(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=H(n,"boxes","nonMaxSuppression"),a=H(e,"scores","nonMaxSuppression"),l=_f(o,a,t,s,r,i);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:o,scores:a},h={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},d=le.runKernel(wv,u,h);return{selectedIndices:d[0],selectedScores:d[1]}}const OH=ue({nonMaxSuppressionWithScore_:PH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function LH(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=H(n,"boxes","nonMaxSuppressionAsync"),a=H(e,"scores","nonMaxSuppressionAsync"),l=_f(o,a,t,s,r,i);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([o.data(),a.data()]),h=u[0],d=u[1],{selectedIndices:p,selectedScores:m}=kb(h,d,t,s,r,i);return o!==n&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:wr(p,"int32"),selectedScores:wr(m)}}const UH=LH;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zH(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=H(n,"boxes","nonMaxSuppression"),a=H(e,"scores","nonMaxSuppression"),l=_f(o,a,t,s,r,null),u=l.maxOutputSize,h=l.iouThreshold,d=l.scoreThreshold,p={boxes:o,scores:a},m={maxOutputSize:u,iouThreshold:h,scoreThreshold:d,padToMaxOutputSize:i},g=le.runKernel(bv,p,m);return{selectedIndices:g[0],validOutputs:g[1]}}const BH=ue({nonMaxSuppressionPadded_:zH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function VH(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=H(n,"boxes","nonMaxSuppressionAsync"),a=H(e,"scores","nonMaxSuppressionAsync"),l=_f(o,a,t,s,r,null),u=l.maxOutputSize,h=l.iouThreshold,d=l.scoreThreshold,[p,m]=await Promise.all([o.data(),a.data()]),{selectedIndices:g,validOutputs:b}=Rb(p,m,u,h,d,i);return o!==n&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:wr(g,"int32"),validOutputs:kt(b,"int32")}}const WH=VH;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(n,e,t=!1,s=!1){const r=H(n,"images","resizeBilinear");z(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),z(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),z(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=he(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},l={alignCorners:t,halfPixelCenters:s,size:e},u=le.runKernel(jm,a,l);return o?he(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const $D=ue({resizeBilinear_:GH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(n,e,t=!1,s=!1){const r=H(n,"images","resizeNearestNeighbor");z(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),z(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),z(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),z(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=he(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},l={alignCorners:t,halfPixelCenters:s,size:e},u=le.runKernel(Hm,a,l);return o?he(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const FD=ue({resizeNearestNeighbor_:HH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(n,e="binary",t=!1,s=.5){const r=H(n,"image","threshold"),i=.2989,o=.587,a=.114,l=r.shape[0]*r.shape[1];let u=ce(wr([s]),255),h,d,p,m;if(z(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),z(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),z(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),z(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[h,d,p]=Zr(r,[1,1,1],-1);const y=ce(h,i),v=ce(d,o),w=ce(p,a);m=Ve(Ve(y,v),w)}else m=n;if(e==="otsu"){const y=oE(Ze(hb(m),"int32"),Bi([]),256);u=XH(y,l)}const g=t?vu(m,u):Wr(m,u);return Ze(ce(g,255),"int32")}function XH(n,e){let t=wr([-1]),s=wr([0]),r=wr([0]),i,o,a,l,u,h;for(let d=0;d<n.size-1;d++){i=mn(n,0,d+1),o=mn(n,d+1),u=Nt(Et(i),e),h=Nt(Et(o),e);const p=Et(ce(i,Ja(0,i.size)));a=Nt(p,Et(i));const m=Vc(o.shape,i.size),g=Ve(Ja(0,o.size),m),b=ce(o,g);l=Nt(Et(b),Et(o));const y=mt(a,l),v=mt(a,l),w=ce(u,h);r=ce(ce(w,y),v);const E=Wr(r,s);s=ur(E,r,s),t=ur(E,wr([d]),t)}return t}const qH=ue({threshold_:jH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(n,e,t="nearest",s="constant",r=0,i){const o=H(n,"image","transform","float32"),a=H(e,"transforms","transform","float32");z(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),z(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),z(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:o,transforms:a},u={interpolation:t,fillMode:s,fillValue:r,outputShape:i};return le.runKernel(Wv,l,u)}const YH=ue({transform_:KH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(n,e,t){const s=H(n,"a","bandPart");z(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,o]=s.shape.slice(-2);let a,l;typeof e=="number"?(z(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),z(e<=i,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`),a=H(e<0?i:e,"numLower","bandPart")):(z(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=ur(rd(e,0),i,au(e,i))),typeof t=="number"?(z(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),z(t<=o,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${o}).`),l=H(t<0?o:t,"numUpper","bandPart")):(z(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=ur(rd(t,0),o,au(t,o)));const u=he(Ja(0,i,1,"int32"),[-1,1]),h=Ja(0,o,1,"int32"),d=mt(u,h),p=Do(vu(d,a),al(d,jn(l))),m=Cs([i,o],s.dtype);return he(ni(Gi(he(s,[-1,i,o])).map(g=>ur(p,g,m))),r)}const QH=ue({bandPart_:ZH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(n){let e;if(Array.isArray(n)){e=!1,z(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let i=1;i<n.length;++i)z(n[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${r})`)}else e=!0,n=Zr(n,n.shape[0],0).map(r=>Lr(r,[0]));z(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(le.tidy(()=>{let i=s[r];if(r>0)for(let o=0;o<r;++o){const a=ce(Et(ce(t[o],i)),t[o]);i=mt(i,a)}return Nt(i,bf(i,"euclidean"))}));return e?ni(t,0):t}const e5=ue({gramSchmidt_:JH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n,e=!1){if(z(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return uA(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=Gi(he(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],i=[];s.forEach(l=>{const[u,h]=uA(l,e);r.push(u),i.push(h)});const o=he(ni(r,0),n.shape),a=he(ni(i,0),n.shape);return[o,a]}}function uA(n,e=!1){return le.tidy(()=>{z(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=nb(t),i=aa(n);const o=xc([[1]],[1,1]);let a=aa(o);const l=t>=s?s:t;for(let u=0;u<l;++u){const h=i,d=a,p=r;[a,i,r]=le.tidy(()=>{const m=mn(i,[u,u],[t-u,1]),g=bf(m),b=mn(i,[u,u],[1,1]),y=ur(Wr(b,0),xc([[-1]]),xc([[1]])),v=mt(b,ce(y,g)),w=Nt(m,v);w.shape[0]===1?a=aa(o):a=ys([o,mn(w,[1,0],[w.shape[0]-1,w.shape[1]])],0);const E=jn(Nt(en(y,v),g)),T=mn(i,[u,0],[t-u,s]),I=ce(E,a),M=yn(a);if(u===0)i=mt(T,en(I,en(M,T)));else{const k=mt(T,en(I,en(M,T)));i=ys([mn(i,[0,0],[u,s]),k],0)}const $=yn(I),O=mn(r,[0,u],[t,r.shape[1]-u]);if(u===0)r=mt(O,en(en(O,a),$));else{const k=mt(O,en(en(O,a),$));r=ys([mn(r,[0,0],[t,u]),k],1)}return[a,i,r]}),on([h,d,p])}return!e&&t>s&&(r=mn(r,[0,0],[t,s]),i=mn(i,[0,0],[s,s])),[r,i]})}const n5=ue({qr_:t5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Pr;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Pr||(Pr={}));function s5(n,e,t=Pr.SUM_BY_NONZERO_WEIGHTS){const s=H(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=H(e,"weights","computeWeightedLoss"));const i=r==null?s:ce(s,r);if(t===Pr.NONE)return i;if(t===Pr.SUM)return Et(i);if(t===Pr.MEAN){if(r==null)return is(i);{const o=s.size/r.size,a=Nt(Et(i),Et(r));return o>1?Nt(a,kt(o)):a}}if(t===Pr.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Nt(Et(i),kt(s.size));{const o=ce(r,Yr(s.shape)),a=Ze(Et(Nc(o,kt(0))),"float32");return Nt(Et(i),a)}}throw Error(`Unknown reduction: ${t}`)}const ll=ue({computeWeightedLoss_:s5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(n,e,t,s=Pr.SUM_BY_NONZERO_WEIGHTS){const r=H(n,"labels","absoluteDifference"),i=H(e,"predictions","absoluteDifference");let o=null;t!=null&&(o=H(t,"weights","absoluteDifference")),hr(r.shape,i.shape,"Error in absoluteDifference: ");const a=Es(mt(r,i));return ll(a,o,s)}const i5=ue({absoluteDifference_:r5});function o5(n,e,t,s,r=Pr.SUM_BY_NONZERO_WEIGHTS){const i=H(n,"labels","cosineDistance"),o=H(e,"predictions","cosineDistance");let a=null;s!=null&&(a=H(s,"weights","cosineDistance")),hr(i.shape,o.shape,"Error in cosineDistance: ");const l=kt(1),u=mt(l,Et(ce(i,o),t,!0));return ll(u,a,r)}const a5=ue({cosineDistance_:o5});function l5(n,e,t,s=Pr.SUM_BY_NONZERO_WEIGHTS){let r=H(n,"labels","hingeLoss");const i=H(e,"predictions","hingeLoss");let o=null;t!=null&&(o=H(t,"weights","hingeLoss")),hr(r.shape,i.shape,"Error in hingeLoss: ");const a=kt(1);r=mt(ce(kt(2),r),a);const l=Lo(mt(a,ce(r,i)));return ll(l,o,s)}const u5=ue({hingeLoss_:l5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(n,e,t,s=1,r=Pr.SUM_BY_NONZERO_WEIGHTS){const i=H(n,"labels","huberLoss"),o=H(e,"predictions","huberLoss");let a=null;t!=null&&(a=H(t,"weights","huberLoss")),hr(i.shape,o.shape,"Error in huberLoss: ");const l=kt(s),u=Es(mt(o,i)),h=au(u,l),d=mt(u,h),p=Ve(ce(kt(.5),zn(h)),ce(l,d));return ll(p,a,r)}const h5=ue({huberLoss_:c5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(n,e,t,s=1e-7,r=Pr.SUM_BY_NONZERO_WEIGHTS){const i=H(n,"labels","logLoss"),o=H(e,"predictions","logLoss");let a=null;t!=null&&(a=H(t,"weights","logLoss")),hr(i.shape,o.shape,"Error in logLoss: ");const l=kt(1),u=kt(s),h=jn(ce(i,wi(Ve(o,u)))),d=ce(mt(l,i),wi(Ve(mt(l,o),u))),p=mt(h,d);return ll(p,a,r)}const f5=ue({logLoss_:d5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(n,e,t,s=Pr.SUM_BY_NONZERO_WEIGHTS){const r=H(n,"labels","meanSquaredError"),i=H(e,"predictions","meanSquaredError");let o=null;t!=null&&(o=H(t,"weights","meanSquaredError")),hr(r.shape,i.shape,"Error in meanSquaredError: ");const a=vb(r,i);return ll(a,o,s)}const m5=ue({meanSquaredError_:p5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5(n,e){const t=H(n,"labels","sigmoidCrossEntropyWithLogits"),s=H(e,"logits","sigmoidCrossEntropyWithLogits");hr(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Lo(s),i=ce(s,t),o=dg(ti(jn(Es(s))));return Ve(mt(r,i),o)}function y5(n,e,t,s=0,r=Pr.SUM_BY_NONZERO_WEIGHTS){let i=H(n,"multiClassLabels","sigmoidCrossEntropy");const o=H(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=H(t,"weights","sigmoidCrossEntropy")),hr(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=kt(s),h=kt(1),d=kt(.5);i=Ve(ce(i,mt(h,u)),ce(d,u))}const l=g5(i,o);return ll(l,a,r)}const x5=ue({sigmoidCrossEntropy_:y5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v5(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return ma((r,i,o)=>{const l=fg(i,[t],!0),u=mt(Ze(i,"float32"),l);o([r,u]);const h=jn(ce(u,r));return{value:Et(h,[t]),gradFunc:(m,g)=>{const[b,y]=g,v=vs(m.shape,[t]);return[ce(he(m,v),mt(Ze(b,"float32"),ti(y))),ce(he(m,v),mt(ti(y),Ze(b,"float32")))]}}})(n,e)}function b5(n,e,t,s=0,r=Pr.SUM_BY_NONZERO_WEIGHTS){let i=H(n,"onehotLabels","softmaxCrossEntropy");const o=H(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=H(t,"weights","softmaxCrossEntropy")),hr(i.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const u=kt(s),h=kt(1),d=kt(i.shape[1]);i=Ve(ce(i,mt(h,u)),Nt(u,d))}const l=v5(i,o);return ll(l,a,r)}const w5=ue({softmaxCrossEntropy_:b5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S5(n,e,t,s){const r=H(n,"indices","sparseFillEmptyRows","int32"),i=H(e,"values","sparseFillEmptyRows"),o=H(t,"denseShape","sparseFillEmptyRows","int32"),a=H(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:r,values:i,denseShape:o,defaultValue:a},u=le.runKernel(Mv,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const _5=ue({sparseFillEmptyRows_:S5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T5(n,e,t){const s=H(n,"inputIndices","sparseReshape","int32"),r=H(e,"inputShape","sparseReshape","int32"),i=H(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const o={inputIndices:s,inputShape:r,newShape:i},a=le.runKernel(Dv,o);return{outputIndices:a[0],outputShape:a[1]}}const E5=ue({sparseReshape_:T5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(n,e,t){const s=H(n,"data","sparseSegmentMean"),r=H(e,"indices","sparseSegmentMean","int32"),i=H(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const o={data:s,indices:r,segmentIds:i};return le.runKernel($v,o)}const I5=ue({sparseSegmentMean_:C5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(n,e,t){const s=H(n,"data","sparseSegmentSum"),r=H(e,"indices","sparseSegmentSum","int32"),i=H(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const o={data:s,indices:r,segmentIds:i};return le.runKernel(Fv,o)}const A5=ue({sparseSegmentSum_:N5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(n,e,t,s,r,i,o,a){const l=H(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=H(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const h={separator:t,nGramWidths:s,leftPad:r,rightPad:i,padWidth:o,preserveShortSequences:a},d={data:l,dataSplits:u},p=le.runKernel(Uv,d,h);return{nGrams:p[0],nGramsSplits:p[1]}}const k5=ue({stringNGrams_:R5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M5(n,e,t=!0){const s=H(n,"input","stringSplit","string"),r=H(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:t},o={input:s,delimiter:r},a=le.runKernel(zv,o,i);return{indices:a[0],values:a[1],shape:a[2]}}const D5=ue({stringSplit_:M5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(n,e){const t=H(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return le.runKernel(Bv,r,s)}const F5=ue({stringToHashBucketFast_:$5});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n,e,t,s=!0){const r=H(n,"input","staticRegexReplace","string"),i={pattern:e,rewrite:t,replaceGlobal:s};return le.runKernel(eg,{x:r},i)}const O5=ue({staticRegexReplace_:P5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD={fft:Sg,ifft:ad,rfft:_g,irfft:xb},OD={hammingWindow:dH,hannWindow:MD,frame:DD,stft:gH},Ur={flipLeftRight:bH,grayscaleToRGB:SH,resizeNearestNeighbor:FD,resizeBilinear:$D,rgbToGrayscale:TH,rotateWithOffset:CH,cropAndResize:xH,nonMaxSuppression:NH,nonMaxSuppressionAsync:FH,nonMaxSuppressionWithScore:OH,nonMaxSuppressionWithScoreAsync:UH,nonMaxSuppressionPadded:BH,nonMaxSuppressionPaddedAsync:WH,threshold:qH,transform:YH},YE={bandPart:QH,gramSchmidt:e5,qr:n5},LD={absoluteDifference:i5,computeWeightedLoss:ll,cosineDistance:a5,hingeLoss:u5,huberLoss:h5,logLoss:f5,meanSquaredError:m5,sigmoidCrossEntropy:x5,softmaxCrossEntropy:w5},UD={sparseFillEmptyRows:_5,sparseReshape:E5,sparseSegmentMean:I5,sparseSegmentSum:A5},zD={stringNGrams:k5,stringSplit:D5,stringToHashBucketFast:F5,staticRegexReplace:O5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5=new Map,u_=new Map;class Hc{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Oi{constructor(){this.classNameMap={}}static getMap(){return Oi.instance==null&&(Oi.instance=new Oi),Oi.instance}static register(e){Oi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ge(n,e,t){z(n.className!=null,()=>"Class being registered does not have the static className property defined."),z(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),z(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return Oi.register(n),L5.set(r,n),u_.set(n,r),n}function U5(n){return u_.has(n)?u_.get(n):n.className}const z5=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Hc,SerializationMap:Oi,getRegisteredName:U5,registerClass:Ge},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ul extends Hc{minimize(e,t=!1,s){const{value:r,grads:i}=this.computeGradients(e,s);if(s!=null){const o=s.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(o)}else this.applyGradients(i);return on(i),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return XM(e,t)}dispose(){this.iterations_!=null&&on(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:kt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ul,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZE extends ul{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=le.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=le.registeredVariables[s],o=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:xe(()=>vn(i).variable(o))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:xe(()=>vn(i).variable(o))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;xe(()=>{const h=Ve(ce(l,this.rho),ce(zn(a),1-this.rho)),d=ce(Nt(Zs(Ve(u,this.epsilon)),Zs(Ve(l,this.epsilon))),a),p=Ve(ce(u,this.rho),ce(zn(d),1-this.rho));l.assign(h),u.assign(p);const m=Ve(ce(d,-this.learningRate),i);i.assign(m)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(on(this.accumulatedGrads.map(e=>e.variable)),on(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QE extends ul{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=le.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:xe(()=>Vc(i.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const a=this.accumulatedGrads[r].variable;xe(()=>{const l=Ve(a,zn(o));a.assign(l);const u=Ve(ce(Nt(o,Zs(Ve(l,le.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&on(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JE extends ul{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],xe(()=>{this.accBeta1=kt(t).variable(),this.accBeta2=kt(s).variable()}),r==null&&(this.epsilon=le.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);xe(()=>{const s=mt(1,this.accBeta1),r=mt(1,this.accBeta2);t.forEach((i,o)=>{const a=le.registeredVariables[i],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:xe(()=>vn(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${i}/v`,variable:xe(()=>vn(a).variable(l))});const u=Array.isArray(e)?e[o].tensor:e[i];if(u==null)return;const h=this.accumulatedFirstMoment[o].variable,d=this.accumulatedSecondMoment[o].variable,p=Ve(ce(h,this.beta1),ce(u,1-this.beta1)),m=Ve(ce(d,this.beta2),ce(zn(u),1-this.beta2)),g=Nt(p,s),b=Nt(m,r);h.assign(p),d.assign(m);const y=Ve(ce(Nt(g,Ve(Zs(b),this.epsilon)),-this.learningRate),a);a.assign(y)}),this.accBeta1.assign(ce(this.accBeta1,this.beta1)),this.accBeta2.assign(ce(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&on(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&on(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),xe(()=>{this.accBeta1.assign(pa(this.beta1,this.iterations_+1)),this.accBeta2.assign(pa(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eC extends ul{static get className(){return"Adamax"}constructor(e,t,s,r=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],xe(()=>{this.iteration=kt(0).variable(),this.accBeta1=kt(t).variable()}),r==null&&(this.epsilon=le.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);xe(()=>{const s=mt(1,this.accBeta1),r=Nt(-this.learningRate,Ve(ce(this.iteration,this.decay),1));t.forEach((i,o)=>{const a=le.registeredVariables[i],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:vn(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${i}/v`,variable:vn(a).variable(l)});const u=Array.isArray(e)?e[o].tensor:e[i];if(u==null)return;const h=this.accumulatedFirstMoment[o].variable,d=this.accumulatedWeightedInfNorm[o].variable,p=Ve(ce(h,this.beta1),ce(u,1-this.beta1)),m=ce(d,this.beta2),g=Es(u),b=va(m,g);h.assign(p),d.assign(b);const y=Ve(ce(Nt(r,s),Nt(p,Ve(b,this.epsilon))),a);a.assign(y)}),this.iteration.assign(Ve(this.iteration,1)),this.accBeta1.assign(ce(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&on(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&on(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mb extends ul{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const o=le.registeredVariables[s];xe(()=>{const a=Ve(ce(this.c,i),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Ds(kt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tC extends Mb{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=kt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=le.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:xe(()=>vn(i).variable(!1))});const o=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&xe(()=>{let l;const u=Ve(ce(this.m,o),a);this.useNesterov?l=Ve(ce(this.c,Ve(a,ce(u,this.m))),i):l=Ve(ce(this.c,u),i),o.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&on(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nC extends ul{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=le.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=le.registeredVariables[s],o=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:xe(()=>vn(i).variable(o))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:xe(()=>vn(i).variable(o))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:xe(()=>vn(i).variable(o))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;xe(()=>{const h=Ve(ce(l,this.decay),ce(zn(a),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,p=Ve(ce(d,this.decay),ce(a,1-this.decay)),m=Nt(ce(a,this.learningRate),Zs(mt(h,Ve(zn(p),this.epsilon)))),g=Ve(ce(u,this.momentum),m);l.assign(h),d.assign(p),u.assign(g);const b=mt(i,g);i.assign(b)}else{const d=Ve(ce(l,this.decay),ce(zn(a),1-this.decay)),p=Ve(ce(u,this.momentum),Nt(ce(a,this.learningRate),Zs(Ve(d,this.epsilon))));l.assign(d),u.assign(p);const m=mt(i,p);i.assign(m)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&on(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&on(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&on(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5=[ZE,QE,JE,eC,tC,nC,Mb];function V5(){for(const n of B5)Ge(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5="model",G5=".json",H5=".weights.bin";function cA(n){return new Promise(e=>setTimeout(e)).then(n)}class Rc{constructor(e){if(!_e().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Rc.URL_SCHEME)&&(e=e.slice(Rc.URL_SCHEME.length)),(e==null||e.length===0)&&(e=W5),this.modelJsonFileName=e+G5,this.weightDataFileName=e+H5}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Oo.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=IM(e,r),o=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=o,await cA(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await cA(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ig(e)}}}}Rc.URL_SCHEME="downloads://";class j5{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const i=JSON.parse(r.target.result),o=i.modelTopology;if(o==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:o});return}const l=HT(i,u=>this.loadWeights(u));e(l)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const o of e)t.push(...o.weights),s.push(...o.paths);const r=this.checkManifestAndWeightFiles(e),i=s.map(o=>this.loadWeightsFile(o,r[o]));return Promise.all(i).then(o=>[t,o])}loadWeightsFile(e,t){return new Promise((s,r)=>{const i=new FileReader;i.onload=o=>{const a=o.target.result;s(a)},i.onerror=o=>r(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(i=>JN(i.name)),r={};for(const i of e)i.paths.forEach(o=>{const a=JN(o);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[o]=this.weightsFiles[s.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const X5=n=>_e().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Rc.URL_SCHEME)?q5(n.slice(Rc.URL_SCHEME.length)):null;rs.registerSaveRouter(X5);function q5(n="model"){return new Rc(n)}function K5(n){return new j5(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(n,e,t,s){o(n),t=t??0,s=s??1,a(t,s);let r=0;const i=l=>(l.then(u=>{const h=t+ ++r/n.length*(s-t);return e(h),u}),l);function o(l){z(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){z(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),z(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),z(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function BD(n,e){e==null&&(e={});const t=e.fetchFunc==null?_e().platform.fetch:e.fetchFunc,s=n.map(d=>t(d,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await hA(s,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(a):await hA(a,e.onProgress,.5,1)}function Y5(n,e){var t;const s=e.fetchFunc==null?_e().platform.fetch:e.fetchFunc;let r=0,i;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async o=>{for(var a;r<n.length;){i||(i=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await i.read();if(l){r++,i=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,r/n.length);continue}o.enqueue(u);return}o.close()}})}async function Z5(n,e="",t,s){return VD(o=>BD(o,{requestInit:s}))(n,e,t)}function VD(n){return async(e,t="",s)=>{const r=e.map(()=>!1),i={},o=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((m,g)=>{let b=0;m.weights.forEach(y=>{const v="quantization"in y?y.quantization.dtype:y.dtype,w=_c[v]*Me(y.shape),E=()=>{r[g]=!0,i[g]==null&&(i[g]=[]),i[g].push({manifestEntry:y,groupOffset:b,sizeBytes:w})};s!=null?s.forEach((T,I)=>{T===y.name&&(E(),o[I]=!0)}):E(),a.push(y.name),b+=w})}),!o.every(m=>m)){const m=s.filter((g,b)=>!o[b]);throw new Error(`Could not find weights in manifest with names: ${m.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((m,g,b)=>(g&&m.push(b),m),[]),u=[];l.forEach(m=>{e[m].paths.forEach(g=>{const b=t+(t.endsWith("/")?"":"/")+g;u.push(b)})});const h=await n(u),d={};let p=0;return l.forEach(m=>{const g=e[m].paths.length,b=new Oo(h.slice(p,p+g));i[m].forEach(v=>{const w=b.slice(v.groupOffset,v.groupOffset+v.sizeBytes),E=_M(w,[v.manifestEntry]);for(const T in E)d[T]=E[T]}),p+=g}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5="application/octet-stream",J5="application/json";class sC{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(z(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=_e().platform.fetch,z(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&z(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=IM(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:J5}),"model.json"),e.weightData!=null){const o=Oo.join(e.weightData);t.body.append("model.weights.bin",new Blob([o],{type:Q5}),"model.weights.bin")}const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:ig(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return HT(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=n_(e.weightsManifest),r=()=>Y5(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=e6(t),i=this.weightPathPrefix||s,o=[],a=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(u)):o.push(i+u+r);return this.weightUrlConverter&&o.push(...await Promise.all(a)),o}async loadWeights(e){const t=await this.getWeightUrls(e),s=n_(e),r=await BD(t,this.loadOptions);return[s,r]}}sC.URL_SCHEME_REGEX=/^https?:\/\//;function e6(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function c_(n){return n.match(sC.URL_SCHEME_REGEX)!=null}const WD=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>c_(s)):t=c_(n),t)return rC(n,e)}return null};rs.registerSaveRouter(WD);rs.registerLoadRouter(WD);function rC(n,e){return new sC(n,e)}function t6(n,e){return rC(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q1{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class GD{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class n6{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function s6(n,e,t,s){const r=arguments;return new n6(HD(...r))}function HD(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new q1(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new q1({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new q1({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function r6(n){return new GD(n)}function i6(n){return new GD(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iC=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Oo,browserFiles:K5,browserHTTPRequest:t6,concatenateArrayBuffers:CM,copyModel:PB,decodeWeights:_M,decodeWeightsStream:EM,encodeWeights:t_,fromMemory:s6,fromMemorySync:HD,getLoadHandlers:SB,getModelArtifactsForJSON:HT,getModelArtifactsForJSONSync:NM,getModelArtifactsInfoForJSON:ig,getSaveHandlers:AM,getWeightSpecs:n_,http:rC,isHTTPScheme:c_,listModels:$B,loadWeights:Z5,moveModel:OB,registerLoadRouter:wB,registerSaveRouter:bB,removeModel:FB,weightsLoaderFactory:VD,withSaveHandler:r6,withSaveHandlerSync:i6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n,e,t){const s=H(n,"labels","confusionMatrix"),r=H(e,"predictions","confusionMatrix");z(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),z(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),z(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),z(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),z(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const i=Ac(Ze(s,"int32"),t),o=Ac(Ze(r,"int32"),t),a=yn(i),l=en(a,o);return Ze(l,"int32")}const a6=ue({confusionMatrix_:o6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:a6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hu,dA=!1;function jD(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,i=!1,o=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)o=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Lp(cx,le.backendName)!=null){const g={pixels:n},b={numChannels:e};return le.runKernel(cx,g,b)}const[u,h]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;if(o)d=n.getContext("2d").getImageData(0,0,u,h).data;else if(s||t)d=n.data;else if(i||r||a){if(Hu==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Hu=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Hu=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Hu.canvas.width=u,Hu.canvas.height=h,Hu.drawImage(n,0,0,u,h),d=Hu.getImageData(0,0,u,h).data}let p;if(e===4)p=new Int32Array(d);else{const g=u*h;p=new Int32Array(g*e);for(let b=0;b<g;b++)for(let y=0;y<e;++y)p[b*e+y]=d[b*4+y]}return zE(p,[h,u,e],"int32")}function u6(n){return n!=null&&n.data instanceof Uint8Array}function c6(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function h6(n){return n!=null&&n.width!==0&&n.height!==0}function d6(n){return c6()&&!(n instanceof ImageBitmap)&&h6(n)&&!u6(n)}async function f6(n,e=3){let t=null;if(_e().getBool("WRAP_TO_IMAGEBITMAP")&&d6(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?t=s:t=n}else t=n;return jD(t,e)}function XD(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function p6(n){const e=(n==null?void 0:n.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function Db(n,e){let t=H(n,"img","toPixels");if(!(n instanceof gn)){const u=t;t=Ze(u,"int32"),u.dispose()}XD(t);const[s,r]=t.shape.slice(0,2),i=t.rank===2?1:t.shape[2],o=await t.data(),a=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const h=[0,0,0,255];for(let p=0;p<i;p++){const m=o[u*i+p];if(t.dtype==="float32"){if(m<0||m>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${m}.`)}else if(t.dtype==="int32"&&(m<0||m>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${m}.`);i===1?(h[0]=m*a,h[1]=m*a,h[2]=m*a):h[p]=m*a}const d=u*4;l[d+0]=Math.round(h[0]),l[d+1]=Math.round(h[1]),l[d+2]=Math.round(h[2]),l[d+3]=Math.round(h[3])}if(e!=null){dA||Lp(rv,le.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),dA=!0),e.width=r,e.height=s;const u=e.getContext("2d"),h=new ImageData(l,r,s);u.putImageData(h,0,0)}return t!==n&&t.dispose(),l}function m6(n,e,t){let s=H(n,"img","draw");if(!(n instanceof gn)){const o=s;s=Ze(o,"int32"),o.dispose()}XD(s),p6(t==null?void 0:t.imageOptions);const r={image:s},i={canvas:e,options:t};le.runKernel(rv,r,i)}const $b=ue({fromPixels_:jD}),g6=Object.freeze(Object.defineProperty({__proto__:null,draw:m6,fromPixels:$b,fromPixelsAsync:f6,toPixels:Db},Symbol.toStringTag,{value:"Module"}));function Fb(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(Me(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,i=r[r.length-1];let o=1;for(let d=0;d<r.length-1;++d)o*=r[d];const a=n.shape,l=r.slice();l.pop();let u=1;for(let d=i;d<t;++d)u*=a[d],l.push(a[d]);const h=[...Lt(n.shape).map(d=>d/u),1].slice(0,i);return[l,o,u,h]}const y6=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Fb},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h_=-2,x6=-1;function oC(n,e,t){const s=n.shape.length;z(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),z(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)z(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function v6(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function aC(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function qD(n,e,t,s){const r=[...n];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<t;i++)i===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function KD(n,e,t){return t<=n?t:t-(e-1)}function YD(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function b6(n,e,t,s,r,i,o,a,l){const u=n.length;let h=new Array(u),d=new Array(u),p=new Array(u);if(e.length&&t>0){const m=e[0],g=t+1;h=ZD(o,m,g,s,n),d=QD(a,m,g,r,n),p=qD(i,m,g,n)}else for(let m=0;m<u;m++)h[m]=e$(o,s,i,n,m,l),d[m]=t$(a,r,i,n,m,l),p[m]=JD(i,m,l);return{begin:h,end:d,strides:p}}function ZD(n,e,t,s,r){const i=[...r],o=YD(t,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const l=KD(e,t,a);let u=s[l];n&1<<l&&(u=0),i[a]=u}return i}function QD(n,e,t,s,r){const i=[...r],o=YD(t,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const l=KD(e,t,a);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[a]=u}for(let a=0;a<i.length;a++){const l=r[a];i[a]<0&&(i[a]+=l),i[a]=eu(0,i[a],r[a])}return i}function JD(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function e$(n,e,t,s,r,i){let o=e[r];const a=t[r]||1;(n&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),o=eu(0,o,l-1),o}function t$(n,e,t,s,r,i){let o=e[r];const a=t[r]||1;(n&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),a>0?o=eu(0,o,l):o=eu(-1,o,l-1),o}function lC(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function uC(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Pb(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(o=>{z(o!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(r).fill(-1):typeof t=="number"?i=[t,...new Array(r-1).fill(-1)]:t.length<r?i=t.concat(new Array(r-t.length).fill(-1)):i=t,i=i.map((o,a)=>o>=0?o:(z(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,i]}function cC(n,e,t,s,r,i,o,a,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,o!=null&&o&o-1)throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let E=0;E<d.dims;E++)h&&1<<E&a&&d.numAddAxisAfterEllipsis++,1<<E&o&&(h=!0);h||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};w6(d,p);let m=!0,g=!0,b=!0;const y=[],v=[];for(let E=0;E<n.length;++E){if(p.strides[E]===0)throw Error(`strides[${E}] must be non-zero`);const T=!!(p.shrinkAxisMask&1<<E),I=n[E];if(I===-1){y.push(T?1:-1);continue}const M=[p.beginMask&1<<E,p.endMask&1<<E],$=[p.strides[E]>0?0:-1,p.strides[E]>0?I:I-1];if(T&&p.strides[E]<=0)throw Error("only stride 1 allowed on non-range indexing.");b=b&&p.strides[E]===1;const O=!!(p.beginMask&1<<E&&p.endMask&1<<E);if(p.beginValid&&p.endValid){if(T){const B=p.begin[E]<0?I+p.begin[E]:p.begin[E];if(p.begin[E]=B,p.end[E]=p.begin[E]+1,B<0||B>=I)throw Error(`slice index ${p.begin[E]} of dimension ${E} out of bounds.`)}else p.begin[E]=fA(p.begin[E],0,p.strides[E],I,M,$),p.end[E]=fA(p.end[E],1,p.strides[E],I,M,$);const A=p.strides[E]===1&&p.begin[E]===0&&p.end[E]===I;m=m&&A,g=g&&(E===0&&p.strides[E]===1||A)}else m=m&&p.strides[E]===1&&O,g=g&&(E===0&&p.strides[E]===1||O);let k,N=!1;if(p.beginValid&&p.endValid?(k=p.end[E]-p.begin[E],N=!0):T?(k=1,N=!0):O&&I>=0&&(p.strides[E]<0?k=-I:k=I,N=!0),N){let A;k===0||k<0!=p.strides[E]<0?A=0:A=Math.trunc(k/p.strides[E])+(k%p.strides[E]!==0?1:0),y.push(A)}else y.push(-1)}for(let E=0;E<p.finalShapeGatherIndices.length;++E){const T=p.finalShapeGatherIndices[E];T>=0?v.push(y[T]):T===h_&&v.push(1)}return{finalShapeSparse:v.filter((E,T)=>p.finalShapeGatherIndices[T]!==h_),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:p.begin,end:p.end,strides:p.strides}}function w6(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(h_),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(x6),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function fA(n,e,t,s,r,i){if(r[e])return t>0?i[e]:i[e+1&1];{const o=n<0?s+n:n;return o<i[0]?i[0]:o>i[1]?i[1]:o}}const n$=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:oC,computeFlatOffset:uC,computeOutShape:aC,getNormalizedAxes:b6,isSliceContinous:lC,maskToAxes:v6,parseSliceParams:Pb,sliceInfo:cC,startForAxis:e$,startIndicesWithElidedDims:ZD,stopForAxis:t$,stopIndicesWithElidedDims:QD,stridesForAxis:JD,stridesWithElidedDims:qD},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const S6="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s${static sgd(e){return new Mb(e)}static momentum(e,t,s=!1){return new tC(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,i=!1){return new nC(e,t,s,r,i)}static adam(e=.001,t=.9,s=.999,r=null){return new JE(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new ZE(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,i=0){return new eC(e,t,s,r,i)}static adagrad(e,t=.1){return new QE(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tc=s$;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function hC(){return new Promise(n=>_6(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(n,e){const t=n[0].length;n.forEach((r,i)=>{z(r.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),z(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,i)=>{for(let o=0;o<t;o++)z(o===e||r[o]===s[o],()=>`Error in concat${t}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function la(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Eo;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Eo||(Eo={}));function r$(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const i=t[r],o=s[s.length-t.length+r],a=s[o];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${i} but shape[${r+n}] = ${a}`)}else s[o]=i}return s}function i$(n){const e={FIRST_DIM_SIZE:Eo.FIRST_DIM_SIZE,VALUE_ROWIDS:Eo.VALUE_ROWIDS,ROW_LENGTHS:Eo.ROW_LENGTHS,ROW_SPLITS:Eo.ROW_SPLITS,ROW_LIMITS:Eo.ROW_LIMITS,ROW_STARTS:Eo.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function o$(n){return n.length===0?0:n[0]===Eo.FIRST_DIM_SIZE?n.length-1:n.length}function a$(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const i=n[r],o=e[r+1];if(i>=0&&o>=0&&i!==1&&i!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${i} but ragged tensor input.flatValues.shape[${r-n.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC=30;function Ob(n){return n<=fC?n:ax(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tg(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const i=e.length;for(let o=0;o<i;++o)r=r.concat([n[o+1]/e[o],e[o]]);r=r.concat(n.slice(i+1))}return r}function Eg(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],i=[];for(let o=1;o<n;++o)o>=e*2+1||o%2===1?i.push(o):r.push(o);s.push(...r),s.push(0),s.push(...i)}return s}function Cg(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?s?r.push(e[i-1]*n[i]):r.push(n[i]/e[i-1]):r.push(n[i]);return r}function mC(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function gC(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lb=1.7580993408473768,Ub=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC=.3275911,xC=.254829592,vC=-.284496736,bC=1.421413741,wC=-1.453152027,SC=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function el(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function l$(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function u$(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function c$(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function _C(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function h$(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function d$(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const i=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:t,imag:s}}function f$(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K1="->",T6=/->/g,pA=",",mA="...";function TC(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(T6,"").length)/K1.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${K1}").`);const[s,r]=n.split(K1);z(s.indexOf(mA)===-1,()=>`The ellipsis notation ("${mA}") is not supported yet.`);const i=s.split(pA),o=i.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let p=0;p<r.length;++p){const m=r[p];if(!i.some(g=>g.indexOf(m)!==-1))throw new Error(`Output subscripts contain the label ${m} not present in the input subscripts.`);a.indexOf(m)===-1&&a.push(m)}for(let p=0;p<s.length;++p){const m=s[p];a.indexOf(m)===-1&&m!==pA&&a.push(m)}const l=new Array(i.length);for(let p=0;p<o;++p){if(new Set(i[p].split("")).size!==i[p].length)throw new Error(`Found duplicate axes in input component ${i[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let m=0;m<i[p].length;++m)l[p].push(a.indexOf(i[p][m]))}const u=a.length,h=r.length,d=[];for(let p=h;p<u;++p)d.push(p);return{allDims:a,summedDims:d,idDims:l}}function EC(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function CC(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const i=t[r].shape;for(let o=0;o<e[r].length;++o)s[e[r][o]]===void 0?s[e[r][o]]=i[o]:z(s[e[r][o]]===i[o],()=>`Expected dimension ${s[e[r][o]]} at axis ${o} of input shaped ${JSON.stringify(i)}, but got dimension ${i[o]}`)}}function IC(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let o=0;o<r;++o)s.push([]);const i=[];for(let o=0;o<t.length;++o){const a=t[o],l=E6(e,a);for(const u of l)i.indexOf(u)===-1&&(s[o].push(u),i.push(u))}return{path:t,steps:s}}function NC(n){return n.every((e,t)=>e===t)}function E6(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function AC(n,e,t=0){let s=[];if(typeof e=="number")z(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((o,a)=>(a===-1&&(o+=1),o),0);z(r<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const o=e.reduce((a,l)=>l>0?a+l:a);e[i]=n.shape[t]-o}z(n.shape[t]===e.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function m$(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function g$(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function x$(n,e){return`size ${n} must be non-negative, not ${e}`}function v$(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function b$(n,e){const t=Me(n),s=Me(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function w$(n,e){const t=Me(n),s=Me(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(){return"segment ids must be >= 0"}function S$(){return"segment ids are not increasing"}function _$(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function T$(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n,e){let t=!1,s;for(n<=fC?(s=n,t=!0):s=ax(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=ax(n,s+1);return s}function C$(n,e,t){const s=[],r=n.length;for(let i=0;i<r;i++)i!==e?s.push(n[i]):s.push(t);return s}function RC(n,e,t,s){const r=e.shape.length,i=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let d=0;d<s;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const o=n.shape[t],a=[];let l=1,u=1,h=1;for(let d=0;d<s;++d)a.push(n.shape[d]),l*=n.shape[d];for(let d=s;d<t;d++)a.push(n.shape[d]),u*=n.shape[d];for(let d=s;d<r;d++)a.push(e.shape[d]);for(let d=t+1;d<i;d++)a.push(n.shape[d]),h*=n.shape[d];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:o,outputShape:a}}const C6=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:RC,computeOutShape:C$,segOpComputeOptimalWindowSize:E$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tl(n){try{return n.map(e=>Ya(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function I$(n){return n.map(e=>oa(e))}const N$=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:xC,ERF_A2:vC,ERF_A3:bC,ERF_A4:wC,ERF_A5:SC,ERF_P:yC,PARALLELIZE_THRESHOLD:fC,get RowPartitionType(){return Eo},SELU_SCALE:Ub,SELU_SCALEALPHA:Lb,applyActivation:Ib,assertAndGetBroadcastShape:Yt,assertAxesAreInnerMostDims:fr,assertParamsConsistent:dC,assignToTypedArray:h$,axesAreInnerMostDims:vE,calculateShapes:wu,checkEinsumDimSizes:CC,checkPadOnDimRoundingMode:Vr,combineLocations:GM,combineRaggedTensorToTensorShapes:r$,complexWithEvenIndex:u$,complexWithOddIndex:c$,computeConv2DInfo:er,computeConv3DInfo:yu,computeDefaultPad:tE,computeDilation2DInfo:og,computeOptimalWindowSize:Ob,computeOutAndReduceShapes:tr,computeOutShape:la,computePool2DInfo:lo,computePool3DInfo:il,convertConv2DDataFormat:ol,decodeEinsumEquation:TC,eitherStridesOrDilationsAreOne:dr,expandShapeToKeepDim:vs,exponent:f$,exponents:d$,fromStringArrayToUint8:I$,fromUint8ToStringArray:tl,getAxesPermutation:ls,getBroadcastDims:Ic,getComplexWithIndex:_C,getEinsumComputePath:IC,getEinsumPermutation:EC,getFusedBiasGradient:Cb,getFusedDyActivation:Eb,getImageCenter:pC,getInnerMostAxes:bs,getPermuted:Eg,getRaggedRank:o$,getReductionAxes:Ns,getReshaped:Tg,getReshapedPermuted:Cg,getRowPartitionTypesHelper:i$,getSliceBeginCoords:mC,getSliceSize:gC,getSparseFillEmptyRowsIndicesDenseShapeMismatch:p$,getSparseFillEmptyRowsNegativeIndexErrorMessage:m$,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:g$,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:v$,getSparseReshapeInputOutputMismatchErrorMessage:w$,getSparseReshapeInputOutputMultipleErrorMessage:b$,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:y$,getSparseReshapeNegativeOutputDimErrorMessage:x$,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:T$,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:d_,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:S$,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:_$,getUndoAxesPermutation:xu,isIdentityPermutation:NC,log:wz,mergeRealAndImagArrays:el,prepareAndValidate:Fb,prepareSplitSize:AC,segment_util:C6,shouldFuse:Nb,slice_util:n$,splitRealAndImagArrays:l$,stridesOrDilationsArePositive:Cc,tupleValuesAreOne:iu,upcastType:Qr,validateDefaultValueShape:a$,validateInput:bb,validateUpdateShape:BE,warn:Pi},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Ab,nonMaxSuppressionV4Impl:Rb,nonMaxSuppressionV5Impl:kb,whereImpl:_b},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */V5();const A$=Object.freeze(Object.defineProperty({__proto__:null,Abs:tm,Acos:wd,Acosh:Sd,AdadeltaOptimizer:ZE,AdagradOptimizer:QE,AdamOptimizer:JE,AdamaxOptimizer:eC,Add:Bc,AddN:nm,All:Bx,Any:Vx,ArgMax:sm,ArgMin:rm,Asin:_d,Asinh:Td,Atan:Ed,Atan2:Id,Atanh:Cd,AvgPool:im,AvgPool3D:om,AvgPool3DGrad:Gx,AvgPoolGrad:Wx,BatchMatMul:am,BatchToSpaceND:lm,Bincount:Hx,BitwiseAnd:um,BroadcastArgs:jx,BroadcastTo:iM,Cast:Nd,Ceil:Ad,ClipByValue:Rd,Complex:Xx,ComplexAbs:cm,Concat:hm,Conv2D:dm,Conv2DBackpropFilter:qx,Conv2DBackpropInput:fm,Conv3D:pm,Conv3DBackpropFilterV2:Kx,Conv3DBackpropInputV2:Yx,Cos:kd,Cosh:Md,CropAndResize:Qx,Cumprod:Zx,Cumsum:mm,DataStorage:RT,DenseBincount:Jx,DepthToSpace:ev,DepthwiseConv2dNative:gm,DepthwiseConv2dNativeBackpropFilter:tv,DepthwiseConv2dNativeBackpropInput:nv,Diag:sv,Dilation2D:ym,Dilation2DBackpropFilter:ux,Dilation2DBackpropInput:lx,Draw:rv,get ENV(){return FT},Einsum:iv,Elu:$d,EluGrad:ov,Environment:sM,Equal:xm,Erf:Fd,Exp:Pd,ExpandDims:vm,Expm1:Od,FFT:av,Fill:lv,FlipLeftRight:uv,Floor:Ld,FloorDiv:Ud,FromPixels:cx,FusedBatchNorm:bm,FusedConv2D:Fp,FusedDepthwiseConv2D:Pp,GatherNd:cv,GatherV2:wm,Greater:Sm,GreaterEqual:zd,IFFT:hv,Identity:Bd,Imag:dv,IsFinite:Vd,IsInf:Wd,IsNan:Gd,KernelBackend:Lx,LRN:Am,LRNGrad:pv,LeakyRelu:_m,Less:Tm,LessEqual:Em,LinSpace:fv,Log:Hd,Log1p:jd,LogSoftmax:oM,LogicalAnd:Cm,LogicalNot:Im,LogicalOr:Nm,LogicalXor:gz,LowerBound:yz,MatrixBandPart:xz,Max:Rm,MaxPool:km,MaxPool3D:Mm,MaxPool3DGrad:gv,MaxPoolGrad:mv,MaxPoolWithArgmax:yv,Maximum:Xd,Mean:Dm,Min:$m,Minimum:qd,MirrorPad:Fm,Mod:Kd,MomentumOptimizer:tC,Multinomial:xv,Multiply:Yd,Neg:Pm,NonMaxSuppressionV3:vv,NonMaxSuppressionV4:bv,NonMaxSuppressionV5:wv,NotEqual:Om,OP_SCOPE_SUFFIX:BT,OneHot:Um,OnesLike:Lm,Optimizer:ul,OptimizerConstructors:s$,Pack:zm,PadV2:Bm,Pool:vz,Pow:Zd,Prelu:Vm,Prod:Wm,RMSPropOptimizer:nC,RaggedGather:Sv,RaggedRange:_v,RaggedTensorToTensor:Tv,Range:Ev,get Rank(){return qS},Real:Cv,RealDiv:Dd,Reciprocal:Qd,get Reduction(){return Pr},Relu:Jd,Relu6:ef,Reshape:Gm,ResizeBilinear:jm,ResizeBilinearGrad:Nv,ResizeNearestNeighbor:Hm,ResizeNearestNeighborGrad:Iv,Reverse:Xm,RotateWithOffset:Hv,Round:tf,Rsqrt:nf,SGDOptimizer:Mb,ScatterNd:Av,SearchSorted:kv,Select:qm,Selu:sf,Sigmoid:lf,Sign:af,Sin:rf,Sinh:of,Slice:Km,Softmax:Jm,Softplus:uf,SpaceToBatchND:Zm,SparseFillEmptyRows:Mv,SparseReshape:Dv,SparseSegmentMean:$v,SparseSegmentSum:Fv,SparseToDense:Pv,SplitV:Qm,Sqrt:cf,Square:Ov,SquaredDifference:hf,StaticRegexReplace:eg,Step:gf,StridedSlice:Lv,StringNGrams:Uv,StringSplit:zv,StringToHashBucketFast:Bv,Sub:df,Sum:Ym,Tan:ff,Tanh:pf,Tensor:gn,TensorBuffer:Is,TensorScatterUpdate:Rv,Tile:mf,TopK:Vv,Transform:Wv,Transpose:gc,Unique:Gv,Unpack:tg,UnsortedSegmentSum:ng,UpperBound:bz,Variable:Up,ZerosLike:sg,_FusedMatMul:$p,abs:Es,acos:XT,acosh:qT,add:Ve,addN:OM,all:Yv,any:Bp,argMax:ru,argMin:KT,asin:YT,asinh:ZT,atan:QT,atan2:JT,atanh:eE,avgPool:ag,avgPool3d:nE,backend:qv,backend_util:N$,basicLSTMCell:LM,batchNorm:yf,batchNorm2d:sE,batchNorm3d:rE,batchNorm4d:iE,batchToSpaceND:lg,bincount:oE,bitwiseAnd:UM,booleanMaskAsync:SD,broadcastArgs:zM,broadcastTo:yc,broadcast_util:Q4,browser:g6,buffer:tn,cast:Ze,ceil:aE,clipByValue:ei,clone:aa,complex:Za,concat:ys,concat1d:lE,concat2d:uE,concat3d:cE,concat4d:hE,conv1d:Zv,conv2d:Qa,conv2dTranspose:Qv,conv3d:fE,conv3dTranspose:pE,copyRegisteredKernels:Tz,cos:ug,cosh:Jv,cosineWindow:Tb,cumprod:Gp,cumsum:eb,customGrad:ma,denseBincount:dx,deprecationWarn:sB,depthToSpace:mE,depthwiseConv2d:xf,device_util:Zz,diag:VM,dilation2d:gE,disableDeprecationWarnings:nB,dispose:on,disposeVariables:rB,div:Nt,divNoNan:yE,dot:xE,dropout:jE,einsum:ic,elu:vf,enableDebugMode:tB,enableProdMode:eB,enclosingPowerOfTwo:XE,engine:Fi,ensureShape:WM,env:_e,equal:bi,erf:tb,euclideanNorm:bE,exp:ti,expandDims:ds,expm1:wE,eye:nb,fft:Sg,fill:Vc,findBackend:lB,findBackendFactory:uB,floor:wf,floorDiv:Kv,fused:kD,gather:Sf,gatherND:CD,gather_util:y6,getBackend:VT,getGradient:jS,getKernel:Lp,getKernelsForBackend:hx,grad:FV,grads:PV,greater:Wr,greaterEqual:al,ifft:ad,imag:cg,image:Ur,inTopKAsync:ID,io:iC,irfft:xb,isFinite:SE,isInf:_E,isNaN:TE,keep:Ds,kernel_impls:I6,leakyRelu:hg,less:rd,lessEqual:vu,linalg:YE,linspace:jM,localResponseNormalization:EE,log:wi,log1p:dg,logSigmoid:CE,logSoftmax:rb,logSumExp:fg,logicalAnd:Do,logicalNot:pg,logicalOr:ib,logicalXor:IE,losses:LD,lowerBound:qM,matMul:en,math:l6,max:Vi,maxPool:mg,maxPool3d:NE,maxPoolWithArgmax:KM,maximum:va,mean:is,memory:e_,meshgrid:YM,min:sd,minimum:au,mirrorPad:ab,mod:AE,moments:gg,movingAverage:_D,mul:ce,multiRNNCell:ZM,multinomial:QM,neg:jn,nextFrame:hC,norm:bf,notEqual:Nc,oneHot:Ac,ones:Yr,onesLike:Si,op:ue,outerProduct:JM,pad:ba,pad1d:eD,pad2d:tD,pad3d:RE,pad4d:nD,pool:kE,pow:pa,prelu:xg,print:jT,prod:ME,profile:iB,raggedGather:sD,raggedRange:rD,raggedTensorToTensor:iD,rand:oD,randomGamma:uD,randomNormal:ub,randomStandardNormal:cD,randomUniform:bu,randomUniformInt:hD,range:Ja,ready:SM,real:id,reciprocal:PE,registerBackend:WT,registerGradient:aM,registerKernel:jv,relu:Lo,relu6:cb,removeBackend:aB,reshape:he,reverse:Wi,reverse1d:dD,reverse2d:fD,reverse3d:pD,reverse4d:mD,rfft:_g,round:hb,rsqrt:db,scalar:kt,scatterND:TD,scatter_util:zG,searchSorted:ob,selu:fb,separableConv2d:pb,serialization:z5,setBackend:wM,setPlatform:cB,setdiff1dAsync:gD,sigmoid:yi,sign:OE,signal:OD,sin:mb,sinh:gb,slice:mn,slice1d:vg,slice2d:yb,slice3d:bg,slice4d:od,slice_util:n$,softmax:wg,softplus:Wc,spaceToBatchND:yg,sparse:UD,sparseToDense:ED,spectral:PD,split:Zr,sqrt:Zs,square:zn,squaredDifference:vb,squeeze:Lr,stack:ni,step:Gc,stridedSlice:LE,string:zD,sub:mt,sum:Et,sumOutType:Xv,tan:UE,tanh:ou,tensor:Bi,tensor1d:wr,tensor2d:xc,tensor3d:zE,tensor4d:yD,tensor5d:xD,tensor6d:vD,tensorScatterUpdate:bD,tensor_util:jz,test_util:JW,tidy:xe,tile:Li,time:oB,topk:VE,train:tc,transpose:yn,truncatedNormal:wb,unique:WE,unregisterGradient:_z,unregisterKernel:Sz,unsortedSegmentSum:Sb,unstack:Gi,upcastType:Qr,upperBound:wD,util:Dz,valueAndGrad:OV,valueAndGrads:LV,variable:GE,variableGrads:XM,version_core:S6,where:ur,whereAsync:HE,zeros:Cs,zerosLike:vn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R$={kernelName:tm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(n,Gc(Ze(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:wd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=zn(Ze(t,"float32")),r=Zs(mt(kt(1),s));return jn(Nt(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:Sd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Zs(mt(zn(Ze(t,"float32")),1));return Nt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6={kernelName:Bc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Yt(t.shape,s.shape);return{a:()=>{let a=n;const l=Ns(t.shape,r);return l.length>0&&(a=Et(a,l)),he(a,t.shape)},b:()=>{let a=n;const l=Ns(s.shape,r);return l.length>0&&(a=Et(a,l)),he(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:nm,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6={kernelName:sm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>vn(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:rm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>vn(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:_d,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nt(n,Zs(mt(kt(1),zn(Ze(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6={kernelName:Td,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Zs(Ve(kt(1),zn(Ze(t,"float32"))));return Nt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6={kernelName:Id,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Yt(t.shape,s.shape);return{a:()=>{const a=Ve(zn(t),zn(s));let l=ce(n,Nt(s,a));const u=Ns(t.shape,r);return u.length>0&&(l=Et(l,u)),he(l,t.shape)},b:()=>{const a=Ve(zn(t),zn(s));let l=jn(ce(n,Nt(t,a)));const u=Ns(s.shape,r);return u.length>0&&(l=Et(l,u)),he(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6={kernelName:Ed,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nt(n,Ve(zn(Ze(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6={kernelName:Cd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nt(n,mt(kt(1),zn(Ze(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n,e,t,s,r,i){const o=H(n,"dy","avgPool3dGrad"),a=H(e,"input","avgPool3dGrad");let l=o,u=a,h=!1;a.rank===4&&(h=!0,l=he(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=he(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),z(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),z(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Vr("avgPool3dGrad",r,i);const d={dy:l,input:u},p={filterSize:t,strides:s,pad:r,dimRoundingMode:i},m=le.runKernel(Gx,d,p);return h?he(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const z6=ue({avgPool3dGrad_:U6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6={kernelName:om,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:a}=t;return{x:()=>z6(n,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(n,e,t,s,r){const i=H(n,"dy","avgPoolGrad"),o=H(e,"input","avgPoolGrad");z(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let a=o,l=i,u=!1;o.rank===3&&(u=!0,a=he(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=he(i,[1,i.shape[0],i.shape[1],i.shape[2]])),z(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),z(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const h={dy:l,input:a},d={filterSize:t,strides:s,pad:r},p=le.runKernel(Wx,h,d);return u?he(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const W6=ue({avgPoolGrad_:V6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6={kernelName:im,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:i,pad:o}=t;return{x:()=>W6(n,s,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6={kernelName:am,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:i,transposeB:o}=t;return!i&&!o?{a:()=>en(n,r,!1,!0),b:()=>en(s,n,!0,!1)}:!i&&o?{a:()=>en(n,r,!1,!1),b:()=>en(n,s,!0,!1)}:i&&!o?{a:()=>en(r,n,!1,!0),b:()=>en(s,n,!1,!1)}:{a:()=>en(r,n,!0,!0),b:()=>en(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6={kernelName:lm,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>yg(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6={kernelName:iM,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,i=s.shape,o=Array.from(i);for(let l=r.length-1;l>=0;l--)if(r[l]===i[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>Et(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6={kernelName:Nd,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6={kernelName:Ad,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6={kernelName:Rd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=t;return{x:()=>ur(Do(al(s,r),vu(s,i)),n,vn(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6={kernelName:cm,inputsToSave:["x"],gradFunc:R$.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={kernelName:hm,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:r}=t,i=an(r,e[0].shape)[0],o=s.map(l=>l[i]);return Zr(n,o,i).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6={kernelName:dm,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:i,strides:o,pad:a,dataFormat:l}=t;return z(iu(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>dE(s.shape,n,r,o,a,l),filter:()=>qE(s,n,r.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e8={kernelName:fm,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:i,pad:o,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>Qa(n,r,i,o,a,1,l),filter:()=>qE(n,s,r.shape,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(n,e,t,s,r){let i=n;n.rank===4&&(i=he(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let o=e;o.rank===4&&(o=he(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),z(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),z(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),z(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),z(i.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${t[3]}.`),z(o.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:i,dy:o},l={strides:s,pad:r,filterShape:t};return le.runKernel(Kx,a,l)}const n8=ue({conv3DBackpropFilter_:t8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s8={kernelName:pm,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:i}=t;z(iu(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,a]=e;return{x:()=>BM(o.shape,n,a,r,i),filter:()=>n8(o,n,a.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8={kernelName:kd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(jn(mb(Ze(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i8={kernelName:Md,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(gb(Ze(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8={kernelName:mm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:i,reverse:o}=t;return{x:()=>{const a=ls([r],s.rank);let l=eb(n,r,i,!o);return a!=null&&(l=yn(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a8={kernelName:gm,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:o}=t,a=s??[1,1];z(iu(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,u]=e;return z(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),z(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),z(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),z(dr(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),Vr("depthwiseConv2d",i,o),{x:()=>RD(l.shape,n,u,r,i,a,o),filter:()=>AD(l,n,u.shape,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8={kernelName:ym,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,i={x:s,filter:r,dy:n},o={x:s,filter:r,dy:n};return{x:()=>le.runKernel(lx,i,t),filter:()=>le.runKernel(ux,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u8={kernelName:$d,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>le.runKernel(ov,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8={kernelName:Fd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=ce(ti(jn(zn(t))),2/Math.sqrt(Math.PI));return{x:()=>ce(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8={kernelName:Pd,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8={kernelName:vm,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>he(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f8={kernelName:Od,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(n,ti(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8={kernelName:Ld,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8={kernelName:Ud,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Yt(t.shape,s.shape);return{a:()=>{const a=Nt(n,Ze(s,"float32")),l=Ns(t.shape,r);return l.length>0?he(Et(a,l),t.shape):a},b:()=>{let a=ce(n,Ze(t,"float32"));const l=Ns(s.shape,r);l.length>0&&(a=he(Et(a,l),s.shape));const u=zn(s);return jn(Nt(a,Ze(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g8={kernelName:bm,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,i,o,a]=e,l=a??kt(1),u=Ns(i.shape,r.shape),h=[];if(i.rank===1){for(let T=0;T<r.shape.length-1;++T)h.push(r.shape[T]);h.push(1)}const d=mt(r,i),p=ce(n,l),m=db(Ve(o,kt(s))),g=ce(ce(ce(m,m),m),kt(-.5));return{x:()=>i.rank===1?he(ce(ce(n,Li(he(m,[1,1,1,i.shape[0]]),h)),l),r.shape):he(ce(ce(n,m),l),r.shape),mean:()=>{let T=ce(ce(m,kt(-1)),p);return i.rank===1&&(T=Et(T,u)),he(T,i.shape)},variance:()=>{let T=ce(ce(g,d),p);return i.rank===1&&(T=Et(T,u)),he(T,i.shape)},scale:()=>{const T=ce(d,m);let I=ce(n,T);return i.rank===1&&(I=Et(I,u)),he(I,i.shape)},offset:()=>{let T=n;return i.rank===1&&(T=Et(T,u)),he(T,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8={kernelName:wm,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:i,batchDims:o}=t,a=an(i,s.shape)[0],l=(u,h,d)=>()=>{const p=u.shape,m=h.size,g=p.slice(0,a),b=g.length,y=p.slice(i,p.length).slice(1),v=y.length,w=gA(0,b),E=gA(b+1,b+1+v),T=yA([g,[m],y]),I=he(d,T),M=he(h,[m]),$=yA([[b],w,E]),O=yn(I,$);let k=Sb(O,M,u.shape[a]);const N=xu($);return k=yn(k,N),k};if(o===1){const u=s.shape[0],h=s.split(u,0);return{x:()=>ni(h.map((m,g)=>l(m,r.slice(g,1),n.slice(g,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function gA(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function yA(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8={kernelName:zd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>vn(t),b:()=>vn(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8={kernelName:Bd,gradFunc:n=>({x:()=>Ze(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8={kernelName:Vd,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8={kernelName:Wd,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S8={kernelName:Gd,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8={kernelName:_m,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,i=Wr(s,0);return{x:()=>ur(i,n,ce(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T8={kernelName:jd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nt(n,Ve(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8={kernelName:Hd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nt(n,Ze(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C8={kernelName:oM,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const o=ti(s);return mt(n,ce(Et(n,r,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I8(n,e,t,s=5,r=1,i=1,o=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:r,alpha:i,beta:o};return le.runKernel(pv,a,l)}const N8=ue({localResponseNormalizationBackprop_:I8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8={kernelName:Am,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:i,bias:o,alpha:a,beta:l}=t;return{x:()=>N8(s,r,n,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n,e,t,s){return e.rank<t.rank&&(e=he(e,vs(e.shape,s))),n.rank<t.rank&&(n=he(n,vs(n.shape,s))),{x:()=>ce(n,Ze(bi(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xA={kernelName:Rm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,i=e[0],o=e[1],a=an(r,i.shape),l=k$(n,o,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8={kernelName:Xd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>ce(n,Ze(al(t,s),"float32")),b:()=>ce(n,Ze(rd(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(n,e,t,s,r,i,o){const a=H(n,"dy","maxPool3dGrad"),l=H(e,"input","maxPool3dGrad"),u=H(t,"output","maxPool3dGrad");let h=a,d=l,p=u,m=!1;l.rank===4&&(m=!0,h=he(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),d=he(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=he(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),z(h.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),z(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),z(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Vr("maxPool3dGrad",i,o);const g={dy:h,input:d,output:p},b={filterSize:s,strides:r,pad:i,dimRoundingMode:o},y=le.runKernel(gv,g,b);return m?he(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const M8=ue({maxPool3dGrad_:k8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8={kernelName:Mm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=t;return{x:()=>M8(n,s,r,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8(n,e,t,s,r,i,o){const a=H(n,"dy","maxPoolGrad"),l=H(e,"input","maxPoolGrad"),u=H(t,"output","maxPoolGrad");z(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),z(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),z(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Vr("maxPoolGrad",i,o);const h={dy:a,input:l,output:u},d={filterSize:s,strides:r,pad:i,dimRoundingMode:o};return le.runKernel(mv,h,d)}const F8=ue({maxPoolGrad_:$8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8={kernelName:km,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:i,strides:o,pad:a}=t;return{x:()=>F8(n,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O8={kernelName:Dm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,i=an(r,s.shape),a=tr(s.shape,i)[1],l=Me(a);return{x:()=>{const h=s.shape.slice();i.forEach(m=>{h[m]=1});const d=he(n,h);return Nt(ce(d,Yr(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8={kernelName:$m,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[i,o]=e,a=an(r,i.shape),l=k$(n,o,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8={kernelName:qd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>ce(n,Ze(vu(t,s),"float32")),b:()=>ce(n,Ze(Wr(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8={kernelName:Fm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,i=r.map(o=>o[0]);return{x:()=>mn(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8={kernelName:Kd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Yt(t.shape,s.shape);return{a:()=>{const a=Ns(t.shape,r);return a.length>0?he(Et(n,a),t.shape):n},b:()=>{const a=ce(n,jn(wf(Nt(t,s)))),l=Ns(s.shape,r);return l.length>0?he(Et(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8={kernelName:Yd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Yt(t.shape,s.shape);return{a:()=>{const a=ce(n,Ze(s,"float32")),l=Ns(t.shape,r);return l.length>0?he(Et(a,l),t.shape):a},b:()=>{const a=ce(n,Ze(t,"float32")),l=Ns(s.shape,r);return l.length>0?he(Et(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8={kernelName:Pm,gradFunc:n=>({x:()=>jn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8={kernelName:Um,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Cs(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8={kernelName:Lm,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8={kernelName:zm,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return Gi(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vA={kernelName:Bm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,i=r.map(o=>o[0]);return{x:()=>mn(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8={kernelName:Zd,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,i=t,o=s,a=Yt(i.shape,o.shape);return{a:()=>{const h=Ze(o,"float32");let d=ce(n,ce(h,pa(i,mt(h,kt(1)))));const p=Ns(i.shape,a);return p.length>0&&(d=Et(d,p)),he(d,i.shape)},b:()=>{const h=Wr(i,0),d=ur(h,wi(i),vn(i));let p=ce(n,ce(r,d));const m=Ns(o.shape,a);return m.length>0&&(p=Et(p,m)),he(p,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q8={kernelName:Vm,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=Wr(t,0);return{x:()=>ur(r,n,ce(n,s)),alpha:()=>{let i=ur(r,vn(n),ce(n,t));const o=Ns(s.shape,n.shape);return o.length>0&&(i=Et(i,o)),he(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K8(n,e,t){const s=n.shape.slice();s[t]=1;const r=he(e,s),i=Gp(n,t,!0,!1),o=Gp(n,t,!0,!0),a=ce(i,o);return ce(r,a)}function Y8(n,e,t){const s=n.shape.length,r=s-t.length,i=ls(t,s);let o=n;i!=null&&(o=yn(n,i));const a=o.shape.slice(),u=a.splice(s-t.length,t.length).reduce((p,m)=>p*m,1);a.push(u);const h=o.reshape(a);let d=K8(h,e,r);if(d=d.reshape(o.shape),i!=null){const p=xu(i);d=yn(d,p)}return d}const Z8={kernelName:Wm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let i=[];return r==null?i=s.shape.map((o,a)=>a):typeof r=="number"?i=[r]:i=r,{x:()=>Y8(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8={kernelName:Dd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Yt(t.shape,s.shape);return{a:()=>{const a=Nt(n,Ze(s,"float32")),l=Ns(t.shape,r);return l.length>0?he(Et(a,l),t.shape):a},b:()=>{let a=ce(n,Ze(t,"float32"));const l=Ns(s.shape,r);l.length>0&&(a=he(Et(a,l),s.shape));const u=zn(s);return jn(Nt(a,Ze(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8={kernelName:Qd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nt(n,jn(zn(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej={kernelName:ef,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=ce(vu(t,6),Gc(t));return{x:()=>ce(n,Ze(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj={kernelName:Jd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(n,Ze(Gc(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:Gm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:jm,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>le.runKernel(Nv,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:Hm,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>le.runKernel(Iv,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:Xm,gradFunc:(n,e,t)=>{const{dims:s}=t,r=an(s,n.shape);return{x:()=>Wi(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:tf,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:nf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>jn(Nt(n,ce(pa(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj={kernelName:qm,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>Ze(vn(t),"float32"),t:()=>ce(n,Ze(t,n.dtype)),e:()=>ce(n,Ze(pg(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj={kernelName:sf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Wr(t,kt(0)),r=kt(Lb),i=kt(Ub),o=ce(n,i),a=ce(ce(n,r),ti(Ze(t,"float32")));return ur(s,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:lf,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(n,ce(t,mt(kt(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj={kernelName:af,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj={kernelName:rf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(ug(Ze(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj={kernelName:of,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(Jv(Ze(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj={kernelName:Km,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:i}=t,o=s.shape,[a,l]=Pb(s,r,i),u=[];for(let h=0;h<n.rank;h++)u.push([a[h],o[h]-a[h]-l[h]]);return{x:()=>ba(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj={kernelName:Jm,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,i=!0,o=ce(n,s);return{logits:()=>mt(o,ce(Et(o,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj={kernelName:uf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(n,yi(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bA={kernelName:Zm,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>lg(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wA={kernelName:Qm,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>ys(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yj={kernelName:cf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nt(n,ce(Zs(Ze(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj={kernelName:Ov,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(n,ce(Ze(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj={kernelName:hf,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=kt(2);return{a:()=>ce(n,ce(r,mt(t,s))),b:()=>ce(n,ce(r,mt(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj={kernelName:gf,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wj={kernelName:df,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Yt(t.shape,s.shape);return{a:()=>{let a=n;const l=Ns(t.shape,r);return l.length>0&&(a=Et(a,l)),he(a,t.shape)},b:()=>{let a=n;const l=Ns(s.shape,r);return l.length>0&&(a=Et(a,l)),he(jn(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj={kernelName:Ym,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:i}=t;an(i,s.shape).forEach(u=>{r[u]=1});const a=he(n,r),l=ce(a,Yr(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j={kernelName:ff,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Nt(n,zn(ug(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tj={kernelName:pf,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ce(mt(kt(1),zn(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ej={kernelName:mf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let o=vn(s);if(s.rank===1)for(let a=0;a<r[0];++a)o=Ve(o,mn(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)o=Ve(o,mn(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)o=Ve(o,mn(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let h=0;h<r[3];++h)o=Ve(o,mn(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2],h*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj={kernelName:gc,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,i=xu(r);return{x:()=>yn(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ij={kernelName:tg,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>ni(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj={kernelName:ng,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Aj(n,t)}}};function Aj(n,e){const t=va(e,vn(e)),s=Sf(n,t);let r=al(e,kt(0,"int32"));const i=s.rank-r.rank;for(let a=0;a<i;++a)r=ds(r,a+1);r=Do(r,Yr(s.shape,"bool"));const o=vn(s);return ur(r,s,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rj={kernelName:sg,gradFunc:n=>({x:()=>vn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj=[R$,N6,A6,R6,k6,M6,D6,$6,F6,P6,O6,L6,B6,G6,H6,j6,X6,q6,K6,Y6,Z6,Q6,e8,J6,s8,r8,i8,o8,a8,l8,Q8,u8,c8,h8,d8,f8,m8,p8,g8,y8,x8,v8,b8,w8,S8,_8,T8,E8,C8,A8,xA,xA,R8,D8,P8,O8,L8,U8,z8,B8,V8,W8,G8,H8,j8,vA,vA,X8,q8,Z8,J8,ej,tj,nj,sj,rj,ij,oj,aj,lj,uj,cj,hj,dj,fj,pj,mj,gj,bA,bA,wA,wA,yj,vj,xj,bj,wj,Sj,_j,Tj,Ej,Cj,Ij,Nj,Rj];for(const n of kj)aM(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.abs=function(){return this.throwIfDisposed(),Es(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.acos=function(){return this.throwIfDisposed(),XT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.acosh=function(){return this.throwIfDisposed(),qT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.add=function(n){return this.throwIfDisposed(),Ve(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.all=function(n,e){return this.throwIfDisposed(),Yv(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.any=function(n,e){return this.throwIfDisposed(),Bp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.argMax=function(n){return this.throwIfDisposed(),ru(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.argMin=function(n){return this.throwIfDisposed(),KT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.asScalar=function(){return this.throwIfDisposed(),z(this.size===1,()=>"The array must have only 1 element."),he(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.asType=function(n){return this.throwIfDisposed(),Ze(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.as1D=function(){return this.throwIfDisposed(),he(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.as2D=function(n,e){return this.throwIfDisposed(),he(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),he(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),he(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),he(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.asin=function(){return this.throwIfDisposed(),YT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.asinh=function(){return this.throwIfDisposed(),ZT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.atan=function(){return this.throwIfDisposed(),QT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.atan2=function(n){return this.throwIfDisposed(),JT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.atanh=function(){return this.throwIfDisposed(),eE(this)};Fe().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),ag(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),lg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),yf(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.broadcastTo=function(n){return this.throwIfDisposed(),yc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.cast=function(n){return this.throwIfDisposed(),Ze(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.ceil=function(){return this.throwIfDisposed(),aE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),ei(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof gn&&(n=[n]),ys([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.conv1d=function(n,e,t,s,r,i){return this.throwIfDisposed(),Zv(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),Qv(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.conv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),Qa(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.cos=function(){return this.throwIfDisposed(),ug(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.cosh=function(){return this.throwIfDisposed(),Jv(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),Gp(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),eb(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),mE(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.depthwiseConv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),xf(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),gE(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.divNoNan=function(n){return this.throwIfDisposed(),yE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.div=function(n){return this.throwIfDisposed(),Nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.dot=function(n){return this.throwIfDisposed(),xE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.elu=function(){return this.throwIfDisposed(),vf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.equal=function(n){return this.throwIfDisposed(),bi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.erf=function(){return this.throwIfDisposed(),tb(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),bE(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.exp=function(){return this.throwIfDisposed(),ti(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.expandDims=function(n){return this.throwIfDisposed(),ds(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.expm1=function(){return this.throwIfDisposed(),wE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.fft=function(){return this.throwIfDisposed(),Sg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.flatten=function(){return this.throwIfDisposed(),he(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.floor=function(){return this.throwIfDisposed(),wf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.floorDiv=function(n){return this.throwIfDisposed(),Kv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.gather=function(n,e,t){return this.throwIfDisposed(),Sf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.greaterEqual=function(n){return this.throwIfDisposed(),al(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.greater=function(n){return this.throwIfDisposed(),Wr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.ifft=function(){return this.throwIfDisposed(),ad(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.irfft=function(){return this.throwIfDisposed(),xb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.isFinite=function(){return this.throwIfDisposed(),SE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.isInf=function(){return this.throwIfDisposed(),_E(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.isNaN=function(){return this.throwIfDisposed(),TE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.leakyRelu=function(n){return this.throwIfDisposed(),hg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.lessEqual=function(n){return this.throwIfDisposed(),vu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.less=function(n){return this.throwIfDisposed(),rd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),EE(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.logSigmoid=function(){return this.throwIfDisposed(),CE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.logSoftmax=function(n){return this.throwIfDisposed(),rb(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),fg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.log=function(){return this.throwIfDisposed(),wi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.log1p=function(){return this.throwIfDisposed(),dg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Do(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.logicalNot=function(){return this.throwIfDisposed(),pg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.logicalOr=function(n){return this.throwIfDisposed(),ib(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.logicalXor=function(n){return this.throwIfDisposed(),IE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),en(this,n,e,t)};Fe().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),mg(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.max=function(n,e){return this.throwIfDisposed(),Vi(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.maximum=function(n){return this.throwIfDisposed(),va(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.mean=function(n,e){return this.throwIfDisposed(),is(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.min=function(n,e){return this.throwIfDisposed(),sd(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.minimum=function(n){return this.throwIfDisposed(),au(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),ab(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.mod=function(n){return this.throwIfDisposed(),AE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.mul=function(n){return this.throwIfDisposed(),ce(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.neg=function(){return this.throwIfDisposed(),jn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.norm=function(n,e,t){return this.throwIfDisposed(),bf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.notEqual=function(n){return this.throwIfDisposed(),Nc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Ac(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.onesLike=function(){return this.throwIfDisposed(),Si(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.pad=function(n,e){return this.throwIfDisposed(),ba(this,n,e)};Fe().prototype.pool=function(n,e,t,s,r,i){return this.throwIfDisposed(),kE(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.pow=function(n){return this.throwIfDisposed(),pa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.prelu=function(n){return this.throwIfDisposed(),xg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.prod=function(n,e){return this.throwIfDisposed(),ME(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.reciprocal=function(){return this.throwIfDisposed(),PE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.relu=function(){return this.throwIfDisposed(),Lo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.relu6=function(){return this.throwIfDisposed(),cb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.reshapeAs=function(n){return this.throwIfDisposed(),he(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.reshape=function(n){return this.throwIfDisposed(),he(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),$D(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),FD(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.reverse=function(n){return this.throwIfDisposed(),Wi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.rfft=function(){return this.throwIfDisposed(),_g(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.round=function(){return this.throwIfDisposed(),hb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.rsqrt=function(){return this.throwIfDisposed(),db(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.selu=function(){return this.throwIfDisposed(),fb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.separableConv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),pb(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.sigmoid=function(){return this.throwIfDisposed(),yi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.sign=function(){return this.throwIfDisposed(),OE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.sin=function(){return this.throwIfDisposed(),mb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.sinh=function(){return this.throwIfDisposed(),gb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.slice=function(n,e){return this.throwIfDisposed(),mn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.softmax=function(n){return this.throwIfDisposed(),wg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.softplus=function(){return this.throwIfDisposed(),Wc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),yg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.split=function(n,e){return this.throwIfDisposed(),Zr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.sqrt=function(){return this.throwIfDisposed(),Zs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.square=function(){return this.throwIfDisposed(),zn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.squaredDifference=function(n){return this.throwIfDisposed(),vb(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.squeeze=function(n){return this.throwIfDisposed(),Lr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof gn?[this,n]:[this,...n];return ni(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.step=function(n){return this.throwIfDisposed(),Gc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.stridedSlice=function(n,e,t,s,r,i,o,a){return this.throwIfDisposed(),LE(this,n,e,t,s,r,i,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.sub=function(n){return this.throwIfDisposed(),mt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.sum=function(n,e){return this.throwIfDisposed(),Et(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.tan=function(){return this.throwIfDisposed(),UE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.tanh=function(){return this.throwIfDisposed(),ou(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.tile=function(n){return this.throwIfDisposed(),Li(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.toBool=function(){return this.throwIfDisposed(),Ze(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.toFloat=function(){return this.throwIfDisposed(),Ze(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.toInt=function(){return this.throwIfDisposed(),Ze(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.topk=function(n,e){return this.throwIfDisposed(),VE(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.transpose=function(n){return this.throwIfDisposed(),yn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.unique=function(n){return this.throwIfDisposed(),WE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Sb(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.unstack=function(n){return this.throwIfDisposed(),Gi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.where=function(n,e){return this.throwIfDisposed(),ur(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Fe().prototype.zerosLike=function(){return this.throwIfDisposed(),vn(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qo extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qo.prototype)}}class oo extends Error{constructor(e){super(e),Object.setPrototypeOf(this,oo.prototype)}}class pe extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pe.prototype)}}class sn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sn.prototype)}}class kC extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kC.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class M${constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kc(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Jo(n,e){if(!n)throw new kC(e)}function SA(n,e){let t=0;for(const s of n)s===e&&t++;return t}function Kr(n){return n.length===1?n[0]:n}function Mn(n){return Array.isArray(n)?n:[n]}function za(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function oc(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let eo={};function MC(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function f_(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>f_(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:f_(s))}}}function Ig(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const i=n;let o;if(i in t)o=t[i];else if(i in eo)o=eo[i];else if(o=e[i],o==null)throw new pe(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const i=n;if(i.className==null||i.config==null)throw new pe(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const o=i.className;let a,l;if(o in t?[a,l]=t[o]:o in eo?[a,l]=eo.className:o in e&&([a,l]=e[o]),a==null)throw new pe(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const m of Object.keys(eo))u[m]=eo[m];for(const m of Object.keys(t))u[m]=t[m];const h=i.config;h.customObjects=u;const d=Object.assign({},eo);for(const m of Object.keys(t))eo[m]=t[m];f_(i.config);const p=l(a,i.config,t,r);return eo=Object.assign({},d),p}else{const u=Object.assign({},eo);for(const d of Object.keys(t))eo[d]=t[d];const h=new a(i.config);return eo=Object.assign({},u),h}}}function Mj(n,e){return n<e?-1:n>e?1:0}function Jy(n,e){return-1*Mj(n,e)}function Yl(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function Dj(n){if(n==null)throw new pe(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function jc(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new pe(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function DC(n,e,t=0,s=1/0){return Jo(t>=0),Jo(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function Ks(n,e){Array.isArray(n)?(z(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>Ks(t,`element ${s+1} of ${e}`))):z(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${D$(n)}.`)}function D$(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>D$(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function $j(n,e,t){let s=t!=null?t():Dr(),r;return(...o)=>{const a=t!=null?t():Dr();return a-s<e||(s=a,r=n(...o)),r}}function $$(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Fj=0;function F$(){return Fj++}const e0={};function zb(n=""){return n in e0||(e0[n]=0),e0[n]+=1,n+e0[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Pj=["channelsFirst","channelsLast"],Oj=["nearest","bilinear"],Lj=["valid","same","causal"],Uj=["max","avg"],zj=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ih=new Map;function ws(n){jc(Pj,"DataFormat",n)}function Bj(n){jc(Oj,"InterpolationFormat",n)}function Hi(n){jc(Lj,"PaddingMode",n)}function P$(n){jc(Uj,"PoolMode",n)}const Mp=[],_A="/";function vc(n,e){Mp.push(n);try{const t=e();return Mp.pop(),t}catch(t){throw Mp.pop(),t}}function Vj(){return Mp.length===0?"":Mp.join(_A)+_A}function O$(n){if(!U$(n))throw new Error("Not a valid tensor name: '"+n+"'");return Vj()+n}function L$(n){if(!U$(n))throw new Error("Not a valid tensor name: '"+n+"'");Ih.has(n)||Ih.set(n,0);const e=Ih.get(n);if(Ih.set(n,Ih.get(n)+1),e>0){const t=`${n}_${e}`;return Ih.set(t,1),t}else return n}const Wj=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function U$(n){return!!n.match(Wj)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gj(n){return n===parseInt(n.toString(),10)}function Zl(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function ld(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function lu(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function $o(n,e){if(e<n)throw new pe(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Y1;function $s(){return Y1==null&&(Y1=qv().epsilon()),Y1}function Fo(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ua(n,e){return Ze(n,e)}function Ng(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),he(n,t)}function Hj(n,e){return xe(()=>{if(n.shape.length!==2)throw new pe(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Ng(n,1);return p_(t,[1,e,1])})}function jj(n){const e=[Zl(n.shape)];return he(n,e)}function Xj(n){if(n.rank<=1)throw new pe(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Zl(n.shape,1)];return he(n,e)}function bc(n,e,t){return xe(()=>{switch(n.rank){case 1:return vg(n,e,t);case 2:return yb(n,[e,0],[t,n.shape[1]]);case 3:return bg(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return od(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return mn(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return mn(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new pe(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Z1(n,e,t){return xe(()=>{switch(n.rank){case 1:return vg(n,e,t);case 2:return yb(n,[0,e],[n.shape[0],t]);case 3:return bg(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return od(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new pe(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function t0(n,e,t,s){return xe(()=>{switch(n.rank){case 1:return vg(n,e,t);case 2:switch(s){case 1:return bc(n,e,t);case 2:return Z1(n,e,t);default:throw new pe(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return bc(n,e,t);case 2:return bg(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Z1(n,e,t);default:throw new pe(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return bc(n,e,t);case 2:return od(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return od(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Z1(n,e,t);default:throw new pe(`The axis is not within the rank of the tensor ${s}`)}default:throw new pe(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function $C(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),ys(n,e)}function TA(n,e){switch(n.rank){case 1:return lE([n,e]);case 2:return uE([n,e],0);case 3:return cE([n,e],0);case 4:return hE([n,e],0);default:throw new pe(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function p_(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new pe(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Li(n,e)}function Bb(n,e=0,t=1,s,r){return ub(n,e,t,s,r)}function ca(n,e,t,s){if(n.rank<2||e.rank<2)throw new sn(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],i=e.shape.slice(-2)[0];if(r!==i)throw new sn(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return l_({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?m_(n.rank,s,Fo()):null,activation:t});{const r=n.shape.slice(),i=r.pop();n=he(n,[-1,i]);const o=e.shape.slice(),a=o.pop(),l=o.pop(),u=[...o,a],h=Array.from({length:e.rank},(g,b)=>b===0?e.rank-2:b<=e.rank-2?b-1:b);e=he(yn(e,h),[l,-1]);const d=[...r,...u];return he(l_({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?m_(n.rank,s,Fo()):null,activation:t}),d)}}function z$(n,e,t){return xe(()=>(Array.isArray(e)?e=wr(e,"int32"):e=Ze(e,"int32"),Sf(n,e,t)))}function Ag(n){return ce(n,n)}function m_(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new pe(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?he(e,[1,s[0],1,1,1]):he(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?he(e,[1,1,1,1,s[0]]):he(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?he(e,[1,s[0],1,1]):he(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?he(e,[1,1,1,s[0]]):he(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?he(e,[1,s[0],1]):he(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?he(e,[1,1,s[0]]):he(e,[1].concat(s))}else if(n<3)return e;throw new pe(`Unsupported input rank by biasAdd: ${e.rank}`)}function Uo(n,e,t){return xe(()=>(t==null&&(t=Fo()),ws(t),Ve(n,m_(n.rank,e,t))))}function qj(n,e=1){if(e!==1)throw new sn(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return vf(n)}function Kj(n){return xe(()=>Nt(n,Ve(Es(n),1)))}function B$(n,e,t,s){return xe(()=>jE(n,e,t,s))}function Yj(n){return xe(()=>{const e=Ve(.5,ce(.2,n));return ei(e,0,1)})}function Rg(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Zj=["fanIn","fanOut","fanAvg"],Qj=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jj(n){jc(Zj,"FanMode",n)}function eX(n){jc(Qj,"Distribution",n)}class uo extends Hc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class V$ extends uo{apply(e,t){return Cs(e,t)}}V$.className="Zeros";Ge(V$);class FC extends uo{apply(e,t){return Yr(e,t)}}FC.className="Ones";Ge(FC);class W$ extends uo{constructor(e){if(super(),typeof e!="object")throw new pe(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new pe(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return xe(()=>ce(kt(this.value),Yr(e,t)))}getConfig(){return{value:this.value}}}W$.className="Constant";Ge(W$);class G$ extends uo{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return bu(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}G$.className="RandomUniform";Ge(G$);class H$ extends uo{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new sn(`randomNormal does not support dType ${t}.`);return Bb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}H$.className="RandomNormal";Ge(H$);class j$ extends uo{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new sn(`truncatedNormal does not support dType ${t}.`);return wb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}j$.className="TruncatedNormal";Ge(j$);class X$ extends uo{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return xe(()=>{if(e.length!==2||e[0]!==e[1])throw new pe("Identity matrix initializer can only be used for 2D square matrices.");return ce(this.gain,nb(e[0]))})}getConfig(){return{gain:this.gain}}}X$.className="Identity";Ge(X$);function tX(n,e="channelsLast"){let t,s;if(ws(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Zl(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Zl(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Zl(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class _i extends uo{constructor(e){if(super(),e.scale<0)throw new pe(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Jj(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,eX(this.distribution),this.seed=e.seed}apply(e,t){const s=tX(e),r=s[0],i=s[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,r):this.mode==="fanOut"?o/=Math.max(1,i):o/=Math.max(1,(r+i)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new sn(`${this.getClassName()} does not support dType ${t}.`);return wb(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*o);return bu(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}_i.className="VarianceScaling";Ge(_i);class PC extends _i{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return _i.className}}PC.className="GlorotUniform";Ge(PC);class OC extends _i{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return _i.className}}OC.className="GlorotNormal";Ge(OC);class LC extends _i{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return _i.className}}LC.className="HeNormal";Ge(LC);class UC extends _i{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return _i.className}}UC.className="HeUniform";Ge(UC);class zC extends _i{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return _i.className}}zC.className="LeCunNormal";Ge(zC);class BC extends _i{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return _i.className}}BC.className="LeCunUniform";Ge(BC);class q$ extends uo{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return xe(()=>{if(e.length<2)throw new sn("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=Me(e.slice(0,-1)),r=e[e.length-1],i=s*r;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const o=[Math.max(r,s),Math.min(r,s)],a=Bb(o,0,1,t,this.seed),l=YE.qr(a,!1);let u=l[0];const d=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return u=ce(u,d.sign()),s<r&&(u=u.transpose()),ce(kt(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}q$.className="Orthogonal";Ge(q$);const EA={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function CA(n,e={}){return Ig(n,Oi.getMap().classNameMap,e,"initializer")}function os(n){return MC(n)}function es(n){if(typeof n=="string"){const e=n in EA?EA[n]:n;if(e==="GlorotNormal")return new OC;if(e==="GlorotUniform")return new PC;if(e==="HeNormal")return new LC;if(e==="HeUniform")return new UC;if(e==="LeCunNormal")return new zC;if(e==="LeCunUniform")return new BC;{const t={};return t.className=e,t.config={},CA(t)}}else return n instanceof uo?n:CA(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function g_(n){return Array.isArray(n)&&Array.isArray(n[0])}function fx(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function jt(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new pe(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Cn(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new pe(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function px(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const IA="Variable";class nX{constructor(e,t="float32",s=IA,r=!0,i=null){this.dtype=t??"float32",this.shape=e.shape,this.id=F$(),s=s??IA,this.originalName=O$(s),this.name=L$(this.originalName),this.trainable_=r,this.constraint=i,this.val=GE(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),sX(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function sX(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function y_(n){return n.map(e=>e.read())}function VC(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fs{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ga{constructor(e,t,s,r,i,o,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=F$(),o!=null&&(this.originalName=O$(o),this.name=L$(this.originalName)),this.rank=t.length}}let rX=0;class Vb{constructor(e,t){this.callArgs=t,this.id=rX++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let iX=0;class cn extends Hc{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=iX++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=za(s)+"_"+zb(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let i=null;e.batchSize!=null&&(i=e.batchSize),s=[i].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new oo(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new pe(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Kr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Kr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Qo(`Layer ${this.name} is not connected, no input to return.`);return Kr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Qo(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Qo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Kr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Mn(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Mn(this.inputSpec);if(t.length!==s.length)throw new pe(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const i=t[r],o=s[r];if(o==null)continue;const a=i.rank;if(o.ndim!=null&&a!==o.ndim)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(o.maxNDim!=null&&a>o.maxNDim)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(o.minNDim!=null&&a<o.minNDim)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(o.dtype!=null&&i.dtype!==o.dtype)throw new pe(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${i.dtype}.`);if(o.axes){const l=i.shape;for(const u in o.axes){const h=Number(u),d=o.axes[u],p=h>=0?l[h]:l[l.length+h];if(d!=null&&[d,null].indexOf(p)===-1)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected axis ${h} of input shape to have value ${d} but got shape ${l}.`)}}if(o.shape!=null)for(let l=0;l<o.shape.length;++l){const u=o.shape[l],h=i.shape[l];if(u!=null&&h!=null&&u!==h)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${i.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Mn(e),r=lX(e),i=uX(e);if(r===i)throw new pe("Arguments to apply() must be all SymbolicTensors or all Tensors");return vc(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const o=[];for(const a of Mn(e))o.push(a.shape);this.build(Kr(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let o=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,o);const a=Mn(o),l=[];for(let u of a)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(o=Kr(l),this.activityRegularizer!=null)throw new sn("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=oX(e),a=this.computeOutputShape(o);let l;const u=aX(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((h,d)=>new ga(u,h,this,Mn(e),t,this.name,d)):l=new ga(u,a,this,Mn(e),t,this.name),this.addInboundNode(e,l,null,null,o,a,t),this._refCount++,this.activityRegularizer!=null)throw new sn("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Qo(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Qo(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new oo(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return px(this.weights)}build(e){this.built=!0}getWeights(e=!1){return y_(e?this.trainableWeights:this.weights)}setWeights(e){xe(()=>{const t=this.weights;if(t.length!==e.length)throw new pe(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=y_(t);for(let i=0;i<r.length;++i){const o=r[i],a=t[i],l=e[i];if(!dn(o.shape,l.shape))throw new pe(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}VC(s)})}addWeight(e,t,s,r,i,o,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new pe(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():es("zeros"));const u=r.apply(t,s),h=new nX(u,s,e,o,a);return u.dispose(),i!=null&&this.addLoss(()=>i.apply(h.read())),o==null&&(o=!0),o?this._trainableWeights.push(h):this._nonTrainableWeights.push(h),h}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Mn(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),i=Mn(t),o=Mn(r);if(i.length!==o.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let a=0;a<i.length;a++)i[a].kerasMask=o[a]}addInboundNode(e,t,s,r,i,o,a=null){const l=Mn(e);t=Mn(t),s=Mn(s),r=Mn(r),i=fx(i),o=fx(o);const u=[],h=[],d=[];for(const p of l)u.push(p.sourceLayer),h.push(p.nodeIndex),d.push(p.tensorIndex);new Vb({outboundLayer:this,inboundLayers:u,nodeIndices:h,tensorIndices:d,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:o},a);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function oX(n){n=Mn(n);const e=[];for(const t of n)e.push(t.shape);return Kr(e)}function aX(n){return"float32"}function K$(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const o=s.inputTensors[i],a=s.inboundLayers[i],l=s.nodeIndices[i],u=K$(o,a,l);for(const h of u)r.indexOf(h)===-1&&r.push(h)}return r}}}function lX(n){let e=!0;for(const t of Mn(n))if(!(t instanceof ga)){e=!1;break}return e}function uX(n){let e=!0;for(const t of Mn(n))if(t instanceof ga){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kg extends cn{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:zb("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new pe("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new pe("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new pe("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new ga(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Vb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new pe(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}kg.className="InputLayer";Ge(kg);function cX(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new pe("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new kg({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hX(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return Ze(e,n.dtype)}catch{throw new pe(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Xl{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Xl)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=hX(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new pe(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ga){if(this.id2Value[e.id]==null)throw new pe(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new pe(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ga){if(this.id2Value[e.id]==null)throw new pe(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new pe(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&on(this.id2Mask)}}const mx=new M$,gx=new M$;function dX(n){mx!=null&&mx.setMaxEntries(n),gx!=null&&gx.setMaxEntries(n)}function Ep(n,e,t,s){const r=t==null?!1:t.training,i=Array.isArray(n),o=i?n:[n],a=o.map(g=>g.name),l=[],u=e.names();for(const g of a)u.indexOf(g)!==-1?l.push(e.getValue(g)):l.push(null);const h=a.join(",")+"|"+e.names().sort().join(",");let d=mx.get(h),p;if(d==null){const g=fX(o,e);d=g.sorted,p=g.recipientCounts,mx.put(h,d),gx.put(h,p)}p={},r||Object.assign(p,gx.get(h));const m=new Xl(e);for(let g=0;g<d.length;++g){const b=d[g],y=b.sourceLayer;if(y instanceof kg)continue;const v=[],w=[],E=[];let T=!1;for(const k of b.inputs){const N=m.getValue(k),A=m.getMask(k);v.push(N),w.push(A),A!=null&&(T=!0),r||(p[k.name]--,p[k.name]===0&&!e.hasKey(k)&&a.indexOf(k.name)===-1&&!N.isDisposed&&k.sourceLayer.stateful!==!0&&E.push(N))}T&&(t=t||{},t.mask=w[0]);const I=Mn(y.apply(v,t));let M=null;y.supportsMasking&&(M=y.computeMask(v,w));const $=mX(b),O=Array.isArray($)?$:[$];for(let k=0;k<O.length;++k){m.hasKey(O[k])||m.add(O[k],I[k],Array.isArray(M)?M[0]:M);const N=a.indexOf(O[k].name);N!==-1&&(l[N]=I[k])}r||on(E)}return m.disposeMasks(),i?l:l[0]}function fX(n,e){z(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=NA(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of n){const{sorted:o,recipientMap:a}=NA(i,e);for(const l of o)r.has(l.name)||(t.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(u=>s[l].add(u))}}return{sorted:t,recipientCounts:pX(s)}}function pX(n){const e={};for(const t in n)e[t]=n[t].size;return e}function NA(n,e){const t=new Set,s=[],r={};for(const a of e.names())t.add(a);const i=[],o=[];for(i.push(n);i.length>0;){const a=i[i.length-1];if(t.has(a.name)){i.pop();continue}const l=o[o.length-1]===i.length-1;if(a.inputs.length===0||l)i.pop(),s.push(a),t.add(a.name),l&&o.pop();else{o.push(i.length-1);for(const u of a.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(a.name),!t.has(u.name)&&i.push(u)}}return{sorted:s,recipientMap:r}}function mX(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gX=_e();gX.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,dX);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WC(n,e){return xe(()=>Zs(Et(ce(n,n),e,!0)))}class Mg extends Hc{getConfig(){return{}}}class Y$ extends Mg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return xe(()=>{const t=WC(e,this.axis),s=ei(t,0,this.maxValue);return ce(e,Nt(s,Ve($s(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Y$.className="MaxNorm";Ge(Y$);class Z$ extends Mg{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return xe(()=>Nt(e,Ve($s(),WC(e,this.axis))))}getConfig(){return{axis:this.axis}}}Z$.className="UnitNorm";Ge(Z$);class Q$ extends Mg{apply(e){return Lo(e)}}Q$.className="NonNeg";Ge(Q$);class J$ extends Mg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return xe(()=>{const t=WC(e,this.axis),s=Ve(ce(this.rate,ei(t,this.minValue,this.maxValue)),ce(1-this.rate,t));return ce(e,Nt(s,Ve($s(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}J$.className="MinMaxNorm";Ge(J$);const AA={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ps(n){return MC(n)}function RA(n,e={}){return Ig(n,Oi.getMap().classNameMap,e,"constraint")}function Os(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in AA?AA[n]:n,config:{}};return RA(t)}else return n instanceof Mg?n:RA(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ju(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const i=n[r];if(typeof i!="number"){const o=i;e.push(o.data()),t.push(r),s.push(o)}}if(e.length>0){const r=await Promise.all(e);for(let i=0;i<r.length;++i)n[t[i]]=r[i][0];on(s)}}function eF(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var kA;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(kA||(kA={}));const yX=125;class Hp{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class xX{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class vX extends Hp{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const i=t[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let o;r in this.totals?o=this.totals[r]:this.totals[r]=0;const a=xe(()=>Ve(this.totals[r],ce(i,s)));this.totals[r]=a,o!=null&&o.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:xe(()=>{const r=ce(Nt(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),Ds(t[s])}))}}class bX extends Hp{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const i in this.history){const o=this.history[i];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];e.push(l.data()),t.push(i),s.push(a)}}const r=await Promise.all(e);for(let i=0;i<r.length;++i)this.history[t[i]][s[i]].dispose(),this.history[t[i]][s[i]]=r[i][0]}}class wX extends Hp{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||hC,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=yX),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ox(this.yieldEvery)&&(this.maybeWait=$j(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await ju(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ju(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await ju(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ju(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await ju(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):ox(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await ju(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ju(e),await this.trainEnd(e))}}function tF(n,e){return n==null&&(n={}),n instanceof Hp?[n]:Array.isArray(n)&&n[0]instanceof Hp?n:Mn(n).map(s=>new wX(s,e))}class so{constructor(){}static registerCallbackConstructor(e,t){z(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),so.checkForDuplicate(t),so.constructors[e]==null&&(so.constructors[e]=[]),so.constructors[e].push(t)}static checkForDuplicate(e){for(const t in so.constructors)so.constructors[+t].forEach(r=>{if(r===e)throw new pe("Duplicate callback constructor.")})}static clear(){so.constructors={}}static createCallbacks(e){const t=[];for(const s in so.constructors){const r=+s;e>=r&&t.push(...so.constructors[r])}return t.map(s=>new s)}}so.constructors={};function nF(n,e,t,s,r,i,o,a,l){const u=new bX,h=[new vX,...so.createCallbacks(e)];n!=null&&h.push(...n),h.push(u);const d=new xX(h);return d.setParams({epochs:t,initialEpoch:s,samples:r,steps:i,batchSize:o,verbose:e,doValidation:a,metrics:l}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qa(n,e={},t=!1){return Ig(n,Oi.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yx(n,e){return xe(()=>{n.dtype!=="float32"&&(n=Ze(n,"float32"));const t=Et(Ag(n),e,!0),s=Vc(t.shape,$s()),r=Zs(va(t,s));return Nt(n,r)})}function Wb(n,e){return xe(()=>is(Ag(mt(e,n)),-1))}function GC(n,e){return xe(()=>is(Es(mt(e,n)),-1))}function HC(n,e){return xe(()=>{const t=mt(n,e),s=ei(Es(n),$s(),Number.MAX_VALUE),r=Es(Nt(t,s));return ce(100,is(r,-1))})}function SX(n,e){return xe(()=>{const t=ei(e,$s(),Number.MAX_VALUE),s=wi(Ve(1,t)),r=ei(n,$s(),Number.MAX_VALUE),i=wi(Ve(1,r));return is(Ag(mt(s,i)),-1)})}function _X(n,e){return xe(()=>{const t=va(0,mt(1,ce(n,e)));return is(Ag(t),-1)})}function TX(n,e){return xe(()=>{const t=va(0,mt(1,ce(n,e)));return is(t,-1)})}function EX(n,e){return xe(()=>{const t=Et(ce(n,e),-1),s=Vi(ce(mt(1,n),e),-1);return va(0,Ve(1,mt(s,t)))})}function CX(n,e){return xe(()=>{const t=Math.log(2),s=mt(e,n),r=mt(Ve(s,Wc(ce(-2,s))),t);return is(r,-1)})}function jp(n,e,t=!1){return xe(()=>{if(t)e=wg(e);else{const s=Et(e,e.shape.length-1,!0);e=Nt(e,s)}return e=ei(e,$s(),1-$s()),jn(Et(ce(Ze(n,"float32"),wi(e)),e.shape.length-1))})}function xx(n,e,t=!1){return xe(()=>{const s=Ze(wf(jj(n)),"int32");e=ei(e,$s(),1-$s());const r=e.shape,i=he(Ac(s,r[r.length-1]),r);return jp(i,e,t)})}function IX(n,e){if(!dn(n.shape,e.shape))throw new pe(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return xe(()=>{const t=Lo(e),s=jn(Es(e));return Ve(mt(t,ce(e,n)),dg(ti(s)))})}function Gb(n,e){return xe(()=>{let t;return t=ei(e,$s(),1-$s()),t=wi(Nt(t,mt(1,t))),is(IX(n,t),-1)})}function NX(n,e){return xe(()=>{const t=ei(n,$s(),1),s=ei(e,$s(),1);return Et(ce(n,wi(Nt(t,s))),-1)})}function AX(n,e){return xe(()=>{const t=wi(Ve($s(),e));return is(mt(e,ce(n,t)),-1)})}function sF(n,e){return xe(()=>{const t=yx(n,-1),s=yx(e,-1),r=ce(t,s);return jn(Et(r,-1))})}const vx={meanSquaredError:Wb,meanAbsoluteError:GC,meanAbsolutePercentageError:HC,meanSquaredLogarithmicError:SX,squaredHinge:_X,hinge:TX,categoricalHinge:EX,logcosh:CX,categoricalCrossentropy:jp,sparseCategoricalCrossentropy:xx,binaryCrossentropy:Gb,kullbackLeiblerDivergence:NX,poisson:AX,cosineProximity:sF};function Q1(n){if(typeof n=="string"){if(n in vx)return vx[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new pe(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rF(n,e){return xe(()=>{const t=ce(.5,Si(e)),s=ua(Wr(e,t),n.dtype);return is(bi(n,s),-1)})}function iF(n,e){return xe(()=>ua(bi(ru(n,-1),ru(e,-1)),"float32"))}function RX(n,e){return xe(()=>Ze(Et(Do(bi(n,1),bi(e,1))),"float32"))}function kX(n,e){return xe(()=>Ze(Et(Do(bi(n,0),bi(e,1))),"float32"))}function MX(n,e){return xe(()=>{const t=RX(n,e),s=kX(n,e),r=Ve(t,s);return Ze(ur(Wr(r,0),Nt(t,r),0),"float32")})}function DX(n,e){return Gb(n,e)}function $X(n,e){return n.rank===e.rank&&(n=Lr(n,[n.rank-1])),e=ru(e,-1),e.dtype!==n.dtype&&(e=Ze(e,n.dtype)),Ze(bi(n,e),"float32")}const FX=Wb,PX=Wb,OX=GC,LX=GC,UX=HC,zX=HC,oF=jp,BX=sF,aF=xx,bx={binaryAccuracy:rF,categoricalAccuracy:iF,precision:MX,categoricalCrossentropy:oF,sparseCategoricalCrossentropy:aF,mse:FX,MSE:PX,mae:OX,MAE:LX,mape:UX,MAPE:zX,cosine:BX};function VX(n){if(typeof n=="string"&&n in bx)return bx[n];if(typeof n!="string"&&n!=null)return n;throw new pe(`Unknown metric ${n}`)}function n0(n){if(Jo(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(vx))if(vx[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(bx))if(bx[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WX(n){const e={Adagrad:()=>tc.adagrad(.01),Adadelta:()=>tc.adadelta(1,.95,$s()),Adam:()=>tc.adam(.001,.9,.999,$s()),Adamax:()=>tc.adamax(.002,.9,.999,$s(),0),RMSProp:()=>tc.rmsprop(.001,.9,0,$s()),SGD:()=>tc.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new pe(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const MA=1*1024*1024;function DA(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!x_(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>MA&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${MA}.`)}}function x_(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!x_(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!x_(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function GX(n,e,t,s=console.log){const r=jX(n),i=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(h=>Math.floor(e*h)));let o;if(!r){i.push("Receives inputs"),o=[];for(const h in n.nodesByDepth)o.push(...n.nodesByDepth[h])}s("_".repeat(e)),wx(i,t,s),s("=".repeat(e));const a=n.layers;for(let h=0;h<a.length;++h)r?XX(a[h],t,s):qX(a[h],t,o,s),s((h===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=HX(n),u=px(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function HX(n){let e;return n.collectedTrainableWeights!=null?e=px(n.collectedTrainableWeights):e=px(n.trainableWeights),e}function jX(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let i=!1;for(const o of r.inboundNodes)if(s.indexOf(o)!==-1)if(i){e=!1;break}else i=!0;if(!e)break}return e}function wx(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function XX(n,e,t){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const i=n.name,o=n.getClassName(),a=[`${i} (${o})`,r,s,n.countParams().toString()];wx(a,e,t)}function qX(n,e,t,s){let r,i;try{i=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=[];for(const d of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(d)===-1))for(let p=0;p<d.inboundLayers.length;++p){const m=d.inboundLayers[p].name,g=d.nodeIndices[p],b=d.tensorIndices[p];o.push(`${m}[${g}][${b}]`)}const a=n.name,l=n.getClassName(),u=o.length===0?"":o[0],h=[`${a} (${l})`,i,r,n.countParams().toString(),u];wx(h,e,s);for(let d=1;d<o.length;++d)wx(["","","","",o[d]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lF(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function v_(n,e){if(n===null)return null;if(typeof n=="string")return oc(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];lF(e,r,i)?t.push(i):t.push(v_(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const i=oc(s);t[i]=v_(r,i)}}return t}}function b_(n,e){if(n==null)return null;if(typeof n=="string")return za(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];lF(e,r,i)?t.push(i):t.push(b_(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],i=za(s);(s==="name"||s==="className")&&typeof r=="string"?t[i]=r:t[i]=b_(r,s)}return t}}/** @license See the LICENSE file. */const uF="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const KX=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class _o extends cn{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const w=this.getClassName().toLowerCase();this.name=zb(w)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Yl(this.inputs).length!==this.inputs.length)throw new pe(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(w=>w.name)}`);Yl(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(w=>w.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const w of this.outputs){const E=w.sourceLayer,T=w.nodeIndex,I=w.tensorIndex;this.outputLayers.push(E),this.outputLayersNodeIndices.push(T),this.outputLayersTensorIndices.push(I)}for(const w of this.inputs){const E=w.sourceLayer,T=w.nodeIndex,I=w.tensorIndex;Jo(T===0,"input layer has >1 nodes"),Jo(I===0,"input layer has >1 tensors"),this.inputLayers.push(E),this.inputLayersNodeIndices.push(T),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let w=0;w<this.inputLayers.length;w++){const E=this.inputLayers[w];if(!(E instanceof kg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${w} (0-based) originates from layer type ${E.getClassName()}.`);this.inputNames.push(E.name),this.feedInputShapes.push(E.batchInputShape),this.feedInputNames.push(E.name)}for(const w of this.outputLayers)this.outputNames.push(w.name);this.internalInputShapes=this.inputs.map(w=>w.shape),this.internalOutputShapes=this.outputs.map(w=>w.shape);const t={},s={},r={},i={},o={},a=[],l=(w,E,T,I,M,$)=>{(I==null||M==null||$==null)&&(I=w.sourceLayer,M=w.nodeIndex,$=w.tensorIndex);const O=I.inboundNodes[M];if(T.indexOf(O)!==-1)throw new oo(`The tensor ${w.name} at layer "${I.name}" is part of a cycle.`);if(E.indexOf(O)!==-1)return;this.containerNodes.add(_o.nodeKey(I,M)),I.id in o||(o[I.id]=Object.keys(o).length),T.indexOf(O)===-1&&T.push(O);const k=O.inboundLayers.length;for(let N=0;N<k;N++){const A=O.inputTensors[N],B=O.inboundLayers[N],W=O.nodeIndices[N],K=O.tensorIndices[N];l(A,E,T,B,W,K)}for(E.push(O);T.indexOf(O)>=0;)T.splice(T.indexOf(O),1);a.push(O)},u=[],h=[];for(const w of this.outputs)l(w,u,h);const d=a.slice().reverse();for(const w of d){s[w.id]=w,w.id in t||(t[w.id]=0);let E=t[w.id];const T=r[w.outboundLayer.id]==null?0:r[w.outboundLayer.id];E=Math.max(E,T),r[w.outboundLayer.id]=E,i[w.outboundLayer.id]=w.outboundLayer,t[w.id]=E;for(let I=0;I<w.inboundLayers.length;I++){const M=w.inboundLayers[I],$=w.nodeIndices[I],O=M.inboundNodes[$],k=t[O.id]==null?0:t[O.id];t[O.id]=Math.max(E+1,k),s[O.id]=O}}const p={};for(const w in t){const E=t[w];E in p||(p[E]=[]),p[E].push(s[w])}const m={};for(const w in r){const E=r[w];E in m||(m[E]=[]),m[E].push(i[w])}let g=Object.keys(m).map(w=>parseInt(w,10)).sort(Jy);this.layers=[];for(const w of g){const E=m[w];E.sort((T,I)=>{const M=o[T.id],$=o[I.id];return M<$?-1:M>$?1:0});for(const T of E)T instanceof _o&&this.internalContainerRefs.push(T),this.layers.push(T)}this.layersByDepth=m,g=Object.keys(p).map(w=>parseInt(w,10)).sort(Jy);const b=this.inputs.slice(),y=[];for(const w of g)for(const E of p[w]){const T=E.outboundLayer;if(T!=null){for(const I of E.inputTensors)if(b.indexOf(I)===-1)throw new oo(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${T.name}". The following previous layers were accessed without issue: ${y}`);for(const I of E.outputTensors)b.push(I);y.push(T.name)}}this.nodesByDepth=p;const v=this.layers.map(w=>w.name);for(const w of v){const E=v.filter(T=>T===w).length;if(E!==1)throw new oo(`The name "${w}" is used ${E} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(v))}this.outboundNodes=[],this.inboundNodes=[],new Vb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(w=>null),outputMasks:this.outputs.map(w=>null),inputShapes:this.inputs.map(w=>w.shape),outputShapes:this.outputs.map(w=>w.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new pe("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const i=KX(e);i&&this.parseWeights(e);for(const a of this.layers)for(const[l,u]of a.weights.entries()){const h=i?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[h]!=null)throw new pe(`Duplicate weight name: ${h}`);s[h]=u,r++}const o=[];for(const a in e){let l=a;if(s[a]==null){const u=a.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)o.push([s[l],e[a]]);else if(t)throw new pe(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new pe(`${a.length} of ${r} weights are not set: ${a}`)}VC(o)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],i=s.map(o=>o.startsWith("_")?o.slice(1):o).filter(o=>!r.includes(o)).join("/");i!==t&&(e[i]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${uF}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=b_(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return xe(()=>{e=Mn(e);const s=new Xl;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return Ep(this.outputs,s,t)})}computeMask(e,t){return xe(()=>{e=Mn(e);let s;return t==null?s=kc(null,e.length):s=Mn(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=fx(e);if(t.length!==this.inputLayers.length)throw new pe(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],u=t[a],h=l.name+"_0_0";s[h]=u}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Jy);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const u of l){const h=u.outboundLayer;if(this.inputLayers.map(b=>b.id).indexOf(h.id)!==-1)continue;const d=[];for(let b=0;b<u.inboundLayers.length;b++){const y=u.inboundLayers[b],v=u.nodeIndices[b],w=u.tensorIndices[b],E=`${y.name}_${v}_${w}`,T=s[E];d.push(T)}const p=h.computeOutputShape(Kr(d)),m=fx(p),g=h.inboundNodes.indexOf(u);for(let b=0;b<m.length;b++){const y=`${h.name}_${g}_${b}`;s[y]=m[b]}}}const i=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],h=this.outputLayersTensorIndices[a],d=`${l.name}_${u}_${h}`;o.push(d)}for(let a=0;a<o.length;a++){const l=o[a];Jo(l in s),i.push(s[l])}return Kr(i)}runInternalGraph(e,t){t==null&&(t=kc(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],h=e[l],d=t[l];s[u.id]=[h,d]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Jy);for(const l of r){const u=this.nodesByDepth[l];for(const h of u){const d=h.outboundLayer,p=h.inputTensors,m=h.outputTensors,g=new Array;for(const b of p)b.id in s&&g.push(s[b.id]);if(g.length===p.length){let b={},y,v,w,E;if(h.callArgs!=null&&(b=h.callArgs),g.length===1){const[T,I]=g[0];b.mask==null&&(b.mask=I),w=Mn(d.call(T,b)),E=Mn(d.computeMask(T,I)),y=[T],v=[I]}else y=g.map(T=>T[0]),v=g.map(T=>T[1]),b.mask==null&&(b.mask=v),w=Mn(d.call(y,b)),E=Mn(d.computeMask(y,v));if(d.activityRegularizer)throw new sn("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let T=0;T<m.length;++T){const I=m[T],M=w[T],$=E[T];s[I.id]=[M,$]}}}}const i=[],o=[],a=[];for(const l of this.outputs){Jo(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,h]=s[l.id];a.push(u.shape),i.push(u),o.push(h)}return[i,o,a]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof _o?1:0;for(let i=0;i<r.inboundNodes.length;i++){const o=_o.nodeKey(r,i);this.containerNodes.has(o)&&(t[o]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new pe("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new pe(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new pe(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return xe(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=_o.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),u=[];for(let d=0;d<o.inboundNodes.length;d++){const p=o.inboundNodes[d],m=_o.nodeKey(o,d);let g={};if(this.containerNodes.has(m)){if(p.callArgs)try{JSON.stringify(p.callArgs),g=p.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),g={}}if(p.inboundLayers.length>0){const b=[];for(let y=0;y<p.inboundLayers.length;y++){const v=p.inboundLayers[y],w=p.nodeIndices[y],E=p.tensorIndices[y],T=_o.nodeKey(v,w);let I=t[T];I==null&&(I=0),b.push([v.name,I,E,g])}u.push(b)}}}const h={};h.name=o.name,h.className=a,h.config=l,h.inboundNodes=u,s.push(h)}e.layers=s;const r=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],u=_o.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let h=t[u];h==null&&(h=0);const d=this.inputLayersTensorIndices[o];r.push([a.name,h,d])}e.inputLayers=r;const i=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],u=_o.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let h=t[u];h==null&&(h=0);const d=this.outputLayersTensorIndices[o];i.push([a.name,h,d])}return e.outputLayers=i,e}static fromConfig(e,t,s={},r=!1){const i={},o={};function a(y,v){y.name in o?o[y.name].push(v):o[y.name]=[v]}function l(y,v){const w=[];let E;for(const T of v){const I=T[0],M=T[1],$=T[2];if(E=T[3]==null?{}:T[3],!(I in i)){a(y,v);return}const O=i[I];if(O.inboundNodes.length<=M){a(y,v);return}const k=O.inboundNodes[M];w.push(k.outputTensors[$])}w.length>0&&y.apply(Kr(w),E)}function u(y){const v=y.name,w=qa(y,t.customObjects!=null?t.customObjects:{});w.setFastWeightInitDuringBuild(r),i[v]=w,y.inboundNodes.forEach(T=>{if(!(T instanceof Array))throw new pe(`Corrupted configuration, expected array for nodeData: ${T}`);a(w,T)})}const h=t.name,d=t.layers;for(const y of d)u(y);for(;!Dj(o);)for(const y of d){const v=i[y.name];if(v.name in o){const w=o[v.name];delete o[v.name];for(const E of w)l(v,E)}}const p=[],m=[],g=t.inputLayers;for(const y of g){const v=y[0],w=y[1],E=y[2];Jo(v in i);const I=i[v].inboundNodes[w].outputTensors;p.push(I[E])}const b=t.outputLayers;for(const y of b){const v=y[0],w=y[1],E=y[2];Jo(v in i);const I=i[v].inboundNodes[w].outputTensors;m.push(I[E])}return new e({inputs:p,outputs:m,name:h})}get stateful(){if(this._stateful)throw new pe("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){xe(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YX(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(i=>{i in n?r.push(n[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function cF(n,e){return YX(n,e,"classWeight")}async function hF(n,e,t,s){if(t!=null){const r=xe(()=>{if(n.shape.length===1)return aa(n);if(n.shape.length===2){if(n.shape[1]>1)return ru(n,1);if(n.shape[1]===1)return he(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());on(r);const o=[];return i.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(t[a])}),wr(o,"float32")}else return null}function ZX(n,e){return ce(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const QX=32;function dF(n,e){let t,s;const r=e;t=r.xs,s=r.ys,z(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=$A("input",n.inputNames,t),o=$A("output",n.outputNames,s),a=i[0].shape[0];z(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),z(o.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)z(i[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<o.length;l++)z(o[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:i,ys:o}}function $A(n,e,t){if(t instanceof gn)return[t];if(Array.isArray(t))return z(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new pe(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function JX(n){if(n.length===3)throw new sn("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function eq(n,e,t){const s=t.batchesPerEpoch!=null;if(z(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),z(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),z(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),z(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),z(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let i,o;if(r)if(FA(t.validationData))z(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const y=JX(t.validationData);i=y.xs,o=y.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;r?u=l.slice().concat(l.map(y=>"val_"+y)):u=l.slice();const h=tF(t.callbacks,t.yieldEvery),d=t.verbose==null?1:t.verbose,{callbackList:p,history:m}=nF(h,d,t.epochs,null,null,tq(e,t),null,r,u);p.setModel(n),n.history=m,await p.onTrainBegin(),n.stopTraining_=!1;let g=t.initialEpoch==null?0:t.initialEpoch,b=await e.iterator();for(;g<t.epochs;){const y={};await p.onEpochBegin(g);let v=0,w=0;for(s||(b=await e.iterator());!s||v<t.batchesPerEpoch;){const E=await b.next();if(s&&E.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${v} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(E.value!=null){const{xs:T,ys:I}=dF(n,E.value),M={};M.batch=w,M.size=T[0].shape[0],await p.onBatchBegin(w,M);const $=[];if(t.classWeight!=null){const N=cF(t.classWeight,n.outputNames);for(let A=0;A<N.length;++A)$.push(await hF(I[A],null,N[A]))}const O=T.concat(I).concat($),k=a(O);on(O);for(let N=0;N<l.length;++N){const A=l[N],B=k[N];M[A]=B,Ds(B)}await p.onBatchEnd(w,M),eF(M),w++,v++}if(s?v>=t.batchesPerEpoch:E.done){if(r){let T;FA(t.validationData)?T=Mn(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):T=Mn(n.evaluate(i,o,{batchSize:t.validationBatchSize==null?QX:t.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)y[`val_${n.metricsNames[I]}`]=T[I]}break}if(n.stopTraining_)break}if(await p.onEpochEnd(g,y),g++,n.stopTraining_)break}return await p.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function tq(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function FA(n){return typeof n.iterator=="function"}function nq(n){return typeof n.next=="function"}async function sq(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let i=[];if(t.verbose>0)throw new sn("Verbose mode is not implemented yet.");z(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const o=nq(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const u=await o.next();if(i=xe(()=>{if(u.value){const{xs:h,ys:d}=dF(n,u.value),p=h.concat(d),m=xe(()=>r(p));if(on(p),l===0)for(let b=0;b<m.length;++b)i.push(kt(0));const g=p[0].shape[0];for(let b=0;b<m.length;++b){const y=m[b],v=i[b];i[b]=xe(()=>Ve(i[b],ce(g,y))),l>0&&on(v)}on(m),a+=g,++l}return i}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const h=i[u];i[u]=Nt(i[u],a),on(h)}return Kr(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function J1(n){z(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function pp(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>bc(s,e,t-e)):bc(n,e,t-e)}function w_(n,e){return xe(()=>n==null?null:Array.isArray(n)?n.map(t=>w_(t,e)):z$(n,e.dtype==="int32"?e:Ze(e,"int32")))}function eS(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function fF(n){const e=[];n instanceof gn&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(Ng(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function vo(n,e){if(n==null)return;const t=[];if(e instanceof gn)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const i=e[r];t.push(i.id)}const s=[];if(n instanceof gn)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const i=n[r];t.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rq(n){return n instanceof gn}function S_(n){return Array.isArray(n)}function PA(n){return!rq(n)&&!S_(n)}function OA(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let o=!1;if(S_(n)&&n.length>0)o=!0;else if(PA(n)){for(const a in n)if(n.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new pe(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(o=>null);let i;if(PA(n)){n=n,i=[];for(const o of e){if(n[o]==null)throw new pe(`No data provided for "${o}". Need data for each key in: ${e}`);i.push(n[o])}}else if(S_(n)){if(n=n,n.length!==e.length)throw new pe(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,e.length>1)throw new pe(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=fF(i),t!=null)for(let o=0;o<e.length;++o){if(t[o]==null)continue;const a=i[o];if(a.shape.length!==t[o].length)throw new pe(`Error when checking ${r}: expected ${e[o]} to have ${t[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[o].length;++l){if(l===0&&!s)continue;const u=a.shape[l],h=t[o][l];if(h!=null&&h>=0&&u!==h)throw new pe(`${r} expected a batch of elements where each example has shape [${t[o].slice(1,t[o].length)}] (i.e.,tensor shape [*,${t[o].slice(1,t[o].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function iq(n,e,t){const s=Yl(n.map(i=>i.shape[0]));s.sort();const r=Yl(e.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new pe(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(r.length>1)throw new pe(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!dn(s,r))throw new pe(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function oq(n,e,t){const s=[Wb,Gb,jp];for(let r=0;r<n.length;++r){const i=n[r],o=e[r],a=t[r];if(o!=null){if(o===jp&&i.shape[i.shape.length-1]===1)throw new pe(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){const l=i.shape.slice(1),u=a.slice(1);for(let h=0;h<l.length;++h){const d=l[h],p=u[h];if(p!=null&&d!==p)throw new pe(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function LA(n,e,t,s=!0,r=""){let i;if(Array.isArray(n)){if(n.length!==e.length)throw new pe(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(e.length>1)throw new pe(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(t!=null)for(let o=0;o<e.length;++o){if(t[o]==null)continue;const a=i[o];if(a.shape.length!==t[o].length)throw new pe(`Error when checking ${r}: expected ${e[o]} to have ${t[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[o].length;++l){if(l===0&&!s)continue;const u=a.shape[l],h=t[o][l];if(h!=null&&h!==u)throw new pe(`Error when checking ${r}: expected ${e[o]} to have shape ${JSON.stringify(t[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function aq(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let i=t.hasOwnProperty(r)?t[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const lq="layers-model";class Yh extends _o{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new pe("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");GX(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=WX(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ul))throw new pe("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const o in e.loss)if(this.outputNames.indexOf(o)===-1)throw new pe(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)e.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),t.push(Q1(e.loss[o]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new pe(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>Q1(a))}else{const o=Q1(e.loss);this.outputs.forEach(a=>{t.push(o)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],vc("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const r=aq(e.metrics,this.outputNames),i=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};vc("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=r[o];(u=>{const h="";let d,p,m;for(const g of u){if(typeof g=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(g)!==-1){const y=this.internalOutputShapes[o];y[y.length-1]===1||this.lossFunctions[o]===Gb?["accuracy","acc"].indexOf(g)!==-1?p=rF:["crossentropy","ce"].indexOf(g)!==-1&&(p=DX):this.lossFunctions[o]===xx?["accuracy","acc"].indexOf(g)!==-1?p=$X:["crossentropy","ce"].indexOf(g)!==-1&&(p=aF):["accuracy","acc"].indexOf(g)!==-1?p=iF:["crossentropy","ce"].indexOf(g)!==-1&&(p=oF);let v;["accuracy","acc"].indexOf(g)!==-1?v="acc":["crossentropy","ce"].indexOf(g)!==-1&&(v="ce"),m=p,d=h+v}else m=VX(g),d=h+n0(g);let b;vc(d,()=>{b=m}),i(o,d,b)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;J1(r);const o=this.standardizeUserDataXY(e,t,!0,r);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,a,r,s.verbose,s.steps);return Kr(u)}finally{vo(o[0],e),vo(o[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),sq(this,e,t)}checkNumSamples(e,t,s,r="steps"){let i;if(s!=null){if(i=null,t!=null)throw new pe(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new pe(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new pe("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],i=this.retrieveSymbolicTensors(r),o=new Xl;if(e instanceof gn&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new pe(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new pe(`No value is provided for the model's input ${l.name}`);o.add(l,u)}const a=Ep(i,o);return s?a:a[0]}retrieveSymbolicTensors(e){const t=kc(null,e.length);let s=e.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],o=i.map(a=>a.name);for(let a=0;a<e.length;++a){const l=o.indexOf(e[a]);if(l!==-1&&(t[a]=i[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((i,o)=>{i==null&&r.push(e[o])}),new pe(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return xe(()=>{const r=this.checkNumSamples(e);if(s)throw new sn("Verbose predictLoop() is not implemented yet.");const i=eS(r,t),o=this.outputs.map(a=>[]);for(let a=0;a<i.length;++a)xe(()=>{const u=i[a][0],h=i[a][1],d=pp(e,u,h),p=[];if(Array.isArray(d))for(let g=0;g<d.length;++g)p.push({key:this.inputs[g],value:d[g]});else p.push({key:this.inputs[0],value:d});const m=new Xl(p);return Ep(this.outputs,m)}).forEach((u,h)=>o[h].push(u));return Kr(o.map(a=>ys(a,0)))})}predict(e,t={}){const s=fF(e);LA(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return J1(r),this.predictLoop(s,r)}finally{vo(s,e)}}predictOnBatch(e){LA(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new oo("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===xx?i.push(a.slice(0,a.length-1).concat([1])):i.push(a)}if(e=OA(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=OA(t,this.feedOutputNames,i,!1,"target"),iq(e,t),oq(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new pe(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,i=!0,o){const[a,l]=this.standardizeUserDataXY(e,t,i,o);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const h=cF(r,this.outputNames);u=[];for(let d=0;d<h.length;++d)u.push(await hF(l[d],null,h[d]))}return[a,l,u]}testLoop(e,t,s,r=0,i){return xe(()=>{const o=this.checkNumSamples(t,s,i,"steps"),a=[];if(r>0)throw new sn("Verbose mode is not implemented yet.");if(i!=null)throw new sn("steps mode in testLoop() is not implemented yet");{const l=eS(o,s),u=wr($o(0,o));for(let h=0;h<l.length;++h){const d=l[h][0],p=l[h][1],m=bc(u,d,p-d),g=w_(t,m),b=e(g);if(h===0)for(let y=0;y<b.length;++y)a.push(kt(0));for(let y=0;y<b.length;++y){const v=b[y];a[y]=Ve(a[y],ce(p-d,v))}}for(let h=0;h<a.length;++h)a[h]=Nt(a[h],o)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let i=r;if(SA(e,r)>1){const o=SA(e.slice(0,s),r);i+=`_${o}`}t.push(i)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const d=[];for(let b=0;b<this.inputs.length;++b)d.push({key:this.inputs[b],value:s[b]});const p=new Xl(d),m=Ep(this.outputs,p,{training:!0});let g;for(let b=0;b<this.lossFunctions.length;++b){const y=this.lossFunctions[b];let v=y(r[b],m[b]);i[b]!=null&&(v=ZX(v,i[b]));const w=is(v);t.push(w),b===0?g=v:g=Ve(g,v)}for(let b=0;b<this.metricsTensors.length;++b){let y;if(this.outputs.length>1&&b<this.outputs.length)y=t[b];else{const v=this.metricsTensors[b][0],w=this.metricsTensors[b][1];y=is(v(r[w],m[w]))}Ds(y),o.push(y)}return g=is(g),this.calculateLosses().forEach(b=>{g=Ve(g,b)}),g},l=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(a,!0,l)].concat(o)}}makeTestFunction(){this.testFunction=e=>xe(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let u=0;u<this.inputs.length;++u)o.push({key:this.inputs[u],value:r[u]});const a=new Xl(o),l=Ep(this.outputs,a);for(let u=0;u<this.lossFunctions.length;++u){const h=this.lossFunctions[u],d=is(h(i[u],l[u]));u===0?s=d:s=Ve(s,d),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const h=this.metricsTensors[u][0],d=this.metricsTensors[u][1],p=is(h(i[d],l[d]));t.push(p)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,i,o,a,l,u,h,d,p;try{const m=s.batchSize==null?32:s.batchSize;J1(m);const b=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,m);r=b[0],i=b[1],p=b[2];let y=!1,v;if(s.validationData!=null&&s.validationData.length>0){if(y=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new sn("validationData including sample weights is not supported yet."):new pe(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const N=await this.standardizeUserData(l,u,null,null,!0,m);h=N[0],d=N[1],v=h.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){y=!0;const k=Math.floor(r[0].shape[0]*(1-s.validationSplit)),N=r[0].shape[0];h=pp(r,k,N),o=r,r=pp(r,0,k),d=pp(i,k,N),a=i,i=pp(i,0,k),v=h.concat(d)}else s.validationSteps!=null&&(y=!0);const w=r.concat(i).concat(p);this.checkTrainableWeightsConsistency();const E=this.makeTrainFunction(),T=this.getDedupedMetricsNames();let I,M;y?(this.makeTestFunction(),I=this.testFunction,M=T.slice().concat(T.map(k=>"val_"+k))):(I=null,v=[],M=T.slice());const $=tF(s.callbacks,s.yieldEvery);return await this.fitLoop(E,w,T,m,s.epochs,s.verbose,$,I,v,s.shuffle,M,s.initialEpoch,null,null)}finally{this.isTraining=!1,vo(r,e),vo(i,t),vo(o,e),vo(a,t),vo(h,l),vo(d,u),p!=null&&on(p)}}async fitLoop(e,t,s,r,i,o,a,l,u,h,d,p,m,g){r==null&&(r=32),i==null&&(i=1),h==null&&(h=!0),p==null&&(p=0);let b=!1;if(l!=null&&u!=null&&(b=!0),g!=null&&(b=!0,m==null))throw new pe("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(t,r,m,"steps_per_epoch");let v;y!=null&&(v=$o(0,y)),o==null&&(o=1);const{callbackList:w,history:E}=nF(a,o,i,p,y,m,r,b,d);w.setModel(this),this.history=E,await w.onTrainBegin(),this.stopTraining_=!1;for(let T=p;T<i;++T){await w.onEpochBegin(T);const I={};if(m!=null)throw new sn("stepsPerEpoch mode is not implemented yet.");{if(h==="batch")throw new sn("batch shuffling is not implemneted yet");h&&kT(v);const M=wr(v),$=eS(y,r);for(let O=0;O<$.length;++O){const k={};if(await w.onBatchBegin(O,k),xe(()=>{const N=$[O][0],A=$[O][1],B=bc(M,N,A-N);k.batch=O,k.size=A-N;const W=w_(t,B),K=e(W);for(let q=0;q<s.length;++q){const Y=s[q],J=K[q];k[Y]=J,Ds(J)}if(O===$.length-1&&b){const q=this.testLoop(l,u,r);for(let Y=0;Y<s.length;++Y){const J=s[Y],G=q[Y];Ds(G),I["val_"+J]=G}}}),await w.onBatchEnd(O,k),eF(k),this.stopTraining_)break}M.dispose()}if(await w.onEpochEnd(T,I),this.stopTraining_)break}return await w.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return eq(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],i=s[1],a=this.makeTrainFunction()(r.concat(i)),l=[];for(const u of a){const h=await u.data();l.push(h[0])}return on(a),vo(s[0],e),vo(s[1],t),Kr(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let o=0;o<r.length;++o)s&&!r[o].trainable||t.push({name:r[o].originalName,tensor:i[o]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=e_().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-e_().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=za(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>za(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=za(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[za(n0(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>za(n0(e)));{const e={};for(const t in this.metrics)e[t]=za(n0(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=v_(e.optimizer_config),s=qa(t);let r;if(typeof e.loss=="string")r=oc(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(o=>oc(o));else if(e.loss!=null){r={};for(const o in e.loss)r[o]=oc(e.loss[o])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(o=>oc(o));else if(e.metrics!=null){i={};for(const o in e.metrics)i[o]=oc(e.metrics[o])}this.compile({loss:r,metrics:i,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=AM(e);if(u.length===0)throw new pe(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new pe(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new pe("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await t_(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:lq,generatedBy:`TensorFlow.js tfjs-layers v${uF}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:h,specs:d}=await t_(await this.optimizer.getWeights(),u);s.specs.push(...d),s.data=CM([s.data,h])}return this.userDefinedMetadata!=null&&(DA(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){DA(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Yh.className="Model";Ge(Yh);class pF extends Yh{}pF.className="Functional";Ge(pF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xp extends Yh{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:zb("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new pe(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Xp||e instanceof Yh;let s;if(t){if(s=e,s.outputs.length!==1)throw new pe("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new pe("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new pe("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=cX({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new pe(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new pe("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=K$(this.outputs[0])}this.inboundNodes=[],new Vb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:kc(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Cn(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yh({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new oo("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new oo("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new oo("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new oo("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let i,o={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new pe("Legacy serialization format not supported yet.");i=t}else z(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=t.layers,delete t.layers,o=t;const a=new e(o);if(!(a instanceof Xp))throw new sn(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of i){const h=qa(l,void 0,r);r&&h.setFastWeightInitDuringBuild(!0),a.add(h)}return a}set stopTraining(e){if(this.model==null)throw new pe("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new pe("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Xp.className="Sequential";Ge(Xp);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Sr=class extends Hc{getConfig(){return{}}};class mF extends Sr{apply(e,t=1){return qj(e,t)}}mF.className="elu";Ge(mF);class gF extends Sr{apply(e){return fb(e)}}gF.className="selu";Ge(gF);class yF extends Sr{apply(e){return Lo(e)}}yF.className="relu";Ge(yF);class xF extends Sr{apply(e){return xe(()=>au(6,Lo(e)))}}xF.className="relu6";Ge(xF);class vF extends Sr{apply(e){return e}}vF.className="linear";Ge(vF);class bF extends Sr{apply(e){return yi(e)}}bF.className="sigmoid";Ge(bF);class wF extends Sr{apply(e){return Yj(e)}}wF.className="hardSigmoid";Ge(wF);class SF extends Sr{apply(e){return Wc(e)}}SF.className="softplus";Ge(SF);class _F extends Sr{apply(e){return Kj(e)}}_F.className="softsign";Ge(_F);class TF extends Sr{apply(e){return ou(e)}}TF.className="tanh";Ge(TF);let jC=class extends Sr{apply(e,t=-1){return wg(e,t)}};jC.className="softmax";Ge(jC);class EF extends Sr{apply(e,t=-1){return rb(e,t)}}EF.className="logSoftmax";Ge(EF);class CF extends Sr{apply(e){return xe(()=>xe(()=>{const t=Math.sqrt(2),s=ce(.5,Ve(1,tb(Nt(e,t))));return ce(e,s)}))}}CF.className="gelu";Ge(CF);class IF extends Sr{apply(e){return xe(()=>ce(.5,ce(e,Ve(1,ou(ce(Zs(Nt(2,Math.PI)),Ve(e,ce(.044715,pa(e,3)))))))))}}IF.className="gelu_new";Ge(IF);class NF extends Sr{apply(e){return xe(()=>ce(e,ou(Wc(e))))}}NF.className="mish";Ge(NF);class AF extends Sr{apply(e,t=1){return xe(()=>ce(yi(ce(e,t)),e))}}AF.className="swish";Ge(AF);function uu(n){return n.getClassName()}function tS(n,e={}){return Ig(n,Oi.getMap().classNameMap,e,"activation")}function cu(n){if(n==null){const e={};return e.className="linear",e.config={},tS(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},tS(e)}else return n instanceof Sr?n:tS(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uq(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class RF extends Hc{}class kF extends RF{constructor(e){super(),uq(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return xe(()=>{let t=Cs([1]);return this.hasL1&&(t=Ve(t,Et(ce(this.l1,Es(e))))),this.hasL2&&(t=Ve(t,Et(ce(this.l2,Ag(e))))),he(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}kF.className="L1L2";Ge(kF);const UA={l1l2:"L1L2"};function Wn(n){return MC(n)}function zA(n,e={}){return Ig(n,Oi.getMap().classNameMap,e,"regularizer")}function ts(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in UA?UA[n]:n,config:{}};return zA(t)}else return n instanceof RF?n:zA(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class MF extends cn{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=jt(e);let s=Lo(e);return this.maxValue!=null&&(s=ei(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}MF.className="ReLU";Ge(MF);class DF extends cn{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=jt(e);return hg(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}DF.className="LeakyReLU";Ge(DF);class $F extends cn{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=es(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ts(e.alphaRegularizer),this.alphaConstraint=Os(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new pe(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Cn(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Fs({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=jt(e),xg(e,this.alpha.read())}getConfig(){const e={alphaInitializer:os(this.alphaInitializer),alphaRegularizer:Wn(this.alphaRegularizer),alphaConstraint:Ps(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}$F.className="PReLU";Ge($F);let FF=class extends cn{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new sn(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=jt(e);return vf(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};FF.className="ELU";Ge(FF);class PF extends cn{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=jt(e);return ce(s,Ze(Wr(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}PF.className="ThresholdedReLU";Ge(PF);class OF extends cn{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new jC().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return xe(()=>{let s=jt(e);const r=t.mask;if(r!=null){const i=ce(mt(Yr(s.shape),Ze(r,s.dtype)),kt(-1e9));s=Ve(s,i)}return this.axis instanceof Array?this.axis.length>1?ti(mt(s,fg(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}OF.className="Softmax";Ge(OF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zh(n,e,t){if(typeof n=="number")return kc(n,e);if(n.length!==e)throw new pe(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!Gj(r))throw new pe(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function ko(n,e,t,s,r=1){if(n==null)return n;const i=e+(e-1)*(r-1);let o;return t==="same"?o=n:o=n-i+1,Math.floor((o+s-1)/s)}function ea(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+lu([t-e,0]);else if(s==="same")n=n*e;else throw new pe(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XC(n,e){return xe(()=>(ws(e),e==="channelsFirst"?yn(n,[0,2,3,1]):n))}function LF(n,e){return xe(()=>(ws(e),e==="channelsFirst"?yn(n,[0,2,3,4,1]):n))}function cq(n,e,t,s=1,r="valid",i,o=1){return xe(()=>{if(i==null&&(i=Fo()),ws(i),n.shape.length!==3)throw new pe(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new pe(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new pe(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(i==="channelsFirst"&&(n=yn(n,[0,2,1])),r==="causal")throw new sn("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Zv(n,e,s,r==="same"?"same":"valid","NWC",o);return t!=null&&(a=Uo(a,t)),a})}function BA(n,e,t,s=[1,1],r="valid",i,o,a=null){return xe(()=>{if(i==null&&(i=Fo()),ws(i),n.rank!==3&&n.rank!==4)throw new pe(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new pe(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=XC(n,i);if(r==="causal")throw new sn("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=ND({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:t,activation:a}),i==="channelsFirst"&&(l=yn(l,[0,3,1,2])),l})}function hq(n,e,t,s=[1,1,1],r="valid",i,o){return xe(()=>{if(i==null&&(i=Fo()),ws(i),n.rank!==4&&n.rank!==5)throw new pe(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new pe(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=LF(n,i);if(r==="causal")throw new sn("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=fE(a,e,s,r==="same"?"same":"valid","NDHWC",o),t!=null&&(a=Uo(a,t)),i==="channelsFirst"&&(a=yn(a,[0,4,1,2,3])),a})}class Hb extends cn{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hb.verifyArgs(t),this.rank=e,Ks(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new sn(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Zh(t.kernelSize,e,"kernelSize"),this.strides=Zh(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Hi(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ws(this.dataFormat),this.activation=cu(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=es(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Os(t.biasConstraint),this.biasRegularizer=ts(t.biasRegularizer),this.activityRegularizer=ts(t.activityRegularizer),this.dilationRate=Zh(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new pe(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new pe(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new pe(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Jo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!DC(e.kernelSize,"number",1,3))throw new pe(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:uu(this.activation),useBias:this.useBias,biasInitializer:os(this.biasInitializer),biasRegularizer:Wn(this.biasRegularizer),activityRegularizer:Wn(this.activityRegularizer),biasConstraint:Ps(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Tf extends Hb{constructor(e,t){super(e,t),this.kernel=null,Tf.verifyArgs(t),this.filters=t.filters,Ks(this.filters,"filters"),this.kernelInitializer=es(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Os(t.kernelConstraint),this.kernelRegularizer=ts(t.kernelRegularizer)}build(e){e=Cn(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new pe(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return xe(()=>{e=jt(e);let s;const r=this.bias==null?null:this.bias.read(),i=$$(this.activation.getClassName());if(i!=null&&this.rank===2)s=BA(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=cq(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=BA(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=hq(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new sn("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Cn(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<s.length;++i){const o=ko(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);t.push(o)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:os(this.kernelInitializer),kernelRegularizer:Wn(this.kernelRegularizer),kernelConstraint:Ps(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new pe(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Dg extends Tf{constructor(e){super(2,e),Dg.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!DC(e.kernelSize,"number",1,2))throw new pe(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Dg.className="Conv2D";Ge(Dg);class $g extends Tf{constructor(e){super(3,e),$g.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new pe(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}$g.className="Conv3D";Ge($g);class UF extends Dg{constructor(e){if(super(e),this.inputSpec=[new Fs({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new pe(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Cn(e),e.length!==4)throw new pe("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new pe("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Fs({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return xe(()=>{let s=jt(e);if(s.shape.length!==4)throw new pe(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=r[o],u=r[a],h=this.kernelSize[0],d=this.kernelSize[1],p=this.strides[0],m=this.strides[1],g=ea(l,p,h,this.padding),b=ea(u,m,d,this.padding),y=[i,g,b,this.filters];this.dataFormat!=="channelsLast"&&(s=yn(s,[0,2,3,1]));let v=Qv(s,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=yn(v,[0,3,1,2])),this.bias!=null&&(v=Uo(v,this.bias.read(),this.dataFormat)),this.activation!=null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=Cn(e);const t=e.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[r]=ea(t[r],l,o,this.padding),t[i]=ea(t[i],u,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}UF.className="Conv2DTranspose";Ge(UF);class zF extends $g{constructor(e){if(super(e),this.inputSpec=[new Fs({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new pe(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Cn(e),e.length!==5)throw new pe("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new pe("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Fs({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return xe(()=>{let s=jt(e);if(s.shape.length!==5)throw new pe(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const u=r[l],h=r[o],d=r[a],p=this.kernelSize[0],m=this.kernelSize[1],g=this.kernelSize[2],b=this.strides[0],y=this.strides[1],v=this.strides[2],w=ea(u,b,p,this.padding),E=ea(h,y,m,this.padding),T=ea(d,v,g,this.padding),I=[i,w,E,T,this.filters];this.dataFormat!=="channelsLast"&&(s=yn(s,[0,2,3,4,1]));let M=pE(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(M=yn(M,[0,4,1,2,3])),this.bias!==null&&(M=Uo(M,this.bias.read(),this.dataFormat)),this.activation!==null&&(M=this.activation.apply(M)),M})}computeOutputShape(e){e=Cn(e);const t=e.slice();let s,r,i,o;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3,o=4):(s=4,r=1,i=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],h=this.strides[0],d=this.strides[1],p=this.strides[2];return t[s]=this.filters,t[r]=ea(t[r],h,a,this.padding),t[i]=ea(t[i],d,l,this.padding),t[o]=ea(t[o],p,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}zF.className="Conv3DTranspose";Ge(zF);class BF extends Tf{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new pe("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new pe("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new pe(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=es(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ts(t.depthwiseRegularizer),this.depthwiseConstraint=Os(t.depthwiseConstraint),this.pointwiseInitializer=es(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ts(t.pointwiseRegularizer),this.pointwiseConstraint=Os(t.pointwiseConstraint)}build(e){if(e=Cn(e),e.length<this.rank+2)throw new pe(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new pe(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let a=0;a<this.rank;++a)i.push(1);i.push(s*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new Fs({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return xe(()=>{e=jt(e);let s;if(this.rank===1)throw new sn("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=yn(e,[0,2,3,1])),s=pb(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Uo(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=yn(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=os(this.depthwiseInitializer),e.pointwiseInitializer=os(this.pointwiseInitializer),e.depthwiseRegularizer=Wn(this.depthwiseRegularizer),e.pointwiseRegularizer=Wn(this.pointwiseRegularizer),e.depthwiseConstraint=Ps(this.depthwiseConstraint),e.pointwiseConstraint=Ps(this.pointwiseConstraint),e}}BF.className="SeparableConv";class VF extends BF{constructor(e){super(2,e)}}VF.className="SeparableConv2D";Ge(VF);class jb extends Tf{constructor(e){super(1,e),jb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!DC(e.kernelSize,"number",1,1))throw new pe(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}jb.className="Conv1D";Ge(jb);class WF extends cn{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return xe(()=>{if(e=jt(e),this.dataFormat==="channelsLast"){const s=t0(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return t0(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=t0(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return t0(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}WF.className="Cropping2D";Ge(WF);class GF extends cn{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ws(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Bj(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return xe(()=>{let s=jt(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=yn(s,[0,2,3,1]);const i=this.size[0]*r[2],o=this.size[1]*r[3],a=this.interpolation==="nearest"?Ur.resizeNearestNeighbor(s,[i,o]):Ur.resizeBilinear(s,[i,o]);return yn(a,[0,3,1,2])}else{const i=this.size[0]*r[1],o=this.size[1]*r[2];return this.interpolation==="nearest"?Ur.resizeNearestNeighbor(s,[i,o]):Ur.resizeBilinear(s,[i,o])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}GF.className="UpSampling2D";Ge(GF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dq(n,e,t=[1,1],s="valid",r,i){return xe(()=>{r==null&&(r=Fo()),ws(r);let o=XC(n,r);if(n.rank!==4)throw new pe(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new pe(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=xf(o,e,t,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(o=yn(o,[0,3,1,2])),o})}class HF extends Hb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=es(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Os(e.depthwiseConstraint),this.depthwiseRegularizer=ts(e.depthwiseRegularizer)}build(e){if(e=Cn(e),e.length<4)throw new pe(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new pe(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return xe(()=>{e=jt(e);let s=dq(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Uo(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Cn(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=ko(t,this.kernelSize[0],this.padding,this.strides[0]),o=ko(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,i,o]:[e[0],i,o,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=os(this.depthwiseInitializer),e.depthwiseRegularizer=Wn(this.depthwiseRegularizer),e.depthwiseConstraint=Ps(this.depthwiseRegularizer),e}}HF.className="DepthwiseConv2D";Ge(HF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jF(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new pe("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function XF(n,e,t,s=!1,r,i,o=!1,a=!1){return xe(()=>{const l=e.shape.length;if(l<3)throw new pe(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat($o(2,l));e=yn(e,u),o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=Ze(Ze(r,"bool"),"float32"),r.rank===l-1&&(r=ds(r,-1)),r=yn(r,u)),s&&(e=Wi(e,0),r!=null&&(r=Wi(r,0)));const h=[];let d,p=t;const m=e.shape[0],g=Gi(e);let b;r!=null&&(b=Gi(r));for(let v=0;v<m;++v){const w=g[v],E=xe(()=>n(w,p));if(r==null)d=E[0],p=E[1];else{const T=xe(()=>{const I=b[v],M=mt(Si(I),I),$=Ve(ce(E[0],I),ce(p[0],M)),O=p.map((k,N)=>Ve(ce(E[1][N],I),ce(k,M)));return{output:$,newStates:O}});d=T.output,p=T.newStates}a&&h.push(d)}let y;return a&&(y=ni(h,1)),[d,y,p]})}class Su extends cn{constructor(e){super(e);let t;if(e.cell==null)throw new pe("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new YC({cells:e.cell}):t=e.cell,t.stateSize==null)throw new pe("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Fs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return $o(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){g_(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const i=[];for(const o of t)i.push([e[0],o]);return[r].concat(i)}else return r}computeMask(e,t){return xe(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new sn("Constants support is not implemented in RNN yet.");g_(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Fs({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!dn(this.stateSpec.map(o=>o.shape[o.shape.length-1]),i))throw new pe(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(o=>new Fs({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){xe(()=>{if(!this.stateful)throw new Qo("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new pe("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Cs([s,r])):this.states_=[Cs([s,this.cell.stateSize])];else if(e==null)on(this.states_),this.keptStates!=null&&(on(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Cs([s,r])):this.states_[0]=Cs([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new pe(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):on(this.states_);for(let r=0;r<this.states_.length;++r){const i=e[r],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,o];if(!dn(i.shape,a))throw new pe(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>Ds(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const i=jF(e,s,r,this.numConstants);e=i.inputs,s=i.initialState,r=i.constants;let o=[],a=[];if(s!=null){t.initialState=s,o=o.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Fs({shape:u.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(t.constants=r,o=o.concat(r),this.numConstants=r.length),o[0]instanceof ga){const u=[e].concat(o),h=this.inputSpec.concat(a),d=this.inputSpec;this.inputSpec=h;const p=super.apply(u,t);return this.inputSpec=d,p}else return super.apply(e,t)}call(e,t){return xe(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let i=t==null?null:t.initialState;e=jt(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==o)throw new pe(`RNN Layer has ${o} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},u=XF((g,b)=>{const y=this.cell.call([g].concat(b),a);return[y[0],y.slice(1)]},e,i,this.goBackwards,s,null,this.unroll,this.returnSequences),h=u[0],d=u[1],p=u[2];this.stateful&&this.resetStates(p,r);const m=this.returnSequences?d:h;return this.returnState?[m].concat(p):m})}getInitialState(e){return xe(()=>{let t=Cs(e.shape);return t=Et(t,[1,2]),t=Ng(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?p_(t,[1,s]):t):this.cell.stateSize>1?[p_(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Su.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,i=qa(r,s);return new e(Object.assign(t,{cell:i}))}}Su.className="RNN";Ge(Su);class Xb extends cn{}class qC extends Xb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ks(this.units,"units"),this.activation=cu(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=es(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=es(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=es(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ts(e.kernelRegularizer),this.recurrentRegularizer=ts(e.recurrentRegularizer),this.biasRegularizer=ts(e.biasRegularizer),this.kernelConstraint=Os(e.kernelConstraint),this.recurrentConstraint=Os(e.recurrentConstraint),this.biasConstraint=Os(e.biasConstraint),this.dropout=ld([1,lu([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ld([1,lu([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Cn(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return xe(()=>{if(e=e,e.length!==2)throw new pe(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hu({ones:()=>Si(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hu({ones:()=>Si(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?i=ca(ce(e,o),this.kernel.read()):i=ca(e,this.kernel.read()),this.bias!=null&&(i=Uo(i,this.bias.read())),a!=null&&(s=ce(s,a));let l=Ve(i,ca(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),useBias:this.useBias,kernelInitializer:os(this.kernelInitializer),recurrentInitializer:os(this.recurrentInitializer),biasInitializer:os(this.biasInitializer),kernelRegularizer:Wn(this.kernelRegularizer),recurrentRegularizer:Wn(this.recurrentRegularizer),biasRegularizer:Wn(this.biasRegularizer),activityRegularizer:Wn(this.activityRegularizer),kernelConstraint:Ps(this.kernelConstraint),recurrentConstraint:Ps(this.recurrentConstraint),biasConstraint:Ps(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}qC.className="SimpleRNNCell";Ge(qC);class qF extends Su{constructor(e){e.cell=new qC(e),super(e)}call(e,t){return xe(()=>{this.cell.dropoutMask!=null&&(on(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(on(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return new e(t)}}qF.className="SimpleRNN";Ge(qF);class KC extends Xb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new pe("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ks(this.units,"units"),this.activation=cu(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cu(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=es(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=es(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=es(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ts(e.kernelRegularizer),this.recurrentRegularizer=ts(e.recurrentRegularizer),this.biasRegularizer=ts(e.biasRegularizer),this.kernelConstraint=Os(e.kernelConstraint),this.recurrentConstraint=Os(e.recurrentConstraint),this.biasConstraint=Os(e.biasConstraint),this.dropout=ld([1,lu([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ld([1,lu([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Cn(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return xe(()=>{if(e=e,e.length!==2)throw new pe(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hu({ones:()=>Si(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hu({ones:()=>Si(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,u;0<this.dropout&&this.dropout<1&&(e=ce(e,i[0]));let h=ca(e,this.kernel.read());this.useBias&&(h=Uo(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ce(r,o[0]));const d=this.recurrentKernel.read(),[p,m]=Zr(d,[2*this.units,this.units],d.rank-1),g=ca(r,p),[b,y,v]=Zr(h,3,h.rank-1),[w,E]=Zr(g,2,g.rank-1);a=this.recurrentActivation.apply(Ve(b,w)),l=this.recurrentActivation.apply(Ve(y,E));const T=ca(ce(l,r),m);u=this.activation.apply(Ve(v,T));const I=Ve(ce(a,r),ce(Ve(1,jn(a)),u));return[I,I]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),recurrentActivation:uu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:os(this.kernelInitializer),recurrentInitializer:os(this.recurrentInitializer),biasInitializer:os(this.biasInitializer),kernelRegularizer:Wn(this.kernelRegularizer),recurrentRegularizer:Wn(this.recurrentRegularizer),biasRegularizer:Wn(this.biasRegularizer),activityRegularizer:Wn(this.activityRegularizer),kernelConstraint:Ps(this.kernelConstraint),recurrentConstraint:Ps(this.recurrentConstraint),biasConstraint:Ps(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}KC.className="GRUCell";Ge(KC);class KF extends Su{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new KC(e),super(e)}call(e,t){return xe(()=>{this.cell.dropoutMask!=null&&(on(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(on(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}KF.className="GRU";Ge(KF);class qb extends Xb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ks(this.units,"units"),this.activation=cu(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cu(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=es(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=es(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=es(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ts(e.kernelRegularizer),this.recurrentRegularizer=ts(e.recurrentRegularizer),this.biasRegularizer=ts(e.biasRegularizer),this.kernelConstraint=Os(e.kernelConstraint),this.recurrentConstraint=Os(e.recurrentConstraint),this.biasConstraint=Os(e.biasConstraint),this.dropout=ld([1,lu([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ld([1,lu([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Cn(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,o=this.units;r=new(t=class extends uo{apply(l,u){const h=i.apply([o]),d=new FC().apply([o]),p=i.apply([o*2]);return TA(TA(h,d),p)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return xe(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new pe(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hu({ones:()=>Si(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hu({ones:()=>Si(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,u,h,d;0<this.dropout&&this.dropout<1&&(e=ce(e,o[0]));let p=ca(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ce(r,a[0])),p=Ve(p,ca(r,this.recurrentKernel.read())),this.useBias&&(p=Uo(p,this.bias.read()));const[m,g,b,y]=Zr(p,4,p.rank-1);l=this.recurrentActivation.apply(m),u=this.recurrentActivation.apply(g),h=Ve(ce(u,i),ce(l,this.activation.apply(b))),d=this.recurrentActivation.apply(y);const v=ce(d,this.activation.apply(h));return[v,v,h]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),recurrentActivation:uu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:os(this.kernelInitializer),recurrentInitializer:os(this.recurrentInitializer),biasInitializer:os(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Wn(this.kernelRegularizer),recurrentRegularizer:Wn(this.recurrentRegularizer),biasRegularizer:Wn(this.biasRegularizer),activityRegularizer:Wn(this.activityRegularizer),kernelConstraint:Ps(this.kernelConstraint),recurrentConstraint:Ps(this.recurrentConstraint),biasConstraint:Ps(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}qb.className="LSTMCell";Ge(qb);class YF extends Su{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new qb(e),super(e)}call(e,t){return xe(()=>{this.cell.dropoutMask!=null&&(on(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(on(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}YF.className="LSTM";Ge(YF);class YC extends Xb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return xe(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?o=[e[0]].concat(s):o=[o[0]].concat(s),o=l.call(o,t),i.push(o.slice(1))}s=[];for(const a of i.slice().reverse())s.push(...a);return[o[0]].concat(s)})}build(e){g_(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{vc(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=i=>({className:i.getClassName(),config:i.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const i of t.cells)r.push(qa(i,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return y_(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,i=e.splice(r);for(let o=0;o<s.weights.length;++o)t.push([s.weights[o],i[o]])}VC(t)}}YC.className="StackedRNNCells";Ge(YC);function hu(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:i}=n,o=()=>i!=null?i(e(),t):B$(e(),t),a=()=>Rg(o,e,s);return!r||r<=1?Ds(a().clone()):Array(r).fill(void 0).map(a).map(u=>Ds(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var fq=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class ZF extends Su{constructor(e){if(e.unroll)throw new sn("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new sn("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Fs({ndim:5})]}call(e,t){return xe(()=>{if(this.cell.dropoutMask!=null&&(on(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(on(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new pe("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return xe(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],o=Cs(i);return Array.isArray(t)?Array(t.length).fill(o):[o]})}resetStates(e,t=!1){xe(()=>{if(!this.stateful)throw new Qo("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new pe("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Cs(i)):this.states_=[Cs(i)];else if(e==null)on(this.states_),this.keptStates!=null&&(on(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Cs(i)):this.states_[0]=Cs(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new pe(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):on(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],u=i;if(!dn(l.shape,u))throw new pe(`State ${a} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Ds(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:i,strides:o,dilationRate:a}=this.cell,l=t==="channelsFirst",u=e[l?3:2],h=e[l?4:3],d=ko(u,r[0],i,o[0],a[0]),p=ko(h,r[1],i,o[1],a[1]);return[...e.slice(0,2),...l?[s,d,p]:[d,p,s]]}}ZF.className="ConvRNN2D";class ZC extends qb{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:i,dataFormat:o,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Ks(this.filters,"filters"),this.kernelSize=Zh(s,2,"kernelSize"),this.kernelSize.forEach(l=>Ks(l,"kernelSize")),this.strides=Zh(r||1,2,"strides"),this.strides.forEach(l=>Ks(l,"strides")),this.padding=i||"valid",Hi(this.padding),this.dataFormat=o||"channelsLast",ws(this.dataFormat),this.dilationRate=Zh(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Ks(l,"dilationRate"))}build(e){var t;e=Cn(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new pe(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],i=4,o=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,h=this.filters;l=new(t=class extends uo{apply(p,m){const g=u.apply([h]),b=Yr([h]),y=u.apply([h*2]);return $C([g,b,y])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return xe(()=>{if(e.length!==3)throw new pe(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],i=e[1],o=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hu({ones:()=>Si(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(te,j,se)=>!j||!j[se]?te:ce(j[se],te);let h=u(r,l,0),d=u(r,l,1),p=u(r,l,2),m=u(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hu({ones:()=>Si(i),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const g=this.recurrentDropoutMask;let b=u(i,g,0),y=u(i,g,1),v=u(i,g,2),w=u(i,g,3);const E=3,[T,I,M,$]=Zr(this.kernel.read(),a,E),[O,k,N,A]=this.useBias?Zr(this.bias.read(),a):[null,null,null,null];h=this.inputConv(h,T,O,this.padding),d=this.inputConv(d,I,k,this.padding),p=this.inputConv(p,M,N,this.padding),m=this.inputConv(m,$,A,this.padding);const[B,W,K,q]=Zr(this.recurrentKernel.read(),a,E);b=this.recurrentConv(b,B),y=this.recurrentConv(y,W),v=this.recurrentConv(v,K),w=this.recurrentConv(w,q);const Y=this.recurrentActivation.apply(Ve(h,b)),J=this.recurrentActivation.apply(Ve(d,y)),G=Ve(ce(J,o),ce(Y,this.activation.apply(Ve(p,v)))),ee=ce(this.recurrentActivation.apply(Ve(m,w)),this.activation.apply(G));return[ee,ee,G]})}getConfig(){const e=super.getConfig(),t=fq(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,r){const i=Qa(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Uo(i,s,this.dataFormat):i}recurrentConv(e,t){return Qa(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}ZC.className="ConvLSTM2DCell";Ge(ZC);class QF extends ZF{constructor(e){const t=new ZC(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}QF.className="ConvLSTM2D";Ge(QF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class QC extends cn{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return xe(()=>{this.invokeCallHook(e,t);const s=jt(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,i=this.getNoiseShape(s);return Rg(()=>B$(s,this.rate,i,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}QC.className="Dropout";Ge(QC);class JF extends QC{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}JF.className="SpatialDropout1D";Ge(JF);class eP extends cn{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ks(this.units,"units"),this.activation=cu(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=es(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=es(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Os(e.kernelConstraint),this.biasConstraint=Os(e.biasConstraint),this.kernelRegularizer=ts(e.kernelRegularizer),this.biasRegularizer=ts(e.biasRegularizer),this.activityRegularizer=ts(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Cn(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Cn(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return xe(()=>{this.invokeCallHook(e,t);const s=jt(e),r=$$(this.activation.getClassName());let i;return r!=null?i=ca(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=ca(s,this.kernel.read()),this.bias!=null&&(i=Uo(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:uu(this.activation),useBias:this.useBias,kernelInitializer:os(this.kernelInitializer),biasInitializer:os(this.biasInitializer),kernelRegularizer:Wn(this.kernelRegularizer),biasRegularizer:Wn(this.biasRegularizer),activityRegularizer:Wn(this.activityRegularizer),kernelConstraint:Ps(this.kernelConstraint),biasConstraint:Ps(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}eP.className="Dense";Ge(eP);class tP extends cn{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Cn(e);for(const t of e.slice(1))if(t==null)throw new pe(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Zl(e,1)]}call(e,t){return xe(()=>{this.invokeCallHook(e,t);let s=jt(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=yn(s,r)}return Xj(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}tP.className="Flatten";Ge(tP);class nP extends cn{constructor(e){super(e),this.supportsMasking=!0,this.activation=cu(e.activation)}call(e,t){return xe(()=>{this.invokeCallHook(e,t);const s=jt(e);return this.activation.apply(s)})}getConfig(){const e={activation:uu(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}nP.className="Activation";Ge(nP);class sP extends cn{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return xe(()=>(e=jt(e),Hj(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}sP.className="RepeatVector";Ge(sP);class rP extends cn{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let i=1,o=null;for(let l=0;l<r.length;++l){const u=r[l];if(this.isUnknown(u))if(o===null)o=l;else throw new pe("Can only specifiy one unknown dimension.");else i*=u}const a=Zl(e);if(o!==null){if(i===0||a%i!==0)throw new pe(s);r[o]=a/i}else if(a!==i)throw new pe(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return xe(()=>{this.invokeCallHook(e,t);const s=jt(e),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return he(s,i)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}rP.className="Reshape";Ge(rP);class iP extends cn{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=$o(1,e.dims.length+1);if(!dn(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Fs({ndim:this.dims.length+1})]}computeOutputShape(e){e=Cn(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return yn(jt(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}iP.className="Permute";Ge(iP);class oP extends cn{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=jt(e);return Bp(Nc(s,this.maskValue),-1)}call(e,t){return xe(()=>{this.invokeCallHook(e,t);const s=jt(e),o=Bp(Nc(s,this.maskValue),-1,!0);return ce(s,Ze(o,s.dtype))})}}oP.className="Masking";Ge(oP);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aP extends cn{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Mn(e.inputLength))}this.inputDim=e.inputDim,Ks(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ks(this.outputDim,"outputDim"),this.embeddingsInitializer=es(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ts(e.embeddingsRegularizer),this.activityRegularizer=ts(e.activityRegularizer),this.embeddingsConstraint=Os(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return xe(()=>this.maskZero?(e=jt(e),Nc(e,vn(e))):null)}computeOutputShape(e){if(e=Cn(e),this.inputLength==null)return[...e,this.outputDim];const t=Mn(this.inputLength);if(t.length!==e.length-1)throw new pe(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const i=t[r],o=e[r+1];if(i!=null&&o!=null&&i!==o)throw new pe(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(t[s]=o),s++}}return[e[0],...t,this.outputDim]}call(e,t){return xe(()=>{this.invokeCallHook(e,t);let s=jt(e);s.dtype!=="int32"&&(s=ua(s,"int32"));const r=z$(this.embeddings.read(),he(s,[s.size]));return he(r,Cn(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:os(this.embeddingsInitializer),embeddingsRegularizer:Wn(this.embeddingsRegularizer),activityRegularizer:Wn(this.activityRegularizer),embeddingsConstraint:Ps(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}aP.className="Embedding";Ge(aP);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xc extends cn{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new sn}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const i=e[e.length-t.length+r],o=t[r];if(i==null||o==null||i<0||o<0)s.push(null);else if(i===1)s.push(o);else if(o===1)s.push(i);else{if(i!==o)throw new pe("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(i)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Cn(e)]),e=e,e.length<2)throw new pe(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const i of e)i!=null&&i[0]!==null&&t.push(i[0]);if(t=Yl(t),t.length>1)throw new pe(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let i=1;i<e.length;++i){const o=e[i]==null?null:e[i].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const r=e.map(i=>i.length);e.indexOf(null)===-1&&Yl(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return xe(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(i=>i.rank);if(r.indexOf(null)===-1){const i=lu(r);for(let o of e){const a=o.rank;for(let l=0;l<i-a;++l)o=Ng(o,1);s.push(o)}return this.mergeFunction(s)}else{let i=!1;for(const l of e){const u=l.rank;if(u==null){const h=l.shape,d=h[0],p=h.slice(1).concat([d]);let m=he(l,[d].concat(Zl(h.slice(1))));m=yn(m,[1,0]),m=he(m,p),s.push(m),i=!0}else if(u>1){const h=$o(1,u).concat([0]);s.push(yn(l,h)),i=!0}else s.push(l)}let o=this.mergeFunction(s);const a=o.rank;if(i){if(a==null){const l=o.shape,u=l.length,h=l[u-1],d=[h].concat(l.slice(0,l.length-1));o=he(yn(he(o,[-1,h]),[1,0]),d)}else if(a>1){const l=[a-1].concat($o(0,a-1));o=yn(o,l)}}return o}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,i)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Yl(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return xe(()=>{if(t==null)return null;if(!Array.isArray(t))throw new pe("`mask` should be an Array");if(!Array.isArray(e))throw new pe("`inputs` should be an Array");if(t.length!==e.length)throw new pe(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:ds(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=Do(s,t[r]);return s})}}class lP extends Xc{constructor(e){super(e)}mergeFunction(e){return xe(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Ve(t,e[s]);return t})}}lP.className="Add";Ge(lP);class uP extends Xc{constructor(e){super(e)}mergeFunction(e){return xe(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ce(t,e[s]);return t})}}uP.className="Multiply";Ge(uP);class cP extends Xc{constructor(e){super(e)}mergeFunction(e){return xe(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Ve(t,e[s]);return ce(1/e.length,t)})}}cP.className="Average";Ge(cP);class hP extends Xc{constructor(e){super(e)}mergeFunction(e){return xe(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=va(t,e[s]);return t})}}hP.className="Maximum";Ge(hP);class dP extends Xc{constructor(e){super(e)}mergeFunction(e){return xe(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=au(t,e[s]);return t})}}dP.className="Minimum";Ge(dP);class fP extends Xc{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new pe("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const i=e[r].slice();i.splice(this.axis,1);let o=!1;for(const a of s)if(dn(a,i)){o=!0;break}o||s.push(i)}if(s.length>1)throw new pe("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return xe(()=>$C(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new pe("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of t.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new pe("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new pe("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new pe(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return xe(()=>{let s=!0;if(t.forEach(o=>{if(o!=null){s=!1;return}}),s)return null;const r=[];for(let o=0;o<e.length;++o)t[o]==null?r.push(Ze(Si(e[o]),"bool")):t[o].rank<e[o].rank?r.push(ds(t[o],-1)):r.push(t[o]);const i=ys(r,this.axis);return Yv(i,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}fP.className="Concatenate";Ge(fP);function mp(n,e){for(;n<0;)n+=e;return n}function pq(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new sn("batchDot is not implemented for tensors of 4D or higher rank yet");if(z(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),z(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new sn("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const i=t;return xe(()=>{let o;if(s>r){o=s-r;const l=[];for(let u=0;u<o;++u)l.push(1);e=he(e,e.shape.concat(l))}else if(r>s){o=r-s;const l=[];for(let u=0;u<o;++u)l.push(1);n=he(n,n.shape.concat(l))}else o=0;let a;if(n.shape.length===2&&e.shape.length===2)i[0]===i[1]?a=Et(ce(n,e),i[0]):a=Et(ce(yn(n,[1,0]),e),i[1]);else{const l=i[0]!==n.shape.length-1,u=i[1]===e.shape.length-1;a=en(n,e,l,u)}if(o>0){let l;s>r?l=s+r-3:l=s-1;const u=[];for(let h=l;h<l+o;++h)u.push(h);a=Lr(a,u)}return a.shape.length===1&&(a=ds(a,1)),a})}class pP extends Xc{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){z(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new sn("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new pe(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new pe(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,o)=>mp(i,e[o].shape.length)):r=[mp(this.axes,t.shape.length),mp(this.axes,s.shape.length)],this.normalize&&(t=yx(t,r[0]),s=yx(s,r[1])),pq(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[mp(this.axes,e.length),mp(this.axes,t.length)],s}computeOutputShape(e){z(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new sn("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=t.concat(s);return i.length===1&&i.push(1),i}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}pP.className="Dot";Ge(pP);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mP extends cn{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return xe(()=>{this.invokeCallHook(e,t);const s=jt(e);return Rg(()=>Ve(Bb(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}mP.className="GaussianNoise";Ge(mP);class gP extends cn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return xe(()=>{this.invokeCallHook(e,t);const s=jt(e);return this.rate>0&&this.rate<1?Rg(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return ce(s,Bb(s.shape,1,i))},()=>s,t.training||!1):s})}}gP.className="GaussianDropout";Ge(gP);class yP extends cn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||jt(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return xe(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Rg(()=>{const i=jt(e),a=-1.6732632423543772*1.0507009873554805;let l=al(bu(s),this.rate);l=ua(l,"float32");const u=((1-this.rate)*(1+this.rate*a**2))**-.5,h=-u*a*this.rate,d=Ve(ce(i,l),ce(Ve(l,-1),a));return Ve(ce(d,u),h)},()=>jt(e),t.training||!1)}return e})}}yP.className="AlphaDropout";Ge(yP);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qp(n,e,t,s,r,i=.001){let o;if(n.rank===2)o=sE(n,e,t,s,r,i);else if(n.rank===3)o=rE(n,e,t,s,r,i);else if(n.rank===4)o=iE(n,e,t,s,r,i);else throw new sn(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return o}function mq(n,e,t,s,r=.001){return xe(()=>{const i=gg(n,s),o=i.mean,a=i.variance;return[qp(n,o,a,t,e,r),o,a]})}function gq(n,e,t,s,r=.001){return xe(()=>{const i=gg(n,s),o=i.mean,a=i.variance,l=[];for(const g of $o(0,n.rank))s.indexOf(g)!==-1?l.push(1):l.push(n.shape[g]);const u=he(o,l),h=he(a,l),d=e==null?null:he(e,l),p=t==null?null:he(t,l);return[qp(n,u,h,p,d,r),o,a]})}function yq(n,e,t,s,r=.001){return dn(s.slice().sort(),$o(0,n.rank-1))?mq(n,e,t,s,r):gq(n,e,t,s,r)}class xP extends cn{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=es(e.betaInitializer||"zeros"),this.gammaInitializer=es(e.gammaInitializer||"ones"),this.movingMeanInitializer=es(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=es(e.movingVarianceInitializer||"ones"),this.betaConstraint=Os(e.betaConstraint),this.gammaConstraint=Os(e.gammaConstraint),this.betaRegularizer=ts(e.betaRegularizer),this.gammaRegularizer=ts(e.gammaRegularizer)}build(e){e=Cn(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new pe(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Fs({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return xe(()=>{const s=t.training==null?!1:t.training,r=jt(e),i=r.shape,o=i.length,a=$o(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const u=kc(1,o);u[l]=i[l];const h=a.slice();h.sort();const d=!dn(h,$o(0,o).slice(0,o-1)),p=()=>{if(d){const w=he(this.movingMean.read(),u),E=he(this.movingVariance.read(),u),T=this.center?he(this.beta.read(),u):null,I=this.scale?he(this.gamma.read(),u):null;return qp(r,w,E,T,I,this.epsilon)}else return qp(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return p();const[m,g,b]=yq(r,this.gamma.read(),this.beta.read(),a,this.epsilon),y=(w,E,T)=>{xe(()=>{const I=1-T,M=w.read(),$=ce(mt(M,E),I);w.write(mt(M,$))})};return(()=>{y(this.movingMean,g,this.momentum),y(this.movingVariance,b,this.momentum)})(),m})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:os(this.betaInitializer),gammaInitializer:os(this.gammaInitializer),movingMeanInitializer:os(this.movingMeanInitializer),movingVarianceInitializer:os(this.movingVarianceInitializer),betaRegularizer:Wn(this.betaRegularizer),gammaRegularizer:Wn(this.gammaRegularizer),betaConstraint:Ps(this.betaConstraint),gammaConstraint:Ps(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}xP.className="BatchNormalization";Ge(xP);class vP extends cn{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=es(e.betaInitializer||"zeros"),this.gammaInitializer=es(e.gammaInitializer||"ones"),this.betaRegularizer=ts(e.betaRegularizer),this.gammaRegularizer=ts(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Cn(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const i of this.axis)if(i<0||i>=t)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==Yl(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>e[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=jt(e),r=s.shape,i=r.length;return xe(()=>{let{mean:a,variance:l}=gg(s,this.axis,!0);const u=kc(1,i);for(const b of this.axis)u[b]=r[b];const h=b=>b!=null&&b.shape.length!==i?he(b,u):b;let d=this.scale?h(this.gamma.read()):null,p=this.center?h(this.beta.read()):null;const m=[],g=[];for(let b=0;b<i;++b)this.axis.indexOf(b)!==-1?(m.push(r[b]),g.push(1)):(m.push(1),g.push(r[b]));return a=Li(a,m),l=Li(l,m),d!=null&&(d=Li(d,g)),p!=null&&(p=Li(p,g)),qp(s,a,l,p,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:os(this.betaInitializer),gammaInitializer:os(this.gammaInitializer),betaRegularizer:Wn(this.betaRegularizer),gammaRegularizer:Wn(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}vP.className="LayerNormalization";Ge(vP);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xq(n,e,t){return xe(()=>{if(n.rank!==4)throw new pe(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new pe("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Fo()),t!=="channelsLast"&&t!=="channelsFirst")throw new pe(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],ba(n,s)})}class bP extends cn{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Fo():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new pe(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new pe(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new pe(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Fs({ndim:4})]}computeOutputShape(e){e=Cn(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return xe(()=>xq(jt(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}bP.className="ZeroPadding2D";Ge(bP);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kb(n,e,t,s,r,i){return xe(()=>{ws(r),P$(i),Hi(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=Fo()),i==null&&(i="max"),n=XC(n,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=mg(n,e,t,a):o=ag(n,e,t,a),r==="channelsFirst"&&(o=yn(o,[0,3,1,2])),o})}function wP(n,e,t,s,r,i){return xe(()=>{ws(r),P$(i),Hi(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Fo()),i==null&&(i="max"),n=LF(n,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=NE(n,e,t,a):o=nE(n,e,t,a),r==="channelsFirst"&&(o=yn(o,[0,4,1,2,3])),o})}class SP extends cn{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new pe(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Ks(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new pe(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Ks(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Hi(this.padding),this.inputSpec=[new Fs({ndim:3})]}computeOutputShape(e){e=Cn(e);const t=ko(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return xe(()=>{this.invokeCallHook(e,t),e=Ng(jt(e),2);const s=this.poolingFunction(jt(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Lr(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class _P extends SP{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return ws(i),Hi(r),Kb(e,t,s,r,i,"max")}}_P.className="MaxPooling1D";Ge(_P);class TP extends SP{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return ws(i),Hi(r),Kb(e,t,s,r,i,"avg")}}TP.className="AveragePooling1D";Ge(TP);class EP extends cn{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new pe(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ks(this.poolSize,"poolSize"),Ks(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ws(this.dataFormat),Hi(this.padding),this.inputSpec=[new Fs({ndim:4})]}computeOutputShape(e){e=Cn(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=ko(t,this.poolSize[0],this.padding,this.strides[0]),s=ko(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return xe(()=>(this.invokeCallHook(e,t),this.poolingFunction(jt(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class CP extends EP{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return ws(i),Hi(r),Kb(e,t,s,r,i,"max")}}CP.className="MaxPooling2D";Ge(CP);class IP extends EP{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return ws(i),Hi(r),Kb(e,t,s,r,i,"avg")}}IP.className="AveragePooling2D";Ge(IP);class NP extends cn{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new pe(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ks(this.poolSize,"poolSize"),Ks(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ws(this.dataFormat),Hi(this.padding),this.inputSpec=[new Fs({ndim:5})]}computeOutputShape(e){e=Cn(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=ko(t,this.poolSize[0],this.padding,this.strides[0]),s=ko(s,this.poolSize[1],this.padding,this.strides[1]),r=ko(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return xe(()=>(this.invokeCallHook(e,t),this.poolingFunction(jt(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class AP extends NP{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return ws(i),Hi(r),wP(e,t,s,r,i,"max")}}AP.className="MaxPooling3D";Ge(AP);class RP extends NP{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return ws(i),Hi(r),wP(e,t,s,r,i,"avg")}}RP.className="AveragePooling3D";Ge(RP);class kP extends cn{constructor(e){super(e),this.inputSpec=[new Fs({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new sn}}class MP extends kP{constructor(e){super(e||{})}call(e,t){return xe(()=>{const s=jt(e);return is(s,1)})}}MP.className="GlobalAveragePooling1D";Ge(MP);class DP extends kP{constructor(e){super(e||{})}call(e,t){return xe(()=>{const s=jt(e);return Vi(s,1)})}}DP.className="GlobalMaxPooling1D";Ge(DP);class $P extends cn{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ws(this.dataFormat),this.inputSpec=[new Fs({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new sn}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class FP extends $P{call(e,t){return xe(()=>{const s=jt(e);return this.dataFormat==="channelsLast"?is(s,[1,2]):is(s,[2,3])})}}FP.className="GlobalAveragePooling2D";Ge(FP);class PP extends $P{call(e,t){return xe(()=>{const s=jt(e);return this.dataFormat==="channelsLast"?Vi(s,[1,2]):Vi(s,[2,3])})}}PP.className="GlobalMaxPooling2D";Ge(PP);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class OP extends cn{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,i=qa(r,s);delete t.layer;const o={layer:i};return Object.assign(o,t),new e(o)}}class LP extends OP{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Cn(e),e.length<3)throw new pe(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Cn(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return xe(()=>(e=jt(e),XF((o,a)=>[jt(this.layer.call(o,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}LP.className="TimeDistributed";Ge(LP);function vq(n){jc(zj,"BidirectionalMergeMode",n)}const bq="concat";class UP extends OP{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=qa(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=qa(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?bq:e.mergeMode,vq(this.mergeMode),e.weights)throw new sn("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,i;return this.returnState&&(i=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):Kr(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const i=jF(e,s,r,this.numConstants);if(e=i.inputs,s=i.initialState,r=i.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const o=[],a=[];if(s!=null){const u=s.length;if(u%2>0)throw new pe("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,o.push(...s);const h=s.map(d=>new Fs({shape:d.shape}));this.forwardLayer.stateSpec=h.slice(0,u/2),this.backwardLayer.stateSpec=h.slice(u/2),a.push(...h)}if(r!=null)throw new sn("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof ga;for(const u of o)if(u instanceof ga!==l)throw new pe("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(o),h=this.inputSpec.concat(a),d=this.inputSpec;this.inputSpec=h;const p=super.apply(u,t);return this.inputSpec=d,p}else return super.apply(e,t)}call(e,t){return xe(()=>{const s=t.initialState;let r,i;if(s==null)r=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let o;this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=Wi(i,1));let a;return this.mergeMode==="concat"?a=$C([r,i]):this.mergeMode==="sum"?a=Ve(r,i):this.mergeMode==="ave"?a=ce(.5,Ve(r,i)):this.mergeMode==="mul"?a=ce(r,i):this.mergeMode==null&&(a=[r,i]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){vc(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),vc(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(o=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=qa(t.layer);if(delete t.layer,t.numConstants!=null)throw new sn("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}UP.className="Bidirectional";Ge(UP);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zP extends cn{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return xe(()=>(e=jt(e),e.dtype!=="float32"&&(e=ua(e,"float32")),Ve(ce(e,this.scale),this.offset)))}}zP.className="Rescaling";Ge(zP);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:wq,cropAndResize:Sq}=Ur;class BP extends cn{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,i,o,a,l){return xe(()=>{let u,h=!1;const d=t/o,p=s/a,m=(r+t)/o,g=(i+s)/a,b=[d,p,m,g],y=[];e.rank===3?(h=!0,u=ni([e])):u=e;for(let I=0;I<u.shape[0];I++)y.push(b);const v=Bi(y,[y.length,4]),w=Ja(0,y.length,1,"int32"),T=Sq(u,v,w,[r,i],"nearest");return ua(h?jt(Gi(T)):T,l)})}upsize(e,t,s,r){return xe(()=>{const i=wq(e,[t,s]);return ua(i,r)})}call(e,t){return xe(()=>{const s=jt(e),r=s.dtype,i=s.shape,o=i[i.length-3],a=i[i.length-2];let l=0;o!==this.height&&(l=Math.floor((o-this.height)/2));let u=0;return a!==this.width&&(u=Math.floor((a-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,o,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Cn(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}BP.className="CenterCrop";Ge(BP);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _q(n,e,t,s){let r=jt(n);if(r.dtype!=="int32"&&(r=ua(r,"int32")),e==="int")return r;const i=r.shape;if(r.rank===0&&(r=ds(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=ds(r,-1)),r.rank>2)throw new pe(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${i} which would result in output rank ${r.rank}.`);const o=["multiHot","oneHot"].includes(e),a=r;let l;if(typeof s<"u"&&e==="count"?l=dx(a,s,t,o):l=dx(a,[],t,o),e!=="tfIdf")return l;if(s)return ce(l,s);throw new pe("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class VP extends cn{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Cn(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return xe(()=>{e=jt(e),e.dtype!=="int32"&&(e=ua(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new pe(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=jt(t.countWeights)}const r=Vi(e),i=sd(e),o=Wr(this.numTokens,r).bufferSync().get(0),a=al(i,0).bufferSync().get(0);if(!(o&&a))throw new pe(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return _q(e,this.outputMode,this.numTokens,s)})}}VP.className="CategoryEncoding";Ge(VP);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Tq=["bilinear","nearest"],VA=new Set(Tq);class WP extends cn{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(VA.has(e.interpolation))this.interpolation=e.interpolation;else throw new pe(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Cn(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return xe(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Ur.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Ur.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...VA]} are supported`)})}}WP.className="Resizing";Ge(WP);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GP{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}GP.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class HP extends cn{constructor(e){super(e),this.randomGenerator=new GP(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}HP.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Eq=["bilinear","nearest"],WA=new Set(Eq);class jP extends HP{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new pe(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new pe(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new pe(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(WA.has(s))this.interpolation=s;else throw new pe(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Cn(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return xe(()=>{const s=jt(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=bu([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*r;i=Math.round(i);const o=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Ur.resizeBilinear(e,o);case"nearest":return Ur.resizeNearestNeighbor(e,o);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...WA]} are supported`)}})}}jP.className="RandomWidth";Ge(jP);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq=_e();Cq.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var pi;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(pi||(pi={}));var GA;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(GA||(GA={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq={};function XP(n){return Iq[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F(n,e,t,s,r){const i=e.inputParams[n];if(i&&i.inputIndexStart!==void 0){const a=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?a+1:i.inputIndexEnd,u=a<0?e.inputNames.length+a:a;if(i.type==="tensor")return ar(e.inputNames[u],t,s,r);if(i.type==="tensors"){const p=e.inputs.slice(a,l);return e.inputNames.slice(a,l).filter((g,b)=>{var y;return((y=p[b])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(g=>ar(g,t,s,r))}const h=ar(e.inputNames[u],t,s,r),d=h.dataSync();return i.type==="number"?d[0]:zi(h.shape,d)}const o=e.attrParams[n];return o&&o.value}function ar(n,e,t,s){const[r,i]=mi(n,t);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const o=t.currentContextIds.find(a=>!!e[Sx(r,a)]);return o!==void 0?e[Sx(r,o)][i]:void 0}function HA(n,e,t){return e[Sx(n,t.currentContextId)]}function Ba(n,e){const[t,s,r]=mi(n,e);return[Sx(t,e&&e.currentContextId),s,r]}function Sx(n,e){return e?`${n}-${e}`:n}function mi(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const i=e.parseNodeNameCache.get(n);if(i!=null)return i}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const i=s[0],o=s.length===3?s[1]:void 0,a=Number(s[s.length-1]);r=[i,a,o]}return t&&e.parseNodeNameCache.set(n,r),r}function Z0(n,e,t){let s=F("pad",n,e,t);if(s==="explicit"){s=F("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)r[i][0]=s[i*2],r[i][1]=s[i*2+1];return r}return s}function Va(n){return n.kept?n:aa(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nq=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Aq=Object.freeze(Object.defineProperty({__proto__:null,json:Nq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rq=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kq=Object.freeze(Object.defineProperty({__proto__:null,json:Rq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Dq=Object.freeze(Object.defineProperty({__proto__:null,json:Mq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Fq=Object.freeze(Object.defineProperty({__proto__:null,json:$q},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pq=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Oq=Object.freeze(Object.defineProperty({__proto__:null,json:Pq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Uq=Object.freeze(Object.defineProperty({__proto__:null,json:Lq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zq=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Bq=Object.freeze(Object.defineProperty({__proto__:null,json:zq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Wq=Object.freeze(Object.defineProperty({__proto__:null,json:Vq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Hq=Object.freeze(Object.defineProperty({__proto__:null,json:Gq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jq=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Xq=Object.freeze(Object.defineProperty({__proto__:null,json:jq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Kq=Object.freeze(Object.defineProperty({__proto__:null,json:qq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yq=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Zq=Object.freeze(Object.defineProperty({__proto__:null,json:Yq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qq=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Jq=Object.freeze(Object.defineProperty({__proto__:null,json:Qq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tK=Object.freeze(Object.defineProperty({__proto__:null,json:eK},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nK=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],sK=Object.freeze(Object.defineProperty({__proto__:null,json:nK},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rK=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],iK=Object.freeze(Object.defineProperty({__proto__:null,json:rK},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],aK=Object.freeze(Object.defineProperty({__proto__:null,json:oK},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],uK=Object.freeze(Object.defineProperty({__proto__:null,json:lK},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],hK=Object.freeze(Object.defineProperty({__proto__:null,json:cK},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jA{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[Aq,kq,Dq,Fq,Oq,Uq,Bq,Wq,Hq,Xq,Kq,Zq,Jq,tK,sK,iK,aK,uK,hK],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],i=[],o=[],a=s.reduce((b,y)=>(b[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?r.push(b[y.name]):y.op==="Const"?i.push(b[y.name]):(y.input==null||y.input.length===0)&&o.push(b[y.name]),b),{});let l=[];const u=[];let h={},d={};t!=null&&(h=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const p=Object.keys(a);p.forEach(b=>{const y=a[b];y.inputNames.forEach((v,w)=>{const[E,,T]=Ba(v),I=a[E];if(I.outputs!=null){const M=I.outputs.indexOf(T);if(M!==-1){const $=`${E}:${M}`;y.inputNames[w]=$}}y.inputs.push(I),I.children.push(y)})}),Object.keys(d).length===0?p.forEach(b=>{const y=a[b];y.children.length===0&&u.push(y)}):Object.keys(d).forEach(b=>{const[y]=Ba(b),v=a[y];v!=null&&(v.signatureKey=d[b],u.push(v))}),Object.keys(h).length>0?Object.keys(h).forEach(b=>{const[y]=Ba(b),v=a[y];v&&(v.signatureKey=h[b],l.push(v))}):l=r;let m={};e.library!=null&&e.library.function!=null&&(m=e.library.function.reduce((b,y)=>(b[y.signature.name]=this.mapFunction(y),b),{}));const g={nodes:a,inputs:l,outputs:u,weights:i,placeholders:r,signature:t,functions:m};return o.length>0&&(g.initNodes=o),g}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=XP(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,i)=>(r[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,i)=>{const o=i.type;let a;switch(i.type){case"string":a=__(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=__(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":a=R_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=R_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":a=E_(e.attr,i.tfName,i.defaultValue||0),a===void 0&&i.tfDeprecatedName&&(a=E_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":a=A_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=A_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":a=T_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=T_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":a=M_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=M_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":a=N_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=N_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":a=k_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=k_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":a=C_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=C_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":a=I_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=I_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":a=XA(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=XA(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${e.op}`)}return r[i.name]={value:a,type:o},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let i={};t!=null&&(i=t.reduce((d,p)=>(d[p.name]=this.mapNode(p),p.op==="Const"&&r.push(d[p.name]),d),{}));const o=[],a=[];e.signature.inputArg.forEach(d=>{const[p]=Ba(d.name),m={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:JC(d.type),type:"dtype"}},children:[]};m.signatureKey=d.name,o.push(m),i[p]=m}),Object.keys(i).forEach(d=>{const p=i[d];p.inputNames.forEach((m,g)=>{const[b,,y]=Ba(m),v=i[b];if(v.outputs!=null){const w=v.outputs.indexOf(y);if(w!==-1){const E=`${b}:${w}`;p.inputNames[g]=E}}p.inputs.push(v),v.children.push(p)})});const u=e.ret;e.signature.outputArg.forEach(d=>{const[p,m]=Ba(u[d.name]),g=i[p];g!=null&&(g.defaultOutput=m,a.push(g))});const h=this.mapArgsToSignature(e);return{nodes:i,inputs:o,outputs:a,weights:r,placeholders:s,signature:h}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function dK(n){const e=_e().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function qP(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):dK(n);return e?t:t.toLowerCase()}function __(n,e,t,s=!1){const r=n[e];return r!=null?qP(r.s,s):t}function T_(n,e,t){const s=n[e];return s?s.b:t}function E_(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function JC(n){switch(typeof n=="string"&&(n=pi[n]),n){case pi.DT_FLOAT:case pi.DT_HALF:return"float32";case pi.DT_INT32:case pi.DT_INT64:case pi.DT_INT8:case pi.DT_UINT8:return"int32";case pi.DT_BOOL:return"bool";case pi.DT_DOUBLE:return"float32";case pi.DT_STRING:return"string";case pi.DT_COMPLEX64:case pi.DT_COMPLEX128:return"complex64";default:return null}}function XA(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function C_(n,e,t){const s=n[e];return s&&s.type?JC(s.type):t}function I_(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>JC(r)):t}function KP(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function N_(n,e,t){const s=n[e];return s&&s.shape?KP(s.shape):t}function A_(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function R_(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(i=>qP(i,s)):t}function k_(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>KP(r)):t}function M_(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fK{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,i)=>(r[i]=this.getAttr(i),r),{}))}getInput(e){return ar(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return ar(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return E_(this.node.rawAttrs,e,t);if(s.s!=null)return __(this.node.rawAttrs,e,t);if(s.b!=null)return T_(this.node.rawAttrs,e,t);if(s.shape!=null)return N_(this.node.rawAttrs,e,t);if(s.type!=null)return C_(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return A_(this.node.rawAttrs,e,t);if(s.list.s!=null)return R_(this.node.rawAttrs,e,t);if(s.list.shape!=null)return k_(this.node.rawAttrs,e,t);if(s.list.b!=null)return M_(this.node.rawAttrs,e,t);if(s.list.type!=null)return I_(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pr=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:BT,abs:Es,acos:XT,acosh:qT,add:Ve,addN:OM,all:Yv,any:Bp,argMax:ru,argMin:KT,asin:YT,asinh:ZT,atan:QT,atan2:JT,atanh:eE,avgPool:ag,avgPool3d:nE,basicLSTMCell:LM,batchNorm:yf,batchNorm2d:sE,batchNorm3d:rE,batchNorm4d:iE,batchToSpaceND:lg,bincount:oE,bitwiseAnd:UM,booleanMaskAsync:SD,broadcastArgs:zM,broadcastTo:yc,buffer:tn,cast:Ze,ceil:aE,clipByValue:ei,clone:aa,complex:Za,concat:ys,concat1d:lE,concat2d:uE,concat3d:cE,concat4d:hE,conv1d:Zv,conv2d:Qa,conv2dTranspose:Qv,conv3d:fE,conv3dTranspose:pE,cos:ug,cosh:Jv,cosineWindow:Tb,cumprod:Gp,cumsum:eb,denseBincount:dx,depthToSpace:mE,depthwiseConv2d:xf,diag:VM,dilation2d:gE,div:Nt,divNoNan:yE,dot:xE,dropout:jE,einsum:ic,elu:vf,enclosingPowerOfTwo:XE,ensureShape:WM,equal:bi,erf:tb,euclideanNorm:bE,exp:ti,expandDims:ds,expm1:wE,eye:nb,fft:Sg,fill:Vc,floor:wf,floorDiv:Kv,fused:kD,gather:Sf,gatherND:CD,greater:Wr,greaterEqual:al,ifft:ad,imag:cg,image:Ur,inTopKAsync:ID,irfft:xb,isFinite:SE,isInf:_E,isNaN:TE,leakyRelu:hg,less:rd,lessEqual:vu,linalg:YE,linspace:jM,localResponseNormalization:EE,log:wi,log1p:dg,logSigmoid:CE,logSoftmax:rb,logSumExp:fg,logicalAnd:Do,logicalNot:pg,logicalOr:ib,logicalXor:IE,losses:LD,lowerBound:qM,matMul:en,max:Vi,maxPool:mg,maxPool3d:NE,maxPoolWithArgmax:KM,maximum:va,mean:is,meshgrid:YM,min:sd,minimum:au,mirrorPad:ab,mod:AE,moments:gg,movingAverage:_D,mul:ce,multiRNNCell:ZM,multinomial:QM,neg:jn,norm:bf,notEqual:Nc,oneHot:Ac,ones:Yr,onesLike:Si,op:ue,outerProduct:JM,pad:ba,pad1d:eD,pad2d:tD,pad3d:RE,pad4d:nD,pool:kE,pow:pa,prelu:xg,print:jT,prod:ME,raggedGather:sD,raggedRange:rD,raggedTensorToTensor:iD,rand:oD,randomGamma:uD,randomNormal:ub,randomStandardNormal:cD,randomUniform:bu,randomUniformInt:hD,range:Ja,real:id,reciprocal:PE,relu:Lo,relu6:cb,reshape:he,reverse:Wi,reverse1d:dD,reverse2d:fD,reverse3d:pD,reverse4d:mD,rfft:_g,round:hb,rsqrt:db,scalar:kt,scatterND:TD,searchSorted:ob,selu:fb,separableConv2d:pb,setdiff1dAsync:gD,sigmoid:yi,sign:OE,signal:OD,sin:mb,sinh:gb,slice:mn,slice1d:vg,slice2d:yb,slice3d:bg,slice4d:od,softmax:wg,softplus:Wc,spaceToBatchND:yg,sparse:UD,sparseToDense:ED,spectral:PD,split:Zr,sqrt:Zs,square:zn,squaredDifference:vb,squeeze:Lr,stack:ni,step:Gc,stridedSlice:LE,string:zD,sub:mt,sum:Et,tan:UE,tanh:ou,tensor:Bi,tensor1d:wr,tensor2d:xc,tensor3d:zE,tensor4d:yD,tensor5d:xD,tensor6d:vD,tensorScatterUpdate:bD,tile:Li,topk:VE,transpose:yn,truncatedNormal:wb,unique:WE,unsortedSegmentSum:Sb,unstack:Gi,upperBound:wD,variable:GE,where:ur,whereAsync:HE,zeros:Cs,zerosLike:vn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pK=(n,e,t,s=pr)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(F("a",n,e,t),F("b",n,e,t))];case"AddN":return[s.addN(F("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(F("a",n,e,t),F("b",n,e,t))];case"Mul":return[s.mul(F("a",n,e,t),F("b",n,e,t))];case"RealDiv":case"Div":return[s.div(F("a",n,e,t),F("b",n,e,t))];case"DivNoNan":return[s.divNoNan(F("a",n,e,t),F("b",n,e,t))];case"FloorDiv":return[s.floorDiv(F("a",n,e,t),F("b",n,e,t))];case"Sub":return[s.sub(F("a",n,e,t),F("b",n,e,t))];case"Minimum":return[s.minimum(F("a",n,e,t),F("b",n,e,t))];case"Maximum":return[s.maximum(F("a",n,e,t),F("b",n,e,t))];case"Pow":return[s.pow(F("a",n,e,t),F("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(F("a",n,e,t),F("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mK=(n,e,t,s=pr)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(F("x",n,e,t))];case"Acos":return[s.acos(F("x",n,e,t))];case"Acosh":return[s.acosh(F("x",n,e,t))];case"Asin":return[s.asin(F("x",n,e,t))];case"Asinh":return[s.asinh(F("x",n,e,t))];case"Atan":return[s.atan(F("x",n,e,t))];case"Atan2":return[s.atan2(F("x",n,e,t),F("y",n,e,t))];case"Atanh":return[s.atanh(F("x",n,e,t))];case"Ceil":return[s.ceil(F("x",n,e,t))];case"Complex":return[s.complex(F("real",n,e,t),F("imag",n,e,t))];case"Cos":return[s.cos(F("x",n,e,t))];case"Cosh":return[s.cosh(F("x",n,e,t))];case"Elu":return[s.elu(F("x",n,e,t))];case"Erf":return[s.erf(F("x",n,e,t))];case"Exp":return[s.exp(F("x",n,e,t))];case"Expm1":return[s.expm1(F("x",n,e,t))];case"Floor":return[s.floor(F("x",n,e,t))];case"Log":return[s.log(F("x",n,e,t))];case"Log1p":return[s.log1p(F("x",n,e,t))];case"Imag":return[s.imag(F("x",n,e,t))];case"Neg":return[s.neg(F("x",n,e,t))];case"Reciprocal":return[s.reciprocal(F("x",n,e,t))];case"Real":return[s.real(F("x",n,e,t))];case"Relu":return[s.relu(F("x",n,e,t))];case"Round":return[s.round(F("x",n,e,t))];case"Selu":return[s.selu(F("x",n,e,t))];case"Sigmoid":return[s.sigmoid(F("x",n,e,t))];case"Sin":return[s.sin(F("x",n,e,t))];case"Sign":return[s.sign(F("x",n,e,t))];case"Sinh":return[s.sinh(F("x",n,e,t))];case"Softplus":return[s.softplus(F("x",n,e,t))];case"Sqrt":return[s.sqrt(F("x",n,e,t))];case"Square":return[s.square(F("x",n,e,t))];case"Tanh":return[s.tanh(F("x",n,e,t))];case"Tan":return[s.tan(F("x",n,e,t))];case"ClipByValue":return[s.clipByValue(F("x",n,e,t),F("clipValueMin",n,e,t),F("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(F("x",n,e,t))];case"Rsqrt":return[s.rsqrt(ar(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(F("x",n,e,t),F("alpha",n,e,t))];case"Prelu":return[s.prelu(F("x",n,e,t),F("alpha",n,e,t))];case"IsNan":return[s.isNaN(ar(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(ar(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(ar(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){z(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],i=e[s];z(r<0||i<0||r===i,()=>t+` Shapes ${n} and ${e} must match`)}}}function qA(n){return!(typeof n=="number"||n.some(e=>e<0))}function gp(n,e,t){let s=D_(n,t);const r=!qA(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(i=>{s=D_(i.shape,s)}),!qA(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function D_(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],i=e[s];if(r>=0&&i>=0&&r!==i)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:i}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gK{constructor(e,t,s,r,i,o,a){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=i,this.dynamicSize=o,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=kt(0),Ds(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ro(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Ds(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Bi([],[0].concat(this.elementShape));const s=this.readMany(e);return ro(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ni(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Bi([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return ro(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),ys(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,Gi(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=s===0?0:t.size/s,o=[];xe(()=>{t=he(t,[1,s,i]);for(let l=0;l<e.length;++l){const h=[0,l===0?0:r[l-1],0],d=[1,e[l],i];o[l]=he(mn(t,h,d),this.elementShape)}return o});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,o)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mc{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(i=>{if(s!==i.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${i.dtype}`);ro(t,i.shape,"TensorList shape mismatch: "),Ds(i)}),this.idTensor=kt(0),this.maxNumElements=r,Ds(this.idTensor)}copy(){return new Mc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);ro(e,this.elementShape,"TensorList shape mismatch: ");const r=gp(this.elementShape,this.tensors,e);return xe(()=>{const i=this.tensors.map(o=>he(o,r));return ni(i,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=gp(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,ro(r.shape,e,"TensorList shape mismatch: "),he(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ro(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ds(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Mc([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ro(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=gp(this.elementShape,this.tensors,t);return he(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ro(this.elementShape,t.shape,"TensorList shape mismatch: "),Ds(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ro(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=gp(this.elementShape,this.tensors,s);return e.length===0?Bi([],[0].concat(r)):xe(()=>{const i=e.map(o=>he(this.tensors[o],r));return ni(i,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ro(this.elementShape,t,"TensorList shape mismatch: ");const s=gp(this.elementShape,this.tensors,t);return this.size()===0?Bi([],[0].concat(s)):xe(()=>{const r=this.tensors.map(i=>he(i,s));return ys(r,0)})}}function yK(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);ro(r,e,"TensorList shape mismatch: ");const i=Gi(n);return new Mc(i,e,s)}function xK(n,e,t,s){return new Mc([],n,e,s)}function vK(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const i=new Mc([],t,n.dtype,s),o=Gi(n,0);return e.forEach((a,l)=>{i.setItem(a,o[l])}),i}function bK(n,e,t){let s=0;const r=e.map(h=>(s+=h,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const i=n.shape.slice(1),o=D_(i,t),a=s===0?0:n.size/s,l=xe(()=>{const h=[];n=he(n,[1,s,a]);for(let d=0;d<e.length;++d){const m=[0,d===0?0:r[d-1],0],g=[1,e[d],a];h[d]=he(mn(n,m,g),o)}return n.dispose(),h}),u=new Mc([],t,n.dtype,e.length);for(let h=0;h<l.length;h++)u.setItem(h,l[h]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=F("thenBranch",n,e,t),r=F("elseBranch",n,e,t),i=F("cond",n,e,t),o=F("args",n,e,t);return(await i.data())[0]?t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=F("body",n,e,t),r=F("cond",n,e,t),i=F("args",n,e,t),o=await t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap),a=i.map(h=>h.id);let l=await o[0].data();o.forEach(h=>{!h.kept&&a.indexOf(h.id)===-1&&h.dispose()});let u=i;for(;l[0];){const h=u;u=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const d=u.map(m=>m.id);h.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&d.indexOf(m.id)===-1&&m.dispose()});const p=await t.functionMap[r].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await p[0].data(),p.forEach(m=>{!m.kept&&a.indexOf(m.id)===-1&&d.indexOf(m.id)===-1&&m.dispose()})}return u}case"LoopCond":{const s=F("pred",n,e,t);return[Va(s)]}case"Switch":{const s=F("pred",n,e,t);let r=F("data",n,e,t);return r.kept||(r=Va(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>ar(r,e,t)!==void 0);if(s){const r=ar(s,e,t);return[Va(r)]}return}case"Enter":{const s=F("frameName",n,e,t),r=F("tensor",n,e,t);return t.enterFrame(s),[Va(r)]}case"Exit":{const s=F("tensor",n,e,t);return t.exitFrame(),[Va(s)]}case"NextIteration":{const s=F("tensor",n,e,t);return t.nextIteration(),[Va(s)]}case"TensorArrayV3":{const s=F("size",n,e,t),r=F("dtype",n,e,t),i=F("elementShape",n,e,t),o=F("dynamicSize",n,e,t),a=F("clearAfterRead",n,e,t),l=F("identicalElementShapes",n,e,t),u=F("name",n,e,t),h=new gK(u,r,s,i,l,o,a);return t.addTensorArray(h),[h.idTensor,kt(1)]}case"TensorArrayWriteV3":{const s=F("tensorArrayId",n,e,t),r=F("index",n,e,t),i=F("tensor",n,e,t),o=t.getTensorArray(s.id);return o.write(r,i),[o.idTensor]}case"TensorArrayReadV3":{const s=F("tensorArrayId",n,e,t),r=F("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=F("tensorArrayId",n,e,t),r=F("indices",n,e,t),i=F("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,i)]}case"TensorArrayScatterV3":{const s=F("tensorArrayId",n,e,t),r=F("indices",n,e,t),i=F("tensor",n,e,t),o=t.getTensorArray(s.id);return o.scatter(r,i),[o.idTensor]}case"TensorArrayConcatV3":{const s=F("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),i=F("dtype",n,e,t);return[r.concat(i)]}case"TensorArraySplitV3":{const s=F("tensorArrayId",n,e,t),r=F("tensor",n,e,t),i=F("lengths",n,e,t),o=t.getTensorArray(s.id);return o.split(i,r),[o.idTensor]}case"TensorArraySizeV3":{const s=F("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[kt(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=F("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=F("tensorListId",n,e,t),r=F("index",n,e,t),i=F("tensor",n,e,t),o=t.getTensorList(s.id);return o.setItem(r,i),[o.idTensor]}case"TensorListGetItem":{const s=F("tensorListId",n,e,t),r=F("index",n,e,t),i=F("elementShape",n,e,t),o=F("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const s=F("indices",n,e,t),r=F("tensor",n,e,t),i=F("elementShape",n,e,t),o=F("numElements",n,e,t),a=vK(r,s,i,o);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=F("elementShape",n,e,t),r=F("elementDType",n,e,t);let i;n.op==="TensorListReserve"?i="numElements":i="maxNumElements";const o=F(i,n,e,t),a=n.op==="TensorListReserve"?-1:o,l=xK(s,r,o,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=F("tensorListId",n,e,t),r=F("indices",n,e,t),i=F("elementShape",n,e,t),o=F("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,o,i)]}case"TensorListStack":{const s=F("tensorListId",n,e,t),r=F("elementShape",n,e,t),i=F("elementDType",n,e,t),o=F("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,i,o)]}case"TensorListFromTensor":{const s=F("tensor",n,e,t),r=F("elementShape",n,e,t),i=F("elementDType",n,e,t),o=yK(s,r,i);return t.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=F("tensorListId",n,e,t),r=t.getTensorList(s.id),i=F("dtype",n,e,t),o=F("elementShape",n,e,t);return[r.concat(i,o)]}case"TensorListPushBack":{const s=F("tensorListId",n,e,t),r=F("tensor",n,e,t),i=t.getTensorList(s.id);return i.pushBack(r),[i.idTensor]}case"TensorListPopBack":{const s=F("tensorListId",n,e,t),r=F("elementShape",n,e,t),i=F("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,i)]}case"TensorListSplit":{const s=F("tensor",n,e,t),r=F("elementShape",n,e,t),i=F("lengths",n,e,t),o=bK(s,i,r);return t.addTensorList(o),[o.idTensor]}case"TensorListLength":{const s=F("tensorListId",n,e,t),r=t.getTensorList(s.id);return[kt(r.size(),"int32")]}case"TensorListResize":{const s=F("tensorListId",n,e,t),r=F("size",n,e,t),o=t.getTensorList(s.id).resize(r);return t.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n,e,t){const[s,r]=F("fusedOps",n,e,t),i=s==="biasadd",o=!i,a=r==="prelu",l=s==="fusedbatchnorm",u=F("numArgs",n,e,t);if(i){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const h=F("strides",n,e,t),d=Z0(n,e,t),p=F("dataFormat",n,e,t).toUpperCase(),m=F("dilations",n,e,t);let[g,b]=F("args",n,e,t);o&&(b=g,g=void 0);const y=F("leakyreluAlpha",n,e,t);return{stride:h,pad:d,dataFormat:p,dilations:m,biasArg:g,preluArg:b,activationFunc:r,leakyreluAlpha:y}}const SK=(n,e,t,s=pr)=>{switch(n.op){case"Conv1D":{const r=F("stride",n,e,t),i=F("pad",n,e,t),o=F("dataFormat",n,e,t).toUpperCase(),a=F("dilation",n,e,t);return[s.conv1d(F("x",n,e,t),F("filter",n,e,t),r,i,o,a)]}case"Conv2D":{const r=F("strides",n,e,t),i=Z0(n,e,t),o=F("dataFormat",n,e,t).toUpperCase(),a=F("dilations",n,e,t);return[s.conv2d(F("x",n,e,t),F("filter",n,e,t),[r[1],r[2]],i,o,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:i,dataFormat:o,dilations:a,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:d}=KA(n,e,t);return[s.fused.conv2d({x:F("x",n,e,t),filter:F("filter",n,e,t),strides:[r[1],r[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:i,dataFormat:o,dilations:a,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:d}=KA(n,e,t);return[s.fused.depthwiseConv2d({x:F("x",n,e,t),filter:F("filter",n,e,t),strides:[r[1],r[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=F("outputShape",n,e,t),i=F("strides",n,e,t),o=Z0(n,e,t);return[s.conv2dTranspose(F("x",n,e,t),F("filter",n,e,t),r,[i[1],i[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=F("strides",n,e,t),i=Z0(n,e,t),o=F("dilations",n,e,t),a=F("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(F("input",n,e,t),F("filter",n,e,t),[r[1],r[2]],i,a,[o[1],o[2]])]}case"Conv3D":{const r=F("strides",n,e,t),i=F("pad",n,e,t),o=F("dataFormat",n,e,t).toUpperCase(),a=F("dilations",n,e,t);return[s.conv3d(F("x",n,e,t),F("filter",n,e,t),[r[1],r[2],r[3]],i,o,[a[1],a[2],a[3]])]}case"AvgPool":{const r=F("strides",n,e,t),i=F("pad",n,e,t),o=F("kernelSize",n,e,t);return[s.avgPool(F("x",n,e,t),[o[1],o[2]],[r[1],r[2]],i)]}case"MaxPool":{const r=F("strides",n,e,t),i=F("pad",n,e,t),o=F("kernelSize",n,e,t);return[s.maxPool(F("x",n,e,t),[o[1],o[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{const r=F("strides",n,e,t),i=F("pad",n,e,t),o=F("kernelSize",n,e,t),a=F("includeBatchInIndex",n,e,t),{result:l,indexes:u}=s.maxPoolWithArgmax(F("x",n,e,t),[o[1],o[2]],[r[1],r[2]],i,a);return[l,u]}case"AvgPool3D":{const r=F("strides",n,e,t),i=F("pad",n,e,t),o=F("kernelSize",n,e,t);return[s.avgPool3d(F("x",n,e,t),[o[1],o[2],o[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{const r=F("strides",n,e,t),i=F("pad",n,e,t),o=F("kernelSize",n,e,t);return[s.maxPool3d(F("x",n,e,t),[o[1],o[2],o[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{const r=F("strides",n,e,t),i=F("pad",n,e,t),o=F("dilations",n,e,t),a=r[1],l=r[2],u=o[1],h=o[2];return[s.dilation2d(F("x",n,e,t),F("filter",n,e,t),[a,l],i,[u,h],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K=(n,e,t,s=pr)=>{switch(n.op){case"Fill":{const r=F("shape",n,e,t),i=F("dtype",n,e,t),o=F("value",n,e,t);return[s.fill(r,o,i)]}case"LinSpace":{const r=F("start",n,e,t),i=F("stop",n,e,t),o=F("num",n,e,t);return[s.linspace(r,i,o)]}case"Multinomial":{const r=F("logits",n,e,t),i=F("numSamples",n,e,t),o=F("seed",n,e,t);return[s.multinomial(r,i,o)]}case"OneHot":{const r=F("indices",n,e,t),i=F("depth",n,e,t),o=F("onValue",n,e,t),a=F("offValue",n,e,t),l=F("dtype",n,e,t);return[s.oneHot(r,i,o,a,l)]}case"Ones":return[s.ones(F("shape",n,e,t),F("dtype",n,e,t))];case"OnesLike":return[s.onesLike(F("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(F("shape",n,e,t),F("dtype",n,e,t),F("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(F("shape",n,e,t),F("minval",n,e,t),F("maxval",n,e,t),F("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(F("shape",n,e,t),F("minval",n,e,t),F("maxval",n,e,t),F("seed",n,e,t))];case"Range":{const r=F("start",n,e,t),i=F("stop",n,e,t),o=F("step",n,e,t);return[s.range(r,i,o,F("dtype",n,e,t))]}case"TruncatedNormal":{const r=F("shape",n,e,t),i=F("mean",n,e,t),o=F("stdDev",n,e,t),a=F("seed",n,e,t);return[s.truncatedNormal(r,i,o,F("dtype",n,e,t),a)]}case"Zeros":return[s.zeros(F("shape",n,e,t),F("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(F("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,e,t){const s=F("boxes",n,e,t),r=F("scores",n,e,t),i=F("maxOutputSize",n,e,t),o=F("iouThreshold",n,e,t),a=F("scoreThreshold",n,e,t),l=F("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:i,iouThreshold:o,scoreThreshold:a,softNmsSigma:l}}const TK=async(n,e,t,s,r=pr)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=nS(n,e,t),d=await r.image.nonMaxSuppressionWithScoreAsync(i,o,a,l,u,h);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=nS(n,e,t),h=F("padToMaxOutputSize",n,e,t),d=await r.image.nonMaxSuppressionPaddedAsync(i,o,a,l,u,h);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=nS(n,e,t);return[await r.image.nonMaxSuppressionAsync(i,o,a,l,u)]}case"Where":{const i=r.cast(F("condition",n,e,t),"bool"),o=[await r.whereAsync(i)];return i.dispose(),o}case"ListDiff":return r.setdiff1dAsync(F("x",n,e,t),F("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK=(n,e,t,s=pr)=>{switch(n.op){case"LowerBound":{const r=F("sortedSequence",n,e,t),i=F("values",n,e,t);return[s.lowerBound(r,i)]}case"TopKV2":{const r=F("x",n,e,t),i=F("k",n,e,t),o=F("sorted",n,e,t),a=s.topk(r,i,o);return[a.values,a.indices]}case"UpperBound":{const r=F("sortedSequence",n,e,t),i=F("values",n,e,t);return[s.upperBound(r,i)]}case"Unique":{const r=F("x",n,e,t),i=s.unique(r);return[i.values,i.indices]}case"UniqueV2":{const r=F("x",n,e,t),i=F("axis",n,e,t),o=s.unique(r,i);return[o.values,o.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=(n,e,t,s=pr)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=F("default",n,e,t);return[ar(n.name,e,t)||r];case"Placeholder":return[ar(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const h=F("x",n,e,t);return[Va(h)]}case"IdentityN":return F("x",n,e,t).map(h=>Va(h));case"Snapshot":const i=F("x",n,e,t);return[Va(i)];case"Shape":return[s.tensor1d(F("x",n,e,t).shape,"int32")];case"ShapeN":return F("x",n,e,t).map(h=>s.tensor1d(h.shape));case"Size":return[s.scalar(F("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(F("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const o=F("x",n,e,t),a=F("data",n,e,t),l=F("message",n,e,t),u=F("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let h=0;h<a.length;h++)console.log(Array.prototype.slice.call(a[h].dataSync()).slice(0,u));return[o];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IK{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=kt(0),this.tensorMap=new Map,Ds(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return kt(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),xe(()=>{const r=Gi(t),i=s.length,o=r.length;z(i===o,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${o} elements.`);for(let a=0;a<i;a++){const l=s[a],u=r[a];Ds(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return xe(()=>{const r=[];for(let i=0;i<s.length;i++){const o=s[i],a=this.findWithDefault(o,t);r.push(a)}return ni(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const i=F("keyDType",n,e,t),o=F("valueDType",n,e,t),a=new IK(i,o);return s.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=F("tableHandle",n,e,t,s),i=F("keys",n,e,t),o=F("values",n,e,t);return[await s.getHashTableById(r.id).import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=F("tableHandle",n,e,t,s),i=F("keys",n,e,t),o=F("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=F("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK=(n,e,t,s=pr)=>{switch(n.op){case"ResizeBilinear":{const r=F("images",n,e,t),i=F("size",n,e,t),o=F("alignCorners",n,e,t),a=F("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[i[0],i[1]],o,a)]}case"ResizeNearestNeighbor":{const r=F("images",n,e,t),i=F("size",n,e,t),o=F("alignCorners",n,e,t),a=F("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[i[0],i[1]],o,a)]}case"CropAndResize":{const r=F("image",n,e,t),i=F("boxes",n,e,t),o=F("boxInd",n,e,t),a=F("cropSize",n,e,t),l=F("method",n,e,t),u=F("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,i,o,a,l,u)]}case"ImageProjectiveTransformV3":{const r=F("images",n,e,t),i=F("transforms",n,e,t),o=F("outputShape",n,e,t),a=F("fillValue",n,e,t),l=F("interpolation",n,e,t),u=F("fillMode",n,e,t);return[s.image.transform(r,i,l.toLowerCase(),u.toLowerCase(),a,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK=(n,e,t,s=pr)=>{switch(n.op){case"Equal":return[s.equal(F("a",n,e,t),F("b",n,e,t))];case"NotEqual":return[s.notEqual(F("a",n,e,t),F("b",n,e,t))];case"Greater":return[s.greater(F("a",n,e,t),F("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(F("a",n,e,t),F("b",n,e,t))];case"Less":return[s.less(F("a",n,e,t),F("b",n,e,t))];case"LessEqual":return[s.lessEqual(F("a",n,e,t),F("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(F("a",n,e,t),F("b",n,e,t))];case"LogicalNot":return[s.logicalNot(F("a",n,e,t))];case"LogicalOr":return[s.logicalOr(F("a",n,e,t),F("b",n,e,t))];case"Select":case"SelectV2":return[s.where(F("condition",n,e,t),F("a",n,e,t),F("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(F("a",n,e,t),F("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK=(n,e,t,s=pr)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(F("a",n,e,t),F("b",n,e,t),F("transposeA",n,e,t),F("transposeB",n,e,t))];case"Einsum":return[s.einsum(F("equation",n,e,t),...F("tensors",n,e,t))];case"Transpose":return[s.transpose(F("x",n,e,t),F("perm",n,e,t))];case"_FusedMatMul":const[r,i]=F("fusedOps",n,e,t),o=r==="biasadd",a=i==="prelu",l=F("numArgs",n,e,t),u=F("leakyreluAlpha",n,e,t);if(o){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[h,d]=F("args",n,e,t);return[s.fused.matMul({a:F("a",n,e,t),b:F("b",n,e,t),transposeA:F("transposeA",n,e,t),transposeB:F("transposeB",n,e,t),bias:h,activation:i,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(F("a",n,e,t),F("numLower",n,e,t),F("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MK=(n,e,t,s=pr)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(F("x",n,e,t),F("axis",n,e,t),F("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(F("x",n,e,t),F("mean",n,e,t),F("variance",n,e,t),F("offset",n,e,t),F("scale",n,e,t),F("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(F("x",n,e,t),F("mean",n,e,t),F("variance",n,e,t),F("offset",n,e,t),F("scale",n,e,t),F("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(F("x",n,e,t),F("radius",n,e,t),F("bias",n,e,t),F("alpha",n,e,t),F("beta",n,e,t))];case"Softmax":return[s.softmax(F("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(F("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DK=(n,e,t,s=pr)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:i}=s.raggedGather(F("paramsNestedSplits",n,e,t),F("paramsDenseValues",n,e,t),F("indices",n,e,t),F("outputRaggedRank",n,e,t));return r.concat(i)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:i}=s.raggedRange(F("starts",n,e,t),F("limits",n,e,t),F("splits",n,e,t));return[r,i]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(F("shape",n,e,t),F("values",n,e,t),F("defaultValue",n,e,t),F("rowPartitionTensors",n,e,t),F("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K=(n,e,t,s=pr)=>{switch(n.op){case"Max":{const a=F("axis",n,e,t),l=F("keepDims",n,e,t);return[s.max(F("x",n,e,t),a,l)]}case"Mean":{const a=F("axis",n,e,t),l=F("keepDims",n,e,t);return[s.mean(F("x",n,e,t),a,l)]}case"Min":{const a=F("axis",n,e,t),l=F("keepDims",n,e,t);return[s.min(F("x",n,e,t),a,l)]}case"Sum":{const a=F("axis",n,e,t),l=F("keepDims",n,e,t);return[s.sum(F("x",n,e,t),a,l)]}case"All":{const a=F("axis",n,e,t),l=F("keepDims",n,e,t);return[s.all(F("x",n,e,t),a,l)]}case"Any":{const a=F("axis",n,e,t),l=F("keepDims",n,e,t);return[s.any(F("x",n,e,t),a,l)]}case"ArgMax":{const a=F("axis",n,e,t);return[s.argMax(F("x",n,e,t),a)]}case"ArgMin":{const a=F("axis",n,e,t);return[s.argMin(F("x",n,e,t),a)]}case"Prod":{const a=F("axis",n,e,t),l=F("keepDims",n,e,t);return[s.prod(F("x",n,e,t),a,l)]}case"Cumprod":{const a=F("axis",n,e,t),l=F("exclusive",n,e,t),u=F("reverse",n,e,t);return[s.cumprod(F("x",n,e,t),a,l,u)]}case"Cumsum":{const a=F("axis",n,e,t),l=F("exclusive",n,e,t),u=F("reverse",n,e,t);return[s.cumsum(F("x",n,e,t),a,l,u)]}case"Bincount":const r=F("x",n,e,t),i=F("weights",n,e,t),o=F("size",n,e,t);return[s.bincount(r,i,o)];case"DenseBincount":{const a=F("x",n,e,t),l=F("weights",n,e,t),u=F("size",n,e,t),h=F("binaryOutput",n,e,t);return[s.denseBincount(a,l,u,h)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FK=(n,e,t,s=pr)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=F("n",n,e,t),i=F("axis",n,e,t);let o=F("tensors",n,e,t);return o=o.slice(0,r),[s.concat(o,i)]}case"Gather":{const r=F("x",n,e,t),i=F("indices",n,e,t);return[s.gather(r,s.cast(i,"int32"),0)]}case"GatherV2":{const r=F("axis",n,e,t),i=F("batchDims",n,e,t),o=F("x",n,e,t),a=F("indices",n,e,t);return[s.gather(o,s.cast(a,"int32"),r,i)]}case"Reverse":{const r=F("dims",n,e,t),i=[];for(let a=0;a<r.length;a++)r[a]&&i.push(a);const o=F("x",n,e,t);return[s.reverse(o,i)]}case"ReverseV2":{const r=F("axis",n,e,t),i=F("x",n,e,t);return[s.reverse(i,r)]}case"Slice":{const r=F("begin",n,e,t),i=F("size",n,e,t);return[s.slice(F("x",n,e,t),r,i)]}case"StridedSlice":{const r=F("begin",n,e,t),i=F("end",n,e,t),o=F("strides",n,e,t),a=F("beginMask",n,e,t),l=F("endMask",n,e,t),u=F("ellipsisMask",n,e,t),h=F("newAxisMask",n,e,t),d=F("shrinkAxisMask",n,e,t),p=F("x",n,e,t);return[s.stridedSlice(p,r,i,o,a,l,u,h,d)]}case"Pack":return xe(()=>{const r=F("axis",n,e,t),i=F("tensors",n,e,t),o=i[0].shape,a=s.squeeze(i[0]).shape,l=i.map(u=>{const h=dn(u.shape,o);if(!h&&!dn(s.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return h?u:s.reshape(u,o)});return[s.stack(l,r)]});case"Unpack":{const r=F("axis",n,e,t),i=F("tensor",n,e,t);return s.unstack(i,r)}case"Tile":{const r=F("reps",n,e,t);return[s.tile(F("x",n,e,t),r)]}case"Split":case"SplitV":{const r=F("axis",n,e,t),i=F("numOrSizeSplits",n,e,t),o=F("x",n,e,t);return s.split(o,i,r)}case"ScatterNd":{const r=F("indices",n,e,t),i=F("values",n,e,t),o=F("shape",n,e,t);return[s.scatterND(r,i,o)]}case"GatherNd":{const r=F("x",n,e,t),i=F("indices",n,e,t);return[s.gatherND(r,i)]}case"SparseToDense":{const r=F("sparseIndices",n,e,t),i=F("outputShape",n,e,t),o=F("sparseValues",n,e,t),a=F("defaultValue",n,e,t);return[s.sparseToDense(r,o,i,o.dtype===a.dtype?a:s.cast(a,o.dtype))]}case"TensorScatterUpdate":{const r=F("indices",n,e,t),i=F("values",n,e,t),o=F("tensor",n,e,t);return[s.tensorScatterUpdate(o,r,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PK=(n,e,t,s=pr)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:i,emptyRowIndicator:o,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(F("indices",n,e,t),F("values",n,e,t),F("denseShape",n,e,t),F("defaultValue",n,e,t));return[r,i,o,a]}case"SparseReshape":{const{outputIndices:r,outputShape:i}=s.sparse.sparseReshape(F("inputIndices",n,e,t),F("inputShape",n,e,t),F("newShape",n,e,t));return[r,i]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(F("data",n,e,t),F("indices",n,e,t),F("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(F("data",n,e,t),F("indices",n,e,t),F("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK=(n,e,t,s=pr)=>{switch(n.op){case"FFT":return[s.fft(F("x",n,e,t))];case"IFFT":return[s.ifft(F("x",n,e,t))];case"RFFT":return[s.rfft(F("x",n,e,t))];case"IRFFT":return[s.irfft(F("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LK=(n,e,t,s=pr)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(F("input",n,e,t),F("pattern",n,e,t),F("rewrite",n,e,t),F("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:i}=s.string.stringNGrams(F("data",n,e,t),F("dataSplits",n,e,t),F("separator",n,e,t),F("nGramWidths",n,e,t),F("leftPad",n,e,t),F("rightPad",n,e,t),F("padWidth",n,e,t),F("preserveShortSequences",n,e,t));return[r,i]}case"StringSplit":{const{indices:r,values:i,shape:o}=s.string.stringSplit(F("input",n,e,t),F("delimiter",n,e,t),F("skipEmpty",n,e,t));return[r,i,o]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(F("input",n,e,t),F("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK=(n,e,t,s=pr)=>{switch(n.op){case"Cast":return[s.cast(F("x",n,e,t),F("dtype",n,e,t))];case"ExpandDims":{const r=F("axis",n,e,t);return[s.expandDims(F("x",n,e,t),r)]}case"Squeeze":{const r=F("axis",n,e,t);return[s.squeeze(F("x",n,e,t),r)]}case"Reshape":return[s.reshape(F("x",n,e,t),F("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(F("x",n,e,t),F("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(F("x",n,e,t),F("padding",n,e,t),F("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(F("x",n,e,t),F("padding",n,e,t),F("constantValue",n,e,t))];case"SpaceToBatchND":{const r=F("blockShape",n,e,t),i=F("paddings",n,e,t);return[s.spaceToBatchND(F("x",n,e,t),r,i)]}case"BatchToSpaceND":{const r=F("blockShape",n,e,t),i=F("crops",n,e,t);return[s.batchToSpaceND(F("x",n,e,t),r,i)]}case"DepthToSpace":{const r=F("blockSize",n,e,t),i=F("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(F("x",n,e,t),r,i)]}case"BroadcastTo":return[s.broadcastTo(F("x",n,e,t),F("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(F("s0",n,e,t),F("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n,e,t,s,r=xe){const i=((o,a,l)=>{switch(o.category){case"arithmetic":return r(()=>pK(o,a,l));case"basic_math":return r(()=>mK(o,a,l));case"control":return wK(o,a,l);case"convolution":return r(()=>SK(o,a,l));case"creation":return r(()=>_K(o,a,l));case"dynamic":return TK(o,a,l);case"evaluation":return r(()=>EK(o,a,l));case"image":return r(()=>AK(o,a,l));case"graph":return r(()=>CK(o,a,l));case"logical":return r(()=>RK(o,a,l));case"matrices":return r(()=>kK(o,a,l));case"normalization":return r(()=>MK(o,a,l));case"ragged":return r(()=>DK(o,a,l));case"reduction":return r(()=>$K(o,a,l));case"slice_join":return r(()=>FK(o,a,l));case"sparse":return r(()=>PK(o,a,l));case"spectral":return r(()=>OK(o,a,l));case"string":return r(()=>LK(o,a,l));case"transformation":return r(()=>UK(o,a,l));case"hash_table":return NK(o,a,l,s);case"custom":const u=XP(o.op);if(u&&u.customExecutor)return u.customExecutor(new fK(o,a,l));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return nu(i)?i.then(o=>[].concat(o)):[].concat(i)}class ZA{constructor(e={},t={},s={},r={},i){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e,t,s){const r=new Set,i=[];let o=null,a=null;const l=new Set,u=new Set(Object.keys(n).map(p=>mi(p)[0]));s=s||[];const h=new Set(s.map(p=>mi(p.name)[0])),d=[...e];for(;d.length>0;){const p=d.pop();if((ac(p)||XK(p)||qK(p))&&o==null&&(o=p,a=o.children.map(m=>m.name).filter(m=>r.has(m))),r.add(p.name),t[p.name]==null&&!u.has(p.name)&&!h.has(p.name)){if(p.inputs.length===0){i.push(p.name);continue}p.inputs.forEach(m=>{l.has(m.name)||(l.add(m.name),d.push(m))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:i,dynamicNode:o,syncInputs:a}}function zK(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(y=>mi(y)[0]).map(y=>n.nodes[y]),i=n.initNodes||[],o=y=>t.has(typeof y=="string"?y:y.name);function a(y){return[...new Map(y.map(v=>[v.name,v])).values()]}const l=a([...r,...n.weights,...i]).filter(o),u=a([...l,...Object.values(n.nodes)]).filter(o),h=new Map(u.map(y=>[y.name,y])),d={};for(const y of u){d[y.name]=d[y.name]||0;for(const v of y.children)o(v)||(d[v.name]=Number.POSITIVE_INFINITY),d[v.name]=(d[v.name]||0)+1}const p=Object.entries(d).filter(([,y])=>y===0).map(([y])=>y),m=[...p];for(;p.length>0;){const y=p.pop(),v=h.get(y);for(const w of v.children.filter(o))--d[w.name]===0&&(m.push(w.name),p.push(w.name))}const g=m.map(y=>h.get(y)),b=BK(g,l);return VK(b,l),b}function BK(n,e){const t=new Map(n.map(o=>[o.name,o])),s=e.map(o=>o.name),r=new Set(s);for(;s.length>0;){const o=s.pop(),a=t.get(o);for(const l of a.children)!t.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(o=>r.has(o.name))}class s0 extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function VK(n,e){const t=new Map(n.map((a,l)=>[a.name,l])),s=new Set(e.map(a=>a.name)),r=a=>s.has(typeof a=="string"?a:a.name),i=new Set(n.map(a=>a.name)),o=a=>i.has(typeof a=="string"?a:a.name);for(const a of n){for(const l of a.children.filter(o)){if(!t.has(l.name))throw new s0(`Child ${l.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(l.name))throw new s0(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!r(a))for(const l of a.inputs){if(!t.has(l.name))throw new s0(`Input ${l.name} of node ${a.name} is unreachable.`);if(t.get(l.name)>t.get(a.name))throw new s0(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function WK(n){const e=new Map(n.map((a,l)=>[a.name,l])),t=Number.MAX_SAFE_INTEGER,s=n.map((a,l)=>ac(a)?t:l),r=a=>{const l=s[e.get(a.name)];return l??-1},i=n.map((a,l)=>a.children.map(r).reduce((u,h)=>Math.max(u,h),s[l])),o=new Map;for(let a=0;a<n.length;++a){const l=i[a];if(l===t)continue;const u=n[a],h=n[l];o.has(h.name)||o.set(h.name,[]),o.get(h.name).push(u)}return o}const GK=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),HK=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),jK=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ac(n){return GK.has(n.op)}function XK(n){return HK.has(n.op)}function qK(n){return jK.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _x{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new _x(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(i=>i.name).sort(),r=t.map(i=>i.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=QA(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:i,syncInputs:o}=s;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const u=t.map(d=>d.name),h=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${h}]. Missing the following inputs: [${r}]`)}const a=zK(this.graph,s),l=WK(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Ds(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(p=>this.graph.nodes[mi(p)[0]]),i=t.map(p=>mi(p)[0]),o=new Set(i);let a=i.map(p=>this.graph.nodes[p]);a.length===0&&(a=this._outputs);const l=this.getCompilationKey(r,a);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=_e().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const h={},d={};return xe(()=>{const p=new ZA(this.weightMap,h,d,this.functionExecutorMap,this.parseNodeNameCache),m=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(v=>{const[w,E]=mi(v,p),T=[];T[E]=e[v],m[w]=T,this.keepIntermediateTensors&&(this.clonedTensorsMap[w]=this.cloneTensorList(T))});const g=this.getFrozenTensorIds(m),{orderedNodes:b,nodeLiveUntilMap:y}=u;for(const v of b){if(m[v.name])continue;const w=YA(v,m,p,this._resourceManager);if(nu(w))throw new Error(`The execution of the op '${v.op}' returned a promise. Please use model.executeAsync() instead.`);m[v.name]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[v.name]=this.cloneTensorList(w)),this.checkTensorForDisposalWithNodeLiveUntilInfo(v,m,p,g,o,y.get(v.name))}return this.parent==null&&p.dispose(g),t.map(v=>ar(v,m,p))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,i,o,a){if(!(ac(t)||o.has(e))){for(const l of s[e])l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length);for(const l of t.inputs){if(ac(l))continue;const u=HA(l.name,s,r);if(u!=null)for(const h of u){if(!h||h.kept||i.has(h.id))continue;const d=a[h.id];d===1?(h.dispose(),delete a[h.id]):d!=null&&a[h.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,i,o){function a(l){return ac(l)||i.has(l.name)}if(!(ac(e)||o==null))for(const l of o){if(a(l))continue;const u=HA(l.name,t,s);for(const h of u)!h||h.kept||r.has(h.id)||h.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},i={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=_e().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const o=new ZA(this.weightMap,r,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,o,t,s),l=t.map(p=>ar(p,a,o)),u=l.map(p=>p.id),h=Object.keys(e).map(p=>e[p].id),d=new Set([...u,...h,...this.weightIds]);return Object.values(a).forEach(p=>{p.forEach(m=>{m&&!m.isDisposed&&!d.has(m.id)&&m.dispose()})}),this.parent==null&&o.dispose(d),l}async executeFunctionAsync(e,t,s){const r=e.reduce((i,o,a)=>(i[this.inputs[a].name]=o,i),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const i=Object.keys(e),o=i.map(T=>this.graph.nodes[mi(T)[0]]),a=s.map(T=>mi(T)[0]),l=new Set(a);let u=a.map(T=>this.graph.nodes[T]);u.length===0&&(u=this._outputs);const{usedNodes:h,missingInputs:d,dynamicNode:p,syncInputs:m}=QA(e,u,this.weightMap,this._initNodes),g=[...o,...this.graph.weights,...this._initNodes||[]].map(T=>({node:T,contexts:t.currentContext})),b=Object.assign({},this.weightMap);Object.keys(e).forEach(T=>{const[I,M]=mi(T),$=[];$[M]=e[T],b[I]=$});const y={},v=this.getFrozenTensorIds(b),w={};for(;g.length>0;){const T=this.processStack(o,g,t,b,w,v,l,y,h);await Promise.all(T)}p==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const E=u.filter(T=>!ac(T)&&!ar(T.name,b,t)).map(T=>T.name);if(E.length>0){let T="";throw p!=null&&(T=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${E}] from the provided inputs [${i}]. Consider providing the following inputs: [${d}]. ${T}`)}return b}processStack(e,t,s,r,i,o,a,l,u){const h=[];for(;t.length>0;){const d=t.pop();s.currentContext=d.contexts;let p="";if(d.node.op==="Enter"&&F("isConstant",d.node,r,s)&&([p]=Ba(d.node.name,s)),r[d.node.name]==null){const m=YA(d.node,r,s,this._resourceManager);p||([p]=Ba(d.node.name,s));const g=s.currentContext;nu(m)?h.push(m.then(b=>(r[p]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(b)),s.currentContext=g,this.checkTensorForDisposal(p,d.node,r,s,o,a,l),this.processChildNodes(d.node,t,s,r,i,u),b))):(r[p]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(m)),this.checkTensorForDisposal(p,d.node,r,s,o,a,l),this.processChildNodes(d.node,t,s,r,i,u))}else this.processChildNodes(d.node,t,s,r,i,u)}return h}processChildNodes(e,t,s,r,i,o){e.children.forEach(a=>{const[l]=Ba(a.name,s);i[l]||!o.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!ar(u,r,s))&&(i[l]=!0,t.push({contexts:s.currentContext,node:a})):a.inputNames.every(u=>!!ar(u,r,s))&&(i[l]=!0,t.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=mi(t),i=this.graph.nodes[r];if(i.attrParams.shape&&i.attrParams.shape.value){const o=i.attrParams.shape.value,a=o.length===s.shape.length&&s.shape.every((l,u)=>o[u]===-1||o[u]===l);z(a,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${o}], but was [${s.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&z(s.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const i in e){const o=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[i];o!=null?r[o.name]=e[i]:r[i]=e[i]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=mi(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const i=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return i!=null?i.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=mi(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class KK{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK="?tfjs-format=file",ZK="model.json";class QK{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=iC){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new KK}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return nu(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await EM(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(r=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new _x(jA.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const i=jA.Instance.transformGraph(e.modelInitializer);this.initializer=new _x(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof gn?[e]:e,s={};return t.forEach((r,i)=>s[this.structuredOutputKeys[i]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof gn)&&!Array.isArray(e)){const i=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(i!=null)for(const o in i){const a=i[o];a.resourceId!=null&&(e[o]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((i,o)=>{var a,l,u;const h=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[o])===null||u===void 0?void 0:u.resourceId;return h!=null?i[o]=this.resourceIdToCapturedInput[h]:i[o]=e[r++],i},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const i=s[r],o=t[i];this.resourceIdToCapturedInput[o.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&on(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function eI(n,e={},t=iC){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=JK(n));const s=new QK(n,e,t);return await s.load(),s}function JK(n){return n.endsWith("/")||(n=n+"/"),`${n}${ZK}${YK}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var JA;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(JA||(JA={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ct(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&z(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9=_b;class Yb extends Lx{nextDataId(){return Yb.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new RT(this,Fi())}write(e,t,s){this.firstUse&&(this.firstUse=!1,_e().get("IS_NODE")&&Pi(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&na(s[0])){const i=s.map(o=>oa(o));r=this.write(i,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,i){this.data.set(e,{values:t,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return el(r,i)}return nM(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Ya(r));return tn(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return tn(e.shape,e.dtype,t)}makeOutput(e,t,s){return Fi().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Dr();return e(),{kernelMs:Dr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ct([e],"where");const t=this.readSync(e.dataId);return e9(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Yb.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const t9=n=>{const{x:e}=n.inputs,t=n.backend;Ct(e,"abs");let s=new Float32Array(Me(e.shape));const r=t.data.get(e.dataId).values;return s=YP(r),t.makeOutput(s,e.shape,e.dtype)},n9={kernelName:tm,backendName:"cpu",kernelFunc:t9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(n){return(e,t,s,r,i)=>{const o=Yt(e,t),a=o.length,l=Lt(o),u=Me(o),h=Ys(i,u),d=e.length,p=t.length,m=Lt(e),g=Lt(t),b=Ic(e,o),y=Ic(t,o);if(b.length+y.length===0)for(let v=0;v<h.length;++v)h[v]=n(s[v%s.length],r[v%r.length]);else for(let v=0;v<h.length;++v){const w=zc(v,a,l),E=w.slice(-d);b.forEach($=>E[$]=0);const T=Ro(E,d,m),I=w.slice(-p);y.forEach($=>I[$]=0);const M=Ro(I,p,g);h[v]=n(s[T],r[M])}return[h,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gi(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",i),imag:t.makeTensorInfo(r.shape,"float32",o)},a}const s9={kernelName:Xx,backendName:"cpu",kernelFunc:gi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tx(n,e,t="float32"){if(t==="complex64"){const r=Tx(n,e,"float32"),i=Tx(n,e,"float32");return gi({inputs:{real:r,imag:i},backend:n})}const s=cr(Me(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ya(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const r9={kernelName:Bd,backendName:"cpu",kernelFunc:ya};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dc(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,i=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,i)}const i9={kernelName:Cv,backendName:"cpu",kernelFunc:Dc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=mu([0],t),[i,o]=Ss((a,l)=>a!==l?1:0)(e,[],n,r,"bool");return[o,"bool",i]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function du(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return ya({inputs:{x:r},backend:t});const h=Tx(t,r.shape,r.dtype),d=du({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),p=gi({inputs:{real:d,imag:h},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),p}if(r.dtype==="complex64"){const h=Dc({inputs:{input:r},backend:t}),d=du({inputs:{x:h},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(h),d}if(!DT(r.dtype,i)){const h=ya({inputs:{x:r},backend:t});return{dataId:h.dataId,shape:h.shape,dtype:i}}const o=t.data.get(r.dataId).values,[a,l,u]=ZP(o,r.shape,r.dtype,i);return t.makeTensorInfo(a,l,u)}const o9={kernelName:Nd,backendName:"cpu",kernelFunc:du};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(n,e,t,s){return t==null?({inputs:r,backend:i})=>{const{a:o,b:a}=r,l=i;Ct([o,a],n);const u=l.data.get(o.dataId).values,h=l.data.get(a.dataId).values,d=o.dtype==="string"?tl(u):u,p=o.dtype==="string"?tl(h):h,m=s||o.dtype,[g,b]=e(o.shape,a.shape,d,p,m);return l.makeTensorInfo(b,m,g)}:({inputs:r,backend:i})=>{const{a:o,b:a}=r,l=i;if(o.dtype==="complex64"||a.dtype==="complex64"){const u=du({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,m=l.data.get(d.dataId).values,g=l.data.get(p.dataId).values,b=du({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),y=l.data.get(b.dataId),v=y.complexTensorInfos.real,w=y.complexTensorInfos.imag,E=l.data.get(v.dataId).values,T=l.data.get(w.dataId).values,[I,M,$]=t(o.shape,a.shape,m,g,E,T),O=l.makeTensorInfo($,"float32",I),k=l.makeTensorInfo($,"float32",M),N=gi({inputs:{real:O,imag:k},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(b),l.disposeIntermediateTensorInfo(O),l.disposeIntermediateTensorInfo(k),N}else{const u=l.data.get(o.dataId).values,h=l.data.get(a.dataId).values,d=s||o.dtype,[p,m]=e(o.shape,a.shape,u,h,d);return l.makeTensorInfo(m,d,p)}}}function tI(n){return(e,t,s,r,i,o)=>{const a=Yt(e,t),l=Me(a),u=a.length,h=Lt(a),d=Ys("float32",l),p=Ys("float32",l),m=Ic(e,a),g=Ic(t,a),b=el(s,r),y=el(i,o),v=e.length,w=Lt(e),E=t.length,T=Lt(t);if(m.length+g.length===0)for(let I=0;I<d.length;I++){const M=I%b.length,$=I%y.length,O=n(b[M*2],b[M*2+1],y[$*2],y[$*2+1]);d[I]=O.real,p[I]=O.imag}else for(let I=0;I<d.length;I++){const M=zc(I,u,h),$=M.slice(-v);m.forEach(B=>$[B]=0);const O=Ro($,v,w),k=M.slice(-E);g.forEach(B=>k[B]=0);const N=Ro(k,E,T),A=n(b[O*2],b[O*2+1],y[N*2],y[N*2+1]);d[I]=A.real,p[I]=A.imag}return[d,p,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QP=Ss((n,e)=>n+e),a9=tI((n,e,t,s)=>({real:n+t,imag:e+s})),ud=Ls(Bc,QP,a9),l9={kernelName:Bc,backendName:"cpu",kernelFunc:ud};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nI(n,e,t,s,r){const i=Me(s),o=cr(r,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(i>0?o[l]+=e[a]:o[l]+=1)}return o}function JP(n,e,t,s=!1){const r=n.shape[0],i=n.shape[1],o=tn([r,t],e.dtype);for(let a=0;a<r;a++)for(let l=0;l<i;l++){const u=n.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?o.set(1,a,u):e.size>0?o.set(o.get(a,u)+e.get(a,l),a,u):o.set(o.get(a,u)+1,a,u))}return o}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eO=Ss((n,e)=>n&e),u9=Ls(um,eO),c9={kernelName:um,backendName:"cpu",kernelFunc:u9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wa(n){return(e,t,s)=>{const r=fs(t,e.length);for(let i=0;i<e.length;++i)r[i]=n(e[i],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(n,e,t){const s=wa(e);return _u(n,s,t)}function _u(n,e,t){return({inputs:s,attrs:r,backend:i})=>{const{x:o}=s;Ct(o,n);const a=i,l=a.data.get(o.dataId).values;let u;if(o.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=tl(l)}else u=l;const h=t||o.dtype,d=e(u,h,r);return a.makeTensorInfo(o.shape,h,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tO=wa(n=>Math.ceil(n)),h9=_u(Ad,tO),d9={kernelName:Ad,backendName:"cpu",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n,e,t,s){const r=fs(t,Me(e));if(s&&t!=="string"){let i=0;n.forEach(o=>{const a=Me(o.shape);r.set(o.vals,i),i+=a})}else{let i=0;n.forEach(o=>{const a=t==="string"?tl(o.vals):o.vals;let l=0;for(let u=0;u<o.shape[0];++u){const h=u*e[1]+i;for(let d=0;d<o.shape[1];++d)r[h+d]=a[l++]}i+=o.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sO=Ss((n,e)=>n===e?1:0),rO=Ls(xm,sO,null,"bool"),f9={kernelName:xm,backendName:"cpu",kernelFunc:rO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iO=wa(n=>Math.exp(n)),oO=_u(Pd,iO,"float32"),p9={kernelName:Pd,backendName:"cpu",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aO=wa(n=>Math.expm1(n)),m9=_u(Od,aO),g9={kernelName:Od,backendName:"cpu",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lO=wa(n=>Math.floor(n)),y9=_u(Ld,lO),x9={kernelName:Ld,backendName:"cpu",kernelFunc:y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uO=Ss((n,e)=>Math.floor(n/e)),v9=Ls(Ud,uO,null,"int32"),b9={kernelName:Ud,backendName:"cpu",kernelFunc:v9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(n,e,t,s,r,i,o,a,l){const u=tn([s,i],t);for(let h=0;h<s;h++){const d=[];let p=0;for(let m=0;m<r;m++){const g=n[h*r+m];p+=g*o[m],d.push(g)}if(p<0||p>=l/i)throw new Error(`Invalid indices: ${d} does not index into ${a}`);for(let m=0;m<i;m++)u.values[h*i+m]=e.get(...e.indexToLoc(p*i+m))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n,e,t){const s=tn(t,n.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r).slice(),a=o[0],l=o[2],u=e.locToIndex([a,l]);o[2]=e.values[u];const h=n.locToIndex(o);0<=h&&h<n.values.length&&(s.values[r]=n.values[h])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dO=Ss((n,e)=>n>e?1:0),w9=Ls(Sm,dO,null,"bool"),S9={kernelName:Sm,backendName:"cpu",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO=Ss((n,e)=>n>=e?1:0),_9=Ls(zd,fO,null,"bool"),T9={kernelName:zd,backendName:"cpu",kernelFunc:_9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO=Ss((n,e)=>n<e?1:0),E9=Ls(Tm,pO,null,"bool"),C9={kernelName:Tm,backendName:"cpu",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mO=Ss((n,e)=>n<=e?1:0),I9=Ls(Em,mO,null,"bool"),N9={kernelName:Em,backendName:"cpu",kernelFunc:I9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n,e,t){const s=(e-n)/(t-1),r=cr(t,"float32");r[0]=n;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yO=wa(n=>Math.log(n)),A9=_u(Hd,yO),R9={kernelName:Hd,backendName:"cpu",kernelFunc:A9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n,e,t,s){const r=Ys(s,Me(t));for(let i=0;i<r.length;++i){const o=i*e;let a=n[o];for(let l=0;l<e;++l){const u=n[o+l];(Number.isNaN(u)||u>a)&&(a=u)}r[i]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO=Ss((n,e)=>Math.max(n,e)),k9=Ls(Xd,vO),M9={kernelName:Xd,backendName:"cpu",kernelFunc:k9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bO=Ss((n,e)=>Math.min(n,e)),D9=Ls(qd,bO),$9={kernelName:qd,backendName:"cpu",kernelFunc:D9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sI=Ss((n,e)=>n*e),F9=tI((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Zb=Ls(Yd,sI,F9),P9={kernelName:Yd,backendName:"cpu",kernelFunc:Zb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(n,e,t){const s=rl(-1,t);return sI([],e,s,n,t)}function O9(n){const{inputs:e,backend:t}=n,{x:s}=e;Ct(s,"neg");const r=t.data.get(s.dataId).values,[i,o]=wO(r,s.shape,s.dtype);return t.makeTensorInfo(o,s.dtype,i)}const L9={kernelName:Pm,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SO=Ss((n,e)=>n!==e?1:0),U9=Ls(Om,SO,null,"bool"),z9={kernelName:Om,backendName:"cpu",kernelFunc:U9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rI(n,e,t,s,r){const i=e.length,o=Me(e),a=Lt(e),l=Lt(r),u=Ys(t,Me(r));for(let h=0;h<o;++h){const d=zc(h,i,a),p=new Array(d.length);for(let g=0;g<p.length;g++)p[g]=d[s[g]];const m=Ro(p,i,l);u[m]=n[h]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function si(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:i}=t;Ct(r,"transpose");const o=r.shape.length,a=new Array(o);for(let d=0;d<a.length;d++)a[d]=r.shape[i[d]];const l=s.data.get(r.dataId).values,u=rI(l,r.shape,r.dtype,i,a);return{dataId:s.write(u,a,r.dtype),shape:a,dtype:r.dtype}}const B9={kernelName:gc,backendName:"cpu",kernelFunc:si};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n,e,t,s){const[r,i]=tr(n,s),o=Qr(e,"int32"),a=cr(Me(r),o),l=Me(i);for(let u=0;u<a.length;++u){const h=u*l;let d=1;for(let p=0;p<l;++p)d*=t[h+p];a[u]=d}return{outVals:a,outShape:r,outDtype:o}}function V9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Ct(r,"prod");const a=r.shape.length,l=an(i,r.shape),u=ls(l,a);let h=l,d=r;const p=[];u!=null&&(d=si({inputs:{x:r},backend:t,attrs:{perm:u}}),p.push(d),h=bs(h.length,a));const m=t.data.get(d.dataId).values,{outVals:g,outShape:b,outDtype:y}=_O(d.shape,d.dtype,m,h);let v=b;return o&&(v=vs(b,l)),p.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(v,y,g)}const W9={kernelName:Wm,backendName:"cpu",kernelFunc:V9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const i=zc(r,e.length,Lt(e)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${t})`)}})}function H9(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function j9(n,e,t,s){const r=[];let i=0;const o=e.length-1+t.length,a=new Array(o).fill(null).map(()=>[0]);H9(t,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const h=e[u+1];for(let d=1;d<l+1;++d)a[u].push(d*h)}for(let u=0;u<n.length;++u){let h=n[u],d=n[u]+1;for(let p=0;p<t.length;++p){const m=t[p],g=p+e.length-1;if(g>=0){const b=a[g],y=b[b.length-1]-m[h];for(let v=h;v<d;++v)a[g].push(m[v+1]+y)}h=m[h],d=m[d]}d!==h&&(r.push([h,d]),i+=d-h)}return{outSplits:a,valueSlices:r,numValues:i}}function X9(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=fs("int32",s);e.push(r),n[t].forEach((i,o)=>r[o]=i)}return e}function eR(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function q9(n,e,t,s,r,i){const o=eR(e,2)[1],a=eR(i,2)[1];let l=0;for(const u of t)for(let h=u[0];h<u[1];++h){for(let d=0;d<s;++d)r[l*a+d]=n[h*o+d];++l}}function K9(n,e,t,s,r){const i=e.slice();i[0]=r;const o=fs(t,Me(i)),a=n.length,l=a===0?0:a/e[0];return q9(n,e,s,l,o,i),[o,i]}function TO(n,e,t,s,r,i,o,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(G9(i,o,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:h,valueSlices:d,numValues:p}=j9(i,o,n,u),m=X9(h),g=K9(t,s,r,d,p);return[m,g[0],g[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tR=2147483647;function EO(n,e,t,s,r,i,o){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=r.length===0,u=o.length===0,h=[];a||h.push(e[0]),l||h.push(r[0]),u||h.push(o[0]);for(let y=1;y<h.length;++y)if(h[y]!==h[y-1])throw new Error("starts, limits, and deltas must have the same shape");const d=h.length===0?1:h[0],p=fs("int32",d+1);p[0]=0;for(let y=0;y<d;++y){const v=a?n[0]:n[y],w=l?s[0]:s[y],E=u?i[0]:i[y];if(E===0)throw new Error("Requires delta != 0");let T;if(E>0&&w<v||E<0&&w>v)T=0;else if(T=Math.ceil(Math.abs((w-v)/E)),T>tR)throw new Error(`Requires ((limit - start) / delta) <= ${tR}`);p[y+1]=p[y]+T}const m=p[d],g=fs(t,m);let b=0;for(let y=0;y<d;++y){const v=p[y+1]-p[y];let w=a?n[0]:n[y];const E=u?i[0]:i[y];for(let T=0;T<v;++T)g[b++]=w,w+=E}return[p,g]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var to=Eo;class Ex{constructor(e,t,s,r,i,o,a,l,u,h){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=i,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=i$(h),this.raggedRank=o$(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===to.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===to.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case to.VALUE_ROWIDS:return Ex.getMaxWidthValueRowID(t);case to.ROW_SPLITS:return Ex.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${to[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const i=e[r+1]-e[r];i>s&&(s=i)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],i=0;for(let o=1;o<t;++o){const a=e[o];a!==r&&(r=a,i=Math.max(o-s,i),s=o)}return Math.max(t-s,i)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return sR(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;a$(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=r$(this.raggedRank,r,t);o[0]<0&&(o[0]=e);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),i=[];let o=0;for(let a=0;a<r;++a,o+=t)i.push(o);for(let a=r;a<e;++a)i.push(-1);return z(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,t,s,r){const i=e.length,o=[];for(let a=0;a<i-1;++a){const l=e[a+1]-e[a];let u=Math.min(r,l),h=t[a];h===-1&&(u=0);for(let d=0;d<u;++d)o.push(h),h+=s;for(let d=0;d<l-u;++d)o.push(-1)}if(i>0&&o.length!==e[i-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,s,r){const i=e.length,o=[];if(i===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];o.push(u);for(let h=1;h<i;++h){const d=e[h];if(d===l)u>=0&&(++a,a<r?u+=s:u=-1);else{if(a=0,l=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);u=t[d]}o.push(u)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,s,r){const i=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case to.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,s,r);case to.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,s,r);default:throw new Error(`Unsupported partition type: ${to[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case to.FIRST_DIM_SIZE:return e[0];case to.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case to.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${to[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const i=sR(s,!1),o=fs(this.valuesDType,Me(i));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,o,i)}return[i,o]}setOutput(e,t,s,r){if(s.length===0)return;const i=this.values,o=s;let a=r.slice();a=a.slice(e+1);const l=Me(a),u=t.length;let h=this.defaultValue;if(h.length!==l&&h.length!==1){const g=this.defaultValueShape;xe(()=>{const b=he(h,g);h=yc(b,a).dataSync()})}let d=0,p=0,m=0;for(let g=0;g<=u;++g){let b=g<u?t[g]:-1;if(b===m){++m;continue}if(p<m){const y=i.subarray(d*l),v=o.subarray(p*l),w=(m-p)*l;nR(v,y,w)}if(g>=u){const y=s.length;b=Math.floor(y/l)}if(b>m)if(this.defaultValue.length===1)o.subarray(m*l,b*l).fill(this.defaultValue[0]),m=b;else for(;b>m;){const y=o.slice(m*l);nR(y,h,l),++m}b<0?(d=g+1,p=m):(d=g,p=m,m=p+1)}}}function nR(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function sR(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function CO(n,e,t,s,r,i,o,a,l,u){return new Ex(n,e,t,s,r,i,o,a,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,e,t,s){const r=n===e,i=n<e&&t<0,o=e<n&&t>1;if(r||i||o)return cr(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=cr(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NO=wa(n=>1/Math.sqrt(n)),Y9=_u(nf,NO),Z9={kernelName:nf,backendName:"cpu",kernelFunc:Y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dc(n,e,t,s,r,i,o,a,l,u){const h=[s/r,r],d=n.values,p=e.values;if(s===0)return tn(t,e.dtype);const m=l instanceof Is?l:tn(h,e.dtype);typeof l=="string"||typeof l=="number"?m.values.fill(l):typeof l=="boolean"&&m.values.fill(+l);for(let g=0;g<i;g++){const b=[];let y=0;for(let v=0;v<o;v++){const w=d[g*o+v];b.push(w),y+=w*a[v]}if(y<0||y>=s/r)throw new Error(`Invalid indices: ${b} does not index into ${t}`);for(let v=0;v<r;v++)u?m.values[y*r+v]+=p[g*r+v]:m.values[y*r+v]=e.rank===0?p[0]:p[g*r+v]}return m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q9=wa(n=>1/(1+Math.exp(-n))),AO=Pn(lf,n=>1/(1+Math.exp(-n))),J9={kernelName:lf,backendName:"cpu",kernelFunc:AO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n,e,t,s,r){const i=lC(s,e,t),o=Me(t),a=Lt(s);if(i){const d=uC(e,a);return r==="string"?n.slice(d,d+o):n.subarray(d,d+o)}const l=r==="string"?tl(n):n,u=tn(s,r,l),h=tn(t,r);for(let d=0;d<h.size;++d){const p=h.indexToLoc(d),m=p.map((g,b)=>g+e[b]);h.set(u.get(...m),...p)}return r==="string"?I$(h.values):h.values}function $c(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:o}=s;Ct(r,"slice");const[a,l]=Pb(r,i,o);oC(r,a,l);const u=t.data.get(r.dataId).values,h=RO(u,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,h)}const e7={kernelName:Km,backendName:"cpu",kernelFunc:$c};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n,e,t,s,r,i,o){const a=e[0],l=i[0],u=new Array(l),h=new Array(a),d=e[1];if(l===0){if(a!==0)throw new Error(p$(a));const y=fs(t,0),v=fs(r,0);return[y,[0,d],v,u,h]}let p=!0,m=0;const g=new Array(l).fill(0);for(let y=0;y<a;++y){const v=n[y*d];if(v<0)throw new Error(m$(y,v));if(v>=l)throw new Error(g$(y,v,l));++g[v],p=p&&v>=m,m=v}let b=!0;for(let y=0;y<l;++y){const v=g[y]===0;u[y]=v,b=b&&!v,g[y]=Math.max(g[y],1),y>0&&(g[y]+=g[y-1])}if(b&&p){const y=n,v=s;for(let w=0;w<a;++w)h[w]=w;return[y,[a,d],v,u,h]}else{const y=g[l-1],v=fs(t,y*d),w=fs(r,y),E=new Array(l).fill(0);for(let T=0;T<a;++T){const I=n[T*d],M=E[I],$=(I===0?0:g[I-1])+M;E[I]++;for(let O=0;O<d;++O)v[$*d+O]=n[T*d+O];w[$]=s[T],h[T]=$}for(let T=0;T<l;++T)if(E[T]===0){const M=T===0?0:g[T-1];v[M*d+0]=T;for(let $=1;$<d;++$)v[M*d+$]=0;w[M]=o}return[v,[y,d],w,u,h]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(n,e,t,s,r){const i=Me(s),o=e[0],a=r.length,l=[];let u=1,h=-1;for(let y=0;y<a;++y){const v=r[y];if(v===-1){if(h!==-1)throw new Error(y$(h,y));h=y,l.push(1)}else{if(v<0)throw new Error(x$(y,v));u*=v,l.push(v)}}if(h!==-1){if(u<=0)throw new Error(v$());const y=Math.trunc(i/u);if(u*y!==i)throw new Error(b$(s,l));l[h]=y}if(Me(l)!==i)throw new Error(w$(s,l));const p=s.length,m=[];if(p>0){m[p-1]=1;for(let y=p-2;y>=0;--y)m[y]=m[y+1]*s[y+1]}const g=[];if(a>0){g[a-1]=1;for(let y=a-2;y>=0;--y)g[y]=g[y+1]*l[y+1]}const b=fs(t,o*a);for(let y=0;y<o;++y){let v=0;for(let w=0;w<p;++w)v+=n[y*p+w]*m[w];for(let w=0;w<a;++w)b[y*a+w]=Math.trunc(v/g[w]),v%=g[w]}return[b,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iI(n,e,t,s,r,i=!1,o=0){const a=s.length,l=[e[0],n.length/e[0]],u=l[1],d=a>0?r[a-1]+1:0;if(d<0)throw new Error(d_());const p=e.slice();p[0]=d;const m=p.reduce((E,T)=>E*T,1),g=fs(t,m);if(a===0)return d>0&&g.fill(o),[g,p];if(d<=0)throw new Error(d_());let b=0,y=1,v=0,w=r[b];for(;;){let E=0;if(y<a){if(E=r[y],w===E){++y;continue}if(w>=E)throw new Error(S$())}if(w<0||w>=d)throw new Error(_$(w,d));w>v&&g.fill(o,v*u,w*u);for(let T=b;T<y;++T){const I=s[T];if(I<0||I>=l[0])throw new Error(T$(T,s[T],l[0]));for(let M=0;M<u;M++)g[w*u+M]+=n[I*u+M]}if(i)for(let T=0;T<u;T++)g[w*u+T]/=y-b;if(b=y,++y,v=w+1,w=E,y>a)break}return v<d&&g.fill(o,v*u,d*u),[g,p]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=wa(n=>Math.sqrt(n)),n7=Pn(cf,n=>Math.sqrt(n)),s7={kernelName:cf,backendName:"cpu",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO=Ss((n,e)=>{const t=n-e;return t*t}),r7=Ls(hf,DO),i7={kernelName:hf,backendName:"cpu",kernelFunc:r7};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $O=wa((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),o7=_u(eg,$O),a7={kernelName:eg,backendName:"cpu",kernelFunc:o7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(n,e,t,s){const r=tn(n,e.dtype);for(let i=0;i<r.size;i++){const o=r.indexToLoc(i),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*t[l]+s[l];r.set(e.get(...a),...o)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l7{constructor(e,t,s,r,i,o){this.separator=oa(e),this.nGramWidths=t,this.leftPad=oa(s),this.rightPad=oa(r),this.padWidth=i,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,i,o){for(let a=0;a<i;++a){const l=this.getPadWidth(o),u=Math.max(0,l-a),h=Math.max(0,l-(i-(a+1))),d=o-(u+h),p=t+(u>0?0:a-l);let m=0;m+=u*this.leftPad.length;for(let w=0;w<d;++w)m+=e[p+w].length;m+=h*this.rightPad.length;const g=u+h+d-1;m+=g*this.separator.length,s[r+a]=new Uint8Array(m);const b=s[r+a];let y=0;const v=w=>w.forEach(E=>b[y++]=E);for(let w=0;w<u;++w)v(this.leftPad),v(this.separator);for(let w=0;w<d-1;++w)v(e[p+w]),v(this.separator);if(d>0){v(e[p+d-1]);for(let w=0;w<h;++w)v(this.separator),v(this.rightPad)}else{for(let w=0;w<h-1;++w)v(this.rightPad),v(this.separator);v(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let h=t[u]>=l;if(h=h&&t[u]<=s,!h)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${s}]`);l=t[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const i=r-1,o=fs("int32",r);if(s===0||r===0){const l=new Array(s);for(let u=0;u<=i;++u)o[u]=0;return[l,o]}o[0]=0;for(let l=1;l<=i;++l){const u=t[l]-t[l-1];let h=0;this.nGramWidths.forEach(d=>{h+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&h===0&&(h=1),o[l]=o[l-1]+h}const a=new Array(o[i]);for(let l=0;l<i;++l){const u=t[l];let h=o[l];if(this.nGramWidths.forEach(d=>{const p=t[l+1]-t[l],m=this.getNumNGrams(p,d);this.createNGrams(e,u,a,h,m,d),h+=m}),this.preserveShort&&h===o[l]){const d=t[l+1]-t[l];if(d===0)continue;const p=d+2*this.padWidth;this.createNGrams(e,u,a,h,1,p)}}return[a,o]}}function PO(n,e,t,s,r,i,o,a){return new l7(t,s,r,i,o,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(n,e,t,s){if(!n.length)return;if(e.length===0){for(let i=0;i<n.length;++i)s.push(n.subarray(i,i+1));return}if(e.length===1){const i=e[0];let o=n.indexOf(i);for(;o!==-1;){const a=n.subarray(0,o);(!t||a.length!==0)&&s.push(a),n=n.subarray(o+1),o=n.indexOf(i)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let i=0;i<n.length+1;i++)if(i===n.length||e.indexOf(n[i])!==-1){const o=n.subarray(r,i);(!t||o.length!==0)&&s.push(o),r=i+1}}function OO(n,e,t){const s=n.length,r=[];let i=0,o=0;const a=new Array(s);for(let p=0;p<s;++p){const m=r.length;u7(n[p],e,t,r);const g=r.length-m;a[p]=g,i+=g,o=Math.max(o,g)}const l=fs("int32",i*2),u=new Array(i),h=[s,o];let d=0;for(let p=0;p<s;++p)for(let m=0;m<a[p];++m)l[d*2]=p,l[d*2+1]=m,u[d]=r[d],++d;return[l,u,h]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n,e){const t=fs("int32",n.length);for(let s=0;s<n.length;++s)t[s]=fM(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=Ss((n,e)=>n-e),c7=tI((n,e,t,s)=>({real:n-t,imag:e-s})),oI=Ls(df,UO,c7),h7={kernelName:df,backendName:"cpu",kernelFunc:oI};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zO(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=tn(t,n.dtype);for(let r=0;r<s.values.length;++r){const i=s.indexToLoc(r),o=new Array(n.rank);for(let l=0;l<o.length;l++)o[l]=i[l]%n.shape[l];const a=n.locToIndex(o);s.values[r]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cp=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function BO(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,u=Math.log(a),h=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*h*(a-h)/a)*Math.sign(l-a/2),p=Math.max(t,Math.floor(e-l*h/a+d)),m=Math.min(s,Math.floor(e+(a-l)*h/a+d));BO(n,e,p,m)}const r=n[e];let i=t,o=s;for(Wa(n,t,e),Cp(n[s],r)>0&&Wa(n,t,s);i<o;){for(Wa(n,i,o),i++,o--;Cp(n[i],r)<0;)i=i+1;for(;Cp(n[o],r)>0;)o=o-1}Cp(n[t],r)===0?Wa(n,t,o):(o=o+1,Wa(n,o,s)),o<=e&&(t=o+1),e<=o&&(s=o-1)}}function VO(n,e,t,s,r){const i=e[e.length-1],[o,a]=[n.length/i,i],l=Ys(t,o*s),u=Ys("int32",o*s);for(let d=0;d<o;d++){const p=d*a,m=n.subarray(p,p+a);let g=new Array(m.length);m.forEach((w,E)=>g[E]={value:w,index:E}),s<g.length&&(BO(g,s),g=g.slice(0,s)),r&&g.sort(Cp);const b=d*s,y=l.subarray(b,b+s),v=u.subarray(b,b+s);for(let w=0;w<s;w++)y[w]=g[w].value,v[w]=g[w].index}const h=e.slice();return h[h.length-1]=s,[tn(h,t,l),tn(h,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(n,e,t,s){const r=an(e,t)[0],i=[1,t[0],1];for(let g=0;g<r;g++)i[0]*=t[g];i[1]=t[r];for(let g=r+1;g<t.length;g++)i[2]*=t[g];const o=new Map,a=new Int32Array(t[r]),l=new Is(i,s,n),u=[],h=i[0]===1&&i[2]===1;for(let g=0;g<t[r];g++){let b;if(h)b=n[g].toString();else{const v=[];for(let w=0;w<i[0];w++)for(let E=0;E<i[2];E++)v.push(l.get(w,g,E));b=v.join(",")}const y=o.get(b);if(y!=null)a[g]=y;else{const v=o.size;o.set(b,v),a[g]=v,u.push(g)}}const d=i.slice();d[1]=o.size;const p=new Is(d,s);u.forEach((g,b)=>{for(let y=0;y<i[0];y++)for(let v=0;v<i[2];v++)p.set(l.get(y,g,v),y,b,v)});const m=t.slice();return m[r]=d[1],{outputValues:p.values,outputShape:m,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7=Object.freeze(Object.defineProperty({__proto__:null,addImpl:QP,bincountImpl:nI,bincountReduceImpl:JP,bitwiseAndImpl:eO,castImpl:ZP,ceilImpl:tO,concatImpl:nO,equalImpl:sO,expImpl:iO,expm1Impl:aO,floorDivImpl:uO,floorImpl:lO,gatherNdImpl:cO,gatherV2Impl:hO,greaterEqualImpl:fO,greaterImpl:dO,lessEqualImpl:mO,lessImpl:pO,linSpaceImpl:gO,logImpl:yO,maxImpl:xO,maximumImpl:vO,minimumImpl:bO,multiplyImpl:sI,negImpl:wO,notEqualImpl:SO,prodImpl:_O,raggedGatherImpl:TO,raggedRangeImpl:EO,raggedTensorToTensorImpl:CO,rangeImpl:IO,rsqrtImpl:NO,scatterImpl:dc,sigmoidImpl:Q9,simpleAbsImpl:YP,sliceImpl:RO,sparseFillEmptyRowsImpl:kO,sparseReshapeImpl:MO,sparseSegmentReductionImpl:iI,sqrtImpl:t7,squaredDifferenceImpl:DO,staticRegexReplaceImpl:$O,stridedSliceImpl:FO,stringNGramsImpl:PO,stringSplitImpl:OO,stringToHashBucketFastImpl:LO,subImpl:UO,tileImpl:zO,topKImpl:VO,transposeImpl:rI,uniqueImpl:WO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */WT("cpu",()=>new Yb,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GO=Pn($d,n=>n>=0?n:Math.exp(n)-1),f7={kernelName:$d,backendName:"cpu",kernelFunc:GO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s;Ct([r],"leakyRelu");const o=Me(r.shape),a=t.data.get(r.dataId).values,l=Ys("float32",o);for(let u=0;u<a.length;u++)l[u]=a[u]<0?i*a[u]:a[u];return t.makeTensorInfo(r.shape,"float32",l)}const p7={kernelName:_m,backendName:"cpu",kernelFunc:HO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m7=Ss((n,e)=>n<0?e*n:n);function jO(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Ct([s,r],"prelu");const i=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,[a,l]=m7(s.shape,r.shape,i,o,"float32");return t.makeTensorInfo(l,"float32",a)}const g7={kernelName:Vm,backendName:"cpu",kernelFunc:jO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XO=Pn(Jd,n=>Math.max(0,n)),y7={kernelName:Jd,backendName:"cpu",kernelFunc:XO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qO=Pn(ef,n=>Math.min(Math.max(0,n),6)),x7={kernelName:ef,backendName:"cpu",kernelFunc:qO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cx(n,e,t,s,r){if(t==="linear")return ya({inputs:{x:e},backend:n});if(t==="relu")return XO({inputs:{x:e},backend:n});if(t==="elu")return GO({inputs:{x:e},backend:n});if(t==="relu6")return qO({inputs:{x:e},backend:n});if(t==="prelu")return jO({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return HO({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return AO({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xn(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:i}=s,o=Me(r.shape),a=MT(i,o),l=Me(a);z(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const u=t.data.get(r.dataId);if(u.complexTensorInfos!=null){const h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;h.shape=a,d.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const v7={kernelName:Gm,backendName:"cpu",kernelFunc:Xn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:o,transposeB:a}=s;Ct([r,i],"matMul");const l=r.shape.length,u=i.shape.length,h=o?r.shape[l-2]:r.shape[l-1],d=a?i.shape[u-1]:i.shape[u-2],p=o?r.shape[l-1]:r.shape[l-2],m=a?i.shape[u-2]:i.shape[u-1],g=r.shape.slice(0,-2),b=i.shape.slice(0,-2),y=Me(g),v=Me(b),E=Yt(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([p,m]);z(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${o} and transposeB=${a} must match.`);const T=o?[y,h,p]:[y,p,h],I=a?[v,m,d]:[v,d,m],M=Xn({inputs:{x:r},backend:t,attrs:{shape:T}}),$=Xn({inputs:{x:i},backend:t,attrs:{shape:I}}),O=o?M.shape[1]:M.shape[2],k=o?M.shape[2]:M.shape[1],N=a?$.shape[1]:$.shape[2],A=Math.max(y,v),B=t.data.get(M.dataId).values,W=t.data.get($.dataId).values,K=Lt(M.shape),q=Lt($.shape),[Y,J,G]=o?[K[0],1,K[1]]:[K[0],K[1],1],[ee,te,j]=a?[1,q[1],q[0]]:[q[1],1,q[0]],se=k*N,be=tn([A,k,N],M.dtype),ae=be.values,de=t.blockSize;for(let Se=0;Se<A;Se++){const Te=Se%y,De=Se%v;for(let Ue=0;Ue<k;Ue+=de){const We=Math.min(Ue+de,k);for(let lt=0;lt<N;lt+=de){const Ft=Math.min(lt+de,N);for(let Je=0;Je<O;Je+=de){const ie=Math.min(Je+de,O);for(let Kt=Ue;Kt<We;Kt++)for(let bt=lt;bt<Ft;bt++){let _t=0;for(let tt=Je;tt<ie;tt++){const nn=B[Te*Y+Kt*J+tt*G],nt=W[tt*ee+bt*te+De*j];_t+=nn*nt}ae[Se*se+(Kt*N+bt)]+=_t}}}}}return t.disposeIntermediateTensorInfo(M),t.disposeIntermediateTensorInfo($),t.makeTensorInfo(E,be.dtype,be.values)}const b7={kernelName:am,backendName:"cpu",kernelFunc:KO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:d}=s;let p,m,g;const b=[];p=KO({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:u},backend:t}),o&&(m=ud({inputs:{a:p,b:o},backend:t}),b.push(p),p=m),h&&(g=Cx(t,p,h,a,d),b.push(p),p=g);for(const v of b)t.disposeIntermediateTensorInfo(v);return p}const S7={kernelName:$p,backendName:"cpu",kernelFunc:w7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7=Pn(wd,n=>Math.acos(n)),T7={kernelName:wd,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7=Pn(Sd,n=>Math.acosh(n)),C7={kernelName:Sd,backendName:"cpu",kernelFunc:E7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(n){const{inputs:e,backend:t}=n,s=e;Ct(e,"addN");const r=s.map(a=>t.data.get(a.dataId).values),i=tn(s[0].shape,s[0].dtype),o=i.values;for(let a=0;a<s.length;a++){const l=r[a];for(let u=0;u<o.length;u++)o[u]+=l[u]}return t.makeTensorInfo(i.shape,i.dtype,i.values)}const N7={kernelName:nm,backendName:"cpu",kernelFunc:I7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Ct(r,"all");const a=an(i,r.shape);let l=a;const u=ls(l,r.shape.length);let h=r;u!=null&&(h=si({inputs:{x:r},backend:t,attrs:{perm:u}}),l=bs(l.length,r.shape.length)),fr("all",l,h.shape.length);const[d,p]=tr(h.shape,l),m=Me(p),g=cr(Me(d),h.dtype),b=t.data.get(h.dataId).values;for(let v=0;v<g.length;++v){const w=v*m;let E=b[w];for(let T=0;T<m;++T){const I=b[w+T];E=E&&I}g[v]=E}u!=null&&t.disposeIntermediateTensorInfo(h);const y=t.makeTensorInfo(d,h.dtype,g);if(o){const v=vs(d,a),w=Xn({inputs:{x:y},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(y),w}return y}const R7={kernelName:Bx,backendName:"cpu",kernelFunc:A7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Ct(r,"any");const a=an(i,r.shape);let l=a;const u=ls(l,r.shape.length);let h=r;u!=null&&(h=si({inputs:{x:r},backend:t,attrs:{perm:u}}),l=bs(l.length,r.shape.length)),fr("any",l,h.shape.length);const[d,p]=tr(h.shape,l),m=Me(p),g=cr(Me(d),h.dtype),b=t.data.get(h.dataId).values;for(let v=0;v<g.length;++v){const w=v*m;let E=b[w];for(let T=0;T<m;++T){const I=b[w+T];E=E||I}g[v]=E}u!=null&&t.disposeIntermediateTensorInfo(h);const y=t.makeTensorInfo(d,h.dtype,g);if(o){const v=vs(d,a),w=Xn({inputs:{x:y},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(y),w}return y}const M7={kernelName:Vx,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;Ct(r,"argMax");let o=an(i,r.shape);const a=ls(o,r.shape.length);let l=r;const u=[];a!=null&&(l=si({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),o=bs(o.length,l.shape.length)),o=[o[0]],fr("argMax",o,l.shape.length);const[h,d]=tr(l.shape,o),p=Me(h),m=cr(p,"int32"),g=Me(d),b=t.data.get(l.dataId).values;for(let y=0;y<m.length;++y){const v=y*g;let w=b[v],E=0;for(let T=0;T<g;++T){const I=b[v+T];I>w&&(w=I,E=T)}m[y]=E}return u.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(h,"int32",m)}const $7={kernelName:sm,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;Ct(r,"argMin");let o=an(i,r.shape);const a=ls(o,r.shape.length);let l=r;const u=[];a!=null&&(l=si({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),o=bs(o.length,l.shape.length)),o=[o[0]],fr("argMin",o,l.shape.length);const[h,d]=tr(l.shape,o),p=Me(h),m=cr(p,"int32"),g=Me(d),b=t.data.get(l.dataId).values;for(let y=0;y<m.length;++y){const v=y*g;let w=b[v],E=0;for(let T=0;T<g;++T){const I=b[v+T];I<w&&(w=I,E=T)}m[y]=E}return u.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(h,"int32",m)}const P7={kernelName:rm,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O7=Pn(_d,n=>Math.asin(n)),L7={kernelName:_d,backendName:"cpu",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7=Pn(Td,n=>Math.asinh(n)),z7={kernelName:Td,backendName:"cpu",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B7=Pn(Ed,n=>Math.atan(n)),V7={kernelName:Ed,backendName:"cpu",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W7=Ss((n,e)=>Math.atan2(n,e)),G7=Ls(Id,W7),H7={kernelName:Id,backendName:"cpu",kernelFunc:G7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j7=Pn(Cd,n=>Math.atanh(n)),X7={kernelName:Cd,backendName:"cpu",kernelFunc:j7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(n,e,t,s,r,i){const o=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,m=r.padInfo.left,g=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=tn(r.outShape,t),y=b.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3],w=r.outShape[2]*r.outShape[3],E=r.outShape[3];for(let T=0;T<r.batchSize;++T){const I=T*v,M=T*s[0];for(let $=0;$<r.inChannels;++$)for(let O=0;O<r.outHeight;++O){const k=O*o-p,N=Math.max(0,k),A=Math.min(r.inHeight,h+k),B=I+O*w;for(let W=0;W<r.outWidth;++W){const K=W*a-m,q=Math.max(0,K),Y=Math.min(r.inWidth,d+K);let J=g,G=0,ee=0;for(let j=N;j<A;j+=l){const se=M+j*s[1];for(let be=q;be<Y;be+=u){const ae=se+be*s[2],de=n[ae+$];i==="max"&&de>J?J=de:i==="avg"&&(G+=de,ee++)}if(isNaN(J))break}const te=B+W*E+$;y[te]=i==="avg"?G/ee:J}}}return b}function YO(n,e,t,s,r=!1,i=!1){const o=tn(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,m=s.padInfo.top,g=s.padInfo.left,b=tn(e,t,n);for(let y=0;y<s.batchSize;++y)for(let v=0;v<s.inChannels;++v)for(let w=0;w<s.outHeight;++w){const E=w*a-m;let T=E;for(;T<0;)T+=u;const I=Math.min(s.inHeight,d+E);for(let M=0;M<s.outWidth;++M){const $=M*l-g;let O=$;for(;O<0;)O+=h;const k=Math.min(s.inWidth,p+$);let N=Number.NEGATIVE_INFINITY,A=-1;for(let B=T;B<I;B+=u){const W=B-E;for(let K=O;K<k;K+=h){const q=K-$,Y=b.get(y,B,K,v);Y>N&&(N=Y,r?A=i?((y*s.inHeight+B)*s.inWidth+K)*s.inChannels+v:(B*s.inWidth+K)*s.inChannels+v:A=W*p+q)}}o.set(A,y,w,M,v)}}return o}function ZO(n,e,t,s,r,i){const o=r.strideDepth,a=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,h=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,m=r.effectiveFilterHeight,g=r.effectiveFilterWidth,b=r.padInfo.front,y=r.padInfo.top,v=r.padInfo.left,w=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,E=tn(r.outShape,t),T=E.values,I=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],M=r.outShape[2]*r.outShape[3]*r.outShape[4],$=r.outShape[3]*r.outShape[4],O=r.outShape[4];for(let k=0;k<r.batchSize;++k){const N=k*I,A=k*s[0];for(let B=0;B<r.inChannels;++B)for(let W=0;W<r.outDepth;++W){const K=W*o-b;let q=K;for(;q<0;)q+=u;const Y=Math.min(r.inDepth,p+K),J=N+W*M;for(let G=0;G<r.outHeight;++G){const ee=G*a-y;let te=ee;for(;te<0;)te+=h;const j=Math.min(r.inHeight,m+ee),se=J+G*$;for(let be=0;be<r.outWidth;++be){const ae=be*l-v;let de=ae;for(;de<0;)de+=d;const Se=Math.min(r.inWidth,g+ae),Te=se+be*O;let De=w,Ue=0,We=0;for(let Ft=q;Ft<Y;Ft+=u){const Je=A+Ft*s[1];for(let ie=te;ie<j;ie+=h){const Kt=Je+ie*s[2];for(let bt=de;bt<Se;bt+=d){const _t=Kt+bt*s[3],tt=n[_t+B];if(i==="max"&&tt>De?De=tt:i==="avg"&&(Ue+=tt,We++),isNaN(De))break}if(isNaN(De))break}if(isNaN(De))break}const lt=Te+B;T[lt]=i==="avg"?Ue/Math.max(We,1):De}}}}return E}function q7(n,e){const t=tn(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,m=e.padInfo.top,g=e.padInfo.left;for(let b=0;b<e.batchSize;++b)for(let y=0;y<e.inChannels;++y)for(let v=0;v<e.outDepth;++v){const w=v*s-p;let E=w;for(;E<0;)E+=o;const T=Math.min(e.inDepth,u+w);for(let I=0;I<e.outHeight;++I){const M=I*r-m;let $=M;for(;$<0;)$+=a;const O=Math.min(e.inHeight,h+M);for(let k=0;k<e.outWidth;++k){const N=k*i-g;let A=N;for(;A<0;)A+=l;const B=Math.min(e.inWidth,d+N);let W=Number.NEGATIVE_INFINITY,K=-1;for(let q=E;q<T;q+=o){const Y=q-w;for(let J=$;J<O;J+=a){const G=J-M;for(let ee=A;ee<B;ee+=l){const te=ee-N,j=n.get(b,q,J,ee,y);j>=W&&(W=j,K=Y*h*d+G*h+te)}}}t.set(K,b,v,I,k,y)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Ct(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,u=1;z(dr(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=lo(r.shape,i,o,u,a,l);let d;if(h.filterWidth===1&&h.filterHeight===1&&dn(h.inShape,h.outShape))d=ya({inputs:{x:r},backend:t});else{const p=t.data.get(r.dataId).values,m=Lt(r.shape),g=aI(p,r.shape,r.dtype,m,h,"avg");d=t.makeTensorInfo(h.outShape,r.dtype,g.values)}return d}const Y7={kernelName:im,backendName:"cpu",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:u}=s;Ct(r,"avgPool3d");const h=il(r.shape,i,o,1,a,l,u),d=t.data.get(r.dataId).values,p=ZO(d,r.shape,r.dtype,Lt(r.shape),h,"avg");return t.makeTensorInfo(p.shape,"float32",p.values)}const Q7={kernelName:om,backendName:"cpu",kernelFunc:Z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:u}=s;Ct([r,i],"avgPool3DGrad");const h=il(i.shape,o,a,1,l,u),d=h.strideDepth,p=h.strideHeight,m=h.strideWidth,g=h.filterDepth,b=h.filterHeight,y=h.filterWidth,v=h.dilationDepth,w=h.dilationHeight,E=h.dilationWidth,T=h.effectiveFilterDepth,I=h.effectiveFilterHeight,M=h.effectiveFilterWidth,$=T-1-h.padInfo.front,O=M-1-h.padInfo.left,k=I-1-h.padInfo.top,N=tn(i.shape,"float32"),A=1/(g*b*y),B=t.bufferSync(r);for(let W=0;W<h.batchSize;++W)for(let K=0;K<h.inChannels;++K)for(let q=0;q<h.inDepth;++q)for(let Y=0;Y<h.inHeight;++Y)for(let J=0;J<h.inWidth;++J){const G=q-$,ee=Y-k,te=J-O;let j=0;for(let se=0;se<T;se+=v){const be=(G+se)/d;if(!(be<0||be>=h.outDepth||Math.floor(be)!==be))for(let ae=0;ae<I;ae+=w){const de=(ee+ae)/p;if(!(de<0||de>=h.outHeight||Math.floor(de)!==de))for(let Se=0;Se<M;Se+=E){const Te=(te+Se)/m;if(Te<0||Te>=h.outWidth||Math.floor(Te)!==Te)continue;const De=B.get(W,be,de,Te,K);j+=De}}}N.set(j*A,W,q,Y,J,K)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const eY={kernelName:Gx,backendName:"cpu",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i;Ct([r,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,h=lo(o.shape,a,l,1,u),d=h.strideHeight,p=h.strideWidth,m=h.filterHeight,g=h.filterWidth,b=h.dilationHeight,y=h.dilationWidth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,E=w-1-h.padInfo.left,T=v-1-h.padInfo.top,I=tn(o.shape,"float32"),M=1/(m*g),$=t.data.get(r.dataId).values,O=tn(r.shape,"float32",$);for(let k=0;k<h.batchSize;++k)for(let N=0;N<h.inChannels;++N)for(let A=0;A<h.inHeight;++A)for(let B=0;B<h.inWidth;++B){const W=A-T,K=B-E;let q=0;for(let Y=0;Y<v;Y+=b){const J=(W+Y)/d;if(!(J<0||J>=h.outHeight||Math.floor(J)!==J))for(let G=0;G<w;G+=y){const ee=(K+G)/p;if(ee<0||ee>=h.outWidth||Math.floor(ee)!==ee)continue;const te=O.get(k,J,ee,N);q+=te}}I.set(q*M,k,A,B,N)}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const nY={kernelName:Wx,backendName:"cpu",kernelFunc:tY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:i,offset:o,mean:a,variance:l}=e;z(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ct([r,a,l,i,o],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const h=t.data.get(r.dataId).values,d=t.data.get(a.dataId).values,p=t.data.get(l.dataId).values,m=i?t.data.get(i.dataId).values:new Float32Array([1]),g=o?t.data.get(o.dataId).values:new Float32Array([0]),b=new Float32Array(h.length),y=g.length,v=m.length,w=p.length,E=d.length;let T=0,I=0,M=0,$=0;for(let O=0;O<h.length;++O)b[O]=g[T++]+(h[O]-d[I++])*m[M++]/Math.sqrt(p[$++]+u),T>=y&&(T=0),I>=E&&(I=0),M>=v&&(M=0),$>=w&&($=0);return t.makeTensorInfo(r.shape,r.dtype,b)}const rY={kernelName:bm,backendName:"cpu",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:o}=s;Ct([r],"batchToSpaceND");const a=i.reduce((v,w)=>v*w),l=Tg(r.shape,i,a),u=Eg(l.length,i.length),h=Cg(r.shape,i,a),d=mC(o,i.length),p=gC(h,o,i.length),m=Xn({inputs:{x:r},backend:t,attrs:{shape:l}}),g=si({inputs:{x:m},backend:t,attrs:{perm:u}}),b=Xn({inputs:{x:g},backend:t,attrs:{shape:h}}),y=$c({inputs:{x:b},backend:t,attrs:{begin:d,size:p}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(b),y}const oY={kernelName:lm,backendName:"cpu",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o}=s,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,u=nI(a,l,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,u)}const lY={kernelName:Hx,backendName:"cpu",kernelFunc:aY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,i=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,a=Yt(Array.from(i),Array.from(o));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const cY={kernelName:jx,backendName:"cpu",kernelFunc:uY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY=Pn(Rd,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),dY={kernelName:Rd,backendName:"cpu",kernelFunc:hY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fY=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(Me(e.shape)),r=t.data.get(e.dataId),i=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,a=t.data.get(i.dataId).values,l=t.data.get(o.dataId).values;for(let u=0;u<a.length;u++){const h=a[u],d=l[u];s[u]=Math.hypot(h,d)}return t.makeOutput(s,e.shape,"float32")},pY={kernelName:cm,backendName:"cpu",kernelFunc:fY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cd(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,i=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,i)}const mY={kernelName:dv,backendName:"cpu",kernelFunc:cd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hd(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=an(r,e[0].shape)[0],o=e.map(b=>b.shape);dC(o,i);let a=la(e.map(b=>b.shape),i);if(Me(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(b=>Me(b.shape)>0);if(l.length===1)return ya({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const b=l.map(T=>Dc({inputs:{input:T},backend:t})),y=l.map(T=>cd({inputs:{input:T},backend:t})),v=hd({inputs:b,backend:t,attrs:{axis:i}}),w=hd({inputs:y,backend:t,attrs:{axis:i}}),E=gi({inputs:{real:v,imag:w},backend:t});return b.forEach(T=>t.disposeIntermediateTensorInfo(T)),y.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),E}const u=l.map(b=>{const v=[-1,Me(b.shape.slice(i))];return Xn({inputs:{x:b},backend:t,attrs:{shape:v}})}),h=u.map(b=>({vals:t.data.get(b.dataId).values,shape:b.shape}));a=la(u.map(b=>b.shape),1);const d=u[0].shape[0]===1,p=nO(h,a,e[0].dtype,d),m=la(l.map(b=>b.shape),i),g=t.makeTensorInfo(m,e[0].dtype,p);return u.forEach(b=>t.disposeIntermediateTensorInfo(b)),g}const gY={kernelName:hm,backendName:"cpu",kernelFunc:hd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dataFormat:l,dilations:u,dimRoundingMode:h}=s;Ct([r,i],"conv2d");const d=ol(l),p=er(r.shape,i.shape,o,u,a,h,!1,d),m=p.filterHeight,g=p.filterWidth,b=p.dilationHeight,y=p.dilationWidth,v=p.padInfo.left,w=p.padInfo.top,E=p.dataFormat==="channelsLast",T=new Is(p.outShape,r.dtype),I=Lt(r.shape),M=Lt(i.shape),$=I[0],O=E?I[1]:I[2],k=E?I[2]:1,N=E?1:I[1],A=T.strides[0],B=E?T.strides[1]:T.strides[2],W=E?T.strides[2]:1,K=E?1:T.strides[1],q=t.data.get(r.dataId).values,Y=t.data.get(i.dataId).values,J=T.values;for(let G=0;G<p.batchSize;++G){const ee=G*$,te=G*A;for(let j=0;j<p.outHeight;++j){const se=te+j*B,be=j*p.strideHeight-w;for(let ae=0;ae<m;++ae){const de=be+ae*b;if(de<0||de>=p.inHeight)continue;const Se=ae*M[0],Te=ee+de*O;for(let De=0;De<p.outWidth;++De){const Ue=se+De*W,We=De*p.strideWidth-v;for(let lt=0;lt<g;++lt){const Ft=We+lt*y;if(Ft<0||Ft>=p.inWidth)continue;const Je=Se+lt*M[1],ie=Te+Ft*k;let Kt=Je;for(let bt=0;bt<p.inChannels;++bt){const _t=q[ie+bt*N];for(let tt=0;tt<p.outChannels;++tt)J[Ue+tt*K]+=_t*Y[Kt+tt];Kt+=p.outChannels}}}}}}return t.makeTensorInfo(T.shape,T.dtype,J)}const yY={kernelName:dm,backendName:"cpu",kernelFunc:QO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:h}=s;Ct([r,i],"conv2dBackpropFilter");const d=ol(l),p=er(r.shape,h,o,1,a,u,!1,d),{strideHeight:m,strideWidth:g,filterHeight:b,filterWidth:y}=p,v=p.dataFormat==="channelsLast",w=new Is(p.filterShape,"float32"),E=p.padInfo.left,T=p.padInfo.top,I=t.data.get(r.dataId).values,M=t.data.get(i.dataId).values,$=new Is(r.shape,r.dtype,I),O=new Is(i.shape,i.dtype,M);for(let k=0;k<b;++k){const N=Math.max(0,Math.ceil((T-k)/m)),A=Math.min(p.outHeight,(p.inHeight+T-k)/m);for(let B=0;B<y;++B){const W=Math.max(0,Math.ceil((E-B)/g)),K=Math.min(p.outWidth,(p.inWidth+E-B)/g);for(let q=0;q<p.inChannels;++q)for(let Y=0;Y<p.outChannels;++Y){let J=0;for(let G=0;G<p.batchSize;++G)for(let ee=N;ee<A;++ee){const te=k+ee*m-T;for(let j=W;j<K;++j){const se=B+j*g-E;v?J+=$.get(G,te,se,q)*O.get(G,ee,j,Y):J+=$.get(G,q,te,se)*O.get(G,Y,ee,j)}}w.set(J,k,B,q,Y)}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const vY={kernelName:qx,backendName:"cpu",kernelFunc:xY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:o,strides:a,pad:l,dataFormat:u,dimRoundingMode:h}=s;Ct([r,i],"conv2dBackpropInput");const d=Lt(i.shape),p=Lt(r.shape);let m=ol(u);const g=er(o,i.shape,a,1,l,h,!1,m),b=new Is(g.inShape,"float32"),y=b.values,v=t.data.get(r.dataId).values,w=t.data.get(i.dataId).values,[E,T,I]=d,{batchSize:M,filterHeight:$,filterWidth:O,inChannels:k,inHeight:N,inWidth:A,outChannels:B,outHeight:W,outWidth:K,strideHeight:q,strideWidth:Y}=g;m=g.dataFormat;const J=$-1-g.padInfo.top,G=O-1-g.padInfo.left,ee=m==="channelsLast",te=b.strides[0],j=ee?b.strides[1]:b.strides[2],se=ee?b.strides[2]:1,be=ee?1:b.strides[1],ae=p[0],de=ee?p[1]:p[2],Se=ee?p[2]:1,Te=ee?1:p[1];for(let De=0;De<M;++De)for(let Ue=0;Ue<k;++Ue)for(let We=0;We<N;++We){const lt=We-J,Ft=Math.max(0,Math.ceil(lt/q)),Je=Math.min(W,($+lt)/q);for(let ie=0;ie<A;++ie){const Kt=ie-G,bt=Math.max(0,Math.ceil(Kt/Y)),_t=Math.min(K,(O+Kt)/Y);let tt=0;for(let nt=Ft;nt<Je;++nt){const Z=nt*q-lt;for(let V=bt;V<_t;++V){const Ie=V*Y-Kt,Oe=ae*De+de*nt+Se*V,Be=E*($-1-Z)+T*(O-1-Ie)+I*Ue;for(let Le=0;Le<B;++Le){const gt=v[Oe+Te*Le],et=w[Be+Le];tt+=gt*et}}}const nn=te*De+j*We+se*ie+be*Ue;y[nn]=tt}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const wY={kernelName:fm,backendName:"cpu",kernelFunc:bY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l}=s;Ct([r,i],"conv3d");const u=yu(r.shape,i.shape,o,l,a),{filterDepth:h,filterHeight:d,filterWidth:p,dilationDepth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=u,v=y.front,w=y.left,E=y.top,T=new Is(u.outShape,r.dtype),I=t.data.get(r.dataId).values,M=t.data.get(i.dataId).values,$=T.values,O=Lt(r.shape),k=Lt(i.shape);for(let N=0;N<u.batchSize;++N){const A=N*O[0],B=N*T.strides[0];for(let W=0;W<u.outDepth;++W){const K=B+W*T.strides[1],q=W*u.strideDepth-v;for(let Y=0;Y<h;++Y){const J=q+Y*m;if(J<0||J>=u.inDepth)continue;const G=Y*k[0],ee=A+J*O[1];for(let te=0;te<u.outHeight;++te){const j=K+te*T.strides[2],se=te*u.strideHeight-E;for(let be=0;be<d;++be){const ae=se+be*g;if(ae<0||ae>=u.inHeight)continue;const de=G+be*k[1],Se=ee+ae*O[2];for(let Te=0;Te<u.outWidth;++Te){const De=j+Te*u.outChannels,Ue=Te*u.strideWidth-w;for(let We=0;We<p;++We){const lt=Ue+We*b;if(lt<0||lt>=u.inWidth)continue;const Ft=de+We*k[2],Je=Se+lt*u.inChannels;let ie=Ft;for(let Kt=0;Kt<u.inChannels;++Kt){const bt=I[Je+Kt];for(let _t=0;_t<u.outChannels;++_t)$[De+_t]+=bt*M[ie+_t];ie+=u.outChannels}}}}}}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const _Y={kernelName:pm,backendName:"cpu",kernelFunc:SY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,filterShape:l}=s;Ct([r,i],"conv3dBackpropFilterV2");const u=Lt(r.shape),h=Lt(i.shape),d=yu(r.shape,l,o,1,a),p=d.strideDepth,m=d.strideHeight,g=d.strideWidth,b=d.filterDepth,y=d.filterHeight,v=d.filterWidth,w=new Is(d.filterShape,"float32"),E=w.values,[T,I,M,$]=w.strides,O=t.data.get(i.dataId).values,[k,N,A,B]=h,W=t.data.get(r.dataId).values,[K,q,Y,J]=u,G=d.padInfo.front,ee=d.padInfo.left,te=d.padInfo.top;for(let j=0;j<b;++j){const se=Math.max(0,Math.ceil((G-j)/p)),be=Math.min(d.outDepth,(d.inDepth+G-j)/p),ae=j*T;for(let de=0;de<y;++de){const Se=Math.max(0,Math.ceil((te-de)/m)),Te=Math.min(d.outHeight,(d.inHeight+te-de)/m),De=de*I+ae;for(let Ue=0;Ue<v;++Ue){const We=Math.max(0,Math.ceil((ee-Ue)/g)),lt=Math.min(d.outWidth,(d.inWidth+ee-Ue)/g),Ft=Ue*M+De;for(let Je=0;Je<d.inChannels;++Je){const ie=Je*$+Ft;for(let Kt=0;Kt<d.outChannels;++Kt){let bt=0;for(let _t=0;_t<d.batchSize;++_t){const tt=_t*K,nn=_t*k;for(let nt=se;nt<be;++nt){const V=(j+nt*p-G)*q+tt,Ie=nt*N+nn;for(let Oe=Se;Oe<Te;++Oe){const Le=(de+Oe*m-te)*Y+V,gt=Oe*A+Ie;for(let et=We;et<lt;++et){const Zt=(Ue+et*g-ee)*J+Le,Xe=et*B+gt;bt+=W[Zt+Je]*O[Xe+Kt]}}}}E[ie+Kt]=bt}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const EY={kernelName:Kx,backendName:"cpu",kernelFunc:TY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{pad:o,strides:a,inputShape:l}=s;Ct([r],"conv3dBackpropInputV2");const u=Lt(r.shape),h=Lt(i.shape),d=yu(l,i.shape,a,1,o),p=new Is(d.inShape,"float32"),m=p.values,[g,b,y,v]=p.strides,w=t.data.get(r.dataId).values,[E,T,I,M]=u,$=t.data.get(i.dataId).values,[O,k,N,A]=h,{batchSize:B,filterDepth:W,filterHeight:K,filterWidth:q,inChannels:Y,inDepth:J,inHeight:G,inWidth:ee,outChannels:te,outDepth:j,outHeight:se,outWidth:be,strideDepth:ae,strideHeight:de,strideWidth:Se}=d,Te=W-1-d.padInfo.front,De=K-1-d.padInfo.top,Ue=q-1-d.padInfo.left;for(let We=0;We<B;++We)for(let lt=0;lt<Y;++lt)for(let Ft=0;Ft<J;++Ft){const Je=Ft-Te,ie=Math.max(0,Math.ceil(Je/ae)),Kt=Math.min(j,(W+Je)/ae);for(let bt=0;bt<G;++bt){const _t=bt-De,tt=Math.max(0,Math.ceil(_t/de)),nn=Math.min(se,(K+_t)/de);for(let nt=0;nt<ee;++nt){const Z=nt-Ue,V=Math.max(0,Math.ceil(Z/Se)),Ie=Math.min(be,(q+Z)/Se);let Oe=0;for(let Be=ie;Be<Kt;++Be){const Le=Be*ae-Je;for(let gt=tt;gt<nn;++gt){const et=gt*de-_t;for(let ut=V;ut<Ie;++ut){const Zt=ut*Se-Z,Xe=E*We+T*Be+I*gt+M*ut,yt=O*(W-1-Le)+k*(K-1-et)+N*(q-1-Zt)+A*lt;for(let Rt=0;Rt<te;++Rt){const Ut=w[Xe+Rt],xt=$[yt+Rt];Oe+=Ut*xt}}}}m[g*We+b*Ft+y*bt+v*nt+lt]=Oe}}}return t.makeTensorInfo(p.shape,p.dtype,p.values)}const IY={kernelName:Yx,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY=Pn(kd,n=>Math.cos(n)),AY={kernelName:kd,backendName:"cpu",kernelFunc:NY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RY=Pn(Md,n=>Math.cosh(n)),kY={kernelName:Md,backendName:"cpu",kernelFunc:RY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MY(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:u}=s,[h,d,p,m]=r.shape,g=i.shape[0],[b,y]=a,v=tn([g,b,y,m],"float32"),w=t.data.get(i.dataId).values,E=t.data.get(o.dataId).values,T=t.data.get(r.dataId).values,I=Lt(r.shape),M=Lt(v.shape);for(let $=0;$<g;$++){const O=$*4,k=w[O],N=w[O+1],A=w[O+2],B=w[O+3],W=E[$];if(W>=h)continue;const K=b>1?(A-k)*(d-1)/(b-1):0,q=y>1?(B-N)*(p-1)/(y-1):0;for(let Y=0;Y<b;Y++){const J=b>1?k*(d-1)+Y*K:.5*(k+A)*(d-1);if(J<0||J>d-1){for(let G=0;G<y;G++)for(let ee=0;ee<m;ee++){const te=ee+G*M[2]+Y*M[1]+$*M[0];v.values[te]=u}continue}if(l==="bilinear"){const G=Math.floor(J),ee=Math.ceil(J),te=J-G;for(let j=0;j<y;j++){const se=y>1?N*(p-1)+j*q:.5*(N+B)*(p-1);if(se<0||se>p-1){for(let Se=0;Se<m;Se++){const Te=Se+j*M[2]+Y*M[1]+$*M[0];v.values[Te]=u}continue}const be=Math.floor(se),ae=Math.ceil(se),de=se-be;for(let Se=0;Se<m;Se++){let Te=Se+be*I[2]+G*I[1]+W*I[0];const De=T[Te];Te=Se+ae*I[2]+G*I[1]+W*I[0];const Ue=T[Te];Te=Se+be*I[2]+ee*I[1]+W*I[0];const We=T[Te];Te=Se+ae*I[2]+ee*I[1]+W*I[0];const lt=T[Te],Ft=De+(Ue-De)*de,Je=We+(lt-We)*de;Te=Se+j*M[2]+Y*M[1]+$*M[0],v.values[Te]=Ft+(Je-Ft)*te}}}else for(let G=0;G<y;++G){const ee=y>1?N*(p-1)+G*q:.5*(N+B)*(p-1);if(ee<0||ee>p-1){for(let se=0;se<m;se++){const be=se+G*M[2]+Y*M[1]+$*M[0];v.values[be]=u}continue}const te=Math.round(ee),j=Math.round(J);for(let se=0;se<m;se++){const be=se+te*I[2]+j*I[1]+W*I[0],ae=se+G*M[2]+Y*M[1]+$*M[0];v.values[ae]=T[be]}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const DY={kernelName:Qx,backendName:"cpu",kernelFunc:MY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;Ct(r,"cumprod");const l=ls([i],r.shape.length);let u=r;l!=null&&(u=si({inputs:{x:r},backend:t,attrs:{perm:l}}));const h=bs(1,r.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);const d=Qr(u.dtype,"int32"),p=zx(Me(u.shape),d),m=t.data.get(u.dataId).values,g=u.shape[u.shape.length-1],b=a?(v,w)=>v+g-w-1:(v,w)=>v+w;for(let v=0;v<m.length;v+=g)for(let w=0;w<g;w++){const E=b(v,w);if(w===0)p[E]=o?1:m[E];else{const T=b(v,w-1);p[E]=o?m[T]*p[T]:m[E]*p[T]}}const y=t.makeTensorInfo(u.shape,d,p);if(l!=null){const v=xu(l),w=si({inputs:{x:y},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(u),w}return y}const FY={kernelName:Zx,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;Ct(r,"cumsum");const l=ls([i],r.shape.length);let u=r;l!=null&&(u=si({inputs:{x:r},backend:t,attrs:{perm:l}}));const h=bs(1,r.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);const d=Qr(u.dtype,"int32"),p=cr(Me(u.shape),d),m=t.data.get(u.dataId).values,g=u.shape[u.shape.length-1],b=a?(v,w)=>v+g-w-1:(v,w)=>v+w;for(let v=0;v<m.length;v+=g)for(let w=0;w<g;w++){const E=b(v,w);if(w===0)p[E]=o?0:m[E];else{const T=b(v,w-1);p[E]=o?m[T]+p[T]:m[E]+p[T]}}const y=t.makeTensorInfo(u.shape,d,p);if(l!=null){const v=xu(l),w=si({inputs:{x:y},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(u),w}return y}const OY={kernelName:mm,backendName:"cpu",kernelFunc:PY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const l=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values,h=nI(l,u,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,h)}else if(r.shape.length===2){const l=t.bufferSync(r),u=t.bufferSync(i),h=JP(l,u,o,a);return t.makeTensorInfo(h.shape,i.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const UY={kernelName:Jx,backendName:"cpu",kernelFunc:LY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:o}=s;z(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=r.shape[0],l=r.shape[1],u=r.shape[2],h=r.shape[3],d=l*i,p=u*i,m=h/(i*i),g=t.data.get(r.dataId).values,b=new Float32Array(a*d*p*m);let y=0;for(let v=0;v<a;++v)for(let w=0;w<d;++w){const E=Math.floor(w/i),T=w%i;for(let I=0;I<p;++I){const M=Math.floor(I/i),$=I%i,O=(T*i+$)*m;for(let k=0;k<m;++k){const A=k+O+h*(M+u*(E+l*v));b[y++]=g[A]}}}return t.makeTensorInfo([a,d,p,m],r.dtype,b)}const BY={kernelName:ev,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l,dimRoundingMode:u}=s;Ct([r,i],"depthwiseConv2DNative");const h=Lt(r.shape),d=Lt(i.shape);let p=l;p==null&&(p=[1,1]),z(dr(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);const m=er(r.shape,i.shape,o,p,a,u,!0),{filterHeight:g,filterWidth:b,dilationHeight:y,dilationWidth:v,padInfo:w}=m,E=w.left,T=w.top,I=m.outChannels/m.inChannels,M=new Is(m.outShape,r.dtype),$=t.data.get(r.dataId).values,O=t.data.get(i.dataId).values,k=M.values;for(let N=0;N<m.batchSize;++N){const A=N*h[0],B=N*M.strides[0];for(let W=0;W<m.outHeight;++W){const K=B+W*M.strides[1],q=W*m.strideHeight-T;for(let Y=0;Y<g;++Y){const J=q+Y*y;if(J<0||J>=m.inHeight)continue;const G=Y*d[0],ee=A+J*h[1];for(let te=0;te<m.outWidth;++te){const j=K+te*M.strides[2],se=te*m.strideWidth-E;for(let be=0;be<b;++be){const ae=se+be*v;if(ae<0||ae>=m.inWidth)continue;const de=G+be*d[1],Se=ee+ae*m.inChannels;let Te=j,De=de;for(let Ue=0;Ue<m.inChannels;++Ue){const We=$[Se+Ue];for(let lt=0;lt<I;++lt)k[Te+lt]+=We*O[De+lt];Te+=I,De+=I}}}}}}return t.makeTensorInfo(M.shape,M.dtype,M.values)}const VY={kernelName:gm,backendName:"cpu",kernelFunc:JO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:u,filterShape:h}=s;Ct([r,i],"depthwiseConv2dNativeBackpropFilter");const d=er(r.shape,h,o,a,l,u,!0),{strideHeight:p,strideWidth:m,filterHeight:g,filterWidth:b}=d,y=new Is(d.filterShape,"float32"),v=d.padInfo.left,w=d.padInfo.top,E=d.outChannels/d.inChannels,T=t.data.get(r.dataId).values,I=new Is(r.shape,r.dtype,T),M=t.data.get(i.dataId).values,$=new Is(i.shape,i.dtype,M);for(let O=0;O<g;++O){const k=Math.max(0,Math.ceil((w-O)/p)),N=Math.min(d.outHeight,(d.inHeight+w-O)/p);for(let A=0;A<b;++A){const B=Math.max(0,Math.ceil((v-A)/m)),W=Math.min(d.outWidth,(d.inWidth+v-A)/m);for(let K=0;K<d.outChannels;++K){const q=Math.trunc(K/E),Y=K%E;let J=0;for(let G=0;G<d.batchSize;++G)for(let ee=k;ee<N;++ee){const te=O+ee*p-w;for(let j=B;j<W;++j){const se=A+j*m-v;J+=I.get(G,te,se,q)*$.get(G,ee,j,K)}}y.set(J,O,A,q,Y)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const GY={kernelName:tv,backendName:"cpu",kernelFunc:WY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:u,inputShape:h}=s;Ct([r,i],"depthwiseConv2DNativeBackpropInput");const d=Lt(r.shape),p=Lt(i.shape),m=er(h,i.shape,o,a,l,u,!0),g=new Is(m.inShape,"float32"),b=g.values,[y,v,w]=g.strides,E=t.data.get(r.dataId).values,[T,I,M]=d,$=t.data.get(i.dataId).values,[O,k,N]=p,{batchSize:A,filterHeight:B,filterWidth:W,inChannels:K,inHeight:q,inWidth:Y,outChannels:J,outHeight:G,outWidth:ee,strideHeight:te,strideWidth:j}=m,se=B-1-m.padInfo.top,be=W-1-m.padInfo.left,ae=J/K;for(let de=0;de<A;++de)for(let Se=0;Se<K;++Se)for(let Te=0;Te<q;++Te){const De=Te-se,Ue=Math.max(0,Math.ceil(De/te)),We=Math.min(G,(B+De)/te);for(let lt=0;lt<Y;++lt){const Ft=lt-be,Je=Math.max(0,Math.ceil(Ft/j)),ie=Math.min(ee,(W+Ft)/j);let Kt=0;for(let bt=Ue;bt<We;++bt){const _t=bt*te-De;for(let tt=Je;tt<ie;++tt){const nn=tt*j-Ft,nt=T*de+I*bt+M*tt,Z=O*(B-1-_t)+k*(W-1-nn)+N*Se;for(let V=0;V<ae;++V){const Ie=Se*ae+V,Oe=E[nt+Ie],Be=$[Z+V];Kt+=Oe*Be}}}b[y*de+v*Te+w*lt+Se]=Kt}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const jY={kernelName:nv,backendName:"cpu",kernelFunc:HY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(n){const{inputs:e,backend:t}=n,{x:s}=e,r=Me(s.shape),i=t.data.get(s.dataId).values,o=tn([r,r],s.dtype),a=o.values;for(let u=0;u<i.length;u++)a[u*r+u]=i[u];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,o.dtype,o.values)}const qY={kernelName:sv,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY={kernelName:ym,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:i,pad:o,dilations:a}=t,l=e,u=l.data.get(s.dataId).values,h=s.shape.length,d=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:m,inHeight:g,inWidth:b,inChannels:y,outHeight:v,outWidth:w,padInfo:E,strideHeight:T,strideWidth:I,filterHeight:M,filterWidth:$,dilationHeight:O,dilationWidth:k,outShape:N}=og(s.shape,r.shape,i,o,"NHWC",a),A=Me(N),B=N.length,W=fs(s.dtype,A);for(let q=0;q<m;++q)for(let Y=0;Y<v;++Y){const J=Y*T-E.top;for(let G=0;G<w;++G){const ee=G*I-E.left;for(let te=0;te<y;++te){let j=Number.MIN_SAFE_INTEGER;for(let be=0;be<M;++be){const ae=J+be*O;if(ae>=0&&ae<g)for(let de=0;de<$;++de){const Se=ee+de*k;if(Se>=0&&Se<b){const Te=Ro([q,ae,Se,te],h,Lt(s.shape)),De=Ro([be,de,te],p,Lt(r.shape)),Ue=u[Te]+d[De];Ue>j&&(j=Ue)}}}const se=Ro([q,Y,G,te],B,Lt(N));W[se]=j}}}return{dataId:l.write(mu(W,s.dtype),N,s.dtype),shape:N,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY={kernelName:ux,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:i}=n,{strides:o,pad:a,dilations:l}=t,u=e,h=zi(s.shape,u.data.get(s.dataId).values),d=zi(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:m,inWidth:g,inChannels:b,outHeight:y,outWidth:v,padInfo:w,strideHeight:E,strideWidth:T,filterHeight:I,filterWidth:M,dilationHeight:$,dilationWidth:O,outShape:k}=og(s.shape,r.shape,o,a,"NHWC",l);z(i.rank===k.length,()=>`Error in ${ux}, dy must have the same rank as output ${k.length}, but got ${i.rank}`);const N=zi(k,u.data.get(i.dataId).values),A=$T(r.shape,r.dtype);for(let W=0;W<p;++W)for(let K=0;K<y;++K){const q=K*E-w.top;for(let Y=0;Y<v;++Y){const J=Y*T-w.left;for(let G=0;G<b;++G){let ee=Number.MIN_SAFE_INTEGER,te=0,j=0;for(let se=0;se<I;++se){const be=q+se*$;if(be>=0&&be<m)for(let ae=0;ae<M;++ae){const de=J+ae*O;if(de>=0&&de<g){const Se=h[W][be][de][G]+d[se][ae][G];Se>ee&&(ee=Se,te=se,j=ae)}}}A[te][j][G]+=N[W][K][Y][G]}}}return{dataId:u.write(mu(A,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZY={kernelName:lx,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:i}=n,{strides:o,pad:a,dilations:l}=t,u=e,h=zi(s.shape,u.data.get(s.dataId).values),d=zi(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:m,inWidth:g,inChannels:b,outHeight:y,outWidth:v,padInfo:w,strideHeight:E,strideWidth:T,filterHeight:I,filterWidth:M,dilationHeight:$,dilationWidth:O,outShape:k}=og(s.shape,r.shape,o,a,"NHWC",l);z(i.rank===k.length,()=>`Error in ${lx}, dy must have the same rank as output ${k.length}, but got ${i.rank}`);const N=zi(k,u.data.get(i.dataId).values),A=$T(s.shape,s.dtype);for(let W=0;W<p;++W)for(let K=0;K<y;++K){const q=K*E-w.top;for(let Y=0;Y<v;++Y){const J=Y*T-w.left;for(let G=0;G<b;++G){let ee=Number.MIN_SAFE_INTEGER,te=q<0?0:q,j=J<0?0:J;for(let se=0;se<I;++se){const be=q+se*$;if(be>=0&&be<m)for(let ae=0;ae<M;++ae){const de=J+ae*O;if(de>=0&&de<g){const Se=h[W][be][de][G]+d[se][ae][G];Se>ee&&(ee=Se,te=be,j=de)}}}A[W][te][j][G]+=N[W][K][Y][G]}}}return{dataId:u.write(mu(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QY(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:i,options:o}=s,{contextOptions:a,imageOptions:l}=o||{},u=(l==null?void 0:l.alpha)||1,h=(a==null?void 0:a.contextType)||"2d";if(h!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const d=i.getContext(h,(a==null?void 0:a.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${h} type.`);const[p,m]=r.shape.slice(0,2),g=r.shape.length===2?1:r.shape[2],b=t.data.get(r.dataId).values,y=r.dtype==="float32"?255:1,v=new Uint8ClampedArray(m*p*4);for(let E=0;E<p*m;++E){const T=[0,0,0,255*u];for(let M=0;M<g;M++){const $=b[E*g+M];if(r.dtype==="float32"){if($<0||$>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${$}.`)}else if(r.dtype==="int32"&&($<0||$>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${$}.`);g===1?(T[0]=$*y,T[1]=$*y,T[2]=$*y):T[M]=$*y}const I=E*4;v[I+0]=Math.round(T[0]),v[I+1]=Math.round(T[1]),v[I+2]=Math.round(T[2]),v[I+3]=Math.round(T[3])}i.width=m,i.height=p;const w=new ImageData(v,m,p);return d.putImageData(w,0,0),r}const JY={kernelName:rv,backendName:"cpu",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fg(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Ct(r,"sum");let a;r.dtype==="bool"?a=du({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):a=ya({inputs:{x:r},backend:t});const l=a.shape.length,u=an(i,a.shape),h=ls(u,l);let d=u,p=a;h!=null&&(p=si({inputs:{x:a},backend:t,attrs:{perm:h}}),d=bs(d.length,l)),fr("sum",d,p.shape.length);const[m,g]=tr(p.shape,d),b=Qr(p.dtype,"int32");let y=Tx(t,m,b);const v=Me(g),w=t.data.get(y.dataId).values,E=t.data.get(p.dataId).values;for(let T=0;T<w.length;++T){const I=T*v;let M=0;for(let $=0;$<v;++$)M+=E[I+$];w[T]=M}if(o){const T=vs(y.shape,u),I=y;y=Xn({inputs:{x:y},backend:t,attrs:{shape:T}}),t.disposeIntermediateTensorInfo(I)}return t.disposeIntermediateTensorInfo(a),h!=null&&t.disposeIntermediateTensorInfo(p),y}const eZ={kernelName:Ym,backendName:"cpu",kernelFunc:Fg};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tZ(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,i=e,{allDims:o,summedDims:a,idDims:l}=TC(r,i.length);CC(o.length,l,i);const{path:u,steps:h}=IC(a,l),d=h.length;let p=null,m=o.length;const g=[];for(let b=0;b<d;++b){for(const y of h[b]){const{permutationIndices:v,expandDims:w}=EC(m,l[y]);let E;NC(v)?E=i[y]:(E=si({inputs:{x:i[y]},backend:t,attrs:{perm:v}}),g.push(E));const T=E.shape.slice();for(let I=0;I<w.length;++I)T.splice(w[I],0,1);dn(E.shape,T)||(E=Xn({inputs:{x:E},backend:t,attrs:{shape:T}}),g.push(E)),p===null?p=E:(p=Zb({inputs:{a:E,b:p},backend:t}),g.push(p))}b<d-1&&(u[b]>=0&&(p=Fg({inputs:{x:p},backend:t,attrs:{axis:u[b]-(o.length-m),keepDims:!1}}),g.push(p)),m--)}for(const b of g)b!==p&&t.disposeIntermediateTensorInfo(b);return p}const nZ={kernelName:iv,backendName:"cpu",kernelFunc:tZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Ct([s,r],"eluGrad");const i=new Float32Array(Me(r.shape)),o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<o.length;++l){const u=o[l];u>=0?i[l]=a[l]:i[l]=a[l]*(u+1)}return t.makeTensorInfo(r.shape,"float32",i)}const rZ={kernelName:ov,backendName:"cpu",kernelFunc:sZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iZ=yC,oZ=xC,aZ=vC,lZ=bC,uZ=wC,cZ=SC,hZ=Pn(Fd,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+iZ*t);return e*(1-((((cZ*s+uZ)*s+lZ)*s+aZ)*s+oZ)*s*Math.exp(-t*t))}),dZ={kernelName:Fd,backendName:"cpu",kernelFunc:hZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ix(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:i}=s,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(z(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),Xn({inputs:{x:r},backend:t,attrs:{shape:a}})}const fZ={kernelName:vm,backendName:"cpu",kernelFunc:Ix};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pZ=Ss((n,e)=>n/e),lI=Ls(Dd,pZ),$_={kernelName:Dd,backendName:"cpu",kernelFunc:lI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eL(n,e,t){const s=n.shape,r=s[0],i=s[1],o=t.data.get(n.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[r,i],h=Me(u),d=Ys("float32",h),p=Ys("float32",h);for(let y=0;y<r;y++){const v=$c({inputs:{x:a},backend:t,attrs:{begin:[y,0],size:[1,i]}}),w=$c({inputs:{x:l},backend:t,attrs:{begin:[y,0],size:[1,i]}}),E=gi({inputs:{real:v,imag:w},backend:t}),{real:T,imag:I}=mZ(E,e,t),M=el(T,I);for(let $=0;$<i;$++){const O=_C(M,$);d[y*i+$]=O.real,p[y*i+$]=O.imag}t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(E)}const m=t.makeTensorInfo(u,"float32",d),g=t.makeTensorInfo(u,"float32",p),b=gi({inputs:{real:m,imag:g},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),b}function mZ(n,e,t){const s=Me(n.shape),r=t.data.get(n.dataId),i=t.data.get(r.complexTensorInfos.real.dataId).values,o=t.data.get(r.complexTensorInfos.imag.dataId).values;if(gZ(s)){const a=F_(i,o,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(l,"float32",a.real),h=t.makeTensorInfo(l,"float32",a.imag),d=t.makeTensorInfo([],"float32",rl(s,"float32")),p=ya({inputs:{x:d},backend:t}),m=$_.kernelFunc({inputs:{a:u,b:d},backend:t}),g=$_.kernelFunc({inputs:{a:h,b:p},backend:t}),b=t.data.get(m.dataId).values,y=t.data.get(g.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),{real:b,imag:y}}return a}else{const a=el(i,o),l=yZ(a,s,e);return l$(l)}}function gZ(n){return(n&n-1)===0}function F_(n,e,t,s,r){if(t===1)return{real:n,imag:e};const i=el(n,e),o=t/2,a=u$(i),l=a.real,u=a.imag,h=[l.length],d=r.makeTensorInfo(h,"float32",l),p=r.makeTensorInfo(h,"float32",u),m=gi({inputs:{real:d,imag:p},backend:r}),g=c$(i),b=g.real,y=g.imag,v=[b.length],w=r.makeTensorInfo(v,"float32",b),E=r.makeTensorInfo(v,"float32",y),T=gi({inputs:{real:w,imag:E},backend:r}),I=F_(l,u,o,s,r),M=I.real,$=I.imag,O=[M.length],k=r.makeTensorInfo(O,"float32",M),N=r.makeTensorInfo(O,"float32",$),A=gi({inputs:{real:k,imag:N},backend:r}),B=F_(b,y,o,s,r),W=B.real,K=B.imag,q=[W.length],Y=r.makeTensorInfo(q,"float32",W),J=r.makeTensorInfo(q,"float32",K),G=gi({inputs:{real:Y,imag:J},backend:r}),ee=d$(t,s),te=[ee.real.length],j=r.makeTensorInfo(te,"float32",ee.real),se=r.makeTensorInfo(te,"float32",ee.imag),be=gi({inputs:{real:j,imag:se},backend:r}),ae=Zb({inputs:{a:be,b:G},backend:r}),de=ud({inputs:{a:A,b:ae},backend:r}),Se=oI({inputs:{a:A,b:ae},backend:r}),Te=Dc({inputs:{input:de},backend:r}),De=Dc({inputs:{input:Se},backend:r}),Ue=cd({inputs:{input:de},backend:r}),We=cd({inputs:{input:Se},backend:r}),lt=hd({inputs:[Te,De],backend:r,attrs:{axis:0}}),Ft=hd({inputs:[Ue,We],backend:r,attrs:{axis:0}}),Je=r.data.get(lt.dataId).values,ie=r.data.get(Ft.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(Se),r.disposeIntermediateTensorInfo(Te),r.disposeIntermediateTensorInfo(Ue),r.disposeIntermediateTensorInfo(De),r.disposeIntermediateTensorInfo(We),r.disposeIntermediateTensorInfo(lt),r.disposeIntermediateTensorInfo(Ft),{real:Je,imag:ie}}function yZ(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let i=0,o=0;for(let a=0;a<e;a++){const l=f$(r*a,e,t),u=_C(n,a);i+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}t&&(i/=e,o/=e),h$(s,i,o,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xZ(n){const{inputs:e,backend:t}=n,{input:s}=e,r=Me(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=Xn({inputs:{x:s},backend:t,attrs:{shape:[o,i]}}),l=eL(a,!1,t),u=Xn({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const vZ={kernelName:av,backendName:"cpu",kernelFunc:xZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:i}=t,o=i||Uc(r),a=fs(o,Me(s));return wZ(a,r,o),e.makeTensorInfo(s,o,a)}const bZ={kernelName:lv,backendName:"cpu",kernelFunc:uI};function wZ(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SZ={kernelName:uv,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,i=Ys(s.dtype,Me(s.shape)),[o,a,l,u]=s.shape,h=r.data.get(s.dataId).values;for(let p=0;p<o;p++){const m=p*l*a*u;for(let g=0;g<a;g++){const b=g*(l*u);for(let y=0;y<l;y++){const v=y*u;for(let w=0;w<u;w++){const E=Math.round(l-y-1),T=m+b+v+w;let I=h[T];if(E>=0&&E<l){const M=E*u,$=m+b+M+w;I=h[$]}i[T]=I}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:m,leakyreluAlpha:g}=s;let b=QO({inputs:{x:r,filter:i},backend:t,attrs:{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p}});if(o){const y=b;if(h==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const v=Xn({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});b=ud({inputs:{a:b,b:v},backend:t}),t.disposeIntermediateTensorInfo(v)}else b=ud({inputs:{a:b,b:o},backend:t});t.disposeIntermediateTensorInfo(y)}if(m){const y=b;if(h==="NCHW"&&m==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const v=Xn({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});b=Cx(t,b,m,v,g),t.disposeIntermediateTensorInfo(v)}else b=Cx(t,b,m,a,g);t.disposeIntermediateTensorInfo(y)}return b}const TZ={kernelName:Fp,backendName:"cpu",kernelFunc:_Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:m,leakyreluAlpha:g}=s;let b=JO({inputs:{x:r,filter:i},backend:t,attrs:{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p}});if(o){const y=b;b=ud({inputs:{a:b,b:o},backend:t}),t.disposeIntermediateTensorInfo(y)}if(m){const y=b;b=Cx(t,b,m,a,g),t.disposeIntermediateTensorInfo(y)}return b}const CZ={kernelName:Pp,backendName:"cpu",kernelFunc:EZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IZ(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=Me(s.shape),o=r.shape,a=o[o.length-1],[l,u,h,d]=Fb(s,r);if(u===0)return t.makeTensorInfo(l,s.dtype,[]);const p=t.data.get(r.dataId).values,m=t.bufferSync(s),g=cO(p,m,s.dtype,u,a,h,d,s.shape,i);return t.makeTensorInfo(l,s.dtype,g.values)}const NZ={kernelName:cv,backendName:"cpu",kernelFunc:IZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:o,batchDims:a}=s;Ct([r,i],"gatherV2");const l=an(o,r.shape)[0],u=t.data.get(i.dataId).values,h=r.shape[l];for(let T=0;T<u.length;++T){const I=u[T];z(I<=h-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${h-1}]`)}let d=a;a==null&&(d=0);const p=Me(i.shape),m=RC(r,i,l,d),g=Xn({inputs:{x:r},backend:t,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),b=Xn({inputs:{x:i},backend:t,attrs:{shape:[m.batchSize,p/m.batchSize]}}),y=[m.batchSize,m.outerSize,p/m.batchSize,m.sliceSize],v=t.bufferSync(b),w=t.bufferSync(g),E=hO(w,v,y);return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(b),t.makeTensorInfo(m.outputShape,E.dtype,E.values)}const RZ={kernelName:wm,backendName:"cpu",kernelFunc:AZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kZ(n){const{inputs:e,backend:t}=n,{input:s}=e,r=Me(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=Xn({inputs:{x:s},backend:t,attrs:{shape:[o,i]}}),l=eL(a,!0,t),u=Xn({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const MZ={kernelName:hv,backendName:"cpu",kernelFunc:kZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DZ=Pn(Vd,n=>Number.isFinite(n)?1:0,"bool"),$Z={kernelName:Vd,backendName:"cpu",kernelFunc:DZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FZ=Pn(Wd,n=>Math.abs(n)===1/0?1:0,"bool"),PZ={kernelName:Wd,backendName:"cpu",kernelFunc:FZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OZ=Pn(Gd,n=>Number.isNaN(n)?1:0,"bool"),LZ={kernelName:Gd,backendName:"cpu",kernelFunc:OZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UZ(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,o=gO(s,r,i);return e.makeTensorInfo([o.length],"float32",o)}const zZ={kernelName:fv,backendName:"cpu",kernelFunc:UZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BZ=Pn(jd,n=>Math.log1p(n)),VZ={kernelName:jd,backendName:"cpu",kernelFunc:BZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WZ=Ss((n,e)=>n&&e),GZ=Ls(Cm,WZ,null,"bool"),HZ={kernelName:Cm,backendName:"cpu",kernelFunc:GZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jZ=Pn(Im,n=>n?0:1,"bool"),XZ={kernelName:Im,backendName:"cpu",kernelFunc:jZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qZ=Ss((n,e)=>n||e),KZ=Ls(Nm,qZ,null,"bool"),YZ={kernelName:Nm,backendName:"cpu",kernelFunc:KZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:o,alpha:a,beta:l}=s;Ct(r,"LRN");const u=r.shape[3],h=u-1,d=t.data.get(r.dataId).values,p=Me(r.shape),m=new Float32Array(p);function g(b){const y=b%u;let v=b-y+Math.max(0,y-i);const w=b-y+Math.min(y+i,h);let E=0;for(;v<=w;v++){const T=d[v];E+=T*T}return E}for(let b=0;b<p;b++){const y=g(b),v=d[b]*Math.pow(o+a*y,-l);m[b]=v}return t.makeTensorInfo(r.shape,r.dtype,m)}const QZ={kernelName:Am,backendName:"cpu",kernelFunc:ZZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:o}=e,{depthRadius:a,bias:l,alpha:u,beta:h}=s;Ct(o,"LRNGrad");const d=Me(o.shape),p=o.shape[3],m=t.data.get(o.dataId).values,g=t.data.get(r.dataId).values,b=t.data.get(i.dataId).values,y=new Float32Array(d),v=d;for(let w=0;w<v;w++){const E=w%p,T=w-E+Math.max(0,E-a),I=w-E+Math.min(p,E+a+1);let M=0;for(let $=T;$<I;$++)M+=Math.pow(g[$],2);M=u*M+l;for(let $=T;$<I;$++){let O=-2*u*h*g[$]*b[w]/M;w===$&&(O+=Math.pow(M,-h)),O*=m[w],y[$]+=O}}return t.makeTensorInfo(o.shape,r.dtype,y)}const eQ={kernelName:pv,backendName:"cpu",kernelFunc:JZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:o}=s,a=t;let l=r.shape;const u=l.length,h=an(i,l);let d=h;const p=ls(d,u);let m=a.data.get(r.dataId).values;if(p!=null){const T=new Array(u);for(let I=0;I<T.length;I++)T[I]=l[p[I]];m=rI(m,l,r.dtype,p,T),d=bs(d.length,u),l=T}Ct(r,"max"),fr("max",d,u);const[g,b]=tr(l,d),y=Me(b),v=xO(m,y,g,r.dtype),w=a.write(v,g,r.dtype);let E=g;return o&&(E=vs(g,h)),{dataId:w,shape:E,dtype:r.dtype}}const tQ={kernelName:Rm,backendName:"cpu",kernelFunc:tL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Ct(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,u=1;z(dr(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=lo(r.shape,i,o,u,a,l);let d;if(h.filterWidth===1&&h.filterHeight===1&&dn(h.inShape,h.outShape))d=ya({inputs:{x:r},backend:t});else{const p=t.data.get(r.dataId).values,m=Lt(r.shape),g=aI(p,r.shape,r.dtype,m,h,"max");d=t.makeTensorInfo(h.outShape,r.dtype,g.values)}return d}const sQ={kernelName:km,backendName:"cpu",kernelFunc:nQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:u}=s;Ct(r,"maxPool3d");const h=il(r.shape,i,o,1,a,l,u),d=t.data.get(r.dataId).values,p=ZO(d,r.shape,r.dtype,Lt(r.shape),h,"max");return t.makeTensorInfo(p.shape,"float32",p.values)}const iQ={kernelName:Mm,backendName:"cpu",kernelFunc:rQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oQ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:u}=s;Ct([r,i],"maxPool3DGrad");const h=il(i.shape,o,a,1,l,u),d=t.bufferSync(i),p=q7(d,h),m=h.strideDepth,g=h.strideHeight,b=h.strideWidth,y=h.dilationDepth,v=h.dilationHeight,w=h.dilationWidth,E=h.effectiveFilterDepth,T=h.effectiveFilterHeight,I=h.effectiveFilterWidth,M=E-1-h.padInfo.front,$=I-1-h.padInfo.left,O=T-1-h.padInfo.top,k=tn(i.shape,"float32"),N=t.bufferSync(r);for(let A=0;A<h.batchSize;++A)for(let B=0;B<h.inChannels;++B)for(let W=0;W<h.inDepth;++W)for(let K=0;K<h.inHeight;++K)for(let q=0;q<h.inWidth;++q){const Y=W-M,J=K-O,G=q-$;let ee=0;for(let te=0;te<E;te+=y){const j=(Y+te)/m;if(!(j<0||j>=h.outDepth||Math.floor(j)!==j))for(let se=0;se<T;se+=v){const be=(J+se)/g;if(!(be<0||be>=h.outHeight||Math.floor(be)!==be))for(let ae=0;ae<I;ae+=w){const de=(G+ae)/b;if(de<0||de>=h.outWidth||Math.floor(de)!==de)continue;const Se=E*T*I-1-p.get(A,j,be,de,B),Te=te*T*I+se*I+ae,De=Se===Te?1:0;if(De===0)continue;const Ue=N.get(A,j,be,de,B);ee+=Ue*De}}}k.set(ee,A,W,K,q,B)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const aQ={kernelName:gv,backendName:"cpu",kernelFunc:oQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lQ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:o}=e,a=i;Ct([i,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=s,p=lo(a.shape,l,u,1,h,d),m=t.data.get(a.dataId).values,g=tn(p.outShape,a.dtype,YO(m,a.shape,a.dtype,p).values),b=p.strideHeight,y=p.strideWidth,v=p.dilationHeight,w=p.dilationWidth,E=p.effectiveFilterHeight,T=p.effectiveFilterWidth,I=T-1-p.padInfo.left,M=E-1-p.padInfo.top,$=tn(a.shape,"float32"),O=t.data.get(r.dataId).values,k=tn(r.shape,"float32",O);for(let N=0;N<p.batchSize;++N)for(let A=0;A<p.inChannels;++A)for(let B=0;B<p.inHeight;++B)for(let W=0;W<p.inWidth;++W){const K=B-M,q=W-I;let Y=0;for(let J=0;J<E;J+=v){const G=(K+J)/b;if(!(G<0||G>=p.outHeight||Math.floor(G)!==G))for(let ee=0;ee<T;ee+=w){const te=(q+ee)/y;if(te<0||te>=p.outWidth||Math.floor(te)!==te)continue;const j=E*T-1-g.get(N,G,te,A),se=J*T+ee,be=j===se?1:0;if(be===0)continue;const ae=k.get(N,G,te,A);Y+=ae*be}}$.set(Y,N,B,W,A)}return t.makeTensorInfo($.shape,$.dtype,$.values)}const uQ={kernelName:mv,backendName:"cpu",kernelFunc:lQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cQ(n,e,t,s,r){const i=Lt(e),o=aI(n,e,t,i,r,"max"),a=YO(n,e,t,r,!0,s);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hQ={kernelName:yv,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=e,l=t;Ct(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,h=lo(s.shape,r,i,[1,1],o),[d,p]=cQ(u,s.shape,s.dtype,a,h),m=l.write(d,h.outShape,s.dtype),g=l.write(p,h.outShape,s.dtype);return[{dataId:m,shape:h.outShape,dtype:s.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=an(i,r.shape),u=tr(r.shape,a)[1],h=Me(u),d=[],p=t.makeTensorInfo([],"float32",new Float32Array([h]));d.push(p);const m=du({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});d.push(m);const g=lI({inputs:{a:m,b:p},backend:t});d.push(g);const b=Fg({inputs:{x:g},backend:t,attrs:{axis:i,keepDims:o}});return d.forEach(y=>t.disposeIntermediateTensorInfo(y)),b}const fQ={kernelName:Dm,backendName:"cpu",kernelFunc:dQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Ct(r,"min");const a=an(i,r.shape);let l=a;const u=ls(l,r.shape.length);let h=r;u!=null&&(h=si({inputs:{x:r},backend:t,attrs:{perm:u}}),l=bs(l.length,r.shape.length)),fr("min",l,h.shape.length);const[d,p]=tr(h.shape,l),m=Me(p),g=cr(Me(d),h.dtype),b=t.data.get(h.dataId).values;for(let v=0;v<g.length;++v){const w=v*m;let E=b[w];for(let T=0;T<m;++T){const I=b[w+T];(Number.isNaN(I)||I<E)&&(E=I)}g[v]=E}u!=null&&t.disposeIntermediateTensorInfo(h);const y=t.makeTensorInfo(d,h.dtype,g);if(o){const v=vs(d,a),w=Xn({inputs:{x:y},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(y),w}return y}const mQ={kernelName:$m,backendName:"cpu",kernelFunc:pQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,mode:o}=s;Ct(r,"mirrorPad");const a=i.map((E,T)=>E[0]+r.shape[T]+E[1]),l=i.map(E=>E[0]),u=i.map((E,T)=>E[0]+r.shape[T]),h=o==="reflect"?0:1,d=t.data.get(r.dataId).values,p=r.shape.length,m=Lt(r.shape),g=Me(a),b=a.length,y=Lt(a),v=Ys(r.dtype,g);for(let E=0;E<g;E++){let T=zc(E,b,y);for(let M=0;M<b;M++)T[M]<l[M]?T[M]=l[M]*2-T[M]-h:T[M]>=u[M]&&(T[M]=(u[M]-1)*2-T[M]+h);T=T.map((M,$)=>M-l[$]);const I=Ro(T,p,m);v[E]=d[I]}return{dataId:t.write(v,a,r.dtype),shape:a,dtype:r.dtype}}const yQ={kernelName:Fm,backendName:"cpu",kernelFunc:gQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xQ=Ss((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),vQ=Ls(Kd,xQ),bQ={kernelName:Kd,backendName:"cpu",kernelFunc:vQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,o=r.shape.length;let a=i;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=an([a],r.shape),u=tL({inputs:{x:r},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),h=vs(u.shape,l),d=Xn({inputs:{x:u},backend:t,attrs:{shape:h}}),p=oI({inputs:{a:r,b:d},backend:t}),m=oO({inputs:{x:p},backend:t}),g=Fg({inputs:{x:m},backend:t,attrs:{axis:l,keepDims:!1}}),b=Xn({inputs:{x:g},backend:t,attrs:{shape:h}}),y=lI({inputs:{a:m,b},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(b),y}const wQ={kernelName:Jm,backendName:"cpu",kernelFunc:nL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SQ(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:o,normalized:a}=s;Ct(r,"multinomial");const l=a?r:nL({inputs:{logits:r},backend:t,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],d=t.data.get(l.dataId).values,p=[u,i],m=cr(Me(p),"int32");for(let g=0;g<u;++g){const b=g*h,y=new Float32Array(h-1);y[0]=d[b];for(let E=1;E<y.length;++E)y[E]=y[E-1]+d[b+E];const v=lb.alea(o.toString()),w=g*i;for(let E=0;E<i;++E){const T=v();m[w+E]=y.length;for(let I=0;I<y.length;I++)if(T<y[I]){m[w+E]=I;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(p,"int32",m)}const _Q={kernelName:xv,backendName:"cpu",kernelFunc:SQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TQ=Ab;function EQ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s;Ct(r,"NonMaxSuppression");const u=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,{selectedIndices:d}=TQ(u,h,o,a,l);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const CQ={kernelName:vv,backendName:"cpu",kernelFunc:EQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ=Rb;function NQ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s;Ct(r,"NonMaxSuppressionPadded");const h=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,{selectedIndices:p,validOutputs:m}=IQ(h,d,o,a,l,u);return[t.makeTensorInfo([p.length],"int32",new Int32Array(p)),t.makeTensorInfo([],"int32",new Int32Array([m]))]}const AQ={kernelName:bv,backendName:"cpu",kernelFunc:NQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RQ=kb;function kQ(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s;Ct(r,"NonMaxSuppressionWithScore");const h=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,p=o,m=a,g=l,b=u,{selectedIndices:y,selectedScores:v}=RQ(h,d,p,m,g,b);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const MQ={kernelName:wv,backendName:"cpu",kernelFunc:kQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:i,depth:o,onValue:a,offValue:l}=s;Ct(r,"oneHot");const u=Me(r.shape),h=new Float32Array(u*o);h.fill(l);const d=t.data.get(r.dataId).values;for(let p=0;p<u;++p)d[p]>=0&&d[p]<o&&(h[p*o+d[p]]=a);return t.makeTensorInfo([...r.shape,o],i,h)}const $Q={kernelName:Um,backendName:"cpu",kernelFunc:DQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nx(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Dc({inputs:{input:s},backend:t}),i=Nx({inputs:{x:r},backend:t}),o=cd({inputs:{input:s},backend:t}),a=Nx({inputs:{x:o},backend:t}),l=gi({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return uI({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const FQ={kernelName:sg,backendName:"cpu",kernelFunc:Nx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Dc({inputs:{input:s},backend:t}),i=sL({inputs:{x:r},backend:t}),o=cd({inputs:{input:s},backend:t}),a=Nx({inputs:{x:o},backend:t}),l=gi({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return uI({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const PQ={kernelName:Lm,backendName:"cpu",kernelFunc:sL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Ix({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,o=e[0].dtype;e.forEach(h=>{hr(i,h.shape,"All tensors passed to stack must have matching shapes"),z(o===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(h=>{const d=Ix({inputs:{input:h},backend:t,attrs:{dim:r}});return a.push(d),d}),u=hd({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const OQ={kernelName:zm,backendName:"cpu",kernelFunc:rL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:o}=s;Ct(r,"pad");const a=i.map((w,E)=>w[0]+r.shape[E]+w[1]),l=i.map(w=>w[0]),u=t.data.get(r.dataId).values,h=Me(r.shape),d=r.shape.length,p=Lt(r.shape),m=Me(a),g=a.length,b=Lt(a),y=Ys(r.dtype,m);o!==0&&y.fill(o);for(let w=0;w<h;w++){const T=zc(w,d,p).map((M,$)=>M+l[$]),I=Ro(T,g,b);y[I]=u[w]}return{dataId:t.write(y,a,r.dtype),shape:a,dtype:r.dtype}}const iL={kernelName:Bm,backendName:"cpu",kernelFunc:LQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UQ=Ss((n,e)=>Math.pow(n,e)),zQ=Ls(Zd,UQ),BQ={kernelName:Zd,backendName:"cpu",kernelFunc:zQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VQ(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=e,a=r.map(y=>t.data.get(y.dataId).values),l=r.map(y=>y.shape),u=t.data.get(i.dataId).values,h=t.data.get(o.dataId).values,[d,p,m]=TO(a,l,u,i.shape,i.dtype,h,o.shape),g=d.map(y=>t.makeTensorInfo([y.length],"int32",y)),b=t.makeTensorInfo(m,i.dtype,p);return g.concat([b])}const WQ={kernelName:Sv,backendName:"cpu",kernelFunc:VQ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:i}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[u,h]=EO(o,s.shape,s.dtype,a,r.shape,l,i.shape),d=t.makeTensorInfo([u.length],"int32",u),p=t.makeTensorInfo([h.length],s.dtype,h);return[d,p]}const HQ={kernelName:_v,backendName:"cpu",kernelFunc:GQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,d=t.data.get(o.dataId).values,p=a.map(y=>t.data.get(y.dataId).values),m=a.map(y=>y.shape),[g,b]=CO(u,r.shape,h,i.shape,i.dtype,d,o.shape,p,m,l);return t.makeTensorInfo(g,i.dtype,b)}const XQ={kernelName:Tv,backendName:"cpu",kernelFunc:jQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qQ(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:i,step:o}=t,a=IO(s,r,o,i);return e.makeTensorInfo([a.length],i,a)}const KQ={kernelName:Ev,backendName:"cpu",kernelFunc:qQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YQ=Pn(Qd,n=>1/n),ZQ={kernelName:Qd,backendName:"cpu",kernelFunc:YQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QQ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s;Ct(r,"resizeBilinear");const l=Lt(r.shape),[u,h]=a,[d,p,m,g]=r.shape,b=t.data.get(r.dataId).values,y=new Float32Array(Me([d,u,h,g])),v=[i&&u>1?p-1:p,i&&h>1?m-1:m],w=[i&&u>1?u-1:u,i&&h>1?h-1:h];let E=0;const T=v[0]/w[0],I=v[1]/w[1];for(let M=0;M<d;M++)for(let $=0;$<u;$++){let O;o?O=T*($+.5)-.5:O=T*$;const k=Math.max(0,Math.floor(O)),N=O-k,A=Math.min(p-1,Math.ceil(O)),B=M*l[0]+k*l[1],W=M*l[0]+A*l[1];for(let K=0;K<h;K++){let q;o?q=I*(K+.5)-.5:q=I*K;const Y=Math.max(0,Math.floor(q)),J=q-Y,G=Math.min(m-1,Math.ceil(q)),ee=B+Y*l[2],te=W+Y*l[2],j=B+G*l[2],se=W+G*l[2];for(let be=0;be<g;be++){const ae=b[ee+be],de=b[te+be],Se=b[j+be],Te=b[se+be],De=ae+(Se-ae)*J,Ue=de+(Te-de)*J,We=De+(Ue-De)*N;y[E++]=We}}}return t.makeTensorInfo([d,u,h,g],"float32",y)}const JQ={kernelName:jm,backendName:"cpu",kernelFunc:QQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s;Ct([i,r],"resizeBilinearGrad");const a=Lt(r.shape),[l,u,h,d]=r.shape,[,p,m]=i.shape,g=new Float32Array(l*u*h*d),b=[o&&p>1?u-1:u,o&&m>1?h-1:h],y=[o&&p>1?p-1:p,o&&m>1?m-1:m],v=b[0]/y[0],w=b[1]/y[1],E=t.data.get(i.dataId).values;let T=0;for(let I=0;I<l;I++){const M=I*a[0];for(let $=0;$<p;$++){const O=$*v,k=Math.floor(O),N=Math.min(Math.ceil(O),u-1),A=M+k*a[1],B=M+N*a[1],W=O-k,K=1-W;for(let q=0;q<m;q++){const Y=q*w,J=Math.floor(Y),G=Math.min(Math.ceil(Y),h-1),ee=Y-J,te=1-ee,j=A+J*a[2],se=A+G*a[2],be=B+J*a[2],ae=B+G*a[2],de=K*te,Se=K*ee,Te=W*te,De=W*ee;for(let Ue=0;Ue<d;Ue++){const We=E[T++];g[j+Ue]+=We*de,g[se+Ue]+=We*Se,g[be+Ue]+=We*Te,g[ae+Ue]+=We*De}}}}return t.makeTensorInfo([l,h,u,d],"float32",g)}const tJ={kernelName:Nv,backendName:"cpu",kernelFunc:eJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s;Ct(r,"resizeNearestNeighbor");const l=Lt(r.shape),[u,h]=a,[d,p,m,g]=r.shape,b=t.data.get(r.dataId).values,y=new Float32Array(d*u*h*g),v=[i&&u>1?p-1:p,i&&h>1?m-1:m],w=[i&&u>1?u-1:u,i&&h>1?h-1:h],E=v[0]/w[0],T=v[1]/w[1];let I=0;for(let M=0;M<d;M++){const $=M*l[0];for(let O=0;O<u;O++){const k=o?E*(O+.5):E*O;let N=Math.min(p-1,i?Math.round(k):Math.floor(k));o&&(N=Math.max(0,N));const A=$+N*l[1];for(let B=0;B<h;B++){const W=o?T*(B+.5):T*B;let K=Math.min(m-1,i?Math.round(W):Math.floor(W));o&&(K=Math.max(0,K));const q=A+K*l[2];for(let Y=0;Y<g;Y++){const J=b[q+Y];y[I++]=J}}}}return t.makeTensorInfo([d,u,h,g],r.dtype,y)}const sJ={kernelName:Hm,backendName:"cpu",kernelFunc:nJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rJ(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s;Ct([i,r],"resizeNearestNeighborGrad");const a=Lt(r.shape),l=Lt(i.shape),[u,h,d,p]=r.shape,[,m,g]=i.shape,b=new Float32Array(u*h*d*p),y=t.data.get(i.dataId).values,v=[o&&m>1?h-1:h,o&&g>1?d-1:d],w=[o&&m>1?m-1:m,o&&g>1?g-1:g],E=v[0]/w[0],T=v[1]/w[1],I=1/E,M=1/T,$=Math.ceil(I)*2+2,O=Math.ceil(M)*2+2;for(let k=0;k<u;k++){const N=k*a[0];for(let A=0;A<h;A++){const B=N+A*a[1],W=Math.floor(A*I),K=Math.floor(W-$/2);for(let q=0;q<d;q++){const Y=B+q*a[2],J=Math.floor(q*M),G=Math.floor(J-O/2);for(let ee=0;ee<p;ee++){let te=0;for(let j=0;j<$;j++){const se=j+K;if(se<0||se>=m)continue;const be=N+se*l[1],ae=se*E,de=Math.min(h-1,o?Math.round(ae):Math.floor(ae));if(A===de)for(let Se=0;Se<O;Se++){const Te=Se+G;if(Te<0||Te>=g)continue;const De=be+Te*l[2],Ue=Te*T,We=Math.min(d-1,o?Math.round(Ue):Math.floor(Ue));q===We&&(te+=y[De+ee])}}b[Y+ee]=te}}}}return t.makeTensorInfo(r.shape,r.dtype,b)}const iJ={kernelName:Iv,backendName:"cpu",kernelFunc:rJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s;Ct(r,"reverse");const o=r.shape.length,a=an(i,r.shape);if(o===0)return ya({inputs:{x:r},backend:t});const l=new Is(r.shape,r.dtype),u=t.bufferSync(r);for(let h=0;h<l.size;h++){const d=l.indexToLoc(h),p=d.slice();a.forEach(m=>p[m]=r.shape[m]-1-p[m]),l.set(u.get(...p),...d)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const aJ={kernelName:Xm,backendName:"cpu",kernelFunc:oJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lJ={kernelName:Hv,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:o}=e,a=t,l=Ys(s.dtype,Me(s.shape)),[u,h,d,p]=s.shape,[m,g]=pC(o,h,d),b=255,y=Math.sin(r),v=Math.cos(r),w=a.data.get(s.dataId).values;for(let T=0;T<u;T++){const I=T*d*h*p;for(let M=0;M<h;M++){const $=M*(d*p);for(let O=0;O<d;O++){const k=O*p;for(let N=0;N<p;N++){const A=[u,M,O,N],B=A[2],W=A[1];let K=(B-m)*v-(W-g)*y,q=(B-m)*y+(W-g)*v;K=Math.round(K+m),q=Math.round(q+g);let Y=i;if(typeof i!="number"&&(N===3?Y=b:Y=i[N]),K>=0&&K<d&&q>=0&&q<h){const G=q*(d*p),ee=K*p,te=I+G+ee+N;Y=w[te]}const J=I+$+k+N;l[J]=Y}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uJ=Pn(tf,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),cJ={kernelName:tf,backendName:"cpu",kernelFunc:uJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hJ(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=wu(i,r,o),p=!0,m=t.bufferSync(r),g=t.bufferSync(i),b=dc(m,g,o,d,u,l,a,h,0,p);return t.makeTensorInfo(o,b.dtype,b.values)}const dJ={kernelName:Av,backendName:"cpu",kernelFunc:hJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fJ(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function pJ(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function mJ(n,e,t,s,r,i){const o=fs("int32",t*r);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),u=a*r;for(let h=0;h<r;++h)o[u+h]=i==="left"?fJ(l,e[h+u]):pJ(l,e[h+u])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gJ(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:i}=e,{side:o}=s,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,u=mJ(a,l,r.shape[0],r.shape[1],i.shape[1],o);return t.makeTensorInfo(i.shape,"int32",u)}const yJ={kernelName:kv,backendName:"cpu",kernelFunc:gJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xJ(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e;Ct([s,r,i],"select");const o=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values,h=Qr(r.dtype,i.dtype),d=cr(Me(r.shape),h);let p=0;const m=o===0||o>1||r.shape.length===1?1:Me(r.shape.slice(1));for(let g=0;g<a.length;g++)for(let b=0;b<m;b++)a[g]===1?d[p++]=l[g]:d[p++]=u[g];return t.makeTensorInfo(r.shape,h,d)}const vJ={kernelName:qm,backendName:"cpu",kernelFunc:xJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bJ=Lb,wJ=Ub,SJ=Pn(sf,n=>n>=0?wJ*n:bJ*(Math.exp(n)-1)),_J={kernelName:sf,backendName:"cpu",kernelFunc:SJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TJ=Pn(af,n=>n<0?-1:n>0?1:0),EJ={kernelName:af,backendName:"cpu",kernelFunc:TJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJ=Pn(rf,n=>Math.sin(n)),IJ={kernelName:rf,backendName:"cpu",kernelFunc:CJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NJ=Pn(of,n=>Math.sinh(n)),AJ={kernelName:of,backendName:"cpu",kernelFunc:NJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RJ=11920928955078125e-23,rR=Math.log(RJ)+2,kJ=Pn(uf,n=>{const e=n>-rR,t=n<rR,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),MJ={kernelName:uf,backendName:"cpu",kernelFunc:kJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:o}=s;Ct([r],"spaceToBatchND");const a=Me(i),l=[[0,0]];l.push(...o);for(let M=1+i.length;M<r.shape.length;++M)l.push([0,0]);const u=iL.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),h=Tg(u.shape,i,a,!1),d=Eg(h.length,i.length,!1),p=Cg(u.shape,i,a,!1),b=Xn({inputs:{x:u},backend:t,attrs:{shape:h}}),w=si({inputs:{x:b},backend:t,attrs:{perm:d}}),I=Xn({inputs:{x:w},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),I}const $J={kernelName:Zm,backendName:"cpu",kernelFunc:DJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FJ(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:i,defaultValue:o}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values,h=t.data.get(o.dataId).values[0],[d,p,m,g,b]=kO(a,s.shape,s.dtype,l,r.dtype,u,h);return[t.makeTensorInfo(p,s.dtype,d),t.makeTensorInfo([p[0]],r.dtype,m),t.makeTensorInfo([g.length],"bool",new Uint8Array(g.map(y=>Number(y)))),t.makeTensorInfo([b.length],s.dtype,new Int32Array(b))]}const PJ={kernelName:Mv,backendName:"cpu",kernelFunc:FJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(t.data.get(r.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(i.dataId).values),[u,h,d]=MO(a,s.shape,s.dtype,o,l);return[t.makeTensorInfo(h,s.dtype,u),t.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}const LJ={kernelName:Dv,backendName:"cpu",kernelFunc:OJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[u,h]=iI(o,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(h,s.dtype,u)}const zJ={kernelName:$v,backendName:"cpu",kernelFunc:UJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BJ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[u,h]=iI(o,s.shape,s.dtype,a,l);return t.makeTensorInfo(h,s.dtype,u)}const VJ={kernelName:Fv,backendName:"cpu",kernelFunc:BJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:o}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=wu(i,r,a),m=!1,g=t.bufferSync(r);let b;switch(i.dtype){case"bool":{const y=t.bufferSync(i),v=!!t.data.get(o.dataId).values[0];b=dc(g,y,a,p,h,u,l,d,v,m);break}case"float32":{const y=t.bufferSync(i),v=t.data.get(o.dataId).values[0];b=dc(g,y,a,p,h,u,l,d,v,m);break}case"int32":{const y=t.bufferSync(i),v=t.data.get(o.dataId).values[0];b=dc(g,y,a,p,h,u,l,d,v,m);break}case"string":{const y=t.bufferSync(i),v=Ya(t.data.get(o.dataId).values[0]);b=dc(g,y,a,p,h,u,l,d,v,m);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return t.makeTensorInfo(a,b.dtype,b.values)}const GJ={kernelName:Pv,backendName:"cpu",kernelFunc:WJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:o}=s,a=an(o,r.shape)[0],l=AC(r,i,a),u=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const m=$c({inputs:{x:r},backend:t,attrs:{begin:u,size:p}});return u[a]+=d,m})}const jJ={kernelName:Qm,backendName:"cpu",kernelFunc:HJ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XJ={kernelName:Ov,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Ct(t,"square");const r=s.data.get(t.dataId).values,i=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];i[a]=l*l}return{dataId:s.write(i,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ=Pn(gf,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),KJ={kernelName:gf,backendName:"cpu",kernelFunc:qJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:o,strides:a,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=s;Ct(r,"stridedSlice");const{finalShapeSparse:m,finalShape:g,isIdentity:b,sliceDim0:y,isSimpleSlice:v,begin:w,end:E,strides:T}=cC(r.shape,i,o,a,l,u,h,d,p);let I;if(b)I=Xn({inputs:{x:r},backend:t,attrs:{shape:g}});else if(y||v){z(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const M=aC(w,E,T),$=$c({inputs:{x:r},backend:t,attrs:{begin:w,size:M}});I=Xn({inputs:{x:$},backend:t,attrs:{shape:g}}),t.disposeIntermediateTensorInfo($)}else{const M=t.bufferSync(r),$=FO(m,M,T,w);I=t.makeTensorInfo(g,$.dtype,$.values)}return I}const ZJ={kernelName:Lv,backendName:"cpu",kernelFunc:YJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QJ(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:h,dataSplits:d}=e,p=t.data.get(h.dataId).values,m=t.data.get(d.dataId).values,[g,b]=PO(p,m,r,i,o,a,l,u);return[t.makeTensorInfo([g.length],"string",g),t.makeTensorInfo(d.shape,"int32",b)]}const JJ={kernelName:Uv,backendName:"cpu",kernelFunc:QJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eee(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:i,delimiter:o}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=t.data.get(i.dataId).values,l=t.data.get(o.dataId).values[0],[u,h,d]=OO(a,l,r),p=h.length;return[t.makeTensorInfo([p,2],"int32",u),t.makeTensorInfo([p],"string",h),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const tee={kernelName:zv,backendName:"cpu",kernelFunc:eee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nee(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=t.data.get(i.dataId).values,a=LO(o,r);return t.makeTensorInfo(i.shape,"int32",a)}const see={kernelName:Bv,backendName:"cpu",kernelFunc:nee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ree=Pn(ff,n=>Math.tan(n)),iee={kernelName:ff,backendName:"cpu",kernelFunc:ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oee=Pn(pf,n=>Math.tanh(n)),aee={kernelName:pf,backendName:"cpu",kernelFunc:oee};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lee(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:i}=e,{sliceRank:o,numUpdates:a,sliceSize:l,strides:u,outputSize:h}=wu(i,r,s.shape),d=!1,p=t.bufferSync(r),m=t.bufferSync(i),g=t.bufferSync(s),b=dc(p,m,s.shape,h,l,a,o,u,g,d);return t.makeTensorInfo(s.shape,b.dtype,b.values)}const uee={kernelName:Rv,backendName:"cpu",kernelFunc:lee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;Ct(r,"tile");const o=zO(t.bufferSync(r),i);return t.makeTensorInfo(o.shape,o.dtype,o.values)}const hee={kernelName:mf,backendName:"cpu",kernelFunc:cee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:o}=s;Ct(r,"topk");const a=t.data.get(r.dataId).values,[l,u]=VO(a,r.shape,r.dtype,i,o);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const fee={kernelName:Vv,backendName:"cpu",kernelFunc:dee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pee(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:u}=t,[h,d,p,m]=r.shape,[g,b]=u??[d,p],y=[h,g,b,m],v=Lt(r.shape),w=v[0],E=v[1],T=v[2],I=Lt(y),M=I[0],$=I[1],O=I[2],k=Ys(r.dtype,Me(y));k.fill(l);const N=s.data.get(r.dataId).values,A=s.data.get(i.dataId).values;for(let W=0;W<h;++W){const K=i.shape[0]===1?A:A.subarray(W*8,W*8+8);for(let q=0;q<g;++q)for(let Y=0;Y<b;++Y)for(let J=0;J<m;++J){let G;const ee=K[6]*Y+K[7]*q+1;if(ee===0)continue;const te=(K[0]*Y+K[1]*q+K[2])/ee,j=(K[3]*Y+K[4]*q+K[5])/ee,se=iR(te,p,a),be=iR(j,d,a);switch(o){case"nearest":G=bee(N,d,p,w,E,T,W,be,se,J,l);break;case"bilinear":G=wee(N,d,p,w,E,T,W,be,se,J,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const ae=W*M+q*$+Y*O+J;k[ae]=G}return s.makeTensorInfo(y,r.dtype,k)}return{dataId:s.write(k,y,r.dtype),shape:r.shape,dtype:r.dtype}}const mee={kernelName:Wv,backendName:"cpu",kernelFunc:pee};function iR(n,e,t){switch(t){case"reflect":return gee(n,e);case"wrap":return yee(n,e);case"nearest":return vee(n,e);case"constant":default:return xee(n)}}function gee(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return eu(0,t,e-1)}function yee(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return eu(0,t,e-1)}function xee(n,e){return n}function vee(n,e){return eu(0,n,e-1)}function Ip(n,e,t,s,r,i,o,a,l,u,h){const d=o*s+a*r+l*i+u;return 0<=a&&a<e&&0<=l&&l<t?n[d]:h}function bee(n,e,t,s,r,i,o,a,l,u,h){const d=Math.round(a),p=Math.round(l);return Ip(n,e,t,s,r,i,o,d,p,u,h)}function wee(n,e,t,s,r,i,o,a,l,u,h){const d=Math.floor(a),p=Math.floor(l),m=d+1,g=p+1,b=(g-l)*Ip(n,e,t,s,r,i,o,d,p,u,h)+(l-p)*Ip(n,e,t,s,r,i,o,d,g,u,h),y=(g-l)*Ip(n,e,t,s,r,i,o,m,p,u,h)+(l-p)*Ip(n,e,t,s,r,i,o,m,g,u,h);return(m-a)*b+(a-d)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function See(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:i}=e;Ct(i,"unique");const o=s.data.get(i.dataId).values,{outputValues:a,outputShape:l,indices:u}=WO(o,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const _ee={kernelName:Gv,backendName:"cpu",kernelFunc:See};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tee(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r.shape.length,a=r.shape[i],l=new Array(o-1);let u=0;for(let m=0;m<o;m++)m!==i&&(l[u++]=r.shape[m]);const h=new Array(o).fill(0),d=r.shape.slice();d[i]=1;const p=new Array(a);for(let m=0;m<p.length;m++){h[i]=m;const g=$c({inputs:{x:r},backend:t,attrs:{begin:h,size:d}});p[m]=Xn({inputs:{x:g},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(g)}return p}const Eee={kernelName:tg,backendName:"cpu",kernelFunc:Tee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:o}=s;Ct(r,"unsortedSegmentSum");const a=r.shape.length,l=i.shape.length,u=[],h=[],d=a-l;let p=i;for(let g=0;g<d;++g){const b=Ix({inputs:{input:p},backend:t,attrs:{dim:g+1}});p=b,h.push(b)}for(let g=0;g<o;++g){const b=rl(g,"int32"),y=t.makeTensorInfo([],"int32",b),v=rO({inputs:{a:y,b:p},backend:t}),w=du({inputs:{x:v},backend:t,attrs:{dtype:"float32"}}),E=Zb({inputs:{a:w,b:r},backend:t}),T=Fg({inputs:{x:E},backend:t,attrs:{axis:0,keepDims:!1}});u.push(T),h.push(y),h.push(v),h.push(w),h.push(E),h.push(T)}const m=rL({inputs:u,backend:t,attrs:{axis:0}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const Iee={kernelName:ng,backendName:"cpu",kernelFunc:Cee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nee=[S7,n9,T7,C7,l9,N7,R7,M7,$7,P7,L7,z7,V7,H7,X7,Y7,Q7,eY,nY,b7,rY,oY,lY,c9,cY,o9,d9,dY,s9,pY,gY,yY,vY,wY,_Y,EY,IY,AY,kY,DY,FY,OY,UY,BY,VY,GY,jY,qY,KY,YY,ZY,JY,nZ,f7,rZ,f9,dZ,p9,fZ,g9,vZ,bZ,SZ,x9,b9,TZ,CZ,NZ,RZ,S9,T9,r9,MZ,mY,$Z,PZ,LZ,p7,C9,N9,zZ,R9,VZ,HZ,XZ,YZ,QZ,eQ,tQ,M9,sQ,iQ,aQ,uQ,hQ,fQ,mQ,$9,yQ,bQ,_Q,P9,L9,CQ,AQ,MQ,z9,$Q,PQ,OQ,iL,BQ,g7,W9,WQ,HQ,XQ,KQ,i9,$_,ZQ,y7,x7,v7,JQ,tJ,sJ,iJ,aJ,lJ,cJ,Z9,dJ,yJ,vJ,_J,J9,EJ,IJ,AJ,e7,wQ,MJ,$J,PJ,LJ,zJ,VJ,GJ,jJ,s7,XJ,i7,a7,KJ,ZJ,JJ,tee,see,h7,eZ,iee,aee,uee,hee,fee,mee,B9,_ee,Eee,Iee,FQ];for(const n of Nee)jv(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lc={},r0={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Aee(n,e){lc[n]=e}function Po(n,e){if(!(n in lc)||e!=null){const s=kee(n,e);if(s!==null)lc[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=lc[n];return t==null||t.isContextLost()?(delete lc[n],Po(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),lc[n])}function Ree(n){if(!_e().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function kee(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??Ree(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete lc[n]},!1),_e().getBool("SOFTWARE_WEBGL_ENABLED")&&(r0.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",r0)||t.getContext("experimental-webgl",r0):t.getContext("webgl2",r0)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Kp;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Kp||(Kp={}));var Ui;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Ui||(Ui={}));var lr;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(lr||(lr={}));function Pg(n,e){return[e,n]}function Mee(n,e){return n*e}function i0(n){const e=Me(n),t=Math.ceil(e/4);return ix(t)}function Ef(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function Dee(n,e){const[t,s]=Ef(n,e);return t*s*4}function cI(n,e){const t=n;let s,r,i,o,a,l,u,h,d,p;return _e().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,i=t.RGBA16F,o=t.RGBA32F,a=t.RED,u=4,h=1,d=t.HALF_FLOAT,p=t.FLOAT,l=t.RGBA8):(s=n.RGBA,r=n.RGBA,i=n.RGBA,o=t.RGBA,a=n.RGBA,u=4,h=4,d=e!=null?e.HALF_FLOAT_OES:null,p=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pt(n,e){const t=e();return _e().getBool("DEBUG")&&$ee(n),t}function $ee(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+Lee(n,e))}const Fee=596e-10,Pee=65504;function Oee(n){return!!(_e().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||Fee<Math.abs(n)&&Math.abs(n)<Pee)}function Lee(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function o0(n,e){return cl(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Uee(n,e){const t=cl(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pt(n,()=>n.shaderSource(t,e)),pt(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function zee(n,e){const t=cl(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pt(n,()=>n.shaderSource(t,e)),pt(n,()=>n.compileShader(t)),_e().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw oL(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const Bee=/ERROR: [0-9]+:([0-9]+):/g;function oL(n,e){const t=Bee.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),i=r.length.toString().length+2,o=r.map((d,p)=>mc((p+1).toString(),i)+d);let a=0;for(let d=0;d<o.length;d++)a=Math.max(o[d].length,a);const l=o.slice(0,s-1),u=o.slice(s-1,s),h=o.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${mc(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join(`
`))}function Vee(n){return cl(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function Wee(n,e){if(pt(n,()=>n.linkProgram(e)),!_e().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function sS(n,e){if(pt(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Gee(n,e){const t=cl(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),pt(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function Hee(n,e){const t=cl(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),pt(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function jee(n){return cl(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function Xee(n,e){const t=_e().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function qee(n){return cl(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function oR(n,e,t,s,r,i,o){const a=n.getAttribLocation(e,t);return a===-1?!1:(pt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),pt(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,i,o)),pt(n,()=>n.enableVertexAttribArray(a)),!0)}function Kee(n,e,t){ete(n,t),pt(n,()=>n.activeTexture(n.TEXTURE0+t)),pt(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function Yee(n,e,t){return cl(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function Zee(n,e,t){return n.getUniformLocation(e,t)}function Qee(n,e,t,s){pt(n,()=>Kee(n,e,s)),pt(n,()=>n.uniform1i(t,s))}function rS(n,e,t){pt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),pt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function aR(n,e){pt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),pt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function a0(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Jee(n,e))}function Jee(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function cl(n,e,t){const s=pt(n,()=>e());if(s==null)throw new Error(t);return s}function ete(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function dd(n,e=2){return Me(n.slice(0,n.length-e))}function fd(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function l0(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[dd(n),...fd(n)]),e}function tte(n,e=!1){let t=_e().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=_e().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&_e().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?Ux(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=sl(n).newShape);let r=Me(n),i=null;n.length<=1&&r<=t?i=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?i=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(i=[n[0],n[1]*n[2]*n[3]]);const o=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(i==null||o)if(e){const a=dd(n);let l=2,u=2;n.length&&([l,u]=fd(n)),r=a*(l/2)*(u/2),i=ix(r).map(h=>h*2)}else i=ix(r);return i}function u0(n){return n%2===0}function Ax(n,e){if(n=n.slice(-2),e=e.slice(-2),dn(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||u0(t)&&u0(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&u0(n[0])&&u0(e[0])}let iS,oS;function nte(n){if(iS==null){const e=Po(n);iS=e.getParameter(e.MAX_TEXTURE_SIZE)}return iS}function ste(n){if(oS==null){const e=Po(n);oS=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,oS)}function rte(n){if(n===0)return 0;let e;const t=Po(n);return ao(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:ao(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function ao(n,e){return n.getExtension(e)!=null}function lR(n){try{if(Po(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ite(n){if(n===0)return!1;const e=Po(n);if(n===1){if(!ao(e,"OES_texture_float"))return!1}else if(!ao(e,"EXT_color_buffer_float"))return!1;return P_(e)}function ote(n){if(n===0)return!1;const e=Po(n);if(n===1){if(!ao(e,"OES_texture_float")||!ao(e,"WEBGL_color_buffer_float"))return!1}else{if(ao(e,"EXT_color_buffer_float"))return P_(e);const s="EXT_color_buffer_half_float";if(ao(e,s)){const r=e.getExtension(s);return ate(e,r)}return!1}return P_(e)}function P_(n){const e=cI(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(i),o}function ate(n,e){const t=cI(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(o),a}function lte(n){return n!==2?!1:Po(n).fenceSync!=null}function Og(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&z(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const At=_e();At.registerFlag("HAS_WEBGL",()=>At.getNumber("WEBGL_VERSION")>0);At.registerFlag("WEBGL_VERSION",()=>lR(2)?2:lR(1)?1:0);At.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);At.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>At.get("WEBGL_VERSION")===2);At.registerFlag("WEBGL_CPU_FORWARD",()=>!0);At.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);At.registerFlag("WEBGL_PACK",()=>At.getBool("HAS_WEBGL"));At.registerFlag("WEBGL_PACK_NORMALIZATION",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_CLIP",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_REDUCE",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_LAZILY_UNPACK",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_CONV_IM2COL",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>nte(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>ste(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=At.getNumber("WEBGL_VERSION");return n===0?0:rte(n)});At.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>At.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!UT());At.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>ite(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>At.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:At.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));At.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>ote(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_FENCE_API_ENABLED",()=>lte(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>At.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);At.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});At.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>UT()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});At.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);At.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);At.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);At.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);At.registerFlag("WEBGL_EXP_CONV",()=>!1);At.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>At.getBool("IS_TEST"));At.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);At.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);At.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);At.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gr(){let n,e,t,s,r,i,o,a,l,u;return _e().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",i="outputColor",o="out vec4 outputColor;",a=_e().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",i="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qc(n,e,t="index"){const s=Lt(e);return s.map((r,i)=>{const o=`int ${n[i]} = ${t} / ${r}`,a=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r}`:`index -= ${n[i]} * ${r}`;return`${o}; ${a};`}).join("")}function Qb(n,e,t="index"){const s=Lt(e);return s.map((r,i)=>{const o=`int ${n[i]} = ${t} / outShapeStrides[${i}]`,a=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${o}; ${a};`}).join("")}function ute(n,e){const t=n.length,s=n.map(i=>`${e}[${i}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let i=t-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function cte(n,e,t="index"){const s=n.map((i,o)=>o),r=ute(s,e);return r.map((i,o)=>{const a=`int ${n[o]} = ${t} / ${r[o]}`,l=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r[o]}`:`index -= ${n[o]} * ${r[o]}`;return`${a}; ${l};`}).join("")}function hI(n){const e=Lt(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function dI(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const aL=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:lL}=N$;function hte(n,e,t){const s=[];if(n.forEach(m=>{const g=Me(m.shapeInfo.logicalShape);if(m.shapeInfo.isUniform?s.push(`uniform float ${m.name}${g>1?`[${g}]`:""};`):(s.push(`uniform sampler2D ${m.name};`),s.push(`uniform int offset${m.name};`)),t.enableShapeUniforms){const{uniformShape:b}=fI(t.packedInputs,m.shapeInfo.logicalShape,m.shapeInfo.texShape);switch(b.length){case 1:s.push(`uniform int ${m.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${m.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${m.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${m.name}Shape;`);break}s.push(`uniform ivec2 ${m.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(m=>{s.push(`uniform ${m.type} ${m.name}${m.arrayIndex?`[${m.arrayIndex}]`:""};`)});const r=s.join(`
`),i=n.map(m=>dte(m,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),o=e.texShape,a=Gr(),l=mte(a);let u,h,d=xte(a);return e.isPacked?(u=fte(e.logicalShape,o,t.enableShapeUniforms),h=yte(a)):(u=pte(e.logicalShape,o,t.enableShapeUniforms),h=gte(a)),t.packedInputs&&(d+=Ste),[d,l,h,r,u,i,t.userCode].join(`
`)}function Cf(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return $te(n,e);case 1:return Pte(n,e);case 2:return Lte(n,e);case 3:return zte(n,e);case 4:return Vte(n,e);case 5:return Wte(n);case 6:return Gte(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function uL(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return Dte(n);case 1:return Fte(n,e);case 2:return Ote(n,e);case 3:return Ute(n,e);default:return Bte(n,e)}}function dte(n,e,t=!1,s){let r="";t?r+=uL(n,s):r+=Cf(n,s);const i=n.shapeInfo.logicalShape,o=e.logicalShape;return i.length<=o.length&&(t?r+=Hte(n,e):r+=jte(n,e)),r}function fte(n,e,t){switch(n.length){case 0:return cL();case 1:return _te(n,e,t);case 2:return kte(n,e,t);case 3:return Ete(n,e,t);default:return Ite(n,e,t)}}function pte(n,e,t){switch(n.length){case 0:return cL();case 1:return Tte(n,e,t);case 2:return Mte(n,e,t);case 3:return Cte(n,e,t);case 4:return Nte(n,e,t);case 5:return Ate(n,e);case 6:return Rte(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function mte(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function gte(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function yte(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function xte(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${vte}
    ${bte}
    ${wte}
  `}const vte=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,bte=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,wte=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ste=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function cL(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function _te(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function Tte(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Ete(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),i=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function Cte(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Qb(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=qc(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function Ite(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),i=r*Math.ceil(n[n.length-2]/2);let o=i,a="",l="b, r, c";for(let u=2;u<n.length-1;u++)o*=n[n.length-u-1],a=`
      int b${u} = index / ${o};
      index -= b${u} * ${o};
    `+a,l=`b${u}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function Nte(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Qb(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=qc(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function Ate(n,e){const t=qc(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Rte(n,e){const t=qc(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function kte(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(dn(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function Mte(n,e,t){return dn(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Kc(n){return`offset${n}`}function Dte(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Gr();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function $te(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,i]=n.shapeInfo.texShape;if(r===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=Kc(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${o});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function Fte(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,i=Gr();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${t}, uv);
    }
  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${i.texture2D}(${t}, uv);
    }
  `}function Pte(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${If(n)}
      }
    `;const r=n.shapeInfo.texShape,i=r[0],o=r[1];if(o===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Kc(t);return o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${t}, uv);
      }
    `:i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${o}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Ote(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,o=i[0],a=i[1],l=Gr();if(i!=null&&dn(t,i))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],h=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function Lte(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape;if(i!=null&&dn(t,i)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const p=i[0],m=i[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:o,keptDims:a}=sl(t),l=o;if(l.length<t.length){const p=Nf(n,l),m=["row","col"];return`
      ${Cf(p,e)}
      float ${r}(int row, int col) {
        return ${r}(${Af(m,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${If(n)}
      }
    `;const u=i[0],h=i[1],d=Kc(s);return h===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${h}, index);
    return sampleTexture(${s}, uv);
  }
`}function Ute(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(t[0]===1){const p=t.slice(1),m=[1,2],g=Nf(n,p),b=["b","row","col"];return`
        ${uL(g,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Af(b,m)});
        }
      `}const a=Gr();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=o[0],u=o[1],h=Math.ceil(t[2]/2),d=h*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${d}, ${h}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function zte(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t[1]*t[2],o=t[2],{newShape:a,keptDims:l}=sl(t),u=a;if(u.length<t.length){const b=Nf(n,u),y=["row","col","depth"];return`
        ${Cf(b,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Af(y,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${If(n)}
      }
    `;const h=n.shapeInfo.texShape,d=h[0],p=h[1],m=n.shapeInfo.flatOffset;if(p===i&&m==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===o&&m==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const g=Kc(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${g};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${g};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}function Bte(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Gr();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,o=i.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],h=l[1],d=Math.ceil(i[o-1]/2);let p=d*Math.ceil(i[o-2]/2),m="int b, int row, int col",g=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let b=2;b<o-1;b++)m=`int b${b}, `+m,p*=i[o-b-1],g=`b${b} * ${p} + `+g;return`
    vec4 ${s}(${m}) {
      int index = ${g};
      int texR = index / ${h};
      int texC = index - texR * ${h};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});
      return ${r.texture2D}(${t}, uv);
    }
  `}function Vte(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t[3],o=t[2]*i,a=t[1]*o,{newShape:l,keptDims:u}=sl(t);if(l.length<t.length){const w=Nf(n,l),E=["row","col","depth","depth2"];return`
      ${Cf(w,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Af(E,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${i}, 1)));
        ${If(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],m=d[1],g=`int stride2 = ${s}Shape[3];`,b=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(m===a&&h==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${g}
        ${b}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(m===i&&h==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;const v=Kc(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${g}
      ${b}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${v});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${p}, ${m}, index + ${v});
      return sampleTexture(${s}, uv);
    }
  `}function Wte(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],i=e[3]*r,o=e[2]*i,a=e[1]*o,{newShape:l,keptDims:u}=sl(e);if(l.length<e.length){const b=Nf(n,l),y=["row","col","depth","depth2","depth3"];return`
      ${Cf(b)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Af(y,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${i}, ${r})) +
          depth3;
        ${If(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],m=d[1];if(m===a&&h==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===r&&h==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=Kc(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${i} +
          depth2 * ${r} + depth3 + ${g};
      vec2 uv = uvFromFlat(${p}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Gte(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:i}=sl(e);if(r.length<e.length){const y=Nf(n,r),v=["row","col","depth","depth2","depth3","depth4"];return`
      ${Cf(y)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Af(v,i)});
      }
    `}const o=e[5],a=e[4]*o,l=e[3]*a,u=e[2]*l,h=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${h}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${If(n)}
      }
    `;const d=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],g=p[1];if(g===h&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(g===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;const b=Kc(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${h} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${b};
      vec2 uv = uvFromFlat(${m}, ${g}, index);
      return sampleTexture(${t}, uv);
    }
  `}function If(n){const e=n.name,t=Me(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Hte(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,o=e.logicalShape.length,a=lL(n.shapeInfo.logicalShape,e.logicalShape),l=Bn(o),u=o-i;let h;const d=["x","y","z","w","u","v"];i===0?h="":o<2&&a.length>=1?h="coords = 0;":h=a.map(w=>`coords.${d[w+u]} = 0;`).join(`
`);let p="";o<2&&i>0?p="coords":p=n.shapeInfo.logicalShape.map((w,E)=>`coords.${d[E+u]}`).join(", ");let m="return outputValue;";const b=Me(n.shapeInfo.logicalShape)===1,v=Me(e.logicalShape)===1;if(i===1&&!b&&!v)m=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(b&&!v)o===1?m=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:m=`
        return vec4(outputValue.x);
      `;else if(a.length){const w=i-2,E=i-1;a.indexOf(w)>-1&&a.indexOf(E)>-1?m="return vec4(outputValue.x);":a.indexOf(w)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(E)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${h}
      vec4 outputValue = get${s}(${p});
      ${m}
    }
  `}function jte(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,o=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&dn(o,i))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=Bn(l),h=lL(n.shapeInfo.logicalShape,e.logicalShape),d=l-a;let p;const m=["x","y","z","w","u","v"];a===0?p="":l<2&&h.length>=1?p="coords = 0;":p=h.map(b=>`coords.${m[b+d]} = 0;`).join(`
`);let g="";return l<2&&a>0?g="coords":g=n.shapeInfo.logicalShape.map((b,y)=>`coords.${m[y+d]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${p}
      return get${s}(${g});
    }
  `}function Bn(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function fI(n,e,t){const{newShape:s,keptDims:r}=sl(e),i=e.length,o=n&&i===3&&e[0]===1,a=o?e.slice(1):s,l=!n&&i>1&&!dn(e,t)&&s.length<i||o;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:r}}function Nf(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Af(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xte(n,e,t,s){const r=t.map((h,d)=>{const p={logicalShape:h.shape,texShape:h.isUniform?null:h.texData.texShape,isUniform:h.isUniform,isPacked:h.isUniform?!1:h.texData.isPacked,flatOffset:null};return h.texData!=null&&h.texData.slice!=null&&h.texData.slice.flatOffset>0&&(p.flatOffset=h.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:p}}),i=r.map(h=>h.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=hte(r,o,e),l=zee(n.gl,a),u=n.createProgram(l);return _e().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:o},hL(n,e,u)))}function hL(n,e,t){const s=[],r=[];let i,o,a,l=null,u=null;u=n.getUniformLocation(t,"NAN",!1),_e().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const h=!1;for(const d of e.variableNames){const p={name:d,uniform:n.getUniformLocation(t,d,h),offset:n.getUniformLocation(t,`offset${d}`,h)};e.enableShapeUniforms&&(p.shape=n.getUniformLocation(t,`${d}Shape`,h),p.texShape=n.getUniformLocation(t,`${d}TexShape`,h)),s.push(p)}if(e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",h),a=n.getUniformLocation(t,"outShapeStrides",h),o=n.getUniformLocation(t,"outTexShape",h)),e.customUniforms)for(const d of e.customUniforms)r.push(n.getUniformLocation(t,d.name,h));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:o}}function uR(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,i=e[s],o=i.shape;if(!dn(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(t.isUniform&&i.isUniform)return;const a=t.texShape,l=i.isUniform?null:i.texData.texShape;if(!dn(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function qte(n,e,t,s,r){e.program.enableShapeUniforms||(uR(e.inShapeInfos,t),uR([e.outShapeInfo],[s]));const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):n.setOutputMatrixTexture(i.texture,o[0],o[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),_e().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:h,offset:d,shape:p,texShape:m}=e.variablesLocations[l];if(p){const{uniformShape:g}=fI(e.program.packedInputs,u.shape,u.texData.texShape);switch(g.length){case 1:n.gl.uniform1iv(p,new Int32Array(g));break;case 2:n.gl.uniform2iv(p,new Int32Array(g));break;case 3:n.gl.uniform3iv(p,new Int32Array(g));break;case 4:n.gl.uniform4iv(p,new Int32Array(g));break}}if(m&&n.gl.uniform2i(m,u.texData.texShape[0],u.texData.texShape[1]),h!=null){if(u.isUniform){if(Me(u.shape)<2)n.gl.uniform1f(h,u.uniformValues[0]);else{let g=u.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),n.gl.uniform1fv(h,g)}continue}u.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,h,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Lt(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],h=e.customUniformLocations[l],d=r[l];if(u.type==="float")n.gl.uniform1fv(h,d);else if(u.type==="vec2")n.gl.uniform2fv(h,d);else if(u.type==="vec3")n.gl.uniform3fv(h,d);else if(u.type==="vec4")n.gl.uniform4fv(h,d);else if(u.type==="int")n.gl.uniform1iv(h,d);else if(u.type==="ivec2")n.gl.uniform2iv(h,d);else if(u.type==="ivec3")n.gl.uniform3iv(h,d);else if(u.type==="ivec4")n.gl.uniform4iv(h,d);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function Kte(n,e,t){let s="";e.concat(t).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:u,uniformShape:h,keptDims:d}=fI(n.packedInputs,o.shape,l);let p="",m="",g="";if(h.length===1&&n.packedInputs){const I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${I[0]>1}_${I[1]>1}`}else if(h.length===2&&!n.packedInputs)m=`${h[0]>1}_${h[1]>1}`;else if(h.length>2&&!n.packedInputs){const I=Lt(h);g=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}const b=o.shape.length,y=h.length===2&&dn(o.shape,l),v=Me(o.shape)===1,w=Ic(o.shape,t.shape),E=!n.packedInputs&&b===t.shape.length&&dn(l,t.texData.texShape),T=n.packedInputs||h.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${b}_${E}_${u?d:""}_${h.length}_${v}_${w}_${y}_${p}_${m}_${g}_${T}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${a}`}});const r=n.userCode;let i=n.constructor.name;return i+="_"+s+"_"+r+`${_e().getNumber("WEBGL_VERSION")}`,i}function _r(n){return _e().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yte{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Kp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Gr();this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qb(["r","c","d"],e):qc(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zte{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Kp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Gr();this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qb(["r","c","d"],e):qc(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qte{constructor(e){this.variableNames=["A"],this.outTexUsage=Ui.DOWNLOAD;const t=Gr();this.outputShape=e,this.userCode=`
      ${aL}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jte{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ui.DOWNLOAD;const t=Gr();this.outputShape=e,this.userCode=`
      ${aL}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ene={R:0,G:1,B:2,A:3};class cR{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Gr();this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length);let i="result";t&&(i="floor(result * 255. + 0.5)");let o="";for(let a=0;a<s.length;a++){const l=s[a];o+=`
          if(offset == ${a}) {
            result = values[${ene[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?dI():hI(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${o}
        }
        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tne{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Gr();this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length);let r="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?dI():hI(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nne(n){const e=Gr(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Uee(n,t)}function sne(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Gee(n,e)}function rne(n){const e=new Uint16Array([0,1,2,2,1,3]);return Hee(n,e)}function Lg(n,e,t,s,r,i){Xee(e,t);const o=jee(n),a=n.TEXTURE_2D;return pt(n,()=>n.bindTexture(a,o)),pt(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),pt(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),pt(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),pt(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),_e().getNumber("WEBGL_VERSION")===1?pt(n,()=>n.texImage2D(a,0,s,e,t,0,r,i,null)):pt(n,()=>n.texStorage2D(a,1,s,e,t)),pt(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[t,e]}}function dL(n){return n.internalFormatFloat}function ine(n,e,t,s){const[r,i]=Pg(e,t);return Lg(n,r,i,dL(s),s.textureFormatFloat,n.FLOAT)}function fL(n){return n.internalFormatHalfFloat}function one(n,e,t,s){const[r,i]=Pg(e,t);return Lg(n,r,i,fL(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function pL(n){return n.downloadTextureFormat}function ane(n,e,t,s){const[r,i]=Pg(e,t);return Lg(n,r,i,pL(s),n.RGBA,n.UNSIGNED_BYTE)}function mL(n){return n.internalFormatPackedFloat}function lne(n,e,t,s){const[r,i]=Ef(e,t);return Lg(n,r,i,mL(s),n.RGBA,n.FLOAT)}function gL(n){return n.internalFormatPackedHalfFloat}function une(n,e,t,s){const[r,i]=Ef(e,t);return Lg(n,r,i,gL(s),n.RGBA,s.textureTypeHalfFloat)}function cne(n,e,t){return pt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),oR(n,e,"clipSpacePos",t,3,20,0)&&oR(n,e,"uv",t,2,20,12)}function hne(n,e,t,s,r,i){pt(n,()=>n.bindTexture(n.TEXTURE_2D,e));let o,a,l;r instanceof Uint8Array?(o=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(o=new Float32Array(t*s*4),a=n.FLOAT,l=i.internalFormatPackedFloat),o.set(r),_e().getNumber("WEBGL_VERSION")===2?pt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,o)):pt(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,o)),pt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function dne(n,e,t){pt(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?_e().getNumber("WEBGL_VERSION")===2?pt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):pt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):_e().getNumber("WEBGL_VERSION")===2?pt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):pt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),pt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function fne(n,e,t,s){const r=n.createBuffer();pt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*e*t;return pt(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),pt(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),pt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function pne(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function mne(n,e,t,s){const[r,i]=Pg(e,t),o=4,a=new Uint8Array(Mee(e*t,o));return pt(n,()=>n.readPixels(0,0,r,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function gne(n,e,t,s,r,i,o,a){const l=n,u=new Float32Array(Dee(i,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function yne(n,e,t){const s=new Float32Array(e*t*4);return pt(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aS{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=_e().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,Aee(t,e)):this.gl=Po(t),e=this.gl,_e().getNumber("WEBGL_VERSION")===2){const i=e;this.createVertexArray=()=>pt(i,()=>i.createVertexArray()),this.bindVertexArray=o=>pt(i,()=>i.bindVertexArray(o)),this.deleteVertexArray=o=>pt(i,()=>i.deleteVertexArray(o)),this.getVertexArray=()=>pt(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(e!=null){const i=e.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pt(e,()=>i.createVertexArrayOES()),this.bindVertexArray=o=>pt(e,()=>i.bindVertexArrayOES(o)),this.deleteVertexArray=o=>pt(e,()=>i.deleteVertexArrayOES(o)),this.getVertexArray=()=>pt(e,()=>e.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),_e().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=o0(this.gl,i),ao(this.gl,o))this.textureHalfFloatExtension=o0(this.gl,o);else if(_e().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),ao(this.gl,r))this.colorBufferHalfFloatExtension=o0(this.gl,r);else if(_e().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",ao(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(ao(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=sne(this.gl),this.indexBuffer=rne(this.gl),this.framebuffer=qee(this.gl),this.textureConfig=cI(this.gl,this.textureHalfFloatExtension)}get debug(){return _e().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;pt(e,()=>e.finish()),pt(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pt(e,()=>e.deleteFramebuffer(this.framebuffer)),pt(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),pt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),pt(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),ine(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),one(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),ane(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),dne(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),hne(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),une(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),lne(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(aR(this.gl,this.framebuffer),this.outputTexture=null),pt(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>mne(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,i,o){return gne(this.gl,e,t,s,r,i,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return pne(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=fne(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(_e().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const o=r.clientWaitSync(i,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},t=i}else _e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,_e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>yne(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=nne(t));const s=Vee(t);pt(t,()=>t.attachShader(s,this.vertexShader)),pt(t,()=>t.attachShader(s,e)),Wee(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&sS(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;pt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),cne(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(pt(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&sS(this.gl,this.program),pt(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?Yee(this.gl,e,t):Zee(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),pt(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),Qee(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,i]=Ef(t,s);this.setOutputMatrixTextureDriver(e,r,i)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&sS(this.gl,this.program),a0(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pt(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=o0(this.gl,_e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(_e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(_e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await HS(()=>this.disposed||this.isQueryAvailable(e,_e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,_e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=xne(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in _e().platform&&(s=_e().platform.setTimeoutCustom.bind(_e().platform)),HS(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),rS(this.gl,e,this.framebuffer),this.debug&&a0(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(rS(this.gl,this.outputTexture,this.framebuffer),this.debug&&a0(this.gl)):aR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;rS(r,e,this.framebuffer),this.debug&&a0(r),this.outputTexture=e,pt(r,()=>r.viewport(0,0,t,s)),pt(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),pt(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function xne(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:vne,bincountImpl:yL,bincountReduceImpl:bne,bitwiseAndImpl:wne,castImpl:Sne,ceilImpl:_ne,concatImpl:Tne,equalImpl:Ene,expImpl:Cne,expm1Impl:Ine,floorImpl:Nne,gatherNdImpl:Ane,gatherV2Impl:Rne,greaterImpl:kne,greaterEqualImpl:Mne,lessImpl:Dne,lessEqualImpl:$ne,linSpaceImpl:Fne,logImpl:Pne,maxImpl:One,maximumImpl:Lne,minimumImpl:Une,multiplyImpl:zne,negImpl:Bne,notEqualImpl:Vne,prodImpl:Wne,raggedGatherImpl:Gne,raggedRangeImpl:Hne,raggedTensorToTensorImpl:jne,rangeImpl:Xne,rsqrtImpl:qne,scatterImpl:Kne,sigmoidImpl:Yne,simpleAbsImpl:xL,sliceImpl:Zne,sparseFillEmptyRowsImpl:Qne,sparseReshapeImpl:Jne,sparseSegmentReductionImpl:vL,sqrtImpl:ese,staticRegexReplaceImpl:tse,stridedSliceImpl:nse,stringNGramsImpl:sse,stringSplitImpl:rse,stringToHashBucketFastImpl:ise,subImpl:ose,tileImpl:ase,topKImpl:lse,transposeImpl:pI,uniqueImpl:use}=d7;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Or(n,e){return e===1?[n]:bL(n,e)}function cse(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hse{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=_r(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Or("rc",this.rank),s=Bn(this.rank),r=this.getOutOfBoundsCondition(t),i=this.getSetup(t),o=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)i=`${e[e.length-1-o]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length);let s="";for(let r=0;r<4;r++){let i="thisRC = rc;";r%2===1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${dse(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?dI():hI(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function dse(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?cte(["r","c","d"],"inputShape"):qc(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fse{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=dR(t,s),i=fR(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const o=hR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let a;return r===lr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===lr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===lr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===lr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===lr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const i=dR(s,r),o=fR(t,i,r);o in this.freeTextures||(this.freeTextures[o]=[]);const a=hR(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=_e().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[o],h=u&&u.indexOf(e);if(h==null||h<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[h]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function pse(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function hR(n,e,t,s,r){const i=mse(e,s);let o;if(r){const[l,u]=Ef(n[0],n[1]);o=l*u}else{const[l,u]=Pg(n[0],n[1]);o=l*u}const a=pse(t,i);return o*a}function mse(n,e){switch(n){case lr.PACKED_2X2_FLOAT32:return mL(e);case lr.PACKED_2X2_FLOAT16:return gL(e);case lr.UNPACKED_FLOAT32:return dL(e);case lr.UNPACKED_FLOAT16:return fL(e);case lr.PACKED_4X1_UNSIGNED_BYTE:return pL(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function gse(n){return _e().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?lr.PACKED_2X2_FLOAT32:lr.UNPACKED_FLOAT32:n?lr.PACKED_2X2_FLOAT16:lr.UNPACKED_FLOAT16}function dR(n,e){if(n===Ui.UPLOAD)return lr.PACKED_2X2_FLOAT32;if(n===Ui.RENDER||n==null)return gse(e);if(n===Ui.DOWNLOAD||n===Ui.PIXELS)return lr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function fR(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sa{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const co="if (isnan(x)) return x;",yse="return x;",pR="return abs(x);",xse="return (x >= 0.0) ? x : (exp(x) - 1.0);",vse=co+`
  return (x < 0.0) ? 0.0 : x;
`,bse=co+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Gl="return x;",wse="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sse="return x;",_se=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Tse=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ese=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Cse="return 1.0 / (1.0 + exp(-1.0 * x));";class ql{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ise{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length);const t=e.length,s=Or("rc",t),r=Bn(t),i=cse(t,s),o=s.slice(-2),a=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nse=_b,Ase=1e-7,Rse=1e-4,c0={};function kse(n){return n in c0||(c0[n]={}),c0[n]}const Mse=_e().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Dse=600;function $se(){return _e().global.screen==null?1024:_e().global.screen.height*_e().global.screen.width*window.devicePixelRatio*Dse/1024/1024}class Jb extends Lx{nextDataId(){return Jb.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!_e().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof aS)t=e;else{const s=Po(_e().getNumber("WEBGL_VERSION"),e);t=new aS(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Po(_e().getNumber("WEBGL_VERSION"));t=new aS(s),this.binaryCache=kse(_e().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new fse(this.gpgpu),this.numMBBeforeWarning=$se(),this.texData=new RT(this,Fi())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,i,o){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,i]},l.texShape=[r,i];const u=l0(t),h=new cR(u,!1,o),d=this.runWebGLProgram(h,[a],s,[[r,i]]);return d.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),d.dataId}write(e,t,s){if((_e().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||_e().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:Ui.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,i){if(_e().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:Ui.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:i,slice:o,shape:a,isPacked:l}=t;if(o!=null){let p;l?p=new ql(a,Gl):p=new sa(a,Gl);const m=this.runWebGLProgram(p,[{dataId:e,shape:a,dtype:r}],r),g=this.readSync(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let h;u&&(h=Dr());let d;if(r==="complex64"){const p=this.readSync(i.real.dataId),m=this.readSync(i.imag.dataId);d=el(p,m)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Dr()-h),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const g=this.pendingRead.get(e);return new Promise(b=>g.push(b))}const t=this.texData.get(e),{values:s,shape:r,slice:i,dtype:o,complexTensorInfos:a,isPacked:l}=t;if(i!=null){let g;l?g=new ql(r,Gl):g=new sa(r,Gl);const b=this.runWebGLProgram(g,[{dataId:e,shape:r,dtype:o}],o),y=this.read(b.dataId);return this.disposeIntermediateTensorInfo(b),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(_e().getBool("DEBUG")&&!_e().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&_e().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,h;if(o!=="complex64"&&_e().get("WEBGL_BUFFER_SUPPORTED")){h=this.decode(e);const g=this.texData.get(h.dataId);u=this.gpgpu.createBufferFromTexture(g.texture.texture,...i0(r))}this.pendingRead.set(e,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(o==="complex64"){const g=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),b=g[0],y=g[1];d=el(b,y)}else if(u==null)d=this.getValuesFromTexture(e);else{const g=Me(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,g)}if(h!=null&&this.disposeIntermediateTensorInfo(h),u!=null){const g=this.gpgpu.gl;pt(g,()=>g.deleteBuffer(u))}const p=this.convertAndCacheOnCPU(e,d),m=this.pendingRead.get(e);return this.pendingRead.delete(e),m.forEach(g=>g(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Fi().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:i,slice:o,dtype:a,isPacked:l,texture:u}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let m;l?m=new ql(i,Gl):m=new sa(i,Gl);const g=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:a}],a),b=this.readToGPU(g,t);return this.disposeIntermediateTensorInfo(g),b}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const h=this.decode(e,t.customTexShape),d=Fi().makeTensorFromTensorInfo(h),p=this.texData.get(h.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Ya(r));return tn(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return tn(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!Oee(s))throw _e().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),i=Me(t);if(_e().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(e),m=this.texData.get(p.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(m.texture.texture,...i0(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(p),g}const o=_e().getBool("WEBGL_PACK")&&r===!0,a=o?l0(t):t,l=o?new Jte(a):new Qte(a),u=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),h=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture.texture,h.texShape[0],h.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return _e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=da(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=da(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(_e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);a.kernelMs=Kk(l),a.getExtraProfileInfo=()=>l.map((u,h)=>({name:o[h],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return _e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Dr(),endMs:null}}endTimer(e){return _e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Dr(),e)}async getQueryTime(e){if(_e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:i,isPacked:o,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,i,o)));const h=this.texData.get(e);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Mse){return _e().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&Me(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Pi("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Nse(e.shape,t)}packedUnaryOp(e,t,s){const r=new ql(e.shape,t),i=this.compileAndRun(r,[e],s);return Fi().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=xL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(_e().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,pR,e.dtype);const t=new sa(e.shape,pR),s=this.compileAndRun(t,[e]);return Fi().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&na(s[0])){const i=s.map(o=>oa(o));r=this.write(i,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return Fi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new Ise(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new hse(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[dd(e.shape),...fd(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[dd(t),...fd(t)],o=new wL(i,s),a=!0,l=[s],u=this.runWebGLProgram(o,[r],e.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:i,dtype:o}=s;if(t!=null){const p=Me(i),m=t[0]*t[1]*4;z(p<=m,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=l0(i);let l;r?l=new Zte(a):l=new Yte(a);const u=!0,h=[t??i0(a)],d=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:e}],o,h,u,t);return{dtype:o,shape:i,dataId:d.dataId}}runWebGLProgram(e,t,s,r,i=!1,o){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Kp.DENSE){const v=o??i0(e.outputShape);l.texShape=v.map(w=>w*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),Me(a.shape)===0)return l.values=Ys(a.dtype,0),a;const u=[],h=t.map(v=>{if(v.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let w=this.texData.get(v.dataId);if(w.texture==null){if(!e.packedInputs&&Me(v.shape)<=_e().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:v.shape,texData:null,isUniform:!0,uniformValues:w.values};e.packedInputs&&(w.isPacked=!0,w.shape=v.shape)}if(this.uploadToGPU(v.dataId),!!w.isPacked!=!!e.packedInputs)v=w.isPacked?this.unpackTensor(v):this.packTensor(v),u.push(v),w=this.texData.get(v.dataId);else if(w.isPacked&&!Ax(w.shape,v.shape)){const E=v,T=v.shape;v.shape=w.shape,v=this.packedReshape(v,T),u.push(v),w=this.texData.get(v.dataId),E.shape=T}return{shape:v.shape,texData:w,isUniform:!1}});this.uploadToGPU(a.dataId);const d={shape:a.shape,texData:l,isUniform:!1},p=Kte(e,h,d),m=this.getAndSaveBinary(p,()=>Xte(this.gpgpu,e,h,d)),g=this.activeTimers!=null;let b;g&&(b=this.startTimer()),_e().get("ENGINE_COMPILE_ONLY")||qte(this.gpgpu,m,h,d,r),u.forEach(v=>this.disposeIntermediateTensorInfo(v)),g&&(b=this.endTimer(b),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(b)}));const y=_e().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const v=Dr();v-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=v)}if(!_e().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const v=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),v}return a}compileAndRun(e,t,s,r,i=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(_e().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=xe(()=>{if(!_e().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=_e().getBool("DEBUG");_e().set("DEBUG",!1);const t=this.abs(kt(1e-8)).dataSync()[0];if(_e().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Ase:Rse}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:i,texture:o,usage:a,isPacked:l}=t;if(o!=null)return;const u=this.activeTimers!=null;let h;u&&(h=Dr());let d=t.texShape;if(d==null&&(d=tte(s,l),t.texShape=d),i!=null){const p=l0(s);let m,g=d[1],b=d[0];const y=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!y)&&([g,b]=Ef(d[0],d[1])),l?m=new tne(p,y):m=new cR(p,y);const v=y?[b,g]:d,w=this.makeTensorInfo(v,r),E=this.texData.get(w.dataId);y?E.usage=Ui.PIXELS:E.usage=Ui.UPLOAD,E.texShape=v,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),g,b,i);const T=[[b,g]],M=this.runWebGLProgram(m,[w],r,T,!0),$=this.texData.get(M.dataId);t.texShape=$.texShape,t.isPacked=$.isPacked,t.usage=$.usage,_e().get("ENGINE_COMPILE_ONLY")?this.disposeData(M.dataId):(t.texture=$.texture,t.values=null,this.texData.delete(M.dataId)),this.disposeIntermediateTensorInfo(w),u&&(this.uploadWaitMs+=Dr()-h)}else{const p=this.acquireTexture(d,a,r,l);t.texture=p}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=Fse(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Dp(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(i){throw i}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await hC(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(oL(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:i,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:l}=hL(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=i,e.outShapeLocation=o,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:i,width:o,channels:a}=e,l=Fi().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,t,s,i,o,a);return Fi().makeTensorFromDataId(u,t,s,l)}}Jb.nextDataId=0;function Fse(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */zT()&&WT("webgl",()=>new Jb,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mI=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Fc{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Yt(t,s),this.enableShapeUniforms=_r(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yc=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Rf{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Yt(t,s);const i=this.outputShape.length;this.enableShapeUniforms=_r(i);let o="";if(r)if(i===0||Me(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${Bn(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=Or("coords",i);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ti(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Pse={kernelName:Bd,backendName:"webgl",kernelFunc:Ti};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tu(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.makeTensorInfo(s.shape,"complex64"),o=t.texData.get(i.dataId),a=Ti({inputs:{x:s},backend:t}),l=Ti({inputs:{x:r},backend:t});return o.complexTensorInfos={real:a,imag:l},i}const Ose={kernelName:Xx,backendName:"webgl",kernelFunc:Tu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL="return (a < 0.) ? b * a : a;",_L=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Lse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s,o=t.makeTensorInfo([],"float32",rl(i,"float32")),a=_e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rf(_L,r.shape,o.shape):new Fc(SL,r.shape,o.shape),l=t.runWebGLProgram(a,[r,o],"float32");return t.disposeIntermediateTensorInfo(o),l}const Use={kernelName:_m,backendName:"webgl",kernelFunc:Lse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TL="return (a < 0.) ? b * a : a;",EL=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function zse(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,i=_e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rf(EL,s.shape,r.shape):new Fc(TL,s.shape,r.shape);return t.runWebGLProgram(i,[s,r],"float32")}const Bse={kernelName:Vm,backendName:"webgl",kernelFunc:zse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kf="if (isnan(x)) return x;";function Tn({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:i})=>{const{x:o}=r,a=i,l=s||o.dtype;if(a.shouldExecuteOnCPU([o])&&t!=null){const d=a.texData.get(o.dataId),p=t(d.values,l);return a.makeTensorInfo(o.shape,l,p)}const u=_e().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let h;return u?h=new ql(o.shape,e):h=new sa(o.shape,n),a.runWebGLProgram(h,[o],l)}}function mr({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:o,backend:a})=>{const{a:l,b:u}=o,h=a;if(s&&l.dtype==="complex64"){const g=h.texData.get(l.dataId),b=h.texData.get(u.dataId),[y,v]=[[g.complexTensorInfos.real,b.complexTensorInfos.real],[g.complexTensorInfos.imag,b.complexTensorInfos.imag]].map(E=>{const[T,I]=E,M={dataId:T.dataId,dtype:T.dtype,shape:l.shape},$={dataId:I.dataId,dtype:I.dtype,shape:u.shape},O=new Fc(n,l.shape,u.shape);return h.runWebGLProgram(O,[M,$],Qr(T.dtype,I.dtype))}),w=Tu({inputs:{real:y,imag:v},backend:h});return h.disposeIntermediateTensorInfo(y),h.disposeIntermediateTensorInfo(v),w}const d=i||Qr(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||h.shouldExecuteOnCPU([l,u]))&&r!=null){const g=h.texData.get(l.dataId).values,b=h.texData.get(u.dataId).values,y=l.dtype==="string"?tl(g):g,v=l.dtype==="string"?tl(b):b,[w,E]=r(l.shape,u.shape,y,v,d),T=h.makeTensorInfo(E,d),I=h.texData.get(T.dataId);return I.values=w,T}const p=_e().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let m;return p?m=new Rf(e,l.shape,u.shape,t):m=new Fc(n,l.shape,u.shape),h.runWebGLProgram(m,[l,u],d)}}function Yp(n,e=!1){if(n==="linear")return e?Sse:yse;if(n==="relu")return e?Tse:vse;if(n==="elu")return e?_se:xse;if(n==="relu6")return e?Ese:bse;if(n==="prelu")return e?EL:TL;if(n==="leakyrelu")return e?_L:SL;if(n==="sigmoid")return e?Cse:wse;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CL{constructor(e,t,s,r=!1,i=!1,o=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=_r(this.outputShape.length);const h=r?e[1]:e[2],d=Math.ceil(h/2),p=r?"i * 2, rc.y":"rc.y, i * 2",m=i?"rc.z, i * 2":"i * 2, rc.z",g=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],b=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",v="";a&&(l?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:y=`vec4 activation(vec4 x) {
          ${a}
        }`,v="result = activation(result);");const w=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let E="rc.x",T="rc.x";e[0]<t[0]?E=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(T=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${E};
        int batchB = ${T};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${m});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${g[0]} * ${b[0]});
          result += (${g[1]} * ${b[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${w}

        ${v}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class gR{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Yt(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yR="return a * b;";function gI(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,i=Qr(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),u=new gR(mR.REAL,s.shape,r.shape),h=new gR(mR.IMAG,s.shape,r.shape),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],p=t.runWebGLProgram(u,d,"float32"),m=t.runWebGLProgram(h,d,"float32"),g=Tu({inputs:{real:p,imag:m},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}if(t.shouldExecuteOnCPU([s,r])){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),[u,h]=zne(s.shape,r.shape,a.values,l.values,i),d=t.makeTensorInfo(h,i),p=t.texData.get(d.dataId);return p.values=u,d}let o;return _e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Rf(yR,s.shape,r.shape):o=new Fc(yR,s.shape,r.shape),t.runWebGLProgram(o,[s,r],i)}const Vse={kernelName:Yd,backendName:"webgl",kernelFunc:gI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wse(n,e,t){const s=[dd(n.shape),...fd(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},i=[dd(e),...fd(e)],o=new wL(i,s),a=!0,l=[s],u=t.runWebGLProgram(o,[r],n.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ot(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:i}=s,o=t,a=Me(r.shape),l=MT(i,a),u=Me(l);z(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const h=o.texData.get(r.dataId);return h.isPacked&&!Ax(r.shape,l)&&!(h.texture!==null&&Ax(h.shape,l))?Wse(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const Gse={kernelName:Gm,backendName:"webgl",kernelFunc:ot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xR{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=e;this.outputShape=[r,o];const a=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const d=1/t;u=`sumValue += dot(values * ${Sc(d)?d.toPrecision(2):d}, ones);`}let h="";i%s>0&&(h=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hse{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=e;this.outputShape=[r,o];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const h=Math.floor(s/4)*4,d=s%4;let p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,m="vec4";t==="all"?(a="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,m="bvec4"):t==="any"&&(a="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,m="bvec4");let g="";i%s>0&&(g=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${g}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===2}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===3}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jse(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=Ob(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Zc(n,e,t,s){const r=jse(n.shape);let i=n;for(let o=0;o<r.length;o++){const{inSize:a,windowSize:l,outSize:u}=r[o];let h,d;t==="mean"?h=o===0?new xR({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},a):new xR({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u}):h=new Hse({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},t),d=i,i=s.runWebGLProgram(h,[i],e),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xse{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[t[o]];this.outputShape=s,this.rank=s.length;const r=Bn(this.rank),i=qse(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function qse(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kse{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let h=0;h<s.length;h++)s[h]=e[t[h]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Bn(this.rank),i=bL("rc",this.rank),o=new Array(this.rank);for(let h=0;h<t.length;h++)o[t[h]]=i[h];const a=`vec2(${o.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ew(n,e,t){const s=_e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kse(n.shape,e):new Xse(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yse(n,e,t,s){const r=e,i=n.shape.length,o=an(r,n.shape);let a=o;const l=ls(a,i),u=l!=null;let h=n;u&&(h=ew(n,l,s),a=bs(a.length,i)),fr("sum",a,i);const[d,p]=tr(h.shape,a);let m=d;t&&(m=vs(d,o));const g=Me(p),y=Me(n.shape)/g,v=ot({inputs:{x:h},attrs:{shape:[y,g]},backend:s}),w=Xv(n.dtype),E=Zc(v,w,"sum",s),T=ot({inputs:{x:E},attrs:{shape:m},backend:s});return s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(E),u&&s.disposeIntermediateTensorInfo(h),T}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tw(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;return Yse(r,i,o,t)}const Zse={kernelName:Ym,backendName:"webgl",kernelFunc:tw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:i}=s,o=t,a=r.shape.length,l=new Array(a);for(let h=0;h<l.length;h++)l[h]=r.shape[i[h]];let u;if(o.shouldExecuteOnCPU([r])){const d=o.texData.get(r.dataId).values,p=pI(d,r.shape,r.dtype,i,l);u=o.makeTensorInfo(l,r.dtype);const m=o.texData.get(u.dataId);m.values=p}else u=ew(r,i,o);return u}const Qse={kernelName:gc,backendName:"webgl",kernelFunc:Br};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IL=1e3;function Rx({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,h=e.shape.length,d=t?n.shape[u-2]:n.shape[u-1],p=s?e.shape[h-1]:e.shape[h-2],m=t?n.shape[u-1]:n.shape[u-2],g=s?e.shape[h-2]:e.shape[h-1],b=n.shape.slice(0,-2),y=e.shape.slice(0,-2),v=Me(b),w=Me(y),T=Yt(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([m,g]);z(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const I=t?[v,d,m]:[v,m,d],M=s?[w,g,p]:[w,p,g],$=ot({inputs:{x:n},backend:r,attrs:{shape:I}}),O=ot({inputs:{x:e},backend:r,attrs:{shape:M}}),k=[$,O],N=Math.max(v,w),A=t?$.shape[1]:$.shape[2],B=i!=null,W=o!=null,K=l==="leakyrelu",q=l!=null?Yp(l,!0):null,Y=B||W||K||q!=null;let J;if((m===1||g===1)&&A>IL&&Y===!1){let ee=$,te=O;t&&(ee=Br({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),k.push(ee)),s&&(te=Br({inputs:{x:O},backend:r,attrs:{perm:[0,2,1]}}),k.push(te));const j=g!==1,se=g===1;let be=ee;j&&(be=ot({inputs:{x:ee},backend:r,attrs:{shape:[N,A,1]}}),k.push(be));const ae=g===1?2:1;let de=te;se&&(de=ot({inputs:{x:te},backend:r,attrs:{shape:[N,1,A]}}),k.push(de));const Se=gI({inputs:{a:be,b:de},backend:r});J=tw({inputs:{x:Se},backend:r,attrs:{axis:ae,keepDims:!0}}),k.push(Se)}else{const ee=Qr(n.dtype,e.dtype),te=new CL(I,M,[N,m,g],t,s,B,q,W,K),j=[$,O];if(i!=null&&j.push(i),W&&j.push(o),K){const se=r.makeTensorInfo([],"float32",rl(a,"float32"));j.push(se),k.push(se)}J=r.runWebGLProgram(te,j,ee)}const G=ot({inputs:{x:J},backend:r,attrs:{shape:T}});k.push(J);for(const ee of k)r.disposeIntermediateTensorInfo(ee);return G}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jse(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:d}=s;return Rx({a:r,b:i,transposeA:l,transposeB:u,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:d,activation:h})}const ere={kernelName:$p,backendName:"webgl",kernelFunc:Jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR="return abs(x);";function tre(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=t.texData.get(s.dataId),o=xL(i.values);return t.makeTensorInfo(s.shape,s.dtype,o)}let r;return _e().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new ql(s.shape,vR):r=new sa(s.shape,vR),t.runWebGLProgram(r,[s],s.dtype)}const nre={kernelName:tm,backendName:"webgl",kernelFunc:tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sre=co+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,rre=Tn({opSnippet:sre}),ire={kernelName:wd,backendName:"webgl",kernelFunc:rre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ore=co+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,are=Tn({opSnippet:ore}),lre={kernelName:Sd,backendName:"webgl",kernelFunc:are};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR="return a + b;",ure=mr({opSnippet:bR,packedOpSnippet:bR,supportsComplex:!0,cpuKernelImpl:vne}),cre={kernelName:Bc,backendName:"webgl",kernelFunc:ure};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hre{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dre{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q0(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Ti({inputs:{x:s[0]},backend:t});if(s.length>_e().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=Q0({inputs:s.slice(0,l),backend:t}),h=Q0({inputs:s.slice(l),backend:t});return Q0({inputs:[u,h],backend:t})}const r=s.map(l=>l.dtype).reduce((l,u)=>Qr(l,u)),i=s.map(l=>l.shape),a=_e().getBool("WEBGL_PACK")?new dre(s[0].shape,i):new hre(s[0].shape,i);return t.runWebGLProgram(a,s,r)}const fre={kernelName:nm,backendName:"webgl",kernelFunc:Q0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=r.shape.length,l=an(i,r.shape);let u=l;const h=ls(u,a);let d=r;h!=null&&(d=Br({inputs:{x:r},backend:t,attrs:{perm:h}}),u=bs(u.length,a)),fr("all",u,a);const[p,m]=tr(d.shape,u),g=Me(m),b=ot({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),y=Zc(b,b.dtype,"all",t);let v;if(o){const w=vs(p,l);v=ot({inputs:{x:y},backend:t,attrs:{shape:w}})}else v=ot({inputs:{x:y},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(y),h!=null&&t.disposeIntermediateTensorInfo(d),v}const mre={kernelName:Bx,backendName:"webgl",kernelFunc:pre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=r.shape.length,l=an(i,r.shape);let u=l;const h=ls(u,a);let d=r;h!=null&&(d=Br({inputs:{x:r},backend:t,attrs:{perm:h}}),u=bs(u.length,a)),fr("any",u,a);const[p,m]=tr(d.shape,u),g=Me(m),b=ot({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),y=Zc(b,b.dtype,"any",t);let v;if(o){const w=vs(p,l);v=ot({inputs:{x:y},backend:t,attrs:{shape:w}})}else v=ot({inputs:{x:y},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(y),h!=null&&t.disposeIntermediateTensorInfo(d),v}const yre={kernelName:Vx,backendName:"webgl",kernelFunc:gre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xre{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:o}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,o];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vre{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,z(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],o=Math.ceil(i/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,u=Bn(l),h=Or("coords",l);let d,p;if(o===1){p=l+1;const O=Bn(p);d=`
        ${O} sourceLocR = ${O}(${h.join()}, 0);
        ++${h[l-1]};
        ${O} sourceLocG = ${O}(${h.join()}, 0);
        ++${h[l-2]};
        ${O} sourceLocA = ${O}(${h.join()}, 0);
        --${h[l-1]};
        ${O} sourceLocB = ${O}(${h.join()}, 0);
        --${h[l-2]};`}else p=l,d=`
        ${u} sourceLocR = coords;
        ++${h[l-1]};
        ${u} sourceLocG = coords;
        ++${h[l-2]};
        ${u} sourceLocA = coords;
        --${h[l-1]};
        ${u} sourceLocB = coords;
        --${h[l-2]};`;const m=["x","y","z","w","u","v"].slice(0,p),g="."+m[p-1],b=m.map(O=>"int "+O),y=Or("sourceLocR",p-1).concat("inIdx.r"),v=Or("sourceLocG",p-1).concat("inIdx.g"),w=Or("sourceLocB",p-1).concat("inIdx.b"),E=Or("sourceLocA",p-1).concat("inIdx.a"),T=s==="max"?"greaterThan":"lessThan",I=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${E.join()})));`,M=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${v.join()}) : 0.,
            hasNextRow ? getAChannel(${w.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${E.join()}) : 0.)`,$=r?"":`
      float getBestIndicesAChannel(${b.join()}) {
        return getChannel(getBestIndicesA(${m.join()}),
                                          vec2(${m.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${b.join()}) {
        return getChannel(getA(${m.join()}),
                               vec2(${m.slice(-2).join()}));
      }
      ${$}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${h[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${h[l-2]} < ${a[l-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${g}, sourceLocG${g},
          sourceLocB${g}, sourceLocA${g}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${M};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${M};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${T}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(n,e,t,s=null){let r=e.shape[0],i=e.shape[1];s!=null&&(r=s.shape[0],i=s.shape[1]);const o=Ob(i),a={windowSize:o,inSize:i,batchSize:r,outSize:Math.ceil(i/o)},l=new xre(a,t,s==null),u=[e];s!=null&&u.push(s);const h=n.runWebGLProgram(l,u,"int32");if(h.shape[1]===1)return h;const d=NL(n,e,t,h);return n.disposeIntermediateTensorInfo(h),d}function AL(n,e,t,s=null){const r=s!=null?s.shape:e.shape,i=r[r.length-1],o=Ob(i),a=new vre(r,o,t,s==null),l=s==null?[e]:[e,s],u=n.runWebGLProgram(a,l,"int32");if(u.shape.length===e.shape.length){const h=AL(n,e,t,u);return n.disposeIntermediateTensorInfo(u),h}return u}function RL(n,e,t,s){const r=[t];if(fr("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!_e().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],o=n.texData.get(e.dataId),a=o!==null&&o.isPacked;let l=e;a&&(l=n.unpackTensor(e),i.push(l));const[u,h]=tr(l.shape,r),d=Me(h),p=ot({inputs:{x:l},backend:n,attrs:{shape:[-1,d]}});i.push(p);const m=NL(n,p,s);i.push(m);const g=ot({inputs:{x:m},backend:n,attrs:{shape:u}});return i.forEach(b=>n.disposeIntermediateTensorInfo(b)),g}return AL(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let o=an(i,r.shape);const a=ls(o,r.shape.length);let l=r;const u=[];a!=null&&(l=Br({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),o=bs(o.length,l.shape.length)),fr("argMax",[o[0]],l.shape.length);const h=RL(t,l,o[0],"max");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),h}const wre={kernelName:sm,backendName:"webgl",kernelFunc:bre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let o=an(i,r.shape);const a=ls(o,r.shape.length);let l=r;const u=[];a!=null&&(l=Br({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),o=bs(o.length,l.shape.length)),fr("argMin",[o[0]],l.shape.length);const h=RL(t,l,o[0],"min");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),h}const _re={kernelName:rm,backendName:"webgl",kernelFunc:Sre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tre=co+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Ere=Tn({opSnippet:Tre}),Cre={kernelName:_d,backendName:"webgl",kernelFunc:Ere};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ire=co+"return log(x + sqrt(x * x + 1.0));",Nre=Tn({opSnippet:Ire}),Are={kernelName:Td,backendName:"webgl",kernelFunc:Nre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rre=co+`
  return atan(x);
`,kre=Tn({opSnippet:Rre}),Mre={kernelName:Ed,backendName:"webgl",kernelFunc:kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dre=mI+`
  return atan(a, b);
`,$re=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yc+`
  return result;
`,Fre=mr({opSnippet:Dre,packedOpSnippet:$re}),Pre={kernelName:Id,backendName:"webgl",kernelFunc:Fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ore=co+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Lre=Tn({opSnippet:Ore}),Ure={kernelName:Cd,backendName:"webgl",kernelFunc:Lre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zp{constructor(e,t,s,r=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const b=t==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,v=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let w="0.0";if(b||(w="-1.0 / 1e-20"),s){const O=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${m}, ${g});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${h}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${O} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?i?y:v:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const E="max";let T=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(T="avgValue / max(count, 1.0)");const I=Math.floor(o/4)*4,M=o%4,$=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${E}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${m}, ${g});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${h};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              getValue(batch, xR, xC + 3 * ${h}, d)
            );

            ${$}
          }

          int xC = xCCorner + ${I};
          if (${M===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${M===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${M===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              initializationValue
            );

            ${$}
          }
        }
        setOutput(${T});
      }
    `}}class yI{constructor(e,t,s,r=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideDepth,l=e.strideHeight,u=e.strideWidth,h=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,m=e.effectiveFilterDepth,g=e.effectiveFilterHeight,b=e.effectiveFilterWidth,y=e.padInfo.front,v=e.padInfo.top,w=e.padInfo.left;this.outputShape=e.outShape;const E=t==="avg";let T="0.0";if(E||(T="-1.0 / 1e-20"),s){const N=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${y}, ${v}, ${w});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${m};
              wD += ${h}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${g};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${b};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${N} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${g} * ${b} +
                      wR * ${b} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let M=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(M="avgValue / max(count, 1.0)");const $=Math.floor(o/4)*4,O=o%4,k=`
      if (${E}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${y}, ${v}, ${w});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${h}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${g};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${$}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${k}
            }

            int xC = xCCorner + ${$};
            if (${O===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${O===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${O===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${k}
            }
          }
        }
        setOutput(${M});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Og(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,u=1;z(dr(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=lo(r.shape,i,o,u,a,l);if(h.filterWidth===1&&h.filterHeight===1&&dn(h.inShape,h.outShape))return Ti({inputs:{x:r},backend:t});const d=new Zp(h,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const Bre={kernelName:im,backendName:"webgl",kernelFunc:zre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:u}=s,h=[1,1,1],d=il(r.shape,i,o,h,a,l,u),p=new yI(d,"avg",!1);return t.runWebGLProgram(p,[r],"float32")}const Wre={kernelName:om,backendName:"webgl",kernelFunc:Vre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gre{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,o=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${h}, ${d});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Hre{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=d-1-e.padInfo.front,b=p-1-e.padInfo.top,y=m-1-e.padInfo.left,v=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${g}, ${b}, ${y});
      const float avgMultiplier = float(${v});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${h}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:h}=s,d=[1,1,1],p=il(o.shape,a,l,d,u,h),m=new Hre(p);return t.runWebGLProgram(m,[r],o.dtype)}const Xre={kernelName:Gx,backendName:"webgl",kernelFunc:jre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i;Og([r,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,h=lo(o.shape,a,l,1,u),d=new Gre(h);return t.runWebGLProgram(d,[r],o.dtype)}const Kre={kernelName:Wx,backendName:"webgl",kernelFunc:qre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yre(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:o,transposeB:a}=s;return Rx({a:r,b:i,transposeA:o,transposeB:a,backend:t})}const Zre={kernelName:am,backendName:"webgl",kernelFunc:Yre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qre{constructor(e,t,s,r,i,o){this.outputShape=[],this.variableNames=["x","mean","variance"],Yt(e,t),Yt(e,s);let a="0.0";r!=null&&(Yt(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&(Yt(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jre{constructor(e,t,s,r,i,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Yt(e,t),Yt(e,s);let a="vec4(0.0)";r!=null&&(Yt(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(Yt(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eie=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:i,offset:o,scale:a}=n;z(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[s,r,i];let h=null;o!=null&&(h=o.shape,u.push(o));let d=null;a!=null&&(d=a.shape,u.push(a));const p=_e().getBool("WEBGL_PACK_NORMALIZATION")?new Jre(s.shape,r.shape,i.shape,h,d,l):new Qre(s.shape,r.shape,i.shape,h,d,l);return e.runWebGLProgram(p,u,u[0].dtype)},tie={kernelName:bm,backendName:"webgl",kernelFunc:eie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nie{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Bn(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=sie(this.rank);let r;const i=e.map((o,a)=>`sourceLoc.${O_[a]} = start[${a}] + coords.${O_[a]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const O_=["x","y","z","w","u","v"];function sie(n){if(n===1)return"sourceLoc";if(n<=6)return O_.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rie{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Bn(this.rank),s=Or("coords",this.rank),r=Or("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${i})`,a=`
      result.x = ${o};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${o};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${o};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${o};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((h,d)=>`start[${d}]`).join()});`:e.map((h,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iie(n,e,t,s){const r=s.texData.get(n.dataId),i=s.makeTensorInfo(t,n.dtype),o=s.texData.get(i.dataId);Object.assign(o,r),o.refCount=1,o.shape=t,o.dtype=n.dtype;let a=uC(e,Lt(n.shape));r.slice&&(a+=r.slice.flatOffset),o.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),i}function Mf(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:o}=s,[a,l]=Pb(r,i,o);if(oC(r,a,l),Me(l)===0)return t.makeTensorInfo(l,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=t.texData.get(r.dataId),p=Zne(d.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,p)}const{isPacked:u}=t.texData.get(r.dataId),h=lC(r.shape,a,l);if(u||!h){const d=_e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rie(l):new nie(l),p=[a];return t.runWebGLProgram(d,[r],r.dtype,p)}return t.uploadToGPU(r.dataId),iie(r,a,l,t)}const oie={kernelName:Km,backendName:"webgl",kernelFunc:Mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aie=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:o}=s;z(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((w,E)=>w*E),l=Tg(r.shape,i,a),u=Eg(l.length,i.length),h=Cg(r.shape,i,a),d=mC(o,i.length),p=gC(h,o,i.length),m=[],g=ot({inputs:{x:r},backend:t,attrs:{shape:l}}),b=Br({inputs:{x:g},backend:t,attrs:{perm:u}}),y=ot({inputs:{x:b},backend:t,attrs:{shape:h}}),v=Mf({inputs:{x:y},backend:t,attrs:{begin:d,size:p}});return m.push(g),m.push(b),m.push(y),m.forEach(w=>t.disposeIntermediateTensorInfo(w)),v},lie={kernelName:lm,backendName:"webgl",kernelFunc:aie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o}=s,a=t.readSync(r.dataId),l=t.readSync(i.dataId),u=yL(a,l,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,u)}const cie={kernelName:Hx,backendName:"webgl",kernelFunc:uie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hie=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,die=`
  return float(int(a.r) & int(b.r));
`;function fie(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,i=_e().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=_e().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||o===1){const l=t.texData.get(s.dataId).values,u=t.texData.get(r.dataId).values,[h,d]=wne(s.shape,r.shape,l,u,s.dtype),p=t.makeTensorInfo(d,s.dtype),m=t.texData.get(p.dataId);return m.values=h,p}let a;return i?a=new Rf(hie,s.shape,r.shape,!1):a=new Fc(die,s.shape,r.shape),t.runWebGLProgram(a,[s,r],s.dtype)}const pie={kernelName:um,backendName:"webgl",kernelFunc:fie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mie(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,i=t.readSync(s.dataId),o=t.readSync(r.dataId),a=Yt(Array.from(i),Array.from(o));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const gie={kernelName:jx,backendName:"webgl",kernelFunc:mie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yie="return float(a != b);",kL=mr({opSnippet:yie,cpuKernelImpl:Vne,dtype:"bool"}),xie={kernelName:Om,backendName:"webgl",kernelFunc:kL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ug(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Ti({inputs:{x:r.complexTensorInfos.real},backend:t})}const vie={kernelName:Cv,backendName:"webgl",kernelFunc:Ug};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bie="return float(int(x));";function wie(n,e){const t=new sa(n.shape,bie),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Ti({inputs:{x:r},backend:t});const o=Cs(r.shape),a=L_({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=Tu({inputs:{real:a,imag:o},backend:t});return o.dispose(),t.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const o=Ug({inputs:{input:r},backend:t}),a=L_({inputs:{x:o},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(o),a}if(!DT(r.dtype,i)){const o=Ti({inputs:{x:r},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId).values,[a,l,u]=Sne(o,r.shape,r.dtype,i);return t.makeTensorInfo(a,l,u)}if(i==="int32")return wie(r,t);if(i==="bool"){const o=t.makeTensorInfo([],"bool",Ys("bool",1)),l=kL({inputs:{a:r,b:o},backend:t});return t.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const Sie={kernelName:Nd,backendName:"webgl",kernelFunc:L_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wR="return ceil(x);",_ie=Tn({opSnippet:wR,packedOpSnippet:wR,cpuKernelImpl:_ne}),Tie={kernelName:Ad,backendName:"webgl",kernelFunc:_ie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eie{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cie{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:i,clipValueMax:o}=s;let a;_e().getBool("WEBGL_PACK_CLIP")?a=new Cie(r.shape):a=new Eie(r.shape);const l=[[i],[o]];return t.runWebGLProgram(a,[r],r.dtype,l)}const Nie={kernelName:Rd,backendName:"webgl",kernelFunc:Iie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aie{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Rie(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),i=new Aie(s.shape),o=[SR(s,r.complexTensorInfos.real),SR(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(i,o,o[0].dtype)}const kie={kernelName:cm,backendName:"webgl",kernelFunc:Rie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mie{constructor(e){this.outputShape=[],this.outputShape=la(e,1),this.variableNames=e.map((o,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const a=t[o-1];s.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const r=t.length,i=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Die{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=la(e,t);const s=this.outputShape,r=s.length,i=Bn(r),o=Or("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((b,y)=>`T${y}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let b=1;b<l.length;b++)l[b]=l[b-1]+e[b][t];const u=a[t],h=a.slice(-2),d=a.join();let p=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${d}), vec2(${h.join()}));
        }`;for(let b=1;b<l.length;b++){const y=l[b-1];p+=`
        if (${u} < ${l[b]}  && ${u} >= ${l[b-1]}) {
          return getChannel(
            getT${b}(${h0(a,u,y)}),
            vec2(${h0(h,u,y)}));
        }`}const m=l.length,g=l[l.length-1];p+=`
        return getChannel(
          getT${m}(${h0(a,u,g)}),
          vec2(${h0(h,u,g)}));`,this.userCode=`
      float getValue(${a.map(b=>"int "+b)}) {
        ${p}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[r-1]} = ${o[r-1]} + 1;
        if (${o[r-1]} < ${s[r-1]}) {
          result.g = getValue(${o});
        }

        ${o[r-2]} = ${o[r-2]} + 1;
        if (${o[r-2]} < ${s[r-2]}) {
          result.a = getValue(${o});
        }

        ${o[r-1]} = ${o[r-1]} - 1;
        if (${o[r-2]} < ${s[r-2]} &&
            ${o[r-1]} < ${s[r-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function h0(n,e,t){const s=n.indexOf(e);return n.map((i,o)=>o===s?`${i} - ${t}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nw(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Ti({inputs:{x:r.complexTensorInfos.imag},backend:t})}const $ie={kernelName:dv,backendName:"webgl",kernelFunc:nw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Np(n,e,t){const s=n[0].dtype;if(s==="complex64"){const m=n.map(w=>Ug({inputs:{input:w},backend:t})),g=n.map(w=>nw({inputs:{input:w},backend:t})),b=Np(m,e,t),y=Np(g,e,t),v=Tu({inputs:{real:b,imag:y},backend:t});return m.forEach(w=>t.disposeIntermediateTensorInfo(w)),g.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(y),v}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const m=n.map(T=>{const M=[-1,Me(T.shape.slice(e))];return ot({inputs:{x:T},backend:t,attrs:{shape:M}})}),g=m.map(T=>({vals:t.readSync(T.dataId),shape:T.shape})),b=la(m.map(T=>T.shape),1),y=m[0].shape[0]===1,v=Tne(g,b,s,y),w=la(n.map(T=>T.shape),e),E=t.makeTensorInfo(w,s,v);return m.forEach(T=>t.disposeIntermediateTensorInfo(T)),E}const i=n.filter(m=>Me(m.shape)>0),o=_e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const m=o?new sa(n[0].shape,Gl):new ql(n[0].shape,Gl);return t.runWebGLProgram(m,n,s)}const a=_e().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){const m=[];for(let b=0;b<i.length;b+=a){const y=i.slice(b,b+a);m.push(Np(y,e,t))}const g=Np(m,e,t);for(const b of m)t.disposeIntermediateTensorInfo(b);return g}if(o){const m=new Die(i.map(g=>g.shape),e);return t.runWebGLProgram(m,i,s)}const{tensors2D:l,outShape:u}=Fie(i,e,t),h=new Mie(l.map(m=>m.shape)),d=t.runWebGLProgram(h,l,s);l.forEach(m=>t.disposeIntermediateTensorInfo(m));const p=ot({inputs:{x:d},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(d),p}function Fie(n,e,t){const s=la(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>ot({inputs:{x:i},attrs:{shape:[-1,Me(i.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=an(r,e[0].shape)[0],o=e.map(u=>u.shape);dC(o,i);const a=la(e.map(u=>u.shape),i);if(Me(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>Me(u.shape)>0);return l.length===1?Ti({inputs:{x:l[0]},backend:t}):Np(l,i,t)}const Pie={kernelName:hm,backendName:"webgl",kernelFunc:ML};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DL{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,m=e.filterWidth,g=Math.floor(e.inChannels/4)*4,b=e.inChannels%4,y=e.dataFormat==="channelsLast",v=y?1:2,w=y?2:3,E=y?3:1;let T="",I="";s&&(r?T=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?T=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:T=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const M=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${T}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${E}];

        ivec2 xRCCorner =
            ivec2(coords[${v}], coords[${w}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${h};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${g}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${b===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${g}) *
                    getW(wR, wC, ${g}, d2);
              } else {
                dotProd +=
                    getX(batch, ${g}, xR, xC) *
                    getW(wR, wC, ${g}, d2);
              }

            } else if (${b===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${g}, d2),
                getW(wR, wC, ${g} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${g}),
                  getX(batch, xR, xC, ${g} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${g}, xR, xC),
                  getX(batch, ${g} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${b===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${g}, d2),
                getW(wR, wC, ${g} + 1, d2),
                getW(wR, wC, ${g} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${g}),
                  getX(batch, xR, xC, ${g} + 1),
                  getX(batch, xR, xC, ${g} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${g}, xR, xC),
                  getX(batch, ${g} + 1, xR, xC),
                  getX(batch, ${g} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${M}
        ${I}
        setOutput(result);
      }
    `}}class Oie{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterDepth,p=e.filterHeight,m=e.filterWidth,g=Math.floor(e.inChannels/4)*4,b=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${o}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m}; wC++) {
              int xC = xCCorner + wC * ${h};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${g}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${b===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${g}) *
                  getW(wF, wR, wC, ${g}, d2);
              } else if (${b===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${g}),
                  getX(batch, xF, xR, xC, ${g} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${g}, d2),
                  getW(wF, wR, wC, ${g} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${b===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${g}),
                  getX(batch, xF, xR, xC, ${g} + 1),
                  getX(batch, xF, xR, xC, ${g} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${g}, d2),
                  getW(wF, wR, wC, ${g} + 1, d2),
                  getW(wF, wR, wC, ${g} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $L{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_r(this.outputShape.length);const o=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let p=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<h;y++)p+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;p+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<h;y++)p+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;p+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(d+1)/2;y++){const v=y*2;if(p+=`
           xC = xCCorner + ${v*l};
           `,a===1){if(v<h&&(o%2===1?(p+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }
               `,l===1&&v>0?p+=`
                 xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                 `:p+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                   } else {
                     xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                   }
                   `):p+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 xC${v} = xTexelC${v};
                 `,v+1<h)){const w=o%2===0?Ux(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(p+=`
                   xCOffset = xC + imod(pads[1], 2) + ${w};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                     xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${v+1}.zw = vec2(0.0);
                     }
                     xTexelC${v+1}Ready = 1;
                   }
                   `,l>1?p+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                     } else {
                      xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                     }
                     `:p+=`
                     xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                     `):w===1?p+=`
                     xC${v+1} = xTexelC${v};
                     `:p+=`
                     xCOffset = xC + ${w};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                       xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${v+1}.zw = vec2(0.0);
                       }
                       xTexelC${v+1}Ready = 1;
                     }

                     xC${v+1} = xTexelC${v+1};
                     `}}else v<h&&(o%2===1?(p+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                   xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${v+1}.zw = vec2(0.0);
                   }
                   xTexelC${v+1}Ready = 1;
                 }

                 xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
               `,v+1<h&&(p+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                 `)):(p+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                   xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v+1}.zw = vec2(0.);
                   }
                   xTexelC${v+1}Ready = 1;
                 }

                 xC${v} = vec4(
                   xTexelC${v}.xy, xTexelC${v+1}.xy);
               `,v+1<h&&(p+=`
                   xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                 `)));v<h&&(p+=`
             wTexel = getW(r, ${v}, d1, d2);
             dotProd += xC${v}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${v}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,v+1<h&&(p+=`
               wTexel = getW(r, ${v+1}, d1, d2);
               dotProd += xC${v+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${v+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}p+=`
     }
   `,p+=`
     }
   `,p+=`
     }
   `;let m="",g="";s&&(r?m=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?m=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:m=`vec4 activation(vec4 x) {
           ${s}
         }`,g="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${m}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${p}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${b}
         ${g}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lie{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=_r(this.outputShape.length);const{dataFormat:s}=t,r=Gr(),i=s==="channelsLast",o=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let h=0;h<=1;h++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${h};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${h*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${h*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kx(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function FL({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const l=n.shape,u=s.texData.get(n.dataId),h=t.inChannels,d=l[0]*l[1]*l[2],p=t.outChannels,m=t.dataFormat==="channelsLast",g=!1,b=!1;let y;const v=[];if(i!=null){const T=kx(i.shape,m);T!=null&&(i=ot({inputs:{x:i},backend:s,attrs:{shape:T}}),v.push(i))}if(r!=null){const T=kx(r.shape,m);T!=null&&(r=ot({inputs:{x:r},backend:s,attrs:{shape:T}}),v.push(r))}if(!((d===1||p===1)&&h>IL)&&u.isPacked&&m&&u.texture!=null&&l[2]%2!==0&&dn(u.shape.slice(-3),l.slice(-3))){const T=l[0]*l[1]*(l[2]+1),I={dataId:n.dataId,shape:[1,T,t.inChannels],dtype:n.dtype},M=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,z(Ax(u.shape,I.shape),()=>`packed reshape ${u.shape} to ${I.shape} isn't free`);const $=ot({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});v.push($);const O=Rx({a:I,b:$,backend:s,transposeA:g,transposeB:b,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),k=s.texData.get(O.dataId);z(k.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=M,k.shape=t.outShape,y=Ti({inputs:{x:O},backend:s}),y.shape=t.outShape,v.push(O)}else{const T=t.outHeight*t.outWidth,I=ot({inputs:{x:n},backend:s,attrs:{shape:m?[t.batchSize,T,t.inChannels]:[t.batchSize,t.inChannels,T]}}),M=ot({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),$=Rx({a:m?I:M,b:m?M:I,transposeA:!m,transposeB:b,backend:s,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o});y=ot({inputs:{x:$},backend:s,attrs:{shape:t.outShape}}),v.push(I),v.push(M),v.push($)}for(const T of v)s.disposeIntermediateTensorInfo(T);return y}function PL({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:m}=t,g=m==="channelsLast",b=l*u*h,y=p*d,v=[t.batchSize,b,y],w=!0,E=!1,T=[];if(i!=null){const G=kx(i.shape,g);G!=null&&(i=ot({inputs:{x:i},backend:s,attrs:{shape:G}}),T.push(i))}if(r!=null){const G=kx(r.shape,g);G!=null&&(r=ot({inputs:{x:r},backend:s,attrs:{shape:G}}),T.push(r))}const I=ot({inputs:{x:e},backend:s,attrs:{shape:[1,b,Me(e.shape)/b]}});T.push(I);const M=new Lie(v,t),$=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],O=s.runWebGLProgram(M,[n],"float32",$),k=ot({inputs:{x:O},backend:s,attrs:{shape:v}});T.push(O),T.push(k);const N=r!=null,A=i!=null,B=a==="leakyrelu",W=a?Yp(a,!0):null,K=new CL(g?k.shape:I.shape,g?I.shape:k.shape,g?[t.batchSize,y,t.outChannels]:[t.batchSize,t.outChannels,y],w,E,N,W,A,B),q=g?[k,I]:[I,k];if(r&&q.push(r),A&&q.push(i),B){const G=s.makeTensorInfo([],"float32",rl(o,"float32"));q.push(G),T.push(G)}const Y=s.runWebGLProgram(K,q,"float32"),J=ot({inputs:{x:Y},backend:s,attrs:{shape:t.outShape}});T.push(Y);for(const G of T)s.disposeIntermediateTensorInfo(G);return J}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dataFormat:l,dilations:u,dimRoundingMode:h}=s,d=ol(l),p=er(r.shape,i.shape,o,u,a,h,!1,d);let m;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))m=FL({x:r,filter:i,convInfo:p,backend:t});else if(p.strideWidth<=2&&d==="channelsLast"&&_e().getBool("WEBGL_EXP_CONV")){const b=new $L(p),y=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];m=t.runWebGLProgram(b,[r,i],"float32",y)}else if(_e().getBool("WEBGL_CONV_IM2COL"))m=PL({x:r,filter:i,convInfo:p,backend:t});else{const b=new DL(p);m=t.runWebGLProgram(b,[r,i],"float32")}const g=ot({inputs:{x:m},backend:t,attrs:{shape:p.outShape}});return t.disposeIntermediateTensorInfo(m),g}const zie={kernelName:dm,backendName:"webgl",kernelFunc:Uie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bie{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,o=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${o?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Vie{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,o=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,u=o?1:2,h=o?2:3,d=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${h}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Wie{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.padInfo.front,o=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${o};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Gie{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,u=s-1-e.padInfo.top,h=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:h}=s,d=ol(l),p=er(r.shape,h,o,1,a,u,!1,d),m=new Bie(p);return t.runWebGLProgram(m,[r,i],"float32")}const jie={kernelName:qx,backendName:"webgl",kernelFunc:Hie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xie{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=_r(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,i=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qie(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:o,strides:a,pad:l,dataFormat:u,dimRoundingMode:h}=s,d=ol(u),p=er(o,i.shape,a,1,l,h,!1,d);if(_e().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const m=[[p.strideHeight,p.strideWidth]],g=new Xie(p);return t.runWebGLProgram(g,[r,i],"float32",m)}else{const m=new Vie(p);return t.runWebGLProgram(m,[r,i],"float32")}}const Kie={kernelName:fm,backendName:"webgl",kernelFunc:qie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l}=s,u=yu(r.shape,i.shape,o,l,a),h=new Oie(u);return t.runWebGLProgram(h,[r,i],"float32")}const Zie={kernelName:pm,backendName:"webgl",kernelFunc:Yie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,filterShape:l}=s,u=yu(r.shape,l,o,1,a),h=new Wie(u);return t.runWebGLProgram(h,[r,i],"float32")}const Jie={kernelName:Kx,backendName:"webgl",kernelFunc:Qie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eoe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{pad:o,strides:a,inputShape:l}=s,u=yu(l,i.shape,a,1,o),h=new Gie(u);return t.runWebGLProgram(h,[r,i],"float32")}const toe={kernelName:Yx,backendName:"webgl",kernelFunc:eoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const noe=kf+`
  return cos(x);
`,soe=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Yc}
  return result;
`,roe=Tn({opSnippet:noe,packedOpSnippet:soe}),ioe={kernelName:kd,backendName:"webgl",kernelFunc:roe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ooe=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,aoe=Tn({opSnippet:ooe}),loe={kernelName:Md,backendName:"webgl",kernelFunc:aoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uoe{constructor(e,t,s,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,u]=e,[h]=t,[d,p]=s;this.outputShape=[h,d,p,u];const m=r==="bilinear"?1:0,[g,b]=[`${a-1}.0`,`${l-1}.0`],[y,v,w]=d>1?[`${(a-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${g} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${g}`],[E,T,I]=p>1?[`${(l-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${b} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${b}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${E});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${v};
        float width_scale = ${T};

        float in_y = ${w};
        if( in_y < 0.0 || in_y > ${g} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${b} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${m} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const coe=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:u}=s,h=new uoe(r.shape,i.shape,a,l,u);return t.runWebGLProgram(h,[r,i,o],"float32")},hoe={kernelName:Qx,backendName:"webgl",kernelFunc:coe};var Qp;(function(n){n.Prod="*",n.Sum="+"})(Qp||(Qp={}));class _R{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,o=this.op===Qp.Prod?"1.0":"0.0",a=s?o:`getX(${TR(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",h="";s?(u=r?`end != ${l-1}`:"end != 0",h=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",h=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Bn(i)} coords = getOutputCoords();
        int end = ${ER(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${h};
          ${ER(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${TR(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function TR(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function ER(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n,e,t,s,r,i){const o=e.shape.length,a=ls([s],o);let l=e;a!=null&&(l=Br({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=bs(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const h=l.shape[u];let d=Ti({inputs:{x:l},backend:t});for(let p=0;p<=Math.ceil(Math.log2(h))-1;p++){const m=new _R(n,l.shape,!1,i),g=[[p]],b=d;d=t.runWebGLProgram(m,[d],d.dtype,g),t.disposeIntermediateTensorInfo(b)}if(r){const p=new _R(n,l.shape,r,i),m=d;d=t.runWebGLProgram(p,[d],d.dtype),t.disposeIntermediateTensorInfo(m)}if(a!=null){const p=xu(a),m=Br({inputs:{x:d},backend:t,attrs:{perm:p}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(l),m}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function doe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;return OL(Qp.Prod,r,t,i,o,a)}const foe={kernelName:Zx,backendName:"webgl",kernelFunc:doe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function poe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;return OL(Qp.Sum,r,t,i,o,a)}const moe={kernelName:mm,backendName:"webgl",kernelFunc:poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function goe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const l=t.readSync(r.dataId),u=t.readSync(i.dataId),h=yL(l,u,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,h)}else if(r.shape.length===2){const l=t.bufferSync(r),u=t.bufferSync(i),h=bne(l,u,o,a);return t.makeTensorInfo(h.shape,i.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const yoe={kernelName:Jx,backendName:"webgl",kernelFunc:goe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xoe{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function voe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:o}=s,a=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],h=o==="NHWC"?r.shape[3]:r.shape[1],d=l*i,p=u*i,m=h/(i*i),g=o==="NHWC"?[a,d,p,m]:[a,m,d,p],b=new xoe(g,i,o);return t.runWebGLProgram(b,[r],r.dtype)}const boe={kernelName:ev,backendName:"webgl",kernelFunc:voe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LL{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_r(this.outputShape.length);const o=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let u="",h="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,h="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UL{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_r(this.outputShape.length);const o=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=d;let m=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let v=0;v<d;v++)m+=`
          vec4 xTexelC${v*2};
          int xTexelC${v*2}Ready;
          vec4 xTexelC${v*2+1};
          int xTexelC${v*2+1}Ready;
          vec4 xC${v};`;m+=`
    for (int r = 0; r < ${h}; r++) {
      `;for(let v=0;v<d;v++)m+=`
          xTexelC${v*2} = vec4(0.0);
          xTexelC${v*2}Ready = 0;
          xTexelC${v*2+1} = vec4(0.0);
          xTexelC${v*2+1}Ready = 0;
          xC${v} = vec4(0.0);`;m+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let v=0;v<(p+1)/2;v++){const w=v*2;if(m+=`
          xC = xCCorner + ${w*u};
          `,l===1){if(w<d&&(a%2===1?(m+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }
              `,u===1&&w>0?m+=`
                xC${w} = vec4(xTexelC${w-2}.zw, xTexelC${w}.xy);
                `:m+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${w} = vec4(previous.zw, xTexelC${w}.xy);
                  } else {
                    xC${w} = vec4(0.0, 0.0, xTexelC${w}.xy);
                  }
                  `):m+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xC${w} = xTexelC${w};
                `,w+1<d)){const E=a%2===0?Ux(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(m+=`
                  xCOffset = xC + imod(pads[1], 2) + ${E};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                    xTexelC${w+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${w+1}.zw = vec2(0.0);
                    }
                    xTexelC${w+1}Ready = 1;
                  }
                  `,u>1?m+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${w+1} = vec4(previous.zw, xTexelC${w+1}.xy);
                    } else {
                     xC${w+1} = vec4(0.0, 0.0, xTexelC${w+1}.xy);
                    }
                    `:m+=`
                    xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.xy);
                    `):E===1?m+=`
                    xC${w+1} = xTexelC${w};
                    `:m+=`
                    xCOffset = xC + ${E};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                      xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${w+1}.zw = vec2(0.0);
                      }
                      xTexelC${w+1}Ready = 1;
                    }

                    xC${w+1} = xTexelC${w+1};
                    `}}else w<d&&(a%2===1?(m+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.0);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
              `,w+1<d&&(m+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${w+1} = vec4(xTexelC${w+1}.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(
                  xTexelC${w}.xy, xTexelC${w+1}.xy);
              `,w+1<d&&(m+=`
                  xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
                `)));w<d&&(m+=`
            wTexel = getW(r, ${w}, d1, q);
            dotProd += xC${w} * vec4(wTexel.xz, wTexel.xz);
          `,w+1<d&&(m+=`
              wTexel = getW(r, ${w+1}, d1, q);
              dotProd += xC${w+1} * vec4(wTexel.xz, wTexel.xz);
            `))}m+=`
    }
  `,m+=`
      }
    `;let g="",b="";s&&(r?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:g=`vec4 activation(vec4 x) {
          ${s}
        }`,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${m}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function woe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l,dimRoundingMode:u}=s;let h=l;h==null&&(h=[1,1]),z(dr(o,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`);const d=er(r.shape,i.shape,o,h,a,u,!0);let p;_e().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?p=new UL(d):p=new LL(d);const m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(p,[r,i],"float32",m)}const Soe={kernelName:gm,backendName:"webgl",kernelFunc:woe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _oe{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Toe{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:u,filterShape:h}=s,d=er(r.shape,h,o,a,l,u,!0),p=new _oe(d);return t.runWebGLProgram(p,[r,i],"float32")}const Coe={kernelName:tv,backendName:"webgl",kernelFunc:Eoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ioe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:u,inputShape:h}=s,d=er(h,i.shape,o,a,l,u,!0),p=new Toe(d);return t.runWebGLProgram(p,[r,i],"float32")}const Noe={kernelName:nv,backendName:"webgl",kernelFunc:Ioe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aoe{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Roe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],i=Me(s.shape),o=ot({inputs:{x:s},backend:t,attrs:{shape:[i]}}),a=new Aoe(i),l=t.runWebGLProgram(a,[o],o.dtype),u=ot({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),u}const koe={kernelName:sv,backendName:"webgl",kernelFunc:Roe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Moe{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:i,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:h}=e,{top:d,left:p}=r;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${h};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Doe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l}=s,u=og(r.shape,i.shape,o,a,"NHWC",l);let h;const d=new Moe(u);h=t.runWebGLProgram(d,[r,i],"float32");const p=ot({inputs:{x:h},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(h),p}const $oe={kernelName:ym,backendName:"webgl",kernelFunc:Doe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Foe(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,i=e,{allDims:o,summedDims:a,idDims:l}=TC(r,i.length);CC(o.length,l,i);const{path:u,steps:h}=IC(a,l),d=h.length;let p=null,m=o.length;const g=[];for(let b=0;b<d;++b){for(const y of h[b]){const{permutationIndices:v,expandDims:w}=EC(m,l[y]);let E;NC(v)?E=i[y]:(E=Br({inputs:{x:i[y]},backend:t,attrs:{perm:v}}),g.push(E));const T=E.shape.slice();for(let I=0;I<w.length;++I)T.splice(w[I],0,1);dn(E.shape,T)||(E=ot({inputs:{x:E},backend:t,attrs:{shape:T}}),g.push(E)),p===null?p=E:(p=gI({inputs:{a:E,b:p},backend:t}),g.push(p))}b<d-1&&(u[b]>=0&&(p=tw({inputs:{x:p},backend:t,attrs:{axis:u[b]-(o.length-m),keepDims:!1}}),g.push(p)),m--)}for(const b of g)b!==p&&t.disposeIntermediateTensorInfo(b);return p}const Poe={kernelName:iv,backendName:"webgl",kernelFunc:Foe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ooe="return (x >= 0.0) ? x : (exp(x) - 1.0);",Loe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Uoe=Tn({opSnippet:Ooe,packedOpSnippet:Loe}),zoe={kernelName:$d,backendName:"webgl",kernelFunc:Uoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Boe="return (b >= 0.0) ? a : a * (b + 1.0);",Voe=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Woe=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,i=_e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rf(Voe,s.shape,r.shape):new Fc(Boe,s.shape,r.shape);return t.runWebGLProgram(i,[s,r],s.dtype)},Goe={kernelName:ov,backendName:"webgl",kernelFunc:Woe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hoe=`
  return vec4(equal(a, b));
`,joe="return float(a == b);",Xoe=mr({opSnippet:joe,packedOpSnippet:Hoe,dtype:"bool",cpuKernelImpl:Ene}),qoe={kernelName:xm,backendName:"webgl",kernelFunc:Xoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Koe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${yC};
  float a1 = ${xC};
  float a2 = ${vC};
  float a3 = ${bC};
  float a4 = ${wC};
  float a5 = ${SC};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Yoe=Tn({opSnippet:Koe}),Zoe={kernelName:Fd,backendName:"webgl",kernelFunc:Yoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qoe=kf+`
  return exp(x);
`,Joe=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zL=Tn({opSnippet:Qoe,packedOpSnippet:Joe,cpuKernelImpl:Cne,dtype:"float32"}),eae={kernelName:Pd,backendName:"webgl",kernelFunc:zL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:i}=e,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(z(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),ot({inputs:{x:i},backend:s,attrs:{shape:a}})}const tae={kernelName:vm,backendName:"webgl",kernelFunc:U_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR="return exp(x) - 1.0;",nae=Tn({opSnippet:CR,packedOpSnippet:CR,cpuKernelImpl:Ine}),sae={kernelName:Od,backendName:"webgl",kernelFunc:nae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IR{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(n,e,t){const s=t.texData.get(n.dataId),r=Me(n.shape),i=n.shape[n.shape.length-1],o=r/i,a=ot({inputs:{x:n},backend:t,attrs:{shape:[o,i]}}),l=a.shape,u=new IR("real",l,e),h=new IR("imag",l,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],p=t.runWebGLProgram(u,d,"float32"),m=t.runWebGLProgram(h,d,"float32"),g=Tu({inputs:{real:p,imag:m},backend:t});t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m);const b=ot({inputs:{x:g},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(g),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rae(n){const{inputs:e,backend:t}=n,{input:s}=e;return BL(s,!1,t)}const iae={kernelName:av,backendName:"webgl",kernelFunc:rae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oae{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zg(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:i}=t;if(i=i||Uc(r),i==="string"){const o=fs(i,Me(s));return o.fill(r),e.makeTensorInfo(s,i,o)}else{const o=new oae(s,r),a=[[r]];return e.runWebGLProgram(o,[],i,a)}}const aae={kernelName:lv,backendName:"webgl",kernelFunc:zg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lae{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uae={kernelName:uv,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new lae(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NR="return floor(x);",cae=Tn({opSnippet:NR,packedOpSnippet:NR,cpuKernelImpl:Nne}),hae={kernelName:Ld,backendName:"webgl",kernelFunc:cae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dae=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,fae=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,pae=mr({opSnippet:dae,packedOpSnippet:fae,dtype:"int32"}),mae={kernelName:Ud,backendName:"webgl",kernelFunc:pae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gae{constructor(e){this.variableNames=["A"];const t=Gr(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yae{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Gr(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xae={kernelName:cx,backendName:"webgl",kernelFunc:vae};let Nh,lS=_e().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function vae(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:i}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[u,l],d=[u,l,i];if(a||o){const b=_e().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Nh==null||b!==lS)&&(lS=b,Nh=document.createElement("canvas").getContext("2d",{willReadFrequently:lS})),Nh.canvas.width=l,Nh.canvas.height=u,Nh.drawImage(r,0,0,l,u),r=Nh.canvas}const p=t.makeTensorInfo(h,"int32");t.texData.get(p.dataId).usage=Ui.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(p.dataId),r);const m=_e().getBool("WEBGL_PACK")?new yae(d):new gae(d),g=t.runWebGLProgram(m,[p],"int32");return t.disposeData(p.dataId),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:m,leakyreluAlpha:g}=s,b=ol(h),y=er(r.shape,i.shape,l,d,u,p,!1,b);let v;const w=[],E=o!=null,T=a!=null,I=m==="leakyrelu",M=()=>{const O=[r,i],k=(N,A)=>{if(A==="NCHW"&&N.shape.length===1&&N.shape[0]!==1){const B=ot({inputs:{x:N},backend:t,attrs:{shape:[N.shape[0],1,1]}});return w.push(B),B}return N};if(E&&O.push(k(o,h)),T&&O.push(k(a,h)),I){const N=t.makeTensorInfo([],"float32",rl(g,"float32"));O.push(N),w.push(N)}return O};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))v=FL({x:r,filter:i,convInfo:y,backend:t,bias:o,activation:m,preluActivationWeights:a,leakyreluAlpha:g});else if(y.strideWidth<=2&&b==="channelsLast"&&_e().getBool("WEBGL_EXP_CONV")){const O=m?Yp(m,!0):null,k=new $L(y,E,O,T,I),N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],A=M();v=t.runWebGLProgram(k,A,"float32",N)}else if(_e().getBool("WEBGL_CONV_IM2COL"))v=PL({x:r,filter:i,convInfo:y,backend:t,bias:o,activation:m,preluActivationWeights:a,leakyreluAlpha:g});else{const O=m?Yp(m,!1):null,k=new DL(y,E,O,T,I),N=M();v=t.runWebGLProgram(k,N,"float32")}const $=ot({inputs:{x:v},backend:t,attrs:{shape:y.outShape}});return w.push(v),w.forEach(O=>t.disposeIntermediateTensorInfo(O)),$}const wae={kernelName:Fp,backendName:"webgl",kernelFunc:bae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:m}=s,g=[];let b=h;b==null&&(b=[1,1]),z(dr(l,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${b}'`);const y=er(r.shape,i.shape,l,b,u,d,!0),v=_e().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,w=p?Yp(p,v):null,E=[r,i],T=o!=null,I=a!=null,M=p==="leakyrelu";if(T&&E.push(o),I&&E.push(a),M){const N=t.makeTensorInfo([],"float32",rl(m,"float32"));E.push(N),g.push(N)}let $;v?$=new UL(y,T,w,I,M):$=new LL(y,T,w,I,M);const O=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],k=t.runWebGLProgram($,E,"float32",O);return g.forEach(N=>t.disposeIntermediateTensorInfo(N)),k}const _ae={kernelName:Pp,backendName:"webgl",kernelFunc:Sae};class Tae{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const i=Bn(s.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eae(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=r.shape,o=i[i.length-1],a=Me(s.shape),[l,u,h,d]=Fb(s,r),p=ot({inputs:{x:r},backend:t,attrs:{shape:[u,o]}}),m=ot({inputs:{x:s},backend:t,attrs:{shape:[Me(s.shape)/h,h]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const v=t.readSync(r.dataId),w=t.bufferSync(s),E=Ane(v,w,s.dtype,u,o,h,d,s.shape,a);return t.makeTensorInfo(l,s.dtype,E.values)}const g=new Tae(o,d,[u,h],s.shape),b=t.runWebGLProgram(g,[m,p],m.dtype),y=ot({inputs:{x:b},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),y}const Cae={kernelName:cv,backendName:"webgl",kernelFunc:Eae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iae{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Bn(this.rank),r=Nae(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function Nae(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:o,batchDims:a}=s,l=an(o,r.shape)[0];if(_e().get("DEBUG")){const w=t.readSync(i.dataId),E=r.shape[l];for(let T=0;T<w.length;++T){const I=w[T];z(I<=E-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${E-1}]`)}}const u=RC(r,i,l,a),h=Me(i.shape),d=[],p=ot({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=ot({inputs:{x:i},backend:t,attrs:{shape:[u.batchSize,h/u.batchSize]}});d.push(p),d.push(m);const g=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const w=t.bufferSync(m),E=t.bufferSync(p),T=Rne(E,w,g);return d.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.makeTensorInfo(u.outputShape,T.dtype,T.values)}const b=new Iae(p.shape,g),y=t.runWebGLProgram(b,[p,m],p.dtype);d.push(y);const v=ot({inputs:{x:y},backend:t,attrs:{shape:u.outputShape}});return d.forEach(w=>t.disposeIntermediateTensorInfo(w)),v}const Aae={kernelName:wm,backendName:"webgl",kernelFunc:VL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rae="return float(a > b);",kae=`
  return vec4(greaterThan(a, b));
`,Mae=mr({opSnippet:Rae,packedOpSnippet:kae,cpuKernelImpl:kne,dtype:"bool"}),Dae={kernelName:Sm,backendName:"webgl",kernelFunc:Mae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ae="return float(a >= b);",Fae=`
  return vec4(greaterThanEqual(a, b));
`,Pae=mr({opSnippet:$ae,packedOpSnippet:Fae,dtype:"bool",cpuKernelImpl:Mne}),Oae={kernelName:zd,backendName:"webgl",kernelFunc:Pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lae(n){const{inputs:e,backend:t}=n,{input:s}=e;return BL(s,!0,t)}const Uae={kernelName:hv,backendName:"webgl",kernelFunc:Lae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zae="return float(!isnan(x) && !isinf(x));",Bae=Tn({opSnippet:zae,dtype:"bool"}),Vae={kernelName:Vd,backendName:"webgl",kernelFunc:Bae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wae="return float(isinf(x));",Gae=Tn({opSnippet:Wae,dtype:"bool"}),Hae={kernelName:Wd,backendName:"webgl",kernelFunc:Gae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jae="return float(isnan(x));",Xae=Tn({opSnippet:jae,dtype:"bool"}),qae={kernelName:Gd,backendName:"webgl",kernelFunc:Xae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kae="return float(a < b);",Yae=`
  return vec4(lessThan(a, b));
`,Zae=mr({opSnippet:Kae,packedOpSnippet:Yae,cpuKernelImpl:Dne,dtype:"bool"}),Qae={kernelName:Tm,backendName:"webgl",kernelFunc:Zae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jae="return float(a <= b);",ele=`
  return vec4(lessThanEqual(a, b));
`,tle=mr({opSnippet:Jae,packedOpSnippet:ele,cpuKernelImpl:$ne,dtype:"bool"}),nle={kernelName:Em,backendName:"webgl",kernelFunc:tle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sle(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,o=Fne(s,r,i);return e.makeTensorInfo([o.length],"float32",o)}const rle={kernelName:fv,backendName:"webgl",kernelFunc:sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ile=kf+`
  return x < 0.0 ? 0./0. : log(x);
`,ole=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,ale=Tn({opSnippet:ile,packedOpSnippet:ole,cpuKernelImpl:Pne}),lle={kernelName:Hd,backendName:"webgl",kernelFunc:ale};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ule=kf+`
  return log(1.0 + x);
`,cle=Tn({opSnippet:ule}),hle={kernelName:jd,backendName:"webgl",kernelFunc:cle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dle="return float(a >= 1.0 && b >= 1.0);",fle=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,ple=mr({opSnippet:dle,packedOpSnippet:fle,dtype:"bool"}),mle={kernelName:Cm,backendName:"webgl",kernelFunc:ple};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gle="return float(!(x >= 1.0));",yle=Tn({opSnippet:gle}),xle={kernelName:Im,backendName:"webgl",kernelFunc:yle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vle="return float(a >= 1.0 || b >= 1.0);",ble=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,wle=mr({opSnippet:vle,packedOpSnippet:ble,dtype:"bool"}),Sle={kernelName:Nm,backendName:"webgl",kernelFunc:wle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _le{constructor(e,t,s,r,i){this.variableNames=["x"],this.outputShape=[];const o=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tle{constructor(e,t,s,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ele=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:o,alpha:a,beta:l}=s,u=_e().getBool("WEBGL_PACK_NORMALIZATION")?new Tle(r.shape,i,o,a,l):new _le(r.shape,i,o,a,l);return t.runWebGLProgram(u,[r],r.dtype)},Cle={kernelName:Am,backendName:"webgl",kernelFunc:Ele};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ile{constructor(e,t,s,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nle=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:o}=e,{depthRadius:a,bias:l,alpha:u,beta:h}=s,d=new Ile(r.shape,a,l,u,h);return t.runWebGLProgram(d,[r,i,o],r.dtype)},Ale={kernelName:pv,backendName:"webgl",kernelFunc:Nle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rle(n,e,t,s){const r=Me(e),o=Me(n.shape)/r,a=ot({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),l=Zc(a,n.dtype,"max",s),u=ot({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:o}=s,a=r.shape.length,l=an(i,r.shape);let u=l;const h=ls(u,a),d=h!=null,p=t.shouldExecuteOnCPU([r]);let m=r;if(d){if(p){const E=t.texData.get(m.dataId).values,T=new Array(a);for(let $=0;$<T.length;$++)T[$]=r.shape[h[$]];const I=pI(E,r.shape,r.dtype,h,T);m=t.makeTensorInfo(T,r.dtype);const M=t.texData.get(m.dataId);M.values=I}else m=ew(r,h,t);u=bs(u.length,a)}fr("max",u,a);const[g,b]=tr(m.shape,u);let y=g;o&&(y=vs(g,l));let v;if(p){const E=t.texData.get(m.dataId).values,T=One(E,Me(b),y,r.dtype);v=t.makeTensorInfo(y,r.dtype);const I=t.texData.get(v.dataId);I.values=T}else v=Rle(m,b,y,t);return d&&t.disposeIntermediateTensorInfo(m),v}const kle={kernelName:Rm,backendName:"webgl",kernelFunc:WL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mle=mI+`
  return max(a, b);
`,Dle=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yc+`
  return result;
`,$le=mr({opSnippet:Mle,packedOpSnippet:Dle,cpuKernelImpl:Lne}),Fle={kernelName:Xd,backendName:"webgl",kernelFunc:$le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ple(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Og(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,u=1;z(dr(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=lo(r.shape,i,o,u,a,l);if(h.filterWidth===1&&h.filterHeight===1&&dn(h.inShape,h.outShape))return Ti({inputs:{x:r},backend:t});const d=new Zp(h,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const Ole={kernelName:km,backendName:"webgl",kernelFunc:Ple};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dataFormat:l,dimRoundingMode:u}=s,h=[1,1,1],d=il(r.shape,i,o,h,a,u,l),p=new yI(d,"max",!1);return t.runWebGLProgram(p,[r],r.dtype)}const Ule={kernelName:Mm,backendName:"webgl",kernelFunc:Lle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zle{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,i=e.effectiveFilterHeight,o=e.effectiveFilterWidth,a=i-1-e.padInfo.top,l=o-1-e.padInfo.left,u=i*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Ble{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=l-1-e.padInfo.front,p=u-1-e.padInfo.top,m=h-1-e.padInfo.left,g=l*u*h-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${p}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${g} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${h} +
                  wR * ${h} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vle(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:h}=s,d=[1,1,1],p=il(o.shape,a,l,d,u,h),m=new yI(p,"max",!0),g=t.runWebGLProgram(m,[o],o.dtype),b=new Ble(p),y=t.runWebGLProgram(b,[r,g],o.dtype);return t.disposeIntermediateTensorInfo(g),y}const Wle={kernelName:gv,backendName:"webgl",kernelFunc:Vle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gle(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:o}=e,a=i;Og([i,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=s,p=lo(a.shape,l,u,1,h,d),m=!0,g=new Zp(p,"max",m),b=t.runWebGLProgram(g,[a],a.dtype),y=new zle(p),v=t.runWebGLProgram(y,[r,b],a.dtype);return t.disposeIntermediateTensorInfo(b),v}const Hle={kernelName:mv,backendName:"webgl",kernelFunc:Gle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jle(n,e,t,s){let r=new Zp(t,"max",!1);const i=s.runWebGLProgram(r,[n],"float32");r=new Zp(t,"max",!0,!0,e);const o=s.runWebGLProgram(r,[n],"float32");return[i,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xle={kernelName:yv,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=e,l=t;z(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];z(dr(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=lo(s.shape,r,i,u,o),[d,p]=jle(s,a,h,l);return[d,p]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qle(n,e,t,s){const r=Me(e),o=Me(n.shape)/r,a=ot({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),l=Zc(a,"float32","mean",s),u=ot({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kle={kernelName:Dm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:i}=e,o=t,a=s.shape.length,l=an(i,s.shape);let u=l;const h=ls(u,a),d=h!=null,p=o.shouldExecuteOnCPU([s]),m=[];let g=s;if(d){if(p){const T=o.texData.get(g.dataId).values,I=new Array(a);for(let O=0;O<I.length;O++)I[O]=s.shape[h[O]];const M=pI(T,s.shape,s.dtype,h,I);g=o.makeTensorInfo(I,s.dtype);const $=o.texData.get(g.dataId);$.values=M}else g=ew(s,h,o);m.push(g),u=bs(u.length,a)}fr("sum",u,a);const[b,y]=tr(g.shape,u);let v=b;r&&(v=vs(b,l));const w=qle(g,y,v,o);for(const E of m)o.disposeIntermediateTensorInfo(E);return w}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=r.shape.length,l=an(i,r.shape);let u=l;const h=ls(u,a);let d=r;h!=null&&(d=Br({inputs:{x:r},backend:t,attrs:{perm:h}}),u=bs(u.length,r.shape.length)),fr("min",u,a);const[p,m]=tr(d.shape,u),g=Me(m),b=ot({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),y=Zc(b,b.dtype,"min",t);let v;if(o){const w=vs(p,l);v=ot({inputs:{x:y},backend:t,attrs:{shape:w}})}else v=ot({inputs:{x:y},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(y),h!=null&&t.disposeIntermediateTensorInfo(d),v}const Zle={kernelName:$m,backendName:"webgl",kernelFunc:Yle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qle=mI+`
  return min(a, b);
`,Jle=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Yc+`
  return result;
`,eue=mr({opSnippet:Qle,packedOpSnippet:Jle,cpuKernelImpl:Une}),tue={kernelName:qd,backendName:"webgl",kernelFunc:eue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nue{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((h,d)=>h[0]+e[d]+h[1]);const r=e.length,i=Bn(r),o=t.map(h=>h[0]).join(","),a=t.map((h,d)=>h[0]+e[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sue{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((g,b)=>g[0]+e[b]+g[1]);const r=e.length,i=Bn(r),o=t.map(g=>g[0]).join(","),a=t.map((g,b)=>g[0]+e[b]).join(","),l=Or("rc",r),u=Or("source",r),h=`${l[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${u.slice(-2).join()})`,p=s==="reflect"?0:1;let m="";if(r===1){const g=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${g}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${l[r-1]} += 1;
        if(${h}) {
          ${g}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const g=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${g}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${l[r-1]} += 1;
        if(${h}) {
          ${g}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${g}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${l[r-1]} += 1;
          if(${h}) {
            ${g}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rue=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:i}=t,o=_e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sue(s.shape,r,i):new nue(s.shape,r,i);return e.runWebGLProgram(o,[s],s.dtype)},iue={kernelName:Fm,backendName:"webgl",kernelFunc:rue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oue=`if (b == 0.0) return NAN;
  return mod(a, b);`,aue=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Yc+`
  return result;
`,lue=mr({opSnippet:oue,packedOpSnippet:aue}),uue={kernelName:Kd,backendName:"webgl",kernelFunc:lue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cue{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hue=`
if (a == b) {
  return 1.0;
};
return a / b;`,due=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,GL=mr({opSnippet:hue,packedOpSnippet:due,checkOutOfBounds:!0}),fue={kernelName:Dd,backendName:"webgl",kernelFunc:GL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AR="return a - b;",HL=mr({opSnippet:AR,packedOpSnippet:AR,supportsComplex:!0,cpuKernelImpl:ose}),pue={kernelName:df,backendName:"webgl",kernelFunc:HL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,o=an([i],r.shape),a=WL({inputs:{x:r},backend:t,attrs:{reductionIndices:o,keepDims:!1}}),l=vs(a.shape,o),u=ot({inputs:{x:a},backend:t,attrs:{shape:l}}),h=HL({inputs:{a:r,b:u},backend:t}),d=zL({inputs:{x:h},backend:t}),p=tw({inputs:{x:d},backend:t,attrs:{axis:o,keepDims:!1}}),m=ot({inputs:{x:p},backend:t,attrs:{shape:l}}),g=GL({inputs:{a:d,b:m},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const mue={kernelName:Jm,backendName:"webgl",kernelFunc:jL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gue(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:o,normalized:a}=s,l=a?r:jL({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=l.shape[0],h=l.shape[1],d=new cue(u,h,i),p=[[o]],m=t.runWebGLProgram(d,[l],"int32",p);return a||t.disposeIntermediateTensorInfo(l),m}const yue={kernelName:xv,backendName:"webgl",kernelFunc:gue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xue=co+`
  return -x;
`,vue=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function bue(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const i=t.texData.get(s.dataId),[o,a]=Bne(i.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,o)}let r;return _e().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new ql(s.shape,vue):r=new sa(s.shape,xue),t.runWebGLProgram(r,[s],s.dtype)}const wue={kernelName:Pm,backendName:"webgl",kernelFunc:bue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sue=Ab;function _ue(n){Pi("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s,u=t.readSync(r.dataId),h=t.readSync(i.dataId),{selectedIndices:d}=Sue(u,h,o,a,l);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Tue={kernelName:vv,backendName:"webgl",kernelFunc:_ue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eue=Rb;function Cue(n){Pi("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s,h=t.readSync(r.dataId),d=t.readSync(i.dataId),{selectedIndices:p,validOutputs:m}=Eue(h,d,o,a,l,u);return[t.makeTensorInfo([p.length],"int32",new Int32Array(p)),t.makeTensorInfo([],"int32",new Int32Array([m]))]}const Iue={kernelName:bv,backendName:"webgl",kernelFunc:Cue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nue=kb;function Aue(n){Pi("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,h=t.readSync(r.dataId),d=t.readSync(i.dataId),p=o,m=a,g=l,b=u,{selectedIndices:y,selectedScores:v}=Nue(h,d,p,m,g,b);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const Rue={kernelName:wv,backendName:"webgl",kernelFunc:Aue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kue{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mue=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:i,depth:o,onValue:a,offValue:l}=s,u=Me(r.shape),h=new kue(u,o,a,l),d=ot({inputs:{x:r},backend:t,attrs:{shape:[u]}}),p=t.runWebGLProgram(h,[d],i);t.disposeIntermediateTensorInfo(d);const m=[...r.shape,o],g=ot({inputs:{x:p},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(p),g},Due={kernelName:Um,backendName:"webgl",kernelFunc:Mue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mx(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Ug({inputs:{input:s},backend:t}),i=Mx({inputs:{x:r},backend:t}),o=nw({inputs:{input:s},backend:t}),a=Mx({inputs:{x:o},backend:t}),l=Tu({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return zg({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const $ue={kernelName:sg,backendName:"webgl",kernelFunc:Mx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Ug({inputs:{input:s},backend:t}),i=XL({inputs:{x:r},backend:t}),o=nw({inputs:{input:s},backend:t}),a=Mx({inputs:{x:o},backend:t}),l=Tu({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return zg({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const Fue={kernelName:Lm,backendName:"webgl",kernelFunc:XL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pue(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return U_({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,o=e[0].dtype;e.forEach(h=>{hr(i,h.shape,"All tensors passed to stack must have matching shapes"),z(o===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(h=>{const d=U_({inputs:{input:h},backend:t,attrs:{dim:r}});return a.push(d),d}),u=ML({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const Oue={kernelName:zm,backendName:"webgl",kernelFunc:Pue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lue{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,h)=>u[0]+e[h]+u[1]);const r=e.length,i=Bn(r),o=t.map(u=>u[0]).join(","),a=t.map((u,h)=>u[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uue{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((b,y)=>b[0]+e[y]+b[1]);const r=e.length,i=Bn(r),o=t.map(b=>b[0]).join(","),a=t.map((b,y)=>b[0]+e[y]).join(","),l=Or("rc",r),u=Or("source",r),h=`${l[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${u.slice(-2).join()})`,p=[`${i} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${h}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${h}) {`],m=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let g="";for(let b=0,y=r===1?2:4;b<y;b++)g+=`
        ${p[b]}
        if (${m}) {
          result[${b}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${b}] = getChannel(getX(${u.join()}), ${d});
        }
      `;g+=r===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:o}=s;if(Me(r.shape)===0){const u=i.map((h,d)=>h[0]+r.shape[d]+h[1]);return zg({backend:t,attrs:{shape:u,value:o,dtype:r.dtype}})}const a=_e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Uue(r.shape,i,o):new Lue(r.shape,i,o),l=[[o]];return t.runWebGLProgram(a,[r],r.dtype,l)},zue={kernelName:Bm,backendName:"webgl",kernelFunc:qL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bue=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Vue=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Yc+`
  return result;
`,Wue=mr({opSnippet:Bue,packedOpSnippet:Vue}),Gue={kernelName:Zd,backendName:"webgl",kernelFunc:Wue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=r.shape.length,l=[],u=an(i,r.shape);let h=u;const d=ls(h,a);let p=r;d!=null&&(p=Br({inputs:{x:r},backend:t,attrs:{perm:d}}),h=bs(h.length,a),l.push(p)),fr("prod",h,a);let m;if(t.shouldExecuteOnCPU([p])){const g=t.texData.get(p.dataId).values,{outVals:b,outShape:y,outDtype:v}=Wne(p.shape,p.dtype,g,h);m=t.makeTensorInfo(y,v,b)}else{const[g,b]=tr(p.shape,h),y=Me(b),v=ot({inputs:{x:p},backend:t,attrs:{shape:[-1,y]}}),w=Xv(r.dtype),E=Zc(v,w,"prod",t);m=ot({inputs:{x:E},backend:t,attrs:{shape:g}}),l.push(v),l.push(E)}if(o){l.push(m);const g=vs(m.shape,u);m=ot({inputs:{x:m},backend:t,attrs:{shape:g}})}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const jue={kernelName:Wm,backendName:"webgl",kernelFunc:Hue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xue(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=e,{outputRaggedRank:a}=s,l=r.map(v=>t.readSync(v.dataId)),u=r.map(v=>v.shape),h=t.readSync(i.dataId),d=t.readSync(o.dataId),[p,m,g]=Gne(l,u,h,i.shape,i.dtype,d,o.shape,a),b=p.map(v=>t.makeTensorInfo([v.length],"int32",v)),y=t.makeTensorInfo(g,i.dtype,m);return b.concat([y])}const que={kernelName:Sv,backendName:"webgl",kernelFunc:Xue};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kue(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:i}=e,o=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(i.dataId),[u,h]=Hne(o,s.shape,s.dtype,a,r.shape,l,i.shape),d=t.makeTensorInfo([u.length],"int32",u),p=t.makeTensorInfo([h.length],s.dtype,h);return[d,p]}const Yue={kernelName:_v,backendName:"webgl",kernelFunc:Kue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zue(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.readSync(r.dataId),h=t.readSync(i.dataId),d=t.readSync(o.dataId),p=a.map(y=>t.readSync(y.dataId)),m=a.map(y=>y.shape),[g,b]=jne(u,r.shape,h,i.shape,i.dtype,d,o.shape,p,m,l);return t.makeTensorInfo(g,i.dtype,b)}const Que={kernelName:Tv,backendName:"webgl",kernelFunc:Zue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KL=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:i,dtype:o}=t,a=Xne(s,r,i,o);return e.makeTensorInfo([a.length],o,a)},Jue={kernelName:Ev,backendName:"webgl",kernelFunc:KL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ece="return 1.0 / x;",tce=Tn({opSnippet:ece}),nce={kernelName:Qd,backendName:"webgl",kernelFunc:tce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sce=co+`
  return (x < 0.0) ? 0.0 : x;
`,rce=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ice=Tn({opSnippet:sce,packedOpSnippet:rce}),oce={kernelName:Jd,backendName:"webgl",kernelFunc:ice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ace=co+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,lce=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uce=Tn({opSnippet:ace,packedOpSnippet:lce}),cce={kernelName:ef,backendName:"webgl",kernelFunc:uce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hce{constructor(e,t,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,l,u]=e;this.outputShape=[o,t,s,u];const h=[r&&t>1?a-1:a,r&&s>1?l-1:l],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let p;i?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dce{constructor(e,t,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,u]=e;this.outputShape=[o,t,s,u];const h=[r&&t>1?a-1:a,r&&s>1?l-1:l],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let p;i?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fce(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s,[l,u]=a,h=_e().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new dce(r.shape,l,u,i,o):new hce(r.shape,l,u,i,o);return t.runWebGLProgram(h,[r],"float32")}const pce={kernelName:jm,backendName:"webgl",kernelFunc:fce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mce{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,o,a]=e,l=[s&&o>1?r-1:r,s&&a>1?i-1:i],u=[s&&o>1?o-1:o,s&&a>1?a-1:a],h=l[0]/u[0],d=l[1]/u[1],p=1/h,m=1/d,g=Math.ceil(p)*2+2,b=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${m});

        const int winHeight = int(${g});
        const int winWidth = int(${b});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gce(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s,a=new mce(i.shape,r.shape,o);return t.runWebGLProgram(a,[i],i.dtype)}const yce={kernelName:Nv,backendName:"webgl",kernelFunc:gce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xce{constructor(e,t,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,l,u]=e;this.outputShape=[o,t,s,u];const h=[r&&t>1?a-1:a,r&&s>1?l-1:l],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],p=r?"0.5":"0.0";let m;i?m="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vce{constructor(e,t,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,u]=e;this.outputShape=[o,t,s,u];const h=[r&&t>1?a-1:a,r&&s>1?l-1:l],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],p=r?"0.5":"0.0";let m;i?m="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bce(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s,[l,u]=a,h=_e().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vce(r.shape,l,u,i,o):new xce(r.shape,l,u,i,o);return t.runWebGLProgram(h,[r],r.dtype)}const wce={kernelName:Hm,backendName:"webgl",kernelFunc:bce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sce{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,o,a]=e,l=[s&&o>1?r-1:r,s&&a>1?i-1:i],u=[s&&o>1?o-1:o,s&&a>1?a-1:a],h=l[0]/u[0],d=l[1]/u[1],p=1/h,m=1/d,g=Math.ceil(p)*2+2,b=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${m});

        const int winHeight = int(${g});
        const int winWidth = int(${b});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ce(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s,a=new Sce(i.shape,r.shape,o);return t.runWebGLProgram(a,[i],i.dtype)}const Tce={kernelName:Iv,backendName:"webgl",kernelFunc:_ce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ece{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,i=e.map((a,l)=>r(l)).join(","),o=Bn(s);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cce{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=Or("rc",s),i=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Bn(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${i}){
            result.g = ${u(r.slice())};
          }
          if(${o}) {
            result.b = ${h(r.slice())};
            if(${i}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(g){return p(g)}function u(g){return g[s-1]="("+g[s-1]+" + 1)",p(g)}function h(g){return g[s-2]="("+g[s-2]+" + 1)",p(g)}function d(g){return g[s-1]="("+g[s-1]+" + 1)",g[s-2]="("+g[s-2]+" + 1)",p(g)}function p(g){const b=e.map((w,E)=>m(E,g)),y=b.join(","),v=b.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${v}))`}function m(g,b){return t.indexOf(g)!==-1&&e[g]!==1?`${e[g]} - ${b[g]} - 1`:`${b[g]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ice(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s,o=r.shape.length,a=an(i,r.shape);if(o===0)return Ti({inputs:{x:r},backend:t});const l=_e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cce(r.shape,a):new Ece(r.shape,a);return t.runWebGLProgram(l,[r],r.dtype)}const Nce={kernelName:Xm,backendName:"webgl",kernelFunc:Ice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ace{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let i="";typeof t=="number"?i=`float outputValue = ${t.toFixed(2)};`:i=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rce={kernelName:Hv,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:o}=e,a=t,l=new Ace(s.shape,i),[u,h]=pC(o,s.shape[1],s.shape[2]),d=[[u,h,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kce=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Mce=Tn({opSnippet:kce}),Dce={kernelName:tf,backendName:"webgl",kernelFunc:Mce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ce="return inversesqrt(x);",Fce=Tn({opSnippet:$ce,cpuKernelImpl:qne}),Pce={kernelName:nf,backendName:"webgl",kernelFunc:Fce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xI{constructor(e,t,s,r,i,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const u=Bn(i.length),h=Bn(o.length);let d="";s===1?d="i":s===2&&(d="i, j");const p=`getIndices(${d})`;let m="";r===1?m="i":r===2&&(m="i, coords[1]");const g=`getUpdates(${m})`;let b="";l&&(b="coords[0], coords[1]");const y=`getDefaultValue(${b})`,v=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${h} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${v};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${g};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oce{constructor(e,t,s,r,i,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const u=Bn(i.length),h=Bn(o.length);let d="";s===1?d="i":s===2&&(d="i, j");const p=`getIndices(${d})`;let m="";r===1?m="i":r===2&&(m="i, coords[1]");const g=`getUpdates(${m})`;let b="";l&&(b="coords[0], coords[1]");const y=`getDefaultValue(${b})`,v=t>1?"strides[j]":"strides",w=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${h} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${p});
              flattenedIndex += index.xz * ${v};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${w};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${g};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lce(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=wu(i,r,o),p=[d/u,u];if(d===0)return t.makeTensorInfo(o,r.dtype);const m=ot({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),g=ot({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),b=t.makeTensorInfo([],"float32",new Float32Array([0]));let y;_e().getBool("WEBGL_PACK")?y=new Oce(l,a,m.shape.length,g.shape.length,h,p):y=new xI(l,a,m.shape.length,g.shape.length,h,p);const v=t.runWebGLProgram(y,[g,m,b],g.dtype),w=ot({inputs:{x:v},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(b),w}const Uce={kernelName:Av,backendName:"webgl",kernelFunc:Lce};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zce{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const i="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=_e().getNumber("WEBGL_VERSION")===2?i:o,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bce(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:i}=e,{side:o}=s,a=new zce(r.shape[0],r.shape[1],i.shape[1],o),l=[[r.shape[1]]];return t.runWebGLProgram(a,[r,i],"int32",l)}const Vce={kernelName:kv,backendName:"webgl",kernelFunc:Bce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wce{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let h=0;h<t.length;h++)u.push(`${a[h]}`),h<e&&l.push(`${a[h]}`);r=l.join(),i=u.join()}const o=Bn(s);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gce(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e,o=new Wce(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(o,[s,r,i],Qr(r.dtype,i.dtype))}const Hce={kernelName:qm,backendName:"webgl",kernelFunc:Gce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jce=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Lb};
  float scale = ${Ub};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Xce=Tn({opSnippet:jce}),qce={kernelName:sf,backendName:"webgl",kernelFunc:Xce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kce=kf+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Yce=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Zce=Tn({opSnippet:Kce,packedOpSnippet:Yce,cpuKernelImpl:Yne}),Qce={kernelName:lf,backendName:"webgl",kernelFunc:Zce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jce=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,ehe=Tn({opSnippet:Jce}),the={kernelName:af,backendName:"webgl",kernelFunc:ehe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nhe=kf+`
  return sin(x);
`,she=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Yc}
  return result;
`,rhe=Tn({opSnippet:nhe,packedOpSnippet:she}),ihe={kernelName:rf,backendName:"webgl",kernelFunc:rhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ohe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,ahe=Tn({opSnippet:ohe}),lhe={kernelName:of,backendName:"webgl",kernelFunc:ahe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uhe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,che=Tn({opSnippet:uhe}),hhe={kernelName:uf,backendName:"webgl",kernelFunc:che};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dhe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:o}=s;z(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((v,w)=>v*w),l=[[0,0]];l.push(...o);for(let v=1+i.length;v<r.shape.length;++v)l.push([0,0]);const u=[],h=qL({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),d=Tg(h.shape,i,a,!1),p=Eg(d.length,i.length,!1),m=Cg(h.shape,i,a,!1),g=ot({inputs:{x:h},backend:t,attrs:{shape:d}}),b=Br({inputs:{x:g},backend:t,attrs:{perm:p}}),y=ot({inputs:{x:b},backend:t,attrs:{shape:m}});return u.push(h),u.push(g),u.push(b),u.forEach(v=>t.disposeIntermediateTensorInfo(v)),y},fhe={kernelName:Zm,backendName:"webgl",kernelFunc:dhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function phe(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:i,defaultValue:o}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),u=t.readSync(i.dataId),h=t.readSync(o.dataId)[0],[d,p,m,g,b]=Qne(a,s.shape,s.dtype,l,r.dtype,u,h);return[t.makeTensorInfo(p,s.dtype,d),t.makeTensorInfo([p[0]],r.dtype,m),t.makeTensorInfo([g.length],"bool",new Uint8Array(g.map(y=>Number(y)))),t.makeTensorInfo([b.length],s.dtype,new Int32Array(b))]}const mhe={kernelName:Mv,backendName:"webgl",kernelFunc:phe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ghe(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(t.readSync(r.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(i.dataId)),[u,h,d]=Jne(a,s.shape,s.dtype,o,l);return[t.makeTensorInfo(h,s.dtype,u),t.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}const yhe={kernelName:Dv,backendName:"webgl",kernelFunc:ghe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xhe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const o=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(i.dataId),[u,h]=vL(o,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(h,s.dtype,u)}const vhe={kernelName:$v,backendName:"webgl",kernelFunc:xhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bhe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const o=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(i.dataId),[u,h]=vL(o,s.shape,s.dtype,a,l);return t.makeTensorInfo(h,s.dtype,u)}const whe={kernelName:Fv,backendName:"webgl",kernelFunc:bhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function She(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:o}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=wu(i,r,a),m=!1;if(i.dtype==="string"){const v=t.bufferSync(r),w=t.bufferSync(i),E=Ya(t.readSync(o.dataId)[0]),T=Kne(v,w,a,p,h,u,l,d,E,m);return t.makeTensorInfo(a,T.dtype,T.values)}const g=new xI(u,l,r.shape.length,i.shape.length,d,[p,1],m),b=t.runWebGLProgram(g,[i,r,o],i.dtype),y=ot({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(b),y}const _he={kernelName:Pv,backendName:"webgl",kernelFunc:She};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function The(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:o}=s,a=an(o,r.shape)[0],l=AC(r,i,a),u=r.shape.length,h=new Array(u).fill(0),d=r.shape.slice();return l.map(p=>{const m=[...d];m[a]=p;const g=Mf({inputs:{x:r},backend:t,attrs:{begin:h,size:m}});return h[a]+=p,g})}const Ehe={kernelName:Qm,backendName:"webgl",kernelFunc:The};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RR="return sqrt(x);",Che=Tn({opSnippet:RR,packedOpSnippet:RR,cpuKernelImpl:ese}),Ihe={kernelName:cf,backendName:"webgl",kernelFunc:Che};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nhe="return x * x;",Ahe=Tn({opSnippet:Nhe}),Rhe={kernelName:Ov,backendName:"webgl",kernelFunc:Ahe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kR="return (a - b) * (a - b);",khe=mr({opSnippet:kR,packedOpSnippet:kR}),Mhe={kernelName:hf,backendName:"webgl",kernelFunc:khe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dhe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const i=t.readSync(r.dataId),o=tl(i),a=tse(o,"string",s);return t.makeTensorInfo(r.shape,"string",a)}const $he={kernelName:eg,backendName:"webgl",kernelFunc:Dhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fhe({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=co+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new sa(s.shape,r);return t.runWebGLProgram(i,[s],s.dtype)}const Phe={kernelName:gf,backendName:"webgl",kernelFunc:Fhe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ohe{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,i=Bn(s.length),o=Bn(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((u,h)=>(l++,s.length===1?`coords * strides[${h}] + begin[${h}]`:`coords[${l-1}] * strides[${h}] + begin[${h}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${t});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lhe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:o,strides:a,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:m,finalShape:g,isIdentity:b,sliceDim0:y,isSimpleSlice:v,begin:w,end:E,strides:T}=cC(r.shape,i,o,a,l,u,h,d,p);let I;if(b)I=ot({inputs:{x:r},backend:t,attrs:{shape:g}});else if(y||v){z(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const $=aC(w,E,T),O=Mf({inputs:{x:r},backend:t,attrs:{begin:w,size:$}});I=ot({inputs:{x:O},backend:t,attrs:{shape:g}}),t.disposeIntermediateTensorInfo(O)}else if(t.shouldExecuteOnCPU([r])){const O=t.readSync(r.dataId),k=tn(r.shape,r.dtype,O),N=nse(m,k,T,w);I=t.makeTensorInfo(g,r.dtype,N.values)}else{const O=new Ohe(w,T,m);I=t.runWebGLProgram(O,[r],r.dtype)}const M=ot({inputs:{x:I},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(I),M}const Uhe={kernelName:Lv,backendName:"webgl",kernelFunc:Lhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zhe(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:h,dataSplits:d}=e,p=t.readSync(h.dataId),m=t.readSync(d.dataId),[g,b]=sse(p,m,r,i,o,a,l,u);return[t.makeTensorInfo([g.length],"string",g),t.makeTensorInfo(d.shape,"int32",b)]}const Bhe={kernelName:Uv,backendName:"webgl",kernelFunc:zhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vhe(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:i,delimiter:o}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=t.readSync(i.dataId),l=t.readSync(o.dataId)[0],[u,h,d]=rse(a,l,r),p=h.length;return[t.makeTensorInfo([p,2],"int32",u),t.makeTensorInfo([p],"string",h),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const Whe={kernelName:zv,backendName:"webgl",kernelFunc:Vhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ghe(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=t.readSync(i.dataId),a=ise(o,r);return t.makeTensorInfo(i.shape,"int32",a)}const Hhe={kernelName:Bv,backendName:"webgl",kernelFunc:Ghe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jhe="return tan(x);",Xhe=Tn({opSnippet:jhe}),qhe={kernelName:ff,backendName:"webgl",kernelFunc:Xhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Khe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Yhe=Tn({opSnippet:Khe}),Zhe={kernelName:pf,backendName:"webgl",kernelFunc:Yhe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qhe(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:i,updates:o}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=wu(o,i,r.shape),p=[d/u,u];if(d===0)return t.makeTensorInfo(r.shape,i.dtype);const m=ot({inputs:{x:i},backend:t,attrs:{shape:[l,a]}}),g=ot({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),b=ot({inputs:{x:r},backend:t,attrs:{shape:p}}),y=new xI(l,a,m.shape.length,g.shape.length,h,p,!1,!0),v=t.runWebGLProgram(y,[g,m,b],b.dtype),w=ot({inputs:{x:v},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(v),w}const Jhe={kernelName:Rv,backendName:"webgl",kernelFunc:Qhe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ede{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[o]*t[o];this.outputShape=s,this.rank=s.length;const r=Bn(this.rank),i=tde(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function tde(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;if(r.dtype==="string"||r.shape.length>5){const l=t.readSync(r.dataId),u=r.dtype==="string"?l.map(p=>Ya(p)):l,h=tn(r.shape,r.dtype,u),d=ase(h,i);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const o=new ede(r.shape,i);return t.runWebGLProgram(o,[r],r.dtype)}const nde={kernelName:mf,backendName:"webgl",kernelFunc:YL};class sde{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class rde{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xu(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function MR(n){let e=1;for(;e<n;)e*=2;return e}function ide(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:o}=s,a=_e().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=_e().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,h=u[u.length-1];if(t.shouldExecuteOnCPU([r])||h<a||i>l){const N=t.readSync(r.dataId),[A,B]=lse(N,u,r.dtype,i,o);return[t.makeTensorInfo(A.shape,A.dtype,A.values),t.makeTensorInfo(B.shape,B.dtype,B.values)]}if(i===0)return u[u.length-1]=0,[t.makeTensorInfo(u,r.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(h===1)return[r,zg({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const d=t.texData.get(r.dataId),p=d!==null&&d.isPacked,m=p?t.unpackTensor(r):r,b=Me(u)/h,y=ot({inputs:{x:m},attrs:{shape:[b,h]},backend:t});p&&Xu(t,m);const v=MR(i),w=MR(h);let E=null;const T=()=>E===null?[y,y]:[y,E],I=(N,A,B)=>{const W=T(),K=new sde(B),Y=[[h],[E===null?1:0],[Number.NEGATIVE_INFINITY],[N],[A]],J=E;E=t.runWebGLProgram(K,W,"int32",Y),Xu(t,J)};for(let N=1;N<v;N*=2){const A=N*2;for(let B=N;B>=1;B/=2)I(A,B,[b,w])}for(let N=w;N>v;N/=2){const A=T(),B=new rde([b,N/2]),K=[[h],[E===null?1:0],[v]],q=E;E=t.runWebGLProgram(B,A,"int32",K),Xu(t,q);const Y=v/2,J=Y*2;for(let G=Y;G>=1;G/=2)I(J,G,E.shape)}let M=E;E=Mf({inputs:{x:E},backend:t,attrs:{begin:0,size:[b,i]}}),Xu(t,M);let $=VL({inputs:{x:y,indices:E},backend:t,attrs:{axis:1,batchDims:1}});Xu(t,y);const O=u.slice(0,-1);O.push(i),M=E,E=ot({inputs:{x:E},attrs:{shape:O},backend:t}),Xu(t,M);const k=$;return $=ot({inputs:{x:$},attrs:{shape:O},backend:t}),Xu(t,k),[$,E]}const ode={kernelName:Vv,backendName:"webgl",kernelFunc:ide};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ade{constructor(e,t,s,r,i,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lde(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:u}=s,[h,d,p,m]=r.shape,[g,b]=u??[d,p],y=[h,g,b,m],v=new ade(d,p,o,a,l,y);return t.runWebGLProgram(v,[r,i],"float32")}const ude={kernelName:Wv,backendName:"webgl",kernelFunc:lde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cde(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:i}=e;Og(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(i.dataId),{outputValues:a,outputShape:l,indices:u}=use(o,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const hde={kernelName:Gv,backendName:"webgl",kernelFunc:cde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dde(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r,a=o.shape.length,l=r.shape[i],u=new Array(a-1);let h=0;for(let b=0;b<a;b++)b!==i&&(u[h++]=o.shape[b]);const d=[],p=new Array(a).fill(0),m=o.shape.slice();m[i]=1;const g=new Array(l);for(let b=0;b<g.length;b++){p[i]=b;const y=Mf({inputs:{x:o},backend:t,attrs:{begin:p,size:m}}),v=ot({inputs:{x:y},backend:t,attrs:{shape:u}});g[b]=v,d.push(y)}return d.forEach(b=>t.disposeIntermediateTensorInfo(b)),g}const fde={kernelName:tg,backendName:"webgl",kernelFunc:dde};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pde{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,i=e.inSize,o=e.numSegments,a=o*Math.ceil(i/s);this.outputShape=[r,a];const l="0.0",u="sumValue",h=Math.floor(s/4)*4,d=s%4,p=`
        sumValue += dot(values, segFilter);
    `;let m="";i%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let g="";i%s>0&&(g=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${g}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:o}=s,a=r.shape.length,l=[];let u=0;const h=ls([u],a);let d=r;h!=null&&(d=Br({inputs:{x:r},backend:t,attrs:{perm:h}}),l.push(d),u=bs(1,a)[0]);const p=C$(d.shape,u,o),m=Me([d.shape[u]]),g=ot({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}});l.push(g);const b=Xv(r.dtype),y=(T,I,M,$,O)=>{const k=T.shape[0],N=T.shape[1],A=E$(N,O),B={windowSize:A,inSize:N,batchSize:k,numSegments:O},W=new pde(B,I),K=t.compileAndRun(W,[T,M],$);if(l.push(K),K.shape[1]===O)return K;const q=KL({backend:t,attrs:{start:0,stop:O,step:1,dtype:"float32"}}),Y=YL({inputs:{x:q},backend:t,attrs:{reps:[N/A]}});return l.push(q),l.push(Y),y(K,I,Y,$,O)},v=y(g,"unsortedSegmentSum",i,b,o),w=ot({inputs:{x:v},backend:t,attrs:{shape:p}});let E=w;if(h!=null){l.push(w);const T=xu(h);E=Br({inputs:{x:E},backend:t,attrs:{perm:T}})}return l.forEach(T=>t.disposeIntermediateTensorInfo(T)),E}const gde={kernelName:ng,backendName:"webgl",kernelFunc:mde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yde=[ere,nre,ire,lre,cre,fre,mre,yre,wre,_re,Cre,Are,Mre,Pre,Ure,Bre,Wre,Xre,Kre,Zre,tie,lie,cie,pie,gie,Sie,Tie,Nie,Ose,kie,Pie,zie,jie,Kie,Zie,Jie,toe,ioe,loe,hoe,foe,moe,yoe,boe,Soe,Coe,Noe,koe,$oe,Poe,zoe,Goe,qoe,Zoe,eae,tae,sae,iae,aae,uae,hae,mae,xae,wae,_ae,Cae,Aae,Dae,Oae,Pse,Uae,$ie,Vae,Hae,qae,Use,Qae,nle,rle,lle,hle,mle,xle,Sle,Cle,Ale,kle,Fle,Ole,Ule,Wle,Hle,Xle,Kle,Zle,tue,iue,uue,yue,Vse,wue,Tue,Iue,Rue,xie,Due,Fue,Oue,zue,Gue,Bse,jue,que,Yue,Que,Jue,vie,fue,nce,oce,cce,Gse,pce,yce,wce,Tce,Nce,Rce,Dce,Pce,Uce,Vce,Hce,qce,Qce,the,ihe,lhe,oie,mue,hhe,fhe,mhe,yhe,vhe,whe,_he,Ehe,Ihe,Rhe,Mhe,$he,Phe,Uhe,Bhe,Whe,Hhe,pue,Zse,qhe,Zhe,Jhe,nde,ode,ude,Qse,hde,fde,gde,$ue];for(const n of yde)jv(n);var uS={},DR;function xde(){return DR||(DR=1,(function(){var n;function e(S){var R=0;return function(){return R<S.length?{done:!1,value:S[R++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(S,R,P){return S==Array.prototype||S==Object.prototype||(S[R]=P.value),S};function s(S){S=[typeof globalThis=="object"&&globalThis,S,typeof window=="object"&&window,typeof self=="object"&&self,typeof FN=="object"&&FN];for(var R=0;R<S.length;++R){var P=S[R];if(P&&P.Math==Math)return P}throw Error("Cannot find global object")}var r=s(this);function i(S,R){if(R)e:{var P=r;S=S.split(".");for(var L=0;L<S.length-1;L++){var Q=S[L];if(!(Q in P))break e;P=P[Q]}S=S[S.length-1],L=P[S],R=R(L),R!=L&&R!=null&&t(P,S,{configurable:!0,writable:!0,value:R})}}i("Symbol",function(S){function R(re){if(this instanceof R)throw new TypeError("Symbol is not a constructor");return new P(L+(re||"")+"_"+Q++,re)}function P(re,ne){this.h=re,t(this,"description",{configurable:!0,writable:!0,value:ne})}if(S)return S;P.prototype.toString=function(){return this.h};var L="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",Q=0;return R}),i("Symbol.iterator",function(S){if(S)return S;S=Symbol("Symbol.iterator");for(var R="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),P=0;P<R.length;P++){var L=r[R[P]];typeof L=="function"&&typeof L.prototype[S]!="function"&&t(L.prototype,S,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return S});function o(S){return S={next:S},S[Symbol.iterator]=function(){return this},S}function a(S){var R=typeof Symbol<"u"&&Symbol.iterator&&S[Symbol.iterator];return R?R.call(S):{next:e(S)}}function l(S){if(!(S instanceof Array)){S=a(S);for(var R,P=[];!(R=S.next()).done;)P.push(R.value);S=P}return S}var u=typeof Object.assign=="function"?Object.assign:function(S,R){for(var P=1;P<arguments.length;P++){var L=arguments[P];if(L)for(var Q in L)Object.prototype.hasOwnProperty.call(L,Q)&&(S[Q]=L[Q])}return S};i("Object.assign",function(S){return S||u});var h=typeof Object.create=="function"?Object.create:function(S){function R(){}return R.prototype=S,new R},d;if(typeof Object.setPrototypeOf=="function")d=Object.setPrototypeOf;else{var p;e:{var m={a:!0},g={};try{g.__proto__=m,p=g.a;break e}catch{}p=!1}d=p?function(S,R){if(S.__proto__=R,S.__proto__!==R)throw new TypeError(S+" is not extensible");return S}:null}var b=d;function y(S,R){if(S.prototype=h(R.prototype),S.prototype.constructor=S,b)b(S,R);else for(var P in R)if(P!="prototype")if(Object.defineProperties){var L=Object.getOwnPropertyDescriptor(R,P);L&&Object.defineProperty(S,P,L)}else S[P]=R[P];S.za=R.prototype}function v(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function w(S){if(S.m)throw new TypeError("Generator is already running");S.m=!0}v.prototype.u=function(S){this.i=S};function E(S,R){S.l={ma:R,na:!0},S.h=S.s||S.v}v.prototype.return=function(S){this.l={return:S},this.h=this.v};function T(S,R,P){return S.h=P,{value:R}}function I(S){this.h=new v,this.i=S}function M(S,R){w(S.h);var P=S.h.j;return P?$(S,"return"in P?P.return:function(L){return{value:L,done:!0}},R,S.h.return):(S.h.return(R),O(S))}function $(S,R,P,L){try{var Q=R.call(S.h.j,P);if(!(Q instanceof Object))throw new TypeError("Iterator result "+Q+" is not an object");if(!Q.done)return S.h.m=!1,Q;var re=Q.value}catch(ne){return S.h.j=null,E(S.h,ne),O(S)}return S.h.j=null,L.call(S.h,re),O(S)}function O(S){for(;S.h.h;)try{var R=S.i(S.h);if(R)return S.h.m=!1,{value:R.value,done:!1}}catch(P){S.h.i=void 0,E(S.h,P)}if(S.h.m=!1,S.h.l){if(R=S.h.l,S.h.l=null,R.na)throw R.ma;return{value:R.return,done:!0}}return{value:void 0,done:!0}}function k(S){this.next=function(R){return w(S.h),S.h.j?R=$(S,S.h.j.next,R,S.h.u):(S.h.u(R),R=O(S)),R},this.throw=function(R){return w(S.h),S.h.j?R=$(S,S.h.j.throw,R,S.h.u):(E(S.h,R),R=O(S)),R},this.return=function(R){return M(S,R)},this[Symbol.iterator]=function(){return this}}function N(S){function R(L){return S.next(L)}function P(L){return S.throw(L)}return new Promise(function(L,Q){function re(ne){ne.done?L(ne.value):Promise.resolve(ne.value).then(R,P).then(re,Q)}re(S.next())})}function A(S){return N(new k(new I(S)))}i("Promise",function(S){function R(ne){this.i=0,this.j=void 0,this.h=[],this.u=!1;var me=this.l();try{ne(me.resolve,me.reject)}catch(Re){me.reject(Re)}}function P(){this.h=null}function L(ne){return ne instanceof R?ne:new R(function(me){me(ne)})}if(S)return S;P.prototype.i=function(ne){if(this.h==null){this.h=[];var me=this;this.j(function(){me.m()})}this.h.push(ne)};var Q=r.setTimeout;P.prototype.j=function(ne){Q(ne,0)},P.prototype.m=function(){for(;this.h&&this.h.length;){var ne=this.h;this.h=[];for(var me=0;me<ne.length;++me){var Re=ne[me];ne[me]=null;try{Re()}catch(qe){this.l(qe)}}}this.h=null},P.prototype.l=function(ne){this.j(function(){throw ne})},R.prototype.l=function(){function ne(qe){return function(rt){Re||(Re=!0,qe.call(me,rt))}}var me=this,Re=!1;return{resolve:ne(this.I),reject:ne(this.m)}},R.prototype.I=function(ne){if(ne===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(ne instanceof R)this.L(ne);else{e:switch(typeof ne){case"object":var me=ne!=null;break e;case"function":me=!0;break e;default:me=!1}me?this.F(ne):this.s(ne)}},R.prototype.F=function(ne){var me=void 0;try{me=ne.then}catch(Re){this.m(Re);return}typeof me=="function"?this.M(me,ne):this.s(ne)},R.prototype.m=function(ne){this.v(2,ne)},R.prototype.s=function(ne){this.v(1,ne)},R.prototype.v=function(ne,me){if(this.i!=0)throw Error("Cannot settle("+ne+", "+me+"): Promise already settled in state"+this.i);this.i=ne,this.j=me,this.i===2&&this.K(),this.H()},R.prototype.K=function(){var ne=this;Q(function(){if(ne.D()){var me=r.console;typeof me<"u"&&me.error(ne.j)}},1)},R.prototype.D=function(){if(this.u)return!1;var ne=r.CustomEvent,me=r.Event,Re=r.dispatchEvent;return typeof Re>"u"?!0:(typeof ne=="function"?ne=new ne("unhandledrejection",{cancelable:!0}):typeof me=="function"?ne=new me("unhandledrejection",{cancelable:!0}):(ne=r.document.createEvent("CustomEvent"),ne.initCustomEvent("unhandledrejection",!1,!0,ne)),ne.promise=this,ne.reason=this.j,Re(ne))},R.prototype.H=function(){if(this.h!=null){for(var ne=0;ne<this.h.length;++ne)re.i(this.h[ne]);this.h=null}};var re=new P;return R.prototype.L=function(ne){var me=this.l();ne.T(me.resolve,me.reject)},R.prototype.M=function(ne,me){var Re=this.l();try{ne.call(me,Re.resolve,Re.reject)}catch(qe){Re.reject(qe)}},R.prototype.then=function(ne,me){function Re(Ot,ft){return typeof Ot=="function"?function(Vt){try{qe(Ot(Vt))}catch(Jt){rt(Jt)}}:ft}var qe,rt,Ht=new R(function(Ot,ft){qe=Ot,rt=ft});return this.T(Re(ne,qe),Re(me,rt)),Ht},R.prototype.catch=function(ne){return this.then(void 0,ne)},R.prototype.T=function(ne,me){function Re(){switch(qe.i){case 1:ne(qe.j);break;case 2:me(qe.j);break;default:throw Error("Unexpected state: "+qe.i)}}var qe=this;this.h==null?re.i(Re):this.h.push(Re),this.u=!0},R.resolve=L,R.reject=function(ne){return new R(function(me,Re){Re(ne)})},R.race=function(ne){return new R(function(me,Re){for(var qe=a(ne),rt=qe.next();!rt.done;rt=qe.next())L(rt.value).T(me,Re)})},R.all=function(ne){var me=a(ne),Re=me.next();return Re.done?L([]):new R(function(qe,rt){function Ht(Vt){return function(Jt){Ot[Vt]=Jt,ft--,ft==0&&qe(Ot)}}var Ot=[],ft=0;do Ot.push(void 0),ft++,L(Re.value).T(Ht(Ot.length-1),rt),Re=me.next();while(!Re.done)})},R});function B(S,R){S instanceof String&&(S+="");var P=0,L=!1,Q={next:function(){if(!L&&P<S.length){var re=P++;return{value:R(re,S[re]),done:!1}}return L=!0,{done:!0,value:void 0}}};return Q[Symbol.iterator]=function(){return Q},Q}i("Array.prototype.keys",function(S){return S||function(){return B(this,function(R){return R})}}),i("Array.prototype.fill",function(S){return S||function(R,P,L){var Q=this.length||0;for(0>P&&(P=Math.max(0,Q+P)),(L==null||L>Q)&&(L=Q),L=Number(L),0>L&&(L=Math.max(0,Q+L)),P=Number(P||0);P<L;P++)this[P]=R;return this}});function W(S){return S||Array.prototype.fill}i("Int8Array.prototype.fill",W),i("Uint8Array.prototype.fill",W),i("Uint8ClampedArray.prototype.fill",W),i("Int16Array.prototype.fill",W),i("Uint16Array.prototype.fill",W),i("Int32Array.prototype.fill",W),i("Uint32Array.prototype.fill",W),i("Float32Array.prototype.fill",W),i("Float64Array.prototype.fill",W),i("Object.is",function(S){return S||function(R,P){return R===P?R!==0||1/R===1/P:R!==R&&P!==P}}),i("Array.prototype.includes",function(S){return S||function(R,P){var L=this;L instanceof String&&(L=String(L));var Q=L.length;for(P=P||0,0>P&&(P=Math.max(P+Q,0));P<Q;P++){var re=L[P];if(re===R||Object.is(re,R))return!0}return!1}}),i("String.prototype.includes",function(S){return S||function(R,P){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(R instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(R,P||0)!==-1}});var K=this||self;function q(S,R){S=S.split(".");var P=K;S[0]in P||typeof P.execScript>"u"||P.execScript("var "+S[0]);for(var L;S.length&&(L=S.shift());)S.length||R===void 0?P[L]&&P[L]!==Object.prototype[L]?P=P[L]:P=P[L]={}:P[L]=R}function Y(S){var R;e:{if((R=K.navigator)&&(R=R.userAgent))break e;R=""}return R.indexOf(S)!=-1}var J=Array.prototype.map?function(S,R){return Array.prototype.map.call(S,R,void 0)}:function(S,R){for(var P=S.length,L=Array(P),Q=typeof S=="string"?S.split(""):S,re=0;re<P;re++)re in Q&&(L[re]=R.call(void 0,Q[re],re,S));return L},G={},ee=null;function te(S){var R=S.length,P=3*R/4;P%3?P=Math.floor(P):"=.".indexOf(S[R-1])!=-1&&(P="=.".indexOf(S[R-2])!=-1?P-2:P-1);var L=new Uint8Array(P),Q=0;return j(S,function(re){L[Q++]=re}),Q!==P?L.subarray(0,Q):L}function j(S,R){function P(Re){for(;L<S.length;){var qe=S.charAt(L++),rt=ee[qe];if(rt!=null)return rt;if(!/^[\s\xa0]*$/.test(qe))throw Error("Unknown base64 encoding at char: "+qe)}return Re}se();for(var L=0;;){var Q=P(-1),re=P(0),ne=P(64),me=P(64);if(me===64&&Q===-1)break;R(Q<<2|re>>4),ne!=64&&(R(re<<4&240|ne>>2),me!=64&&R(ne<<6&192|me))}}function se(){if(!ee){ee={};for(var S="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),R=["+/=","+/","-_=","-_.","-_"],P=0;5>P;P++){var L=S.concat(R[P].split(""));G[P]=L;for(var Q=0;Q<L.length;Q++){var re=L[Q];ee[re]===void 0&&(ee[re]=Q)}}}}var be=typeof Uint8Array<"u",ae=!(Y("Trident")||Y("MSIE"))&&typeof K.btoa=="function";function de(S){if(!ae){var R;R===void 0&&(R=0),se(),R=G[R];for(var P=Array(Math.floor(S.length/3)),L=R[64]||"",Q=0,re=0;Q<S.length-2;Q+=3){var ne=S[Q],me=S[Q+1],Re=S[Q+2],qe=R[ne>>2];ne=R[(ne&3)<<4|me>>4],me=R[(me&15)<<2|Re>>6],Re=R[Re&63],P[re++]=qe+ne+me+Re}switch(qe=0,Re=L,S.length-Q){case 2:qe=S[Q+1],Re=R[(qe&15)<<2]||L;case 1:S=S[Q],P[re]=R[S>>2]+R[(S&3)<<4|qe>>4]+Re+L}return P.join("")}for(R="";10240<S.length;)R+=String.fromCharCode.apply(null,S.subarray(0,10240)),S=S.subarray(10240);return R+=String.fromCharCode.apply(null,S),btoa(R)}var Se=RegExp("[-_.]","g");function Te(S){switch(S){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function De(S){if(!ae)return te(S);Se.test(S)&&(S=S.replace(Se,Te)),S=atob(S);for(var R=new Uint8Array(S.length),P=0;P<S.length;P++)R[P]=S.charCodeAt(P);return R}var Ue;function We(){return Ue||(Ue=new Uint8Array(0))}var lt={},Ft=typeof Uint8Array.prototype.slice=="function",Je=0,ie=0;function Kt(S){var R=0>S;S=Math.abs(S);var P=S>>>0;S=Math.floor((S-P)/4294967296),R&&(P=a(_t(P,S)),R=P.next().value,S=P.next().value,P=R),Je=P>>>0,ie=S>>>0}var bt=typeof BigInt=="function";function _t(S,R){return R=~R,S?S=~S+1:R+=1,[S,R]}function tt(S,R){this.i=S>>>0,this.h=R>>>0}function nn(S){if(!S)return nt||(nt=new tt(0,0));if(!/^-?\d+$/.test(S))return null;if(16>S.length)Kt(Number(S));else if(bt)S=BigInt(S),Je=Number(S&BigInt(4294967295))>>>0,ie=Number(S>>BigInt(32)&BigInt(4294967295));else{var R=+(S[0]==="-");ie=Je=0;for(var P=S.length,L=R,Q=(P-R)%6+R;Q<=P;L=Q,Q+=6)L=Number(S.slice(L,Q)),ie*=1e6,Je=1e6*Je+L,4294967296<=Je&&(ie+=Je/4294967296|0,Je%=4294967296);R&&(R=a(_t(Je,ie)),S=R.next().value,R=R.next().value,Je=S,ie=R)}return new tt(Je,ie)}var nt;function Z(S,R){return Error("Invalid wire type: "+S+" (at position "+R+")")}function V(){return Error("Failed to read varint, encoding is invalid.")}function Ie(S,R){return Error("Tried to read past the end of the data "+R+" > "+S)}function Oe(){throw Error("Invalid UTF8")}function Be(S,R){return R=String.fromCharCode.apply(null,R),S==null?R:S+R}var Le=void 0,gt,et=typeof TextDecoder<"u",ut,Zt=typeof TextEncoder<"u",Xe;function yt(S){if(S!==lt)throw Error("illegal external caller")}function Rt(S,R){if(yt(R),this.V=S,S!=null&&S.length===0)throw Error("ByteString should be constructed with non-empty values")}function Ut(){return Xe||(Xe=new Rt(null,lt))}function xt(S){yt(lt);var R=S.V;return R=R==null||be&&R!=null&&R instanceof Uint8Array?R:typeof R=="string"?De(R):null,R==null?R:S.V=R}function ln(S){if(typeof S=="string")return{buffer:De(S),C:!1};if(Array.isArray(S))return{buffer:new Uint8Array(S),C:!1};if(S.constructor===Uint8Array)return{buffer:S,C:!1};if(S.constructor===ArrayBuffer)return{buffer:new Uint8Array(S),C:!1};if(S.constructor===Rt)return{buffer:xt(S)||We(),C:!0};if(S instanceof Uint8Array)return{buffer:new Uint8Array(S.buffer,S.byteOffset,S.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Xt(S,R){this.i=null,this.m=!1,this.h=this.j=this.l=0,En(this,S,R)}function En(S,R,P){P=P===void 0?{}:P,S.S=P.S===void 0?!1:P.S,R&&(R=ln(R),S.i=R.buffer,S.m=R.C,S.l=0,S.j=S.i.length,S.h=S.l)}Xt.prototype.reset=function(){this.h=this.l};function ge(S,R){if(S.h=R,R>S.j)throw Ie(S.j,R)}function st(S){var R=S.i,P=S.h,L=R[P++],Q=L&127;if(L&128&&(L=R[P++],Q|=(L&127)<<7,L&128&&(L=R[P++],Q|=(L&127)<<14,L&128&&(L=R[P++],Q|=(L&127)<<21,L&128&&(L=R[P++],Q|=L<<28,L&128&&R[P++]&128&&R[P++]&128&&R[P++]&128&&R[P++]&128&&R[P++]&128)))))throw V();return ge(S,P),Q}function Pe(S,R){if(0>R)throw Error("Tried to read a negative byte length: "+R);var P=S.h,L=P+R;if(L>S.j)throw Ie(R,S.j-P);return S.h=L,P}var ze=[];function ct(){this.h=[]}ct.prototype.length=function(){return this.h.length},ct.prototype.end=function(){var S=this.h;return this.h=[],S};function ht(S,R,P){for(;0<P||127<R;)S.h.push(R&127|128),R=(R>>>7|P<<25)>>>0,P>>>=7;S.h.push(R)}function Bt(S,R){for(;127<R;)S.h.push(R&127|128),R>>>=7;S.h.push(R)}function On(S,R){if(ze.length){var P=ze.pop();En(P,S,R),S=P}else S=new Xt(S,R);this.h=S,this.j=this.h.h,this.i=this.l=-1,this.setOptions(R)}On.prototype.setOptions=function(S){S=S===void 0?{}:S,this.ca=S.ca===void 0?!1:S.ca},On.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function ps(S){var R=S.h;if(R.h==R.j)return!1;S.j=S.h.h;var P=st(S.h)>>>0;if(R=P>>>3,P&=7,!(0<=P&&5>=P))throw Z(P,S.j);if(1>R)throw Error("Invalid field number: "+R+" (at position "+S.j+")");return S.l=R,S.i=P,!0}function fn(S){switch(S.i){case 0:if(S.i!=0)fn(S);else e:{S=S.h;for(var R=S.h,P=R+10,L=S.i;R<P;)if(!(L[R++]&128)){ge(S,R);break e}throw V()}break;case 1:S=S.h,ge(S,S.h+8);break;case 2:S.i!=2?fn(S):(R=st(S.h)>>>0,S=S.h,ge(S,S.h+R));break;case 5:S=S.h,ge(S,S.h+4);break;case 3:R=S.l;do{if(!ps(S))throw Error("Unmatched start-group tag: stream EOF");if(S.i==4){if(S.l!=R)throw Error("Unmatched end-group tag");break}fn(S)}while(!0);break;default:throw Z(S.i,S.j)}}var Us=[];function gr(){this.j=[],this.i=0,this.h=new ct}function Ci(S,R){R.length!==0&&(S.j.push(R),S.i+=R.length)}function zo(S,R){if(R=R.R){Ci(S,S.h.end());for(var P=0;P<R.length;P++)Ci(S,xt(R[P])||We())}}var zs=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function yr(S,R){return zs?S[zs]|=R:S.A!==void 0?S.A|=R:(Object.defineProperties(S,{A:{value:R,configurable:!0,writable:!0,enumerable:!1}}),R)}function Bo(S,R){zs?S[zs]&&(S[zs]&=~R):S.A!==void 0&&(S.A&=~R)}function Ln(S){var R;return zs?R=S[zs]:R=S.A,R??0}function Bs(S,R){zs?S[zs]=R:S.A!==void 0?S.A=R:Object.defineProperties(S,{A:{value:R,configurable:!0,writable:!0,enumerable:!1}})}function hl(S){return yr(S,1),S}function dl(S,R){Bs(R,(S|0)&-51)}function Sa(S,R){Bs(R,(S|18)&-41)}var ri={};function _a(S){return S!==null&&typeof S=="object"&&!Array.isArray(S)&&S.constructor===Object}var Vo,Jc=[];Bs(Jc,23),Vo=Object.freeze(Jc);function fl(S){if(Ln(S.o)&2)throw Error("Cannot mutate an immutable Message")}function pl(S){var R=S.length;(R=R?S[R-1]:void 0)&&_a(R)?R.g=1:(R={},S.push((R.g=1,R)))}function Eu(S){var R=S.i+S.G;return S.B||(S.B=S.o[R]={})}function X(S,R){return R===-1?null:R>=S.i?S.B?S.B[R]:void 0:S.o[R+S.G]}function ve(S,R,P,L){fl(S),Ae(S,R,P,L)}function Ae(S,R,P,L){S.j&&(S.j=void 0),R>=S.i||L?Eu(S)[R]=P:(S.o[R+S.G]=P,(S=S.B)&&R in S&&delete S[R])}function Ee(S,R,P,L){var Q=X(S,R);Array.isArray(Q)||(Q=Vo);var re=Ln(Q);if(re&1||hl(Q),L)re&2||yr(Q,2),P&1||Object.freeze(Q);else{L=!(P&2);var ne=re&2;P&1||!ne?L&&re&16&&!ne&&Bo(Q,16):(Q=hl(Array.prototype.slice.call(Q)),Ae(S,R,Q))}return Q}function we(S,R){var P=X(S,R),L=P==null?P:typeof P=="number"||P==="NaN"||P==="Infinity"||P==="-Infinity"?Number(P):void 0;return L!=null&&L!==P&&Ae(S,R,L),L}function Ke(S,R,P,L,Q){S.h||(S.h={});var re=S.h[P],ne=Ee(S,P,3,Q);if(!re){var me=ne;re=[];var Re=!!(Ln(S.o)&16);ne=!!(Ln(me)&2);var qe=me;!Q&&ne&&(me=Array.prototype.slice.call(me));for(var rt=ne,Ht=0;Ht<me.length;Ht++){var Ot=me[Ht],ft=R,Vt=!1;if(Vt=Vt===void 0?!1:Vt,Ot=Array.isArray(Ot)?new ft(Ot):Vt?new ft:void 0,Ot!==void 0){ft=Ot.o;var Jt=Vt=Ln(ft);ne&&(Jt|=2),Re&&(Jt|=16),Jt!=Vt&&Bs(ft,Jt),ft=Jt,rt=rt||!!(2&ft),re.push(Ot)}}return S.h[P]=re,Re=Ln(me),R=Re|33,R=rt?R&-9:R|8,Re!=R&&(rt=me,Object.isFrozen(rt)&&(rt=Array.prototype.slice.call(rt)),Bs(rt,R),me=rt),qe!==me&&Ae(S,P,me),(Q||L&&ne)&&yr(re,2),L&&Object.freeze(re),re}return Q||(Q=Object.isFrozen(re),L&&!Q?Object.freeze(re):!L&&Q&&(re=Array.prototype.slice.call(re),S.h[P]=re)),re}function at(S,R,P){var L=!!(Ln(S.o)&2);if(R=Ke(S,R,P,L,L),S=Ee(S,P,3,L),!(L||Ln(S)&8)){for(L=0;L<R.length;L++){if(P=R[L],Ln(P.o)&2){var Q=Vs(P,!1);Q.j=P}else Q=P;P!==Q&&(R[L]=Q,S[L]=Q.o)}yr(S,8)}return R}function it(S,R,P){if(P!=null&&typeof P!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof P+": "+P);ve(S,R,P)}function wt(S,R,P,L,Q){fl(S);var re=Ke(S,P,R,!1,!1);return P=L??new P,S=Ee(S,R,2,!1),Q!=null?(re.splice(Q,0,P),S.splice(Q,0,P.o)):(re.push(P),S.push(P.o)),P.C()&&Bo(S,8),P}function zt(S,R){return S??R}function Dt(S,R,P){return P=P===void 0?0:P,zt(we(S,R),P)}var St;function xn(S){switch(typeof S){case"number":return isFinite(S)?S:String(S);case"object":if(S)if(Array.isArray(S)){if(Ln(S)&128)return S=Array.prototype.slice.call(S),pl(S),S}else{if(be&&S!=null&&S instanceof Uint8Array)return de(S);if(S instanceof Rt){var R=S.V;return R==null?"":typeof R=="string"?R:S.V=de(R)}}}return S}function Qt(S,R,P,L){if(S!=null){if(Array.isArray(S))S=qn(S,R,P,L!==void 0);else if(_a(S)){var Q={},re;for(re in S)Q[re]=Qt(S[re],R,P,L);S=Q}else S=R(S,L);return S}}function qn(S,R,P,L){var Q=Ln(S);L=L?!!(Q&16):void 0,S=Array.prototype.slice.call(S);for(var re=0;re<S.length;re++)S[re]=Qt(S[re],R,P,L);return P(Q,S),S}function Kn(S){return S.ja===ri?S.toJSON():xn(S)}function bn(S,R){S&128&&pl(R)}function Pt(S,R,P){if(P=P===void 0?Sa:P,S!=null){if(be&&S instanceof Uint8Array)return S.length?new Rt(new Uint8Array(S),lt):Ut();if(Array.isArray(S)){var L=Ln(S);return L&2?S:R&&!(L&32)&&(L&16||L===0)?(Bs(S,L|2),S):(S=qn(S,Pt,L&4?Sa:P,!0),R=Ln(S),R&4&&R&2&&Object.freeze(S),S)}return S.ja===ri?hn(S):S}}function Zn(S,R,P,L,Q,re,ne){if(S=S.h&&S.h[P]){if(L=Ln(S),L&2?L=S:(re=J(S,hn),Sa(L,re),Object.freeze(re),L=re),fl(R),ne=L==null?Vo:hl([]),L!=null){for(re=!!L.length,S=0;S<L.length;S++){var me=L[S];re=re&&!(Ln(me.o)&2),ne[S]=me.o}re=(re?8:0)|1,S=Ln(ne),(S&re)!==re&&(Object.isFrozen(ne)&&(ne=Array.prototype.slice.call(ne)),Bs(ne,S|re)),R.h||(R.h={}),R.h[P]=L}else R.h&&(R.h[P]=void 0);Ae(R,P,ne,Q)}else ve(R,P,Pt(L,re,ne),Q)}function hn(S){return Ln(S.o)&2||(S=Vs(S,!0),yr(S.o,2)),S}function Vs(S,R){var P=S.o,L=[];yr(L,16);var Q=S.constructor.h;if(Q&&L.push(Q),Q=S.B,Q){L.length=P.length,L.fill(void 0,L.length,P.length);var re={};L[L.length-1]=re}Ln(P)&128&&pl(L),R=R||S.C()?Sa:dl,re=S.constructor,St=L,L=new re(L),St=void 0,S.R&&(L.R=S.R.slice()),re=!!(Ln(P)&16);for(var ne=Q?P.length-1:P.length,me=0;me<ne;me++)Zn(S,L,me-S.G,P[me],!1,re,R);if(Q)for(var Re in Q)Zn(S,L,+Re,Q[Re],!0,re,R);return L}function us(S,R,P){S==null&&(S=St),St=void 0;var L=this.constructor.i||0,Q=0<L,re=this.constructor.h,ne=!1;if(S==null){S=re?[re]:[];var me=48,Re=!0;Q&&(L=0,me|=128),Bs(S,me)}else{if(!Array.isArray(S)||re&&re!==S[0])throw Error();var qe=me=yr(S,0);if((Re=(16&qe)!==0)&&((ne=(32&qe)!==0)||(qe|=32)),Q){if(128&qe)L=0;else if(0<S.length){var rt=S[S.length-1];if(_a(rt)&&"g"in rt){L=0,qe|=128,delete rt.g;var Ht=!0,Ot;for(Ot in rt){Ht=!1;break}Ht&&S.pop()}}}else if(128&qe)throw Error();me!==qe&&Bs(S,qe)}this.G=(re?0:-1)-L,this.h=void 0,this.o=S;e:{if(re=this.o.length,L=re-1,re&&(re=this.o[L],_a(re))){this.B=re,this.i=L-this.G;break e}R!==void 0&&-1<R?(this.i=Math.max(R,L+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!Q&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(P){R=Re&&!ne&&!0,Q=this.i;var ft;for(Re=0;Re<P.length;Re++)ne=P[Re],ne<Q?(ne+=this.G,(L=S[ne])?nr(L,R):S[ne]=Vo):(ft||(ft=Eu(this)),(L=ft[ne])?nr(L,R):ft[ne]=Vo)}}us.prototype.toJSON=function(){return qn(this.o,Kn,bn)},us.prototype.C=function(){return!!(Ln(this.o)&2)};function nr(S,R){if(Array.isArray(S)){var P=Ln(S),L=1;!R||P&2||(L|=16),(P&L)!==L&&Bs(S,P|L)}}us.prototype.ja=ri,us.prototype.toString=function(){return this.o.toString()};function ji(S,R,P){if(P){var L={},Q;for(Q in P){var re=P[Q],ne=re.ra;ne||(L.J=re.xa||re.oa.W,re.ia?(L.aa=eh(re.ia),ne=function(me){return function(Re,qe,rt){return me.J(Re,qe,rt,me.aa)}}(L)):re.ka?(L.Z=Pf(re.da.P,re.ka),ne=function(me){return function(Re,qe,rt){return me.J(Re,qe,rt,me.Z)}}(L)):ne=L.J,re.ra=ne),ne(R,S,re.da),L={J:L.J,aa:L.aa,Z:L.Z}}}zo(R,S)}var Nn=Symbol();function Ws(S,R,P){return S[Nn]||(S[Nn]=function(L,Q){return R(L,Q,P)})}function _s(S){var R=S[Nn];if(!R){var P=nh(S);R=function(L,Q){return gl(L,Q,P)},S[Nn]=R}return R}function Gs(S){var R=S.ia;if(R)return _s(R);if(R=S.wa)return Ws(S.da.P,R,S.ka)}function As(S){var R=Gs(S),P=S.da,L=S.oa.U;return R?function(Q,re){return L(Q,re,P,R)}:function(Q,re){return L(Q,re,P)}}function wn(S,R){var P=S[R];return typeof P=="function"&&P.length===0&&(P=P(),S[R]=P),Array.isArray(P)&&(ii in P||ml in P||0<P.length&&typeof P[0]=="function")?P:void 0}function Ii(S,R,P,L,Q,re){R.P=S[0];var ne=1;if(S.length>ne&&typeof S[ne]!="number"){var me=S[ne++];P(R,me)}for(;ne<S.length;){P=S[ne++];for(var Re=ne+1;Re<S.length&&typeof S[Re]!="number";)Re++;switch(me=S[ne++],Re-=ne,Re){case 0:L(R,P,me);break;case 1:(Re=wn(S,ne))?(ne++,Q(R,P,me,Re)):L(R,P,me,S[ne++]);break;case 2:Re=ne++,Re=wn(S,Re),Q(R,P,me,Re,S[ne++]);break;case 3:re(R,P,me,S[ne++],S[ne++],S[ne++]);break;case 4:re(R,P,me,S[ne++],S[ne++],S[ne++],S[ne++]);break;default:throw Error("unexpected number of binary field arguments: "+Re)}}return R}var Cu=Symbol();function eh(S){var R=S[Cu];if(!R){var P=Xi(S);R=function(L,Q){return Xg(L,Q,P)},S[Cu]=R}return R}function Pf(S,R){var P=S[Cu];return P||(P=function(L,Q){return ji(L,Q,R)},S[Cu]=P),P}var ml=Symbol();function jg(S,R){S.push(R)}function Of(S,R,P){S.push(R,P.W)}function th(S,R,P,L){var Q=eh(L),re=Xi(L).P,ne=P.W;S.push(R,function(me,Re,qe){return ne(me,Re,qe,re,Q)})}function Wo(S,R,P,L,Q,re){var ne=Pf(L,re),me=P.W;S.push(R,function(Re,qe,rt){return me(Re,qe,rt,L,ne)})}function Xi(S){var R=S[ml];return R||(R=Ii(S,S[ml]=[],jg,Of,th,Wo),ii in S&&ml in S&&(S.length=0),R)}var ii=Symbol();function Iu(S,R){S[0]=R}function Nu(S,R,P,L){var Q=P.U;S[R]=L?function(re,ne,me){return Q(re,ne,me,L)}:Q}function Go(S,R,P,L,Q){var re=P.U,ne=_s(L),me=nh(L).P;S[R]=function(Re,qe,rt){return re(Re,qe,rt,me,ne,Q)}}function lw(S,R,P,L,Q,re,ne){var me=P.U,Re=Ws(L,Q,re);S[R]=function(qe,rt,Ht){return me(qe,rt,Ht,L,Re,ne)}}function nh(S){var R=S[ii];return R||(R=Ii(S,S[ii]={},Iu,Nu,Go,lw),ii in S&&ml in S&&(S.length=0),R)}function gl(S,R,P){for(;ps(R)&&R.i!=4;){var L=R.l,Q=P[L];if(!Q){var re=P[0];re&&(re=re[L])&&(Q=P[L]=As(re))}if(!Q||!Q(R,S,L)){Q=R,L=S,re=Q.j,fn(Q);var ne=Q;if(!ne.ca){if(Q=ne.h.h-re,ne.h.h=re,ne=ne.h,Q==0)Q=Ut();else{if(re=Pe(ne,Q),ne.S&&ne.m)Q=ne.i.subarray(re,re+Q);else{ne=ne.i;var me=re;Q=re+Q,Q=me===Q?We():Ft?ne.slice(me,Q):new Uint8Array(ne.subarray(me,Q))}Q=Q.length==0?Ut():new Rt(Q,lt)}(re=L.R)?re.push(Q):L.R=[Q]}}}return S}function Xg(S,R,P){for(var L=P.length,Q=L%2==1,re=Q?1:0;re<L;re+=2)(0,P[re+1])(R,S,P[re]);ji(S,R,Q?P[0]:void 0)}function yl(S,R){return{U:S,W:R}}var Tr=yl(function(S,R,P){if(S.i!==5)return!1;S=S.h;var L=S.i,Q=S.h,re=L[Q],ne=L[Q+1],me=L[Q+2];return L=L[Q+3],ge(S,S.h+4),ne=(re<<0|ne<<8|me<<16|L<<24)>>>0,S=2*(ne>>31)+1,re=ne>>>23&255,ne&=8388607,ve(R,P,re==255?ne?NaN:1/0*S:re==0?S*Math.pow(2,-149)*ne:S*Math.pow(2,re-150)*(ne+Math.pow(2,23))),!0},function(S,R,P){if(R=we(R,P),R!=null){Bt(S.h,8*P+5),S=S.h;var L=+R;L===0?0<1/L?Je=ie=0:(ie=0,Je=2147483648):isNaN(L)?(ie=0,Je=2147483647):(L=(P=0>L?-2147483648:0)?-L:L,34028234663852886e22<L?(ie=0,Je=(P|2139095040)>>>0):11754943508222875e-54>L?(L=Math.round(L/Math.pow(2,-149)),ie=0,Je=(P|L)>>>0):(R=Math.floor(Math.log(L)/Math.LN2),L*=Math.pow(2,-R),L=Math.round(8388608*L),16777216<=L&&++R,ie=0,Je=(P|R+127<<23|L&8388607)>>>0)),P=Je,S.h.push(P>>>0&255),S.h.push(P>>>8&255),S.h.push(P>>>16&255),S.h.push(P>>>24&255)}}),qg=yl(function(S,R,P){if(S.i!==0)return!1;var L=S.h,Q=0,re=S=0,ne=L.i,me=L.h;do{var Re=ne[me++];Q|=(Re&127)<<re,re+=7}while(32>re&&Re&128);for(32<re&&(S|=(Re&127)>>4),re=3;32>re&&Re&128;re+=7)Re=ne[me++],S|=(Re&127)<<re;if(ge(L,me),128>Re)L=Q>>>0,Re=S>>>0,(S=Re&2147483648)&&(L=~L+1>>>0,Re=~Re>>>0,L==0&&(Re=Re+1>>>0)),L=4294967296*Re+(L>>>0);else throw V();return ve(R,P,S?-L:L),!0},function(S,R,P){R=X(R,P),R!=null&&(typeof R=="string"&&nn(R),R!=null&&(Bt(S.h,8*P),typeof R=="number"?(S=S.h,Kt(R),ht(S,Je,ie)):(P=nn(R),ht(S.h,P.i,P.h))))}),uw=yl(function(S,R,P){return S.i!==0?!1:(ve(R,P,st(S.h)),!0)},function(S,R,P){if(R=X(R,P),R!=null&&R!=null)if(Bt(S.h,8*P),S=S.h,P=R,0<=P)Bt(S,P);else{for(R=0;9>R;R++)S.h.push(P&127|128),P>>=7;S.h.push(1)}}),xl=yl(function(S,R,P){if(S.i!==2)return!1;var L=st(S.h)>>>0;S=S.h;var Q=Pe(S,L);if(S=S.i,et){var re=S,ne;(ne=gt)||(ne=gt=new TextDecoder("utf-8",{fatal:!0})),S=Q+L,re=Q===0&&S===re.length?re:re.subarray(Q,S);try{var me=ne.decode(re)}catch(Ht){if(Le===void 0){try{ne.decode(new Uint8Array([128]))}catch{}try{ne.decode(new Uint8Array([97])),Le=!0}catch{Le=!1}}throw!Le&&(gt=void 0),Ht}}else{me=Q,L=me+L,Q=[];for(var Re=null,qe,rt;me<L;)qe=S[me++],128>qe?Q.push(qe):224>qe?me>=L?Oe():(rt=S[me++],194>qe||(rt&192)!==128?(me--,Oe()):Q.push((qe&31)<<6|rt&63)):240>qe?me>=L-1?Oe():(rt=S[me++],(rt&192)!==128||qe===224&&160>rt||qe===237&&160<=rt||((re=S[me++])&192)!==128?(me--,Oe()):Q.push((qe&15)<<12|(rt&63)<<6|re&63)):244>=qe?me>=L-2?Oe():(rt=S[me++],(rt&192)!==128||(qe<<28)+(rt-144)>>30||((re=S[me++])&192)!==128||((ne=S[me++])&192)!==128?(me--,Oe()):(qe=(qe&7)<<18|(rt&63)<<12|(re&63)<<6|ne&63,qe-=65536,Q.push((qe>>10&1023)+55296,(qe&1023)+56320))):Oe(),8192<=Q.length&&(Re=Be(Re,Q),Q.length=0);me=Be(Re,Q)}return ve(R,P,me),!0},function(S,R,P){if(R=X(R,P),R!=null){var L=!1;if(L=L===void 0?!1:L,Zt){if(L&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(R))throw Error("Found an unpaired surrogate");R=(ut||(ut=new TextEncoder)).encode(R)}else{for(var Q=0,re=new Uint8Array(3*R.length),ne=0;ne<R.length;ne++){var me=R.charCodeAt(ne);if(128>me)re[Q++]=me;else{if(2048>me)re[Q++]=me>>6|192;else{if(55296<=me&&57343>=me){if(56319>=me&&ne<R.length){var Re=R.charCodeAt(++ne);if(56320<=Re&&57343>=Re){me=1024*(me-55296)+Re-56320+65536,re[Q++]=me>>18|240,re[Q++]=me>>12&63|128,re[Q++]=me>>6&63|128,re[Q++]=me&63|128;continue}else ne--}if(L)throw Error("Found an unpaired surrogate");me=65533}re[Q++]=me>>12|224,re[Q++]=me>>6&63|128}re[Q++]=me&63|128}}R=Q===re.length?re:re.subarray(0,Q)}Bt(S.h,8*P+2),Bt(S.h,R.length),Ci(S,S.h.end()),Ci(S,R)}}),vl=yl(function(S,R,P,L,Q){if(S.i!==2)return!1;R=wt(R,P,L),P=S.h.j,L=st(S.h)>>>0;var re=S.h.h+L,ne=re-P;if(0>=ne&&(S.h.j=re,Q(R,S,void 0,void 0,void 0),ne=re-S.h.h),ne)throw Error("Message parsing ended unexpectedly. Expected to read "+(L+" bytes, instead read "+(L-ne)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return S.h.h=re,S.h.j=P,!0},function(S,R,P,L,Q){if(R=at(R,L,P),R!=null)for(L=0;L<R.length;L++){var re=S;Bt(re.h,8*P+2);var ne=re.h.end();Ci(re,ne),ne.push(re.i),re=ne,Q(R[L],S),ne=S;var me=re.pop();for(me=ne.i+ne.h.length()-me;127<me;)re.push(me&127|128),me>>>=7,ne.i++;re.push(me),ne.i++}});function Ho(S){return function(R,P){e:{if(Us.length){var L=Us.pop();L.setOptions(P),En(L.h,R,P),R=L}else R=new On(R,P);try{var Q=nh(S),re=gl(new Q.P,R,Q);break e}finally{Q=R.h,Q.i=null,Q.m=!1,Q.l=0,Q.j=0,Q.h=0,Q.S=!1,R.l=-1,R.i=-1,100>Us.length&&Us.push(R)}re=void 0}return re}}function bl(S){return function(){var R=new gr;Xg(this,R,Xi(S)),Ci(R,R.h.end());for(var P=new Uint8Array(R.i),L=R.j,Q=L.length,re=0,ne=0;ne<Q;ne++){var me=L[ne];P.set(me,re),re+=me.length}return R.j=[P],P}}function wl(S){us.call(this,S)}y(wl,us);var Kg=[wl,1,uw,2,Tr,3,xl,4,xl];wl.prototype.l=bl(Kg);function Au(S){us.call(this,S,-1,sh)}y(Au,us),Au.prototype.addClassification=function(S,R){return wt(this,1,wl,S,R),this};var sh=[1],Lf=Ho([Au,1,vl,Kg]);function Sl(S){us.call(this,S)}y(Sl,us);var ho=[Sl,1,Tr,2,Tr,3,Tr,4,Tr,5,Tr];Sl.prototype.l=bl(ho);function rh(S){us.call(this,S,-1,ih)}y(rh,us);var ih=[1],Yg=Ho([rh,1,vl,ho]);function Ta(S){us.call(this,S)}y(Ta,us);var Ru=[Ta,1,Tr,2,Tr,3,Tr,4,Tr,5,Tr,6,qg],Zg=Ho(Ru);Ta.prototype.l=bl(Ru);function Er(S,R,P){if(P=S.createShader(P===0?S.VERTEX_SHADER:S.FRAGMENT_SHADER),S.shaderSource(P,R),S.compileShader(P),!S.getShaderParameter(P,S.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+S.getShaderInfoLog(P));return P}function _l(S){return at(S,wl,1).map(function(R){var P=X(R,1);return{index:P??0,qa:Dt(R,2),label:X(R,3)!=null?zt(X(R,3),""):void 0,displayName:X(R,4)!=null?zt(X(R,4),""):void 0}})}function Uf(S){return{x:Dt(S,1),y:Dt(S,2),z:Dt(S,3),visibility:we(S,4)!=null?Dt(S,4):void 0}}function Ea(S,R){this.i=S,this.h=R,this.m=0}function Qg(S,R,P){return zf(S,R),typeof S.h.canvas.transferToImageBitmap=="function"?Promise.resolve(S.h.canvas.transferToImageBitmap()):P?Promise.resolve(S.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(S.h.canvas):(S.j===void 0&&(S.j=document.createElement("canvas")),new Promise(function(L){S.j.height=S.h.canvas.height,S.j.width=S.h.canvas.width,S.j.getContext("2d",{}).drawImage(S.h.canvas,0,0,S.h.canvas.width,S.h.canvas.height),L(S.j)}))}function zf(S,R){var P=S.h;if(S.s===void 0){var L=Er(P,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),Q=Er(P,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),re=P.createProgram();if(P.attachShader(re,L),P.attachShader(re,Q),P.linkProgram(re),!P.getProgramParameter(re,P.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+P.getProgramInfoLog(re));L=S.s=re,P.useProgram(L),Q=P.getUniformLocation(L,"sampler0"),S.l={O:P.getAttribLocation(L,"aVertex"),N:P.getAttribLocation(L,"aTex"),ya:Q},S.v=P.createBuffer(),P.bindBuffer(P.ARRAY_BUFFER,S.v),P.enableVertexAttribArray(S.l.O),P.vertexAttribPointer(S.l.O,2,P.FLOAT,!1,0,0),P.bufferData(P.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),P.STATIC_DRAW),P.bindBuffer(P.ARRAY_BUFFER,null),S.u=P.createBuffer(),P.bindBuffer(P.ARRAY_BUFFER,S.u),P.enableVertexAttribArray(S.l.N),P.vertexAttribPointer(S.l.N,2,P.FLOAT,!1,0,0),P.bufferData(P.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),P.STATIC_DRAW),P.bindBuffer(P.ARRAY_BUFFER,null),P.uniform1i(Q,0)}L=S.l,P.useProgram(S.s),P.canvas.width=R.width,P.canvas.height=R.height,P.viewport(0,0,R.width,R.height),P.activeTexture(P.TEXTURE0),S.i.bindTexture2d(R.glName),P.enableVertexAttribArray(L.O),P.bindBuffer(P.ARRAY_BUFFER,S.v),P.vertexAttribPointer(L.O,2,P.FLOAT,!1,0,0),P.enableVertexAttribArray(L.N),P.bindBuffer(P.ARRAY_BUFFER,S.u),P.vertexAttribPointer(L.N,2,P.FLOAT,!1,0,0),P.bindFramebuffer(P.DRAW_FRAMEBUFFER?P.DRAW_FRAMEBUFFER:P.FRAMEBUFFER,null),P.clearColor(0,0,0,0),P.clear(P.COLOR_BUFFER_BIT),P.colorMask(!0,!0,!0,!0),P.drawArrays(P.TRIANGLE_FAN,0,4),P.disableVertexAttribArray(L.O),P.disableVertexAttribArray(L.N),P.bindBuffer(P.ARRAY_BUFFER,null),S.i.bindTexture2d(0)}function Bf(S){this.h=S}var ku=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function oh(S,R){return R+S}function Vf(S,R){window[S]=R}function cw(S){var R=document.createElement("script");return R.setAttribute("src",S),R.setAttribute("crossorigin","anonymous"),new Promise(function(P){R.addEventListener("load",function(){P()},!1),R.addEventListener("error",function(){P()},!1),document.body.appendChild(R)})}function hw(){return A(function(S){switch(S.h){case 1:return S.s=2,T(S,WebAssembly.instantiate(ku),4);case 4:S.h=3,S.s=0;break;case 2:return S.s=0,S.l=null,S.return(!1);case 3:return S.return(!0)}})}function Wf(S){if(this.h=S,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=S&&S.locateFile||oh,typeof window=="object")var R=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")R=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=R,S.options){R=a(Object.keys(S.options));for(var P=R.next();!P.done;P=R.next()){P=P.value;var L=S.options[P].default;L!==void 0&&(this.l[P]=typeof L=="function"?L():L)}}}n=Wf.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function Gf(S){var R,P,L,Q,re,ne,me,Re,qe,rt,Ht;return A(function(Ot){switch(Ot.h){case 1:return S.ga?(R=S.h.files===void 0?[]:typeof S.h.files=="function"?S.h.files(S.l):S.h.files,T(Ot,hw(),2)):Ot.return();case 2:if(P=Ot.i,typeof window=="object")return Vf("createMediapipeSolutionsWasm",{locateFile:S.locateFile}),Vf("createMediapipeSolutionsPackedAssets",{locateFile:S.locateFile}),ne=R.filter(function(ft){return ft.data!==void 0}),me=R.filter(function(ft){return ft.data===void 0}),Re=Promise.all(ne.map(function(ft){var Vt=ah(S,ft.url);if(ft.path!==void 0){var Jt=ft.path;Vt=Vt.then(function(Gn){return S.overrideFile(Jt,Gn),Promise.resolve(Gn)})}return Vt})),qe=Promise.all(me.map(function(ft){return ft.simd===void 0||ft.simd&&P||!ft.simd&&!P?cw(S.locateFile(ft.url,S.ha)):Promise.resolve()})).then(function(){var ft,Vt,Jt;return A(function(Gn){if(Gn.h==1)return ft=window.createMediapipeSolutionsWasm,Vt=window.createMediapipeSolutionsPackedAssets,Jt=S,T(Gn,ft(Vt),2);Jt.i=Gn.i,Gn.h=0})}),rt=function(){return A(function(ft){return S.h.graph&&S.h.graph.url?ft=T(ft,ah(S,S.h.graph.url),0):(ft.h=0,ft=void 0),ft})}(),T(Ot,Promise.all([qe,Re,rt]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return L=R.filter(function(ft){return ft.simd===void 0||ft.simd&&P||!ft.simd&&!P}).map(function(ft){return S.locateFile(ft.url,S.ha)}),importScripts.apply(null,l(L)),Q=S,T(Ot,createMediapipeSolutionsWasm(Module),6);case 6:Q.i=Ot.i,S.m=new OffscreenCanvas(1,1),S.i.canvas=S.m,re=S.i.GL.createContext(S.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),S.i.GL.makeContextCurrent(re),Ot.h=4;break;case 7:if(S.m=document.createElement("canvas"),Ht=S.m.getContext("webgl2",{}),!Ht&&(Ht=S.m.getContext("webgl",{}),!Ht))return alert("Failed to create WebGL canvas context when passing video frame."),Ot.return();S.K=Ht,S.i.canvas=S.m,S.i.createContext(S.m,!0,!0,{});case 4:S.j=new S.i.SolutionWasm,S.ga=!1,Ot.h=0}})}function dw(S){var R,P,L,Q,re,ne,me,Re;return A(function(qe){if(qe.h==1){if(S.h.graph&&S.h.graph.url&&S.fa===S.h.graph.url)return qe.return();if(S.u=!0,!S.h.graph||!S.h.graph.url){qe.h=2;return}return S.fa=S.h.graph.url,T(qe,ah(S,S.h.graph.url),3)}for(qe.h!=2&&(R=qe.i,S.j.loadGraph(R)),P=a(Object.keys(S.D)),L=P.next();!L.done;L=P.next())Q=L.value,S.j.overrideFile(Q,S.D[Q]);if(S.D={},S.h.listeners)for(re=a(S.h.listeners),ne=re.next();!ne.done;ne=re.next())me=ne.value,Jg(S,me);Re=S.l,S.l={},S.setOptions(Re),qe.h=0})}n.reset=function(){var S=this;return A(function(R){S.j&&(S.j.reset(),S.s={},S.v={}),R.h=0})},n.setOptions=function(S,R){var P=this;if(R=R||this.h.options){for(var L=[],Q=[],re={},ne=a(Object.keys(S)),me=ne.next();!me.done;re={X:re.X,Y:re.Y},me=ne.next())if(me=me.value,!(me in this.l&&this.l[me]===S[me])){this.l[me]=S[me];var Re=R[me];Re!==void 0&&(Re.onChange&&(re.X=Re.onChange,re.Y=S[me],L.push(function(qe){return function(){var rt;return A(function(Ht){if(Ht.h==1)return T(Ht,qe.X(qe.Y),2);rt=Ht.i,rt===!0&&(P.u=!0),Ht.h=0})}}(re))),Re.graphOptionXref&&(me=Object.assign({},{calculatorName:"",calculatorIndex:0},Re.graphOptionXref,{valueNumber:Re.type===1?S[me]:0,valueBoolean:Re.type===0?S[me]:!1,valueString:Re.type===2?S[me]:""}),Q.push(me)))}(L.length!==0||Q.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(Q),this.F=(this.F===void 0?[]:this.F).concat(L))}};function fw(S){var R,P,L,Q,re,ne,me;return A(function(Re){switch(Re.h){case 1:if(!S.u)return Re.return();if(!S.F){Re.h=2;break}R=a(S.F),P=R.next();case 3:if(P.done){Re.h=5;break}return L=P.value,T(Re,L(),4);case 4:P=R.next(),Re.h=3;break;case 5:S.F=void 0;case 2:if(S.H){for(Q=new S.i.GraphOptionChangeRequestList,re=a(S.H),ne=re.next();!ne.done;ne=re.next())me=ne.value,Q.push_back(me);S.j.changeOptions(Q),Q.delete(),S.H=void 0}S.u=!1,Re.h=0}})}n.initialize=function(){var S=this;return A(function(R){return R.h==1?T(R,Gf(S),2):R.h!=3?T(R,dw(S),3):T(R,fw(S),0)})};function ah(S,R){var P,L;return A(function(Q){return R in S.L?Q.return(S.L[R]):(P=S.locateFile(R,""),L=fetch(P).then(function(re){return re.arrayBuffer()}),S.L[R]=L,Q.return(L))})}n.overrideFile=function(S,R){this.j?this.j.overrideFile(S,R):this.D[S]=R},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(S,R){var P=this,L,Q,re,ne,me,Re,qe,rt,Ht;return A(function(Ot){switch(Ot.h){case 1:return P.h.inputs?(L=1e3*(R??performance.now()),T(Ot,P.I,2)):Ot.return();case 2:return T(Ot,P.initialize(),3);case 3:for(Q=new P.i.PacketDataList,re=a(Object.keys(S)),ne=re.next();!ne.done;ne=re.next())if(me=ne.value,Re=P.h.inputs[me]){e:{var ft=S[me];switch(Re.type){case"video":var Vt=P.s[Re.stream];if(Vt||(Vt=new Ea(P.i,P.K),P.s[Re.stream]=Vt),Vt.m===0&&(Vt.m=Vt.i.createTexture()),typeof HTMLVideoElement<"u"&&ft instanceof HTMLVideoElement)var Jt=ft.videoWidth,Gn=ft.videoHeight;else typeof HTMLImageElement<"u"&&ft instanceof HTMLImageElement?(Jt=ft.naturalWidth,Gn=ft.naturalHeight):(Jt=ft.width,Gn=ft.height);Gn={glName:Vt.m,width:Jt,height:Gn},Jt=Vt.h,Jt.canvas.width=Gn.width,Jt.canvas.height=Gn.height,Jt.activeTexture(Jt.TEXTURE0),Vt.i.bindTexture2d(Vt.m),Jt.texImage2D(Jt.TEXTURE_2D,0,Jt.RGBA,Jt.RGBA,Jt.UNSIGNED_BYTE,ft),Vt.i.bindTexture2d(0),Vt=Gn;break e;case"detections":for(Vt=P.s[Re.stream],Vt||(Vt=new Bf(P.i),P.s[Re.stream]=Vt),Vt.data||(Vt.data=new Vt.h.DetectionListData),Vt.data.reset(ft.length),Gn=0;Gn<ft.length;++Gn){Jt=ft[Gn];var Un=Vt.data,Rs=Un.setBoundingBox,Hr=Gn,xr=Jt.la,Sn=new Ta;if(it(Sn,1,xr.sa),it(Sn,2,xr.ta),it(Sn,3,xr.height),it(Sn,4,xr.width),it(Sn,5,xr.rotation),ve(Sn,6,xr.pa),xr=Sn.l(),Rs.call(Un,Hr,xr),Jt.ea)for(Un=0;Un<Jt.ea.length;++Un){Sn=Jt.ea[Un],Rs=Vt.data,Hr=Rs.addNormalizedLandmark,xr=Gn,Sn=Object.assign({},Sn,{visibility:Sn.visibility?Sn.visibility:0});var ns=new Sl;it(ns,1,Sn.x),it(ns,2,Sn.y),it(ns,3,Sn.z),Sn.visibility&&it(ns,4,Sn.visibility),Sn=ns.l(),Hr.call(Rs,xr,Sn)}if(Jt.ba)for(Un=0;Un<Jt.ba.length;++Un)Rs=Vt.data,Hr=Rs.addClassification,xr=Gn,Sn=Jt.ba[Un],ns=new wl,it(ns,2,Sn.qa),Sn.index&&ve(ns,1,Sn.index),Sn.label&&ve(ns,3,Sn.label),Sn.displayName&&ve(ns,4,Sn.displayName),Sn=ns.l(),Hr.call(Rs,xr,Sn)}Vt=Vt.data;break e;default:Vt={}}}switch(qe=Vt,rt=Re.stream,Re.type){case"video":Q.pushTexture2d(Object.assign({},qe,{stream:rt,timestamp:L}));break;case"detections":Ht=qe,Ht.stream=rt,Ht.timestamp=L,Q.pushDetectionList(Ht);break;default:throw Error("Unknown input config type: '"+Re.type+"'")}}return P.j.send(Q),T(Ot,P.I,4);case 4:Q.delete(),Ot.h=0}})};function pw(S,R,P){var L,Q,re,ne,me,Re,qe,rt,Ht,Ot,ft,Vt,Jt,Gn;return A(function(Un){switch(Un.h){case 1:if(!P)return Un.return(R);for(L={},Q=0,re=a(Object.keys(P)),ne=re.next();!ne.done;ne=re.next())me=ne.value,Re=P[me],typeof Re!="string"&&Re.type==="texture"&&R[Re.stream]!==void 0&&++Q;1<Q&&(S.M=!1),qe=a(Object.keys(P)),ne=qe.next();case 2:if(ne.done){Un.h=4;break}if(rt=ne.value,Ht=P[rt],typeof Ht=="string")return Jt=L,Gn=rt,T(Un,mw(S,rt,R[Ht]),14);if(Ot=R[Ht.stream],Ht.type==="detection_list"){if(Ot){for(var Rs=Ot.getRectList(),Hr=Ot.getLandmarksList(),xr=Ot.getClassificationsList(),Sn=[],ns=0;ns<Rs.size();++ns){var jo=Zg(Rs.get(ns)),gw=Dt(jo,1),yw=Dt(jo,2),ny=Dt(jo,3),sy=Dt(jo,4),Mu=Dt(jo,5,0),Xo=void 0;Xo=Xo===void 0?0:Xo,jo={la:{sa:gw,ta:yw,height:ny,width:sy,rotation:Mu,pa:zt(X(jo,6),Xo)},ea:at(Yg(Hr.get(ns)),Sl,1).map(Uf),ba:_l(Lf(xr.get(ns)))},Sn.push(jo)}Rs=Sn}else Rs=[];L[rt]=Rs,Un.h=7;break}if(Ht.type==="proto_list"){if(Ot){for(Rs=Array(Ot.size()),Hr=0;Hr<Ot.size();Hr++)Rs[Hr]=Ot.get(Hr);Ot.delete()}else Rs=[];L[rt]=Rs,Un.h=7;break}if(Ot===void 0){Un.h=3;break}if(Ht.type==="float_list"){L[rt]=Ot,Un.h=7;break}if(Ht.type==="proto"){L[rt]=Ot,Un.h=7;break}if(Ht.type!=="texture")throw Error("Unknown output config type: '"+Ht.type+"'");return ft=S.v[rt],ft||(ft=new Ea(S.i,S.K),S.v[rt]=ft),T(Un,Qg(ft,Ot,S.M),13);case 13:Vt=Un.i,L[rt]=Vt;case 7:Ht.transform&&L[rt]&&(L[rt]=Ht.transform(L[rt])),Un.h=3;break;case 14:Jt[Gn]=Un.i;case 3:ne=qe.next(),Un.h=2;break;case 4:return Un.return(L)}})}function mw(S,R,P){var L;return A(function(Q){return typeof P=="number"||P instanceof Uint8Array||P instanceof S.i.Uint8BlobList?Q.return(P):P instanceof S.i.Texture2dDataOut?(L=S.v[R],L||(L=new Ea(S.i,S.K),S.v[R]=L),Q.return(Qg(L,P,S.M))):Q.return(void 0)})}function Jg(S,R){for(var P=R.name||"$",L=[].concat(l(R.wants)),Q=new S.i.StringList,re=a(R.wants),ne=re.next();!ne.done;ne=re.next())Q.push_back(ne.value);re=S.i.PacketListener.implement({onResults:function(me){for(var Re={},qe=0;qe<R.wants.length;++qe)Re[L[qe]]=me.get(qe);var rt=S.listeners[P];rt&&(S.I=pw(S,Re,R.outs).then(function(Ht){Ht=rt(Ht);for(var Ot=0;Ot<R.wants.length;++Ot){var ft=Re[L[Ot]];typeof ft=="object"&&ft.hasOwnProperty&&ft.hasOwnProperty("delete")&&ft.delete()}Ht&&(S.I=Ht)}))}}),S.j.attachMultiListener(Q,re),Q.delete()}n.onResults=function(S,R){this.listeners[R||"$"]=S},q("Solution",Wf),q("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function ey(S){switch(S===void 0&&(S=0),S){case 1:return"selfie_segmentation_landscape.tflite";default:return"selfie_segmentation.tflite"}}function ty(S){var R=this;S=S||{},this.h=new Wf({locateFile:S.locateFile,files:function(P){return[{simd:!0,url:"selfie_segmentation_solution_simd_wasm_bin.js"},{simd:!1,url:"selfie_segmentation_solution_wasm_bin.js"},{data:!0,url:ey(P.modelSelection)}]},graph:{url:"selfie_segmentation.binarypb"},listeners:[{wants:["segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelSelection:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelSelection",fieldName:"int_value"},onChange:function(P){var L,Q,re;return A(function(ne){return ne.h==1?(L=ey(P),Q="third_party/mediapipe/modules/selfie_segmentation/"+L,T(ne,ah(R.h,L),2)):(re=ne.i,R.h.overrideFile(Q,re),ne.return(!0))})}}}})}n=ty.prototype,n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(S){this.h.onResults(S)},n.initialize=function(){var S=this;return A(function(R){return T(R,S.h.initialize(),0)})},n.reset=function(){this.h.reset()},n.send=function(S){var R=this;return A(function(P){return T(P,R.h.send(S),0)})},n.setOptions=function(S){this.h.setOptions(S)},q("SelfieSegmentation",ty),q("VERSION","0.1.1675465747")}).call(uS)),uS}var vde=xde();/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var z_=function(n,e){return z_=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var r in s)s.hasOwnProperty(r)&&(t[r]=s[r])},z_(n,e)};function ZL(n,e){function t(){this.constructor=n}z_(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var Mr=function(){return Mr=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},Mr.apply(this,arguments)};function Dn(n,e,t,s){return new(t||(t=Promise))(function(r,i){function o(u){try{l(s.next(u))}catch(h){i(h)}}function a(u){try{l(s.throw(u))}catch(h){i(h)}}function l(u){var h;u.done?r(u.value):(h=u.value,h instanceof t?h:new t(function(d){d(h)})).then(o,a)}l((s=s.apply(n,[])).next())})}function $n(n,e){var t,s,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(u){return function(h){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,s&&(r=2&h[0]?s.return:h[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,h[1])).done)return r;switch(s=0,r&&(h=[2&h[0],r.value]),h[0]){case 0:case 1:r=h;break;case 4:return o.label++,{value:h[1],done:!1};case 5:o.label++,s=h[1],h=[0];continue;case 7:h=o.ops.pop(),o.trys.pop();continue;default:if(r=o.trys,!((r=r.length>0&&r[r.length-1])||h[0]!==6&&h[0]!==2)){o=0;continue}if(h[0]===3&&(!r||h[1]>r[0]&&h[1]<r[3])){o.label=h[1];break}if(h[0]===6&&o.label<r[1]){o.label=r[1],r=h;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(h);break}r[2]&&o.ops.pop(),o.trys.pop();continue}h=e.call(n,o)}catch(d){h=[6,d],s=0}finally{t=r=0}if(5&h[0])throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}([l,u])}}}function Dx(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function vI(n){return Dn(this,void 0,void 0,function(){var e,t;return $n(this,function(s){switch(s.label){case 0:return e=document.createElement("canvas"),n instanceof gn?[4,Db(n,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=Dx(n.width),e.height=Dx(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),s.label=3;case 3:return[2,e]}})})}function QL(n){return Dn(this,void 0,void 0,function(){var e,t,s,r,i,o;return $n(this,function(a){switch(a.label){case 0:return n instanceof gn?(e=n.shape.slice(0,2),t=e[0],s=e[1],r=ImageData.bind,[4,Db(n)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,a.sent(),s,t]))];case 2:return i=document.createElement("canvas"),o=i.getContext("2d"),i.width=Dx(n.width),i.height=Dx(n.height),o.drawImage(n,0,0),[2,o.getImageData(0,0,i.width,i.height)]}})})}function JL(n){return Dn(this,void 0,void 0,function(){var e,t;return $n(this,function(s){switch(s.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,vI(n)]:[3,2];case 1:return t=s.sent(),[3,3];case 2:t=n,s.label=3;case 3:return e=t,[2,$b(e,4)]}})})}function sw(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got "+n);if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got "+n)}function e3(n){var e=n.shape[2],t=ru(n,2),s=he(t,[-1]);return Ac(s,e)}function d0(n,e){return xe(function(){return Ze(Wr(n,kt(e)),"int32")})}function bde(n,e){var t=e.shape,s=t[0],r=t[1],i=t[2];return xe(function(){var o=e3(e),a=ds(Ja(0,i,1,"int32"),1),l=Ze(en(o,a),"int32"),u=he(l,[s,r]),h=Ve(u,kt(1,"int32"));return mt(function(d,p){return ce(d,p)}(h,n),kt(1,"int32"))})}var t3=function(){function n(e,t){this.model=e,this.outputStride=t;var s=this.model.inputs[0].shape;z(s[1]===-1&&s[2]===-1,function(){return"Input shape ["+s[1]+", "+s[2]+"] must both be equal to or -1"})}return n.prototype.predict=function(e){var t=this;return xe(function(){var s=t.preprocessInput(Ze(e,"float32")),r=ds(s,0),i=t.model.predict(r).map(function(a){return Lr(a,[0])}),o=t.nameOutputResults(i);return{heatmapScores:yi(o.heatmap),offsets:o.offsets,displacementFwd:o.displacementFwd,displacementBwd:o.displacementBwd,segmentation:o.segmentation,partHeatmaps:o.partHeatmaps,longOffsets:o.longOffsets,partOffsets:o.partOffsets}})},n.prototype.dispose=function(){this.model.dispose()},n}(),wde=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return ZL(e,n),e.prototype.preprocessInput=function(t){return xe(function(){return mt(Nt(t,127.5),1)})},e.prototype.nameOutputResults=function(t){return{offsets:t[0],segmentation:t[1],partHeatmaps:t[2],longOffsets:t[3],heatmap:t[4],displacementFwd:t[5],displacementBwd:t[6],partOffsets:t[7]}},e}(t3),rw=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Co=rw.length,$x=rw.reduce(function(n,e,t){return n[e]=t,n},{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(function(n){var e=n[0],t=n[1];return[$x[e],$x[t]]});function bI(n,e,t){var s=n[0],r=n[1],i=e[0],o=e[1],a=t.top,l=t.bottom;return[o/(t.left+t.right+r),i/(a+l+s)]}function n3(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+Co)}}function s3(n,e,t){var s=n3(n.heatmapY,n.heatmapX,n.id,t),r=s.y,i=s.x;return{x:n.heatmapX*e+i,y:n.heatmapY*e+r}}function $R(n,e,t){return n<e?e:n>t?t:n}function FR(n,e){return{x:n.x+e.x,y:n.y+e.y}}function Sde(n,e,t){t===void 0&&(t=.3);for(var s=0,r=0,i=0;i<n.length;i++)e.keypoints[i].score>t&&(r+=1,s+=Math.pow(n[i].x-e.keypoints[i].position.x,2)+Math.pow(n[i].y-e.keypoints[i].position.y,2));return r===0?s=1/0:s/=r,s}function _de(n,e,t,s,r,i,o){for(var a=o[0],l=o[1],u=t(n),h=u.y*s+u.x,d=r[Co*(2*h)+e],p=r[Co*(2*h+1)+e],m=n.y+d,g=n.x+p,b=0;b<i;b++){m=Math.min(m,a-1);var y=t({x:g=Math.min(g,l-1),y:m}),v=y.y*s+y.x;m+=d=r[Co*(2*v)+e],g+=p=r[Co*(2*v+1)+e]}return{x:g,y:m}}function r3(n,e,t,s,r,i,o,a,l,u){for(var h=r[0],d=r[1],p=i[0],m=i[1],g=a[0],b=a[1],y=[],v=function(O){return function(k,N,A,B){var W=N[0],K=N[1],q=A[0],Y=A[1],J=Math.round(((W+k.y+1)*Y-1)/B);return{x:Math.round(((K+k.x+1)*q-1)/B),y:J}}(O,[h,d],[p,m],l)},w=0;w<s;w++){var E=_de(n,w,v,o,e,u,[g,b]);y.push(E)}for(var T=-1,I=1/0,M=0;M<t.length;M++){var $=Sde(y,t[M]);$<I&&(T=M,I=$)}return T}function i3(n,e){var t=n[0],s=n[1];return[Math.round((s-1)/e+1),Math.round((t-1)/e+1)]}function o3(n,e,t,s,r,i,o,a,l,u,h){for(var d=o[0],p=o[1],m=n.shape,g=m[0],b=m[1],y=e.shape.slice(0,2),v=y[0],w=y[1],E=he(e,[v,w,2,Co]),T=new Float32Array(h*Co*3).fill(0),I=0;I<t.length;I++)for(var M=I*Co*3,$=t[I],O=0;O<Co;O++){var k=$.keypoints[O],N=M+3*O;T[N]=k.score,T[N+1]=k.position.y,T[N+2]=k.position.x}var A=bI([s,r],[d,p],a),B=A[0],W=A[1],K=Bi(T,[h,Co,3]),q=a.top,Y=a.left,J={variableNames:["segmentation","longOffsets","poses"],outputShape:[g,b],userCode:`
    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {
      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));
    }

    float convertToPositionInOutputFloat(
        int pos, int pad, float scale, int stride) {
      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);
    }

    float dist(float x1, float y1, float x2, float y2) {
      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);
    }

    float sampleLongOffsets(float h, float w, int d, int k) {
      float fh = fract(h);
      float fw = fract(w);
      int clH = int(ceil(h));
      int clW = int(ceil(w));
      int flH = int(floor(h));
      int flW = int(floor(w));
      float o11 = getLongOffsets(flH, flW, d, k);
      float o12 = getLongOffsets(flH, clW, d, k);
      float o21 = getLongOffsets(clH, flW, d, k);
      float o22 = getLongOffsets(clH, clW, d, k);
      float o1 = mix(o11, o12, fw);
      float o2 = mix(o21, o22, fw);
      return mix(o1, o2, fh);
    }

    int findNearestPose(int h, int w) {
      float prob = getSegmentation(h, w);
      if (prob < 1.0) {
        return -1;
      }

      // Done(Tyler): convert from output space h/w to strided space.
      float stridedH = convertToPositionInOutputFloat(
        h, `+q+", "+W+", "+i+`);
      float stridedW = convertToPositionInOutputFloat(
        w, `+Y+", "+B+", "+i+`);

      float minDist = 1000000.0;
      int iMin = -1;
      for (int i = 0; i < `+h+`; i++) {
        float curDistSum = 0.0;
        int numKpt = 0;
        for (int k = 0; k < `+Co+`; k++) {
          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);
          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);

          float y = float(h) + dy;
          float x = float(w) + dx;

          for (int s = 0; s < `+l+`; s++) {
            int yRounded = round(min(y, float(`+(s-1)+`)));
            int xRounded = round(min(x, float(`+(r-1)+`)));

            float yStrided = convertToPositionInOutputFloat(
              yRounded, `+q+", "+W+", "+i+`);
            float xStrided = convertToPositionInOutputFloat(
              xRounded, `+Y+", "+B+", "+i+`);

            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);
            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);

            y = y + dy;
            x = x + dx;
          }

          float poseScore = getPoses(i, k, 0);
          float poseY = getPoses(i, k, 1);
          float poseX = getPoses(i, k, 2);
          if (poseScore > `+u+`) {
            numKpt = numKpt + 1;
            curDistSum = curDistSum + dist(x, y, poseX, poseY);
          }
        }
        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {
          minDist = curDistSum / float(numKpt);
          iMin = i;
        }
      }
      return iMin;
    }

    void main() {
        ivec2 coords = getOutputCoords();
        int nearestPose = findNearestPose(coords[0], coords[1]);
        setOutput(float(nearestPose));
      }
  `};return qv().compileAndRun(J,[n,E,K])}function a3(){return VT()==="webgl"}function Tde(n,e,t,s,r,i,o,a,l,u,h,d){var p=o[0],m=o[1];return l===void 0&&(l=.2),u===void 0&&(u=8),h===void 0&&(h=.3),d===void 0&&(d=10),Dn(this,void 0,void 0,function(){var g,b,y,v,w;return $n(this,function(E){switch(E.label){case 0:return g=t.filter(function(T){return T.score>=l}),a3()?(y=xe(function(){var T=o3(n,e,g,s,r,i,[p,m],a,u,h,d),I=Fi().makeTensorFromDataId(T.dataId,T.shape,T.dtype);return g.map(function(M,$){return function(O,k){return xe(function(){return Ze(bi(O,kt(k)),"int32")})}(I,$)})}),[4,Promise.all(y.map(function(T){return T.data()}))]):[3,2];case 1:return b=E.sent(),y.forEach(function(T){return T.dispose()}),[3,5];case 2:return[4,n.data()];case 3:return v=E.sent(),[4,e.data()];case 4:w=E.sent(),b=function(T,I,M,$,O,k,N,A,B,W){var K=N[0],q=N[1];W===void 0&&(W=5);for(var Y=M.map(function(Te){return new Uint8Array($*O).fill(0)}),J=A.top,G=A.left,ee=bI([$,O],[K,q],A),te=ee[0],j=ee[1],se=i3([K,q],k)[0],be=0;be<$;be+=1)for(var ae=0;ae<O;ae+=1){var de=be*O+ae;if(T[de]===1){var Se=r3({x:ae,y:be},I,M,W,[J,G],[te,j],se,[$,O],k,B);Se>=0&&(Y[Se][de]=1)}}return Y}(v,w,g,s,r,i,[p,m],a,u),E.label=5;case 5:return[2,b.map(function(T,I){return{data:T,pose:g[I],width:r,height:s}})]}})})}function Ede(n,e,t,s,r,i,o,a,l,u,h,d,p){var m=a[0],g=a[1];return u===void 0&&(u=.2),h===void 0&&(h=8),d===void 0&&(d=.3),p===void 0&&(p=10),Dn(this,void 0,void 0,function(){var b,y,v,w,E,T;return $n(this,function(I){switch(I.label){case 0:return b=s.filter(function(M){return M.score>=u}),a3()?(v=xe(function(){var M=o3(n,e,b,r,i,o,[m,g],l,h,d,p),$=Fi().makeTensorFromDataId(M.dataId,M.shape,M.dtype);return b.map(function(O,k){return function(N,A,B){return xe(function(){return mt(ce(Ze(bi(N,kt(B)),"int32"),Ve(A,1)),1)})}($,t,k)})}),[4,Promise.all(v.map(function(M){return M.data()}))]):[3,2];case 1:return y=I.sent(),v.forEach(function(M){return M.dispose()}),[3,6];case 2:return[4,n.data()];case 3:return w=I.sent(),[4,e.data()];case 4:return E=I.sent(),[4,t.data()];case 5:T=I.sent(),y=function(M,$,O,k,N,A,B,W,K,q,Y){var J=W[0],G=W[1];Y===void 0&&(Y=5);for(var ee=k.map(function(We){return new Int32Array(N*A).fill(-1)}),te=K.top,j=K.left,se=bI([N,A],[J,G],K),be=se[0],ae=se[1],de=i3([J,G],B)[0],Se=0;Se<N;Se+=1)for(var Te=0;Te<A;Te+=1){var De=Se*A+Te;if(M[De]===1){var Ue=r3({x:Te,y:Se},$,k,Y,[te,j],[be,ae],de,[N,A],B,q);Ue>=0&&(ee[Ue][De]=O[De])}}return ee}(w,E,T,b,r,i,o,[m,g],l,h),I.label=6;case 6:return[2,y.map(function(M,$){return{pose:b[$],data:M,height:r,width:i}})]}})})}function cS(n){return Math.floor(n/2)}var Cde=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(cS(e),e);)this.exchange(e,cS(e)),e=cS(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=s},n}();function Ide(n,e,t,s,r,i){for(var o=i.shape,a=o[0],l=o[1],u=!0,h=Math.max(t-r,0),d=Math.min(t+r+1,a),p=h;p<d;++p){for(var m=Math.max(s-r,0),g=Math.min(s+r+1,l),b=m;b<g;++b)if(i.get(p,b,n)>e){u=!1;break}if(!u)break}return u}var l3=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map(function(n){var e=n[0],t=n[1];return[$x[e],$x[t]]}),hS=l3.map(function(n){return n[1]}),PR=l3.map(function(n){return n[0]});function dS(n,e,t,s){return{y:$R(Math.round(n.y/e),0,t-1),x:$R(Math.round(n.x/e),0,s-1)}}function OR(n,e,t,s,r,i,o,a){a===void 0&&(a=2);for(var l=s.shape,u=l[0],h=l[1],d=function(w,E,T){var I=T.shape[2]/2;return{y:T.get(E.y,E.x,w),x:T.get(E.y,E.x,I+w)}}(n,dS(e.position,i,u,h),o),p=FR(e.position,d),m=0;m<a;m++){var g=dS(p,i,u,h),b=n3(g.y,g.x,t,r);p=FR({x:g.x*i,y:g.y*i},{x:b.x,y:b.y})}var y=dS(p,i,u,h),v=s.get(y.y,y.x,t);return{position:p,part:rw[t],score:v}}function Nde(n,e,t,s,r,i){var o=e.shape[2],a=hS.length,l=new Array(o),u=n.part,h=n.score,d=s3(u,s,t);l[u.id]={score:h,part:rw[u.id],position:d};for(var p=a-1;p>=0;--p){var m=hS[p],g=PR[p];l[m]&&!l[g]&&(l[g]=OR(p,l[m],g,e,t,s,i))}for(p=0;p<a;++p)m=PR[p],g=hS[p],l[m]&&!l[g]&&(l[g]=OR(p,l[m],g,e,t,s,r));return l}function u3(n,e,t,s){var r=t.x,i=t.y;return n.some(function(o){var a,l,u,h,d,p,m=o.keypoints[s].position;return a=i,l=r,u=m.y,h=m.x,(d=u-a)*d+(p=h-l)*p<=e})}function Ade(n,e,t){var s=t.reduce(function(r,i,o){var a=i.position,l=i.score;return u3(n,e,a,o)||(r+=l),r},0);return s/t.length}function f0(n,e,t,s,r,i,o,a){o===void 0&&(o=.5),a===void 0&&(a=20);for(var l=[],u=function(g,b,y){for(var v=y.shape,w=v[0],E=v[1],T=v[2],I=new Cde(w*E*T,function(N){return N.score}),M=0;M<w;++M)for(var $=0;$<E;++$)for(var O=0;O<T;++O){var k=y.get(M,$,O);k<g||Ide(O,k,M,$,b,y)&&I.enqueue({score:k,part:{heatmapY:M,heatmapX:$,id:O}})}return I}(o,1,n),h=a*a;l.length<i&&!u.empty();){var d=u.dequeue();if(!u3(l,h,s3(d.part,r,e),d.part.id)){var p=Nde(d,n,e,r,t,s),m=Ade(l,h,p);l.push({keypoints:p,score:m})}}return l}var yp,Rde=[-123.15,-115.9,-103.06],kde=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return ZL(e,n),e.prototype.preprocessInput=function(t){return Ve(t,Rde)},e.prototype.nameOutputResults=function(t){var s=t[0],r=t[1],i=t[2],o=t[3],a=t[4],l=t[5];return{offsets:a,segmentation:t[6],partHeatmaps:l,longOffsets:o,heatmap:i,displacementFwd:r,displacementBwd:s,partOffsets:t[7]}},e}(t3),LR="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",UR="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function Ap(n){if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas||typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&e.offsetHeight!==0&&"offsetWidth"in e&&e.offsetWidth!==0)return[e.offsetHeight,e.offsetWidth];if(e.height!=null&&e.width!=null)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(n);if(typeof ImageData<"u"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(n);if(n instanceof gn)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: "+n+".")}function zR(n,e){return function(t,s){return(t-1)%s==0}(n,e)?n:Math.floor(n/e)*e+1}var Rp={low:"low",medium:"medium",high:"high",full:"full"},Mde=((yp={})[Rp.low]=.25,yp[Rp.medium]=.5,yp[Rp.high]=.75,yp[Rp.full]=1,yp);function p0(n,e,t){var s=t[0],r=t[1],i=function(o){if(typeof o=="string"){var a=Mde[o];return z(typeof a=="number",function(){return"string value of inputResolution must be one of "+Object.values(Rp).join(",")+" but was "+o+"."}),a}return z(typeof o=="number"&&o<=2&&o>=.1,function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+o}),o}(n);return[zR(s*i,e),zR(r*i,e)]}function Ah(n,e,t,s,r){var i=e[0],o=e[1],a=t[0],l=t[1],u=s[0],h=u[0],d=u[1],p=s[1],m=p[0],g=p[1];return xe(function(){var b=Ur.resizeBilinear(n,[a,l],!0);return b=yi(b),function(y,v,w){var E=v[0],T=v[1],I=w[0],M=I[0],$=I[1],O=w[1],k=O[0],N=O[1];return xe(function(){var A=ds(y);return Lr(Ur.cropAndResize(A,[[M/(E+M+$-1),k/(T+k+N-1),(M+E-1)/(E+M+$-1),(k+T-1)/(T+k+N-1)]],[0],[E,T]),[0])})}(b,[i,o],[[h,d],[m,g]])})}function m0(n,e){var t=e[0],s=e[1],r=Ap(n),i=r[0],o=r[1],a=s/t,l=[0,0,0,0],u=l[0],h=l[1],d=l[2],p=l[3];o/i<a?(u=0,h=0,d=Math.round(.5*(a*i-o)),p=Math.round(.5*(a*i-o))):(u=Math.round(.5*(1/a*o-i)),h=Math.round(.5*(1/a*o-i)),d=0,p=0);var m=xe(function(){var g=function(b){return b instanceof gn?b:$b(b)}(n);return g=RE(g,[[u,h],[d,p],[0,0]]),Ur.resizeBilinear(g,[t,s])});return{resized:m,padding:{top:u,left:d,right:p,bottom:h}}}function g0(n){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function y0(n,e,t,s,r){var i=e[0],o=e[1],a=t[0],l=t[1],u=function(h,d,p,m,g){return m===void 0&&(m=0),g===void 0&&(g=0),p===1&&d===1&&m===0&&g===0?h:h.map(function(b){return function(y,v,w,E,T){return E===void 0&&(E=0),T===void 0&&(T=0),{score:y.score,keypoints:y.keypoints.map(function(I){var M=I.score,$=I.part,O=I.position;return{score:M,part:$,position:{x:O.x*w+T,y:O.y*v+E}}})}}(b,d,p,m,g)})}(n,(i+s.top+s.bottom)/a,(o+s.left+s.right)/l,-s.top,-s.left);return r?function(h,d){return d<=0?h:h.map(function(p){return function(m,g){return{score:m.score,keypoints:m.keypoints.map(function(b){var y=b.score,v=b.part,w=b.position;return{score:y,part:v,position:{x:g-1-w.x,y:w.y}}})}}(p,d)})}(u,o):u}var BR={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},VR=["MobileNetV1","ResNet50"],WR={MobileNetV1:[8,16,32],ResNet50:[32,16]},GR={MobileNetV1:[.5,.75,1],ResNet50:[1]},HR=[1,2,4],x0={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},v0={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function jR(n){var e=n.segmentationThreshold,t=n.maxDetections,s=n.scoreThreshold,r=n.nmsRadius;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(s<0||s>1)throw new Error("Invalid scoreThreshold "+s+". Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius "+r+".")}function XR(n){var e=n.segmentationThreshold,t=n.maxDetections,s=n.scoreThreshold,r=n.nmsRadius,i=n.minKeypointScore,o=n.refineSteps;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(s<0||s>1)throw new Error("Invalid scoreThreshold "+s+". Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius "+r+".");if(i<0||i>1)throw new Error("Invalid minKeypointScore "+i+".Should be in range [0.0, 1.0]");if(o<=0||o>20)throw new Error("Invalid refineSteps "+o+".Should be in range [1, 20]")}var c3=function(){function n(e){this.baseModel=e}return n.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},n.prototype.segmentPersonActivation=function(e,t,s){var r=this;s===void 0&&(s=.5);var i=Ap(e),o=i[0],a=i[1],l=p0(t,this.baseModel.outputStride,[o,a]),u=m0(e,l),h=u.resized,d=u.padding,p=xe(function(){var w=r.predictForPersonSegmentation(h),E=w.segmentLogits,T=w.heatmapScores,I=w.offsets,M=w.displacementFwd,$=w.displacementBwd,O=h.shape,k=O[0],N=O[1],A=Ah(E,[o,a],[k,N],[[d.top,d.bottom],[d.left,d.right]]);return{segmentation:d0(Lr(A),s),heatmapScores:T,offsets:I,displacementFwd:M,displacementBwd:$}}),m=p.segmentation,g=p.heatmapScores,b=p.offsets,y=p.displacementFwd,v=p.displacementBwd;return h.dispose(),{segmentation:m,heatmapScores:g,offsets:b,displacementFwd:y,displacementBwd:v,padding:d,internalResolutionHeightAndWidth:l}},n.prototype.segmentPerson=function(e,t){return t===void 0&&(t=x0),Dn(this,void 0,void 0,function(){var s,r,i,o,a,l,u,h,d,p,m,g,b,y,v,w,E,T;return $n(this,function(I){switch(I.label){case 0:return jR(t=Mr(Mr({},x0),t)),s=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),r=s.segmentation,i=s.heatmapScores,o=s.offsets,a=s.displacementFwd,l=s.displacementBwd,u=s.padding,h=s.internalResolutionHeightAndWidth,d=r.shape,p=d[0],m=d[1],[4,r.data()];case 1:return g=I.sent(),r.dispose(),[4,g0([i,o,a,l])];case 2:return b=I.sent(),y=b[0],v=b[1],w=b[2],E=b[3],T=y0(T=f0(y,v,w,E,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[p,m],h,u,!1),i.dispose(),o.dispose(),a.dispose(),l.dispose(),[2,{height:p,width:m,data:g,allPoses:T}]}})})},n.prototype.segmentMultiPerson=function(e,t){return t===void 0&&(t=v0),Dn(this,void 0,void 0,function(){var s,r,i,o,a,l,u,h,d,p,m,g,b,y,v,w,E,T,I,M,$,O=this;return $n(this,function(k){switch(k.label){case 0:return XR(t=Mr(Mr({},v0),t)),s=Ap(e),r=s[0],i=s[1],o=p0(t.internalResolution,this.baseModel.outputStride,[r,i]),a=m0(e,o),l=a.resized,u=a.padding,h=xe(function(){var N,A=O.predictForMultiPersonInstanceSegmentationAndPart(l),B=A.segmentLogits,W=A.longOffsets,K=A.heatmapScores,q=A.offsets,Y=A.displacementFwd,J=A.displacementBwd,G=Ah(B,[r,i],o,[[u.top,u.bottom],[u.left,u.right]]);return N=W,{segmentation:d0(Lr(G),t.segmentationThreshold),longOffsets:N,heatmapScoresRaw:K,offsetsRaw:q,displacementFwdRaw:Y,displacementBwdRaw:J}}),d=h.segmentation,p=h.longOffsets,m=h.heatmapScoresRaw,g=h.offsetsRaw,b=h.displacementFwdRaw,y=h.displacementBwdRaw,[4,g0([m,g,b,y])];case 1:return v=k.sent(),w=v[0],E=v[1],T=v[2],I=v[3],M=y0(M=f0(w,E,T,I,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,i],o,u,!1),[4,Tde(d,p,M,r,i,this.baseModel.outputStride,o,u,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return $=k.sent(),l.dispose(),d.dispose(),p.dispose(),m.dispose(),g.dispose(),b.dispose(),y.dispose(),[2,$]}})})},n.prototype.segmentPersonPartsActivation=function(e,t,s){var r=this;s===void 0&&(s=.5);var i=Ap(e),o=i[0],a=i[1],l=p0(t,this.baseModel.outputStride,[o,a]),u=m0(e,l),h=u.resized,d=u.padding,p=xe(function(){var w=r.predictForPersonSegmentationAndPart(h),E=w.segmentLogits,T=w.partHeatmapLogits,I=w.heatmapScores,M=w.offsets,$=w.displacementFwd,O=w.displacementBwd,k=h.shape,N=k[0],A=k[1],B=Ah(E,[o,a],[N,A],[[d.top,d.bottom],[d.left,d.right]]),W=Ah(T,[o,a],[N,A],[[d.top,d.bottom],[d.left,d.right]]);return{partSegmentation:bde(d0(Lr(B),s),W),heatmapScores:I,offsets:M,displacementFwd:$,displacementBwd:O}}),m=p.partSegmentation,g=p.heatmapScores,b=p.offsets,y=p.displacementFwd,v=p.displacementBwd;return h.dispose(),{partSegmentation:m,heatmapScores:g,offsets:b,displacementFwd:y,displacementBwd:v,padding:d,internalResolutionHeightAndWidth:l}},n.prototype.segmentPersonParts=function(e,t){return t===void 0&&(t=x0),Dn(this,void 0,void 0,function(){var s,r,i,o,a,l,u,h,d,p,m,g,b,y,v,w,E,T;return $n(this,function(I){switch(I.label){case 0:return jR(t=Mr(Mr({},x0),t)),s=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),r=s.partSegmentation,i=s.heatmapScores,o=s.offsets,a=s.displacementFwd,l=s.displacementBwd,u=s.padding,h=s.internalResolutionHeightAndWidth,d=r.shape,p=d[0],m=d[1],[4,r.data()];case 1:return g=I.sent(),r.dispose(),[4,g0([i,o,a,l])];case 2:return b=I.sent(),y=b[0],v=b[1],w=b[2],E=b[3],T=y0(T=f0(y,v,w,E,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[p,m],h,u,!1),i.dispose(),o.dispose(),a.dispose(),l.dispose(),[2,{height:p,width:m,data:g,allPoses:T}]}})})},n.prototype.segmentMultiPersonParts=function(e,t){return t===void 0&&(t=v0),Dn(this,void 0,void 0,function(){var s,r,i,o,a,l,u,h,d,p,m,g,b,y,v,w,E,T,I,M,$,O,k=this;return $n(this,function(N){switch(N.label){case 0:return XR(t=Mr(Mr({},v0),t)),s=Ap(e),r=s[0],i=s[1],o=p0(t.internalResolution,this.baseModel.outputStride,[r,i]),a=m0(e,o),l=a.resized,u=a.padding,h=xe(function(){var A=k.predictForMultiPersonInstanceSegmentationAndPart(l),B=A.segmentLogits,W=A.longOffsets,K=A.heatmapScores,q=A.offsets,Y=A.displacementFwd,J=A.displacementBwd,G=A.partHeatmaps,ee=Ah(B,[r,i],o,[[u.top,u.bottom],[u.left,u.right]]),te=Ah(G,[r,i],o,[[u.top,u.bottom],[u.left,u.right]]),j=W,se=d0(Lr(ee),t.segmentationThreshold),be=function(ae){var de=ae.shape,Se=de[0],Te=de[1],De=de[2];return xe(function(){var Ue=e3(ae),We=ds(Ja(0,De,1,"int32"),1),lt=Ze(en(Ue,We),"int32");return he(lt,[Se,Te])})}(te);return{segmentation:se,longOffsets:j,heatmapScoresRaw:K,offsetsRaw:q,displacementFwdRaw:Y,displacementBwdRaw:J,partSegmentation:be}}),d=h.segmentation,p=h.longOffsets,m=h.heatmapScoresRaw,g=h.offsetsRaw,b=h.displacementFwdRaw,y=h.displacementBwdRaw,v=h.partSegmentation,[4,g0([m,g,b,y])];case 1:return w=N.sent(),E=w[0],T=w[1],I=w[2],M=w[3],$=y0($=f0(E,T,I,M,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,i],o,u,!1),[4,Ede(d,p,v,$,r,i,this.baseModel.outputStride,o,u,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return O=N.sent(),l.dispose(),d.dispose(),p.dispose(),m.dispose(),g.dispose(),b.dispose(),y.dispose(),v.dispose(),[2,O]}})})},n.prototype.dispose=function(){this.baseModel.dispose()},n}();function Dde(n){return Dn(this,void 0,void 0,function(){var e,t,s,r,i,o;return $n(this,function(a){switch(a.label){case 0:if(e=n.outputStride,t=n.quantBytes,s=n.multiplier,A$==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return r=function(l,u,h){var d={1:"100",.75:"075",.5:"050"},p="model-stride"+l+".json";return h===4?UR+"float/"+d[u]+"/"+p:UR+"quant"+h+"/"+d[u]+"/"+p}(e,s,t),[4,eI(n.modelUrl||r)];case 1:return i=a.sent(),o=new wde(i,e),[2,new c3(o)]}})})}function $de(n){return Dn(this,void 0,void 0,function(){var e,t,s,r,i;return $n(this,function(o){switch(o.label){case 0:if(e=n.outputStride,t=n.quantBytes,A$==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return s=function(a,l){var u="model-stride"+a+".json";return l===4?LR+"float/"+u:LR+"quant"+l+"/"+u}(e,t),[4,eI(n.modelUrl||s)];case 1:return r=o.sent(),i=new kde(r,e),[2,new c3(i)]}})})}function Fde(n){return n===void 0&&(n=BR),Dn(this,void 0,void 0,function(){return $n(this,function(e){return(n=function(t){if((t=t||BR).architecture==null&&(t.architecture="MobileNetV1"),VR.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+VR);if(t.outputStride==null&&(t.outputStride=16),WR[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+WR[t.architecture]+" for architecture "+t.architecture+".");if(t.multiplier==null&&(t.multiplier=1),GR[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+GR[t.architecture]+" for architecture "+t.architecture+".");if(t.quantBytes==null&&(t.quantBytes=4),HR.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+HR+" for architecture "+t.architecture+".");return t}(n)).architecture==="ResNet50"?[2,$de(n)]:n.architecture==="MobileNetV1"?[2,Dde(n)]:[2,null]})})}var B_=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],qR=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,vI(this.mask)]})})},n.prototype.toImageData=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,this.mask]})})},n.prototype.toTensor=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,JL(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"imagedata"},n}();function Pde(n){if(sw(n),n!==255)throw new Error("Foreground id must be 255 but got "+n);return"person"}function Ode(n){if(sw(n),n>=B_.length)throw new Error("Invalid body part value "+n);return B_[n]}var Lde=function(){function n(e){this.bodyPixModel=e}return n.prototype.segmentPeople=function(e,t){return Dn(this,void 0,void 0,function(){var s,r,i,o;return $n(this,function(a){switch(a.label){case 0:return e instanceof ImageBitmap&&((s=document.createElement("canvas")).getContext("2d").drawImage(e,0,0),e=s),t.segmentBodyParts?t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPersonParts(e,t)]:[3,2]:[3,5];case 1:return i=a.sent(),[3,4];case 2:return[4,this.bodyPixModel.segmentPersonParts(e,t)];case 3:i=[a.sent()],a.label=4;case 4:return r=i.map(function(l){var u=l.data,h=l.width,d=l.height,p=new Uint8ClampedArray(h*d*4).fill(0);return u.forEach(function(m,g){m===-1?(p[4*g]=B_.length,p[4*g+3]=0):(p[4*g]=m,p[4*g+3]=255)}),{maskValueToLabel:Ode,mask:new qR(new ImageData(p,h,d))}}),[3,10];case 5:return t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPerson(e,t)]:[3,7];case 6:return o=a.sent(),[3,9];case 7:return[4,this.bodyPixModel.segmentPerson(e,t)];case 8:o=[a.sent()],a.label=9;case 9:r=o.map(function(l){var u=l.data,h=l.width,d=l.height,p=new Uint8ClampedArray(h*d*4).fill(0);return u.forEach(function(m,g){m===0?(p[4*g]=0,p[4*g+3]=0):(p[4*g]=255,p[4*g+3]=255)}),{maskValueToLabel:Pde,mask:new qR(new ImageData(p,h,d))}}),a.label=10;case 10:return[2,r]}})})},n.prototype.dispose=function(){this.bodyPixModel.dispose()},n.prototype.reset=function(){},n}();function Ude(n){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,Fde(n).then(function(t){return new Lde(t)})]})})}var KR={runtime:"mediapipe",modelType:"general"},zde=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,QL(this.mask)]})})},n.prototype.toTensor=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,JL(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function Bde(n){return sw(n),"person"}var Vde=function(){function n(e){var t,s=this;this.selfieMode=!1;var r;this.selfieSegmentationSolution=new vde.SelfieSegmentation({locateFile:(t=e.locateFile)!==null&&t!==void 0?t:function(i,o){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+i:o+"/"+i}}),e.modelType==="landscape"?r=1:r=0,this.selfieSegmentationSolution.setOptions({modelSelection:r,selfieMode:this.selfieMode}),this.selfieSegmentationSolution.onResults(function(i){s.segmentation=[{maskValueToLabel:Bde,mask:new zde(i.segmentationMask)}]})}return n.prototype.segmentPeople=function(e,t){return Dn(this,void 0,void 0,function(){var s,r;return $n(this,function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.selfieSegmentationSolution.setOptions({selfieMode:this.selfieMode})),e instanceof gn?(r=ImageData.bind,[4,Db(e)]):[3,2];case 1:return s=new(r.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:s=e,i.label=3;case 3:return e=s,[4,this.selfieSegmentationSolution.send({image:e})];case 4:return i.sent(),[2,this.segmentation]}})})},n.prototype.dispose=function(){this.selfieSegmentationSolution.close()},n.prototype.reset=function(){this.selfieSegmentationSolution.reset(),this.segmentation=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.selfieSegmentationSolution.initialize()},n}();function Wde(n){return Dn(this,void 0,void 0,function(){var e,t;return $n(this,function(s){switch(s.label){case 0:return e=function(r){if(r==null)return Mr({},KR);var i=Mr({},r);return i.runtime="mediapipe",i.modelType==null&&(i.modelType=KR.modelType),i}(n),[4,(t=new Vde(e)).initialize()];case 1:return s.sent(),[2,t]}})})}function Gde(n,e,t,s){var r=n.width,i=n.height,o=1,a=Math.cos(n.rotation),l=Math.sin(n.rotation),u=n.xCenter,h=n.yCenter,d=1/e,p=1/t,m=new Array(16);return m[0]=r*a*o*d,m[1]=-i*l*d,m[2]=0,m[3]=(-.5*r*a*o+.5*i*l+u)*d,m[4]=r*l*o*p,m[5]=i*a*p,m[6]=0,m[7]=(-.5*i*a-.5*r*l*o+h)*p,m[8]=0,m[9]=0,m[10]=r*d,m[11]=0,m[12]=0,m[13]=0,m[14]=0,m[15]=1,function(g){if(g.length!==16)throw new Error("Array length must be 16 but got "+g.length);return[[g[0],g[1],g[2],g[3]],[g[4],g[5],g[6],g[7]],[g[8],g[9],g[10],g[11]],[g[12],g[13],g[14],g[15]]]}(m)}function h3(n){return n instanceof gn?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function fS(n,e){z(n.width!==0,function(){return e+" width cannot be 0."}),z(n.height!==0,function(){return e+" height cannot be 0."})}function Hde(n,e){var t=function(s,r,i,o){var a=r-s,l=o-i,u=l/a;return{scale:u,offset:i-s*u}}(0,255,e[0],e[1]);return xe(function(){return Ve(ce(n,t.scale),t.offset)})}function jde(n,e,t){var s=e.outputTensorSize,r=e.keepAspectRatio,i=e.borderMode,o=e.outputTensorFloatRange,a=h3(n),l=function(p,m){return{xCenter:.5*p.width,yCenter:.5*p.height,width:p.width,height:p.height,rotation:0}}(a),u=function(p,m,g){if(g===void 0&&(g=!1),!g)return{top:0,left:0,right:0,bottom:0};var b=m.height,y=m.width;fS(m,"targetSize"),fS(p,"roi");var v,w,E=b/y,T=p.height/p.width,I=0,M=0;return E>T?(v=p.width,w=p.width*E,M=(1-T/E)/2):(v=p.height/E,w=p.height,I=(1-E/T)/2),p.width=v,p.height=w,{top:M,left:I,right:I,bottom:M}}(l,s,r),h=Gde(l,a.width,a.height),d=xe(function(){var p,m=(p=n)instanceof gn?p:$b(p),g=xc(function(v,w,E){return fS(E,"inputResolution"),[1/E.width*v[0][0]*w.width,1/E.height*v[0][1]*w.width,v[0][3]*w.width,1/E.width*v[1][0]*w.height,1/E.height*v[1][1]*w.height,v[1][3]*w.height,0,0]}(h,a,s),[1,8]),b=i==="zero"?"constant":"nearest",y=Ur.transform(ds(Ze(m,"float32")),g,"bilinear",b,0,[s.height,s.width]);return o!=null?Hde(y,o):y});return{imageTensor:d,padding:u,transformationMatrix:h}}function Xde(n,e,t){return xe(function(){var s=Lr(n,[0]),r=s.shape[2];if(r===1){var i=s;switch(e.activation){case"none":break;case"sigmoid":i=yi(i);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported ("+e.activation+")")}var o=t?Ur.resizeBilinear(i,[t.height,t.width]):i;return Lr(o,[2])}throw new Error("Unsupported number of tensor channels "+r)})}var YR={runtime:"tfjs",modelType:"general",modelUrl:"https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1"},ZR={flipHorizontal:!1},qde={outputTensorSize:{width:256,height:256},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},Kde={outputTensorSize:{width:256,height:144},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},Yde={activation:"none"},Zde=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,vI(this.mask)]})})},n.prototype.toImageData=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,QL(this.mask)]})})},n.prototype.toTensor=function(){return Dn(this,void 0,void 0,function(){return $n(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function Qde(n){return sw(n),"person"}var Jp,Jde=function(){function n(e,t){this.modelType=e,this.model=t}return n.prototype.segmentPeople=function(e,t){return Dn(this,void 0,void 0,function(){var s,r=this;return $n(this,function(i){return t=function(o){if(o==null)return Mr({},ZR);var a=Mr({},o);return a.flipHorizontal==null&&(a.flipHorizontal=ZR.flipHorizontal),a}(t),e==null?(this.reset(),[2,[]]):(s=xe(function(){var o=jde(e,r.modelType==="general"?qde:Kde).imageTensor,a=mn(r.model.predict(o),[0,0,0,1],-1),l=h3(e),u=Xde(a,Yde,l),h=ds(u,2),d=ba(h,[[0,0],[0,0],[0,1]]);return ab(d,[[0,0],[0,0],[0,2]],"symmetric")}),[2,[{maskValueToLabel:Qde,mask:new Zde(s)}]])})})},n.prototype.dispose=function(){this.model.dispose()},n.prototype.reset=function(){},n}();function efe(n){return Dn(this,void 0,void 0,function(){var e,t,s;return $n(this,function(r){switch(r.label){case 0:return e=function(i){if(i==null)return Mr({},YR);var o=Mr({},i);if(o.runtime="tfjs",o.modelType==null&&(o.modelType=YR.modelType),o.modelType!=="general"&&o.modelType!=="landscape")throw new Error("Model type must be one of general or landscape, but got "+o.modelType);return o.modelUrl==null&&(o.modelType==="general"?o.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1":o.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/landscape/1"),o}(n),t=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,eI(e.modelUrl,{fromTFHub:t})];case 1:return s=r.sent(),[2,new Jde(e.modelType,s)]}})})}function tfe(n,e){return Dn(this,void 0,void 0,function(){var t,s;return $n(this,function(r){switch(n){case Jp.MediaPipeSelfieSegmentation:if(t=void 0,(s=e)!=null){if(s.runtime==="tfjs")return[2,efe(s)];if(s.runtime==="mediapipe")return[2,Wde(s)];t=s.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+t);case Jp.BodyPix:return[2,Ude(s=e)];default:throw new Error(n+" is not a supported model name.")}})})}(function(n){n.BodyPix="BodyPix",n.MediaPipeSelfieSegmentation="MediaPipeSelfieSegmentation"})(Jp||(Jp={}));function nfe(n,e,t,s,r,i){i===void 0&&(i={r:0,g:255,b:255,a:255});for(var o=-1;o<=r;o++)for(var a=-1;a<=r;a++)if(o!==0&&a!==0){var l=(e+o)*s+(t+a);n[4*l+0]=i.r,n[4*l+1]=i.g,n[4*l+2]=i.b,n[4*l+3]=i.a}}function sfe(n,e,t,s,r,i,o){o===void 0&&(o=1);for(var a=0,l=-o;l<=o;l++)for(var u=-o;u<=o;u++)if(l!==0&&u!==0){var h=(e+l)*s+(t+u);(!r[n[4*h]]||n[4*h+3]<i)&&(a+=1)}return a>0}function rfe(n,e,t,s,r,i){return e===void 0&&(e={r:0,g:0,b:0,a:0}),t===void 0&&(t={r:0,g:0,b:0,a:255}),s===void 0&&(s=!1),r===void 0&&(r=.5),i===void 0&&(i=Array.from(Array(256).keys())),Dn(this,void 0,void 0,function(){var o,a,l,u,h,d,p,m,g,b,y,v,w,E;return $n(this,function(T){switch(T.label){case 0:return(o=Array.isArray(n)?n:[n]).length===0?[2,null]:[4,Promise.all(o.map(function(I){return I.mask.toImageData()}))];case 1:for(a=T.sent(),l=a[0],u=l.width,h=l.height,d=new Uint8ClampedArray(u*h*4),p=Math.round(255*r),m=new Array(256).fill(!1),i.forEach(function(I){return m[I]=!0}),g=0;g<h;g++)for(b=0;b<u;b++)for(d[4*(y=g*u+b)+0]=t.r,d[4*y+1]=t.g,d[4*y+2]=t.b,d[4*y+3]=t.a,v=0,w=a;v<w.length;v++)E=w[v],m[E.data[4*y]]&&E.data[4*y+3]>=p&&(d[4*y]=e.r,d[4*y+1]=e.g,d[4*y+2]=e.b,d[4*y+3]=e.a,s&&g-1>=0&&g+1<h&&b-1>=0&&b+1<u&&sfe(E.data,g,b,u,m,p)&&nfe(d,g,b,u,1));return[2,new ImageData(d,u,h)]}})})}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const wI="173",ife=0,QR=1,ofe=2,d3=1,afe=2,Ua=3,fu=0,xi=1,Ha=2,Ql=0,Qh=1,JR=2,ek=3,tk=4,lfe=5,uc=100,ufe=101,cfe=102,hfe=103,dfe=104,ffe=200,pfe=201,mfe=202,gfe=203,V_=204,W_=205,yfe=206,xfe=207,vfe=208,bfe=209,wfe=210,Sfe=211,_fe=212,Tfe=213,Efe=214,G_=0,H_=1,j_=2,pd=3,X_=4,q_=5,K_=6,Y_=7,SI=0,Cfe=1,Ife=2,Jl=0,Nfe=1,Afe=2,Rfe=3,kfe=4,Mfe=5,Dfe=6,$fe=7,f3=300,md=301,gd=302,Z_=303,Q_=304,iw=306,J_=1e3,fc=1001,eT=1002,Mo=1003,Ffe=1004,b0=1005,ra=1006,pS=1007,pc=1008,nl=1009,p3=1010,m3=1011,em=1012,_I=1013,Pc=1014,ja=1015,Bg=1016,TI=1017,EI=1018,yd=1020,g3=35902,y3=1021,x3=1022,Ao=1023,v3=1024,b3=1025,Jh=1026,xd=1027,w3=1028,CI=1029,S3=1030,II=1031,NI=1033,J0=33776,ex=33777,tx=33778,nx=33779,tT=35840,nT=35841,sT=35842,rT=35843,iT=36196,oT=37492,aT=37496,lT=37808,uT=37809,cT=37810,hT=37811,dT=37812,fT=37813,pT=37814,mT=37815,gT=37816,yT=37817,xT=37818,vT=37819,bT=37820,wT=37821,sx=36492,ST=36494,_T=36495,_3=36283,TT=36284,ET=36285,CT=36286,Pfe=3200,Ofe=3201,T3=0,Lfe=1,Hl="",io="srgb",vd="srgb-linear",Fx="linear",Vn="srgb",Rh=7680,nk=519,Ufe=512,zfe=513,Bfe=514,E3=515,Vfe=516,Wfe=517,Gfe=518,Hfe=519,sk=35044,rk="300 es",Xa=2e3,Px=2001;class Df{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const s=this._listeners;s[e]===void 0&&(s[e]=[]),s[e].indexOf(t)===-1&&s[e].push(t)}hasEventListener(e,t){const s=this._listeners;return s===void 0?!1:s[e]!==void 0&&s[e].indexOf(t)!==-1}removeEventListener(e,t){const s=this._listeners;if(s===void 0)return;const r=s[e];if(r!==void 0){const i=r.indexOf(t);i!==-1&&r.splice(i,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const s=t[e.type];if(s!==void 0){e.target=this;const r=s.slice(0);for(let i=0,o=r.length;i<o;i++)r[i].call(this,e);e.target=null}}}const Rr=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],mS=Math.PI/180,IT=180/Math.PI;function Vg(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,s=Math.random()*4294967295|0;return(Rr[n&255]+Rr[n>>8&255]+Rr[n>>16&255]+Rr[n>>24&255]+"-"+Rr[e&255]+Rr[e>>8&255]+"-"+Rr[e>>16&15|64]+Rr[e>>24&255]+"-"+Rr[t&63|128]+Rr[t>>8&255]+"-"+Rr[t>>16&255]+Rr[t>>24&255]+Rr[s&255]+Rr[s>>8&255]+Rr[s>>16&255]+Rr[s>>24&255]).toLowerCase()}function _n(n,e,t){return Math.max(e,Math.min(t,n))}function jfe(n,e){return(n%e+e)%e}function gS(n,e,t){return(1-t)*n+t*e}function xp(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function fi(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class Fn{constructor(e=0,t=0){Fn.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,s=this.y,r=e.elements;return this.x=r[0]*t+r[3]*s+r[6],this.y=r[1]*t+r[4]*s+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=_n(this.x,e.x,t.x),this.y=_n(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=_n(this.x,e,t),this.y=_n(this.y,e,t),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(_n(s,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const s=this.dot(e)/t;return Math.acos(_n(s,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,s=this.y-e.y;return t*t+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const s=Math.cos(t),r=Math.sin(t),i=this.x-e.x,o=this.y-e.y;return this.x=i*s-o*r+e.x,this.y=i*r+o*s+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class rn{constructor(e,t,s,r,i,o,a,l,u){rn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,s,r,i,o,a,l,u)}set(e,t,s,r,i,o,a,l,u){const h=this.elements;return h[0]=e,h[1]=r,h[2]=a,h[3]=t,h[4]=i,h[5]=l,h[6]=s,h[7]=o,h[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,s=e.elements;return t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3],t[4]=s[4],t[5]=s[5],t[6]=s[6],t[7]=s[7],t[8]=s[8],this}extractBasis(e,t,s){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const s=e.elements,r=t.elements,i=this.elements,o=s[0],a=s[3],l=s[6],u=s[1],h=s[4],d=s[7],p=s[2],m=s[5],g=s[8],b=r[0],y=r[3],v=r[6],w=r[1],E=r[4],T=r[7],I=r[2],M=r[5],$=r[8];return i[0]=o*b+a*w+l*I,i[3]=o*y+a*E+l*M,i[6]=o*v+a*T+l*$,i[1]=u*b+h*w+d*I,i[4]=u*y+h*E+d*M,i[7]=u*v+h*T+d*$,i[2]=p*b+m*w+g*I,i[5]=p*y+m*E+g*M,i[8]=p*v+m*T+g*$,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],s=e[1],r=e[2],i=e[3],o=e[4],a=e[5],l=e[6],u=e[7],h=e[8];return t*o*h-t*a*u-s*i*h+s*a*l+r*i*u-r*o*l}invert(){const e=this.elements,t=e[0],s=e[1],r=e[2],i=e[3],o=e[4],a=e[5],l=e[6],u=e[7],h=e[8],d=h*o-a*u,p=a*l-h*i,m=u*i-o*l,g=t*d+s*p+r*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/g;return e[0]=d*b,e[1]=(r*u-h*s)*b,e[2]=(a*s-r*o)*b,e[3]=p*b,e[4]=(h*t-r*l)*b,e[5]=(r*i-a*t)*b,e[6]=m*b,e[7]=(s*l-u*t)*b,e[8]=(o*t-s*i)*b,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,s,r,i,o,a){const l=Math.cos(i),u=Math.sin(i);return this.set(s*l,s*u,-s*(l*o+u*a)+o+e,-r*u,r*l,-r*(-u*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(yS.makeScale(e,t)),this}rotate(e){return this.premultiply(yS.makeRotation(-e)),this}translate(e,t){return this.premultiply(yS.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,-s,0,s,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,s=e.elements;for(let r=0;r<9;r++)if(t[r]!==s[r])return!1;return!0}fromArray(e,t=0){for(let s=0;s<9;s++)this.elements[s]=e[s+t];return this}toArray(e=[],t=0){const s=this.elements;return e[t]=s[0],e[t+1]=s[1],e[t+2]=s[2],e[t+3]=s[3],e[t+4]=s[4],e[t+5]=s[5],e[t+6]=s[6],e[t+7]=s[7],e[t+8]=s[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const yS=new rn;function C3(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function Ox(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function Xfe(){const n=Ox("canvas");return n.style.display="block",n}const ik={};function jh(n){n in ik||(ik[n]=!0,console.warn(n))}function qfe(n,e,t){return new Promise(function(s,r){function i(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:r();break;case n.TIMEOUT_EXPIRED:setTimeout(i,t);break;default:s()}}setTimeout(i,t)})}function Kfe(n){const e=n.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function Yfe(n){const e=n.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const ok=new rn().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),ak=new rn().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Zfe(){const n={enabled:!0,workingColorSpace:vd,spaces:{},convert:function(r,i,o){return this.enabled===!1||i===o||!i||!o||(this.spaces[i].transfer===Vn&&(r.r=Ka(r.r),r.g=Ka(r.g),r.b=Ka(r.b)),this.spaces[i].primaries!==this.spaces[o].primaries&&(r.applyMatrix3(this.spaces[i].toXYZ),r.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Vn&&(r.r=ed(r.r),r.g=ed(r.g),r.b=ed(r.b))),r},fromWorkingColorSpace:function(r,i){return this.convert(r,this.workingColorSpace,i)},toWorkingColorSpace:function(r,i){return this.convert(r,i,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===Hl?Fx:this.spaces[r].transfer},getLuminanceCoefficients:function(r,i=this.workingColorSpace){return r.fromArray(this.spaces[i].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,i,o){return r.copy(this.spaces[i].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],s=[.3127,.329];return n.define({[vd]:{primaries:e,whitePoint:s,transfer:Fx,toXYZ:ok,fromXYZ:ak,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:io},outputColorSpaceConfig:{drawingBufferColorSpace:io}},[io]:{primaries:e,whitePoint:s,transfer:Vn,toXYZ:ok,fromXYZ:ak,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:io}}}),n}const Rn=Zfe();function Ka(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function ed(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let kh;class Qfe{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{kh===void 0&&(kh=Ox("canvas")),kh.width=e.width,kh.height=e.height;const s=kh.getContext("2d");e instanceof ImageData?s.putImageData(e,0,0):s.drawImage(e,0,0,e.width,e.height),t=kh}return t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ox("canvas");t.width=e.width,t.height=e.height;const s=t.getContext("2d");s.drawImage(e,0,0,e.width,e.height);const r=s.getImageData(0,0,e.width,e.height),i=r.data;for(let o=0;o<i.length;o++)i[o]=Ka(i[o]/255)*255;return s.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let s=0;s<t.length;s++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[s]=Math.floor(Ka(t[s]/255)*255):t[s]=Ka(t[s]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Jfe=0;class I3{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Jfe++}),this.uuid=Vg(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const s={uuid:this.uuid,url:""},r=this.data;if(r!==null){let i;if(Array.isArray(r)){i=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?i.push(xS(r[o].image)):i.push(xS(r[o]))}else i=xS(r);s.url=i}return t||(e.images[this.uuid]=s),s}}function xS(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Qfe.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let epe=0;class vi extends Df{constructor(e=vi.DEFAULT_IMAGE,t=vi.DEFAULT_MAPPING,s=fc,r=fc,i=ra,o=pc,a=Ao,l=nl,u=vi.DEFAULT_ANISOTROPY,h=Hl){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:epe++}),this.uuid=Vg(),this.name="",this.source=new I3(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=s,this.wrapT=r,this.magFilter=i,this.minFilter=o,this.anisotropy=u,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Fn(0,0),this.repeat=new Fn(1,1),this.center=new Fn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new rn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const s={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(s.userData=this.userData),t||(e.textures[this.uuid]=s),s}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==f3)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case J_:e.x=e.x-Math.floor(e.x);break;case fc:e.x=e.x<0?0:1;break;case eT:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case J_:e.y=e.y-Math.floor(e.y);break;case fc:e.y=e.y<0?0:1;break;case eT:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}vi.DEFAULT_IMAGE=null;vi.DEFAULT_MAPPING=f3;vi.DEFAULT_ANISOTROPY=1;class gs{constructor(e=0,t=0,s=0,r=1){gs.prototype.isVector4=!0,this.x=e,this.y=t,this.z=s,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,s,r){return this.x=e,this.y=t,this.z=s,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,s=this.y,r=this.z,i=this.w,o=e.elements;return this.x=o[0]*t+o[4]*s+o[8]*r+o[12]*i,this.y=o[1]*t+o[5]*s+o[9]*r+o[13]*i,this.z=o[2]*t+o[6]*s+o[10]*r+o[14]*i,this.w=o[3]*t+o[7]*s+o[11]*r+o[15]*i,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,s,r,i;const l=e.elements,u=l[0],h=l[4],d=l[8],p=l[1],m=l[5],g=l[9],b=l[2],y=l[6],v=l[10];if(Math.abs(h-p)<.01&&Math.abs(d-b)<.01&&Math.abs(g-y)<.01){if(Math.abs(h+p)<.1&&Math.abs(d+b)<.1&&Math.abs(g+y)<.1&&Math.abs(u+m+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(u+1)/2,T=(m+1)/2,I=(v+1)/2,M=(h+p)/4,$=(d+b)/4,O=(g+y)/4;return E>T&&E>I?E<.01?(s=0,r=.707106781,i=.707106781):(s=Math.sqrt(E),r=M/s,i=$/s):T>I?T<.01?(s=.707106781,r=0,i=.707106781):(r=Math.sqrt(T),s=M/r,i=O/r):I<.01?(s=.707106781,r=.707106781,i=0):(i=Math.sqrt(I),s=$/i,r=O/i),this.set(s,r,i,t),this}let w=Math.sqrt((y-g)*(y-g)+(d-b)*(d-b)+(p-h)*(p-h));return Math.abs(w)<.001&&(w=1),this.x=(y-g)/w,this.y=(d-b)/w,this.z=(p-h)/w,this.w=Math.acos((u+m+v-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=_n(this.x,e.x,t.x),this.y=_n(this.y,e.y,t.y),this.z=_n(this.z,e.z,t.z),this.w=_n(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=_n(this.x,e,t),this.y=_n(this.y,e,t),this.z=_n(this.z,e,t),this.w=_n(this.w,e,t),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(_n(s,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this.z=e.z+(t.z-e.z)*s,this.w=e.w+(t.w-e.w)*s,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class tpe extends Df{constructor(e=1,t=1,s={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new gs(0,0,e,t),this.scissorTest=!1,this.viewport=new gs(0,0,e,t);const r={width:e,height:t,depth:1};s=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ra,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},s);const i=new vi(r,s.mapping,s.wrapS,s.wrapT,s.magFilter,s.minFilter,s.format,s.type,s.anisotropy,s.colorSpace);i.flipY=!1,i.generateMipmaps=s.generateMipmaps,i.internalFormat=s.internalFormat,this.textures=[];const o=s.count;for(let a=0;a<o;a++)this.textures[a]=i.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=s.depthBuffer,this.stencilBuffer=s.stencilBuffer,this.resolveDepthBuffer=s.resolveDepthBuffer,this.resolveStencilBuffer=s.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=s.depthTexture,this.samples=s.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,s=1){if(this.width!==e||this.height!==t||this.depth!==s){this.width=e,this.height=t,this.depth=s;for(let r=0,i=this.textures.length;r<i;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=s;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let s=0,r=e.textures.length;s<r;s++)this.textures[s]=e.textures[s].clone(),this.textures[s].isRenderTargetTexture=!0,this.textures[s].renderTarget=this;const t=Object.assign({},e.texture.image);return this.texture.source=new I3(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Oc extends tpe{constructor(e=1,t=1,s={}){super(e,t,s),this.isWebGLRenderTarget=!0}}class N3 extends vi{constructor(e=null,t=1,s=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:s,depth:r},this.magFilter=Mo,this.minFilter=Mo,this.wrapR=fc,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class npe extends vi{constructor(e=null,t=1,s=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:s,depth:r},this.magFilter=Mo,this.minFilter=Mo,this.wrapR=fc,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Wg{constructor(e=0,t=0,s=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=s,this._w=r}static slerpFlat(e,t,s,r,i,o,a){let l=s[r+0],u=s[r+1],h=s[r+2],d=s[r+3];const p=i[o+0],m=i[o+1],g=i[o+2],b=i[o+3];if(a===0){e[t+0]=l,e[t+1]=u,e[t+2]=h,e[t+3]=d;return}if(a===1){e[t+0]=p,e[t+1]=m,e[t+2]=g,e[t+3]=b;return}if(d!==b||l!==p||u!==m||h!==g){let y=1-a;const v=l*p+u*m+h*g+d*b,w=v>=0?1:-1,E=1-v*v;if(E>Number.EPSILON){const I=Math.sqrt(E),M=Math.atan2(I,v*w);y=Math.sin(y*M)/I,a=Math.sin(a*M)/I}const T=a*w;if(l=l*y+p*T,u=u*y+m*T,h=h*y+g*T,d=d*y+b*T,y===1-a){const I=1/Math.sqrt(l*l+u*u+h*h+d*d);l*=I,u*=I,h*=I,d*=I}}e[t]=l,e[t+1]=u,e[t+2]=h,e[t+3]=d}static multiplyQuaternionsFlat(e,t,s,r,i,o){const a=s[r],l=s[r+1],u=s[r+2],h=s[r+3],d=i[o],p=i[o+1],m=i[o+2],g=i[o+3];return e[t]=a*g+h*d+l*m-u*p,e[t+1]=l*g+h*p+u*d-a*m,e[t+2]=u*g+h*m+a*p-l*d,e[t+3]=h*g-a*d-l*p-u*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,s,r){return this._x=e,this._y=t,this._z=s,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const s=e._x,r=e._y,i=e._z,o=e._order,a=Math.cos,l=Math.sin,u=a(s/2),h=a(r/2),d=a(i/2),p=l(s/2),m=l(r/2),g=l(i/2);switch(o){case"XYZ":this._x=p*h*d+u*m*g,this._y=u*m*d-p*h*g,this._z=u*h*g+p*m*d,this._w=u*h*d-p*m*g;break;case"YXZ":this._x=p*h*d+u*m*g,this._y=u*m*d-p*h*g,this._z=u*h*g-p*m*d,this._w=u*h*d+p*m*g;break;case"ZXY":this._x=p*h*d-u*m*g,this._y=u*m*d+p*h*g,this._z=u*h*g+p*m*d,this._w=u*h*d-p*m*g;break;case"ZYX":this._x=p*h*d-u*m*g,this._y=u*m*d+p*h*g,this._z=u*h*g-p*m*d,this._w=u*h*d+p*m*g;break;case"YZX":this._x=p*h*d+u*m*g,this._y=u*m*d+p*h*g,this._z=u*h*g-p*m*d,this._w=u*h*d-p*m*g;break;case"XZY":this._x=p*h*d-u*m*g,this._y=u*m*d-p*h*g,this._z=u*h*g+p*m*d,this._w=u*h*d+p*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const s=t/2,r=Math.sin(s);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,s=t[0],r=t[4],i=t[8],o=t[1],a=t[5],l=t[9],u=t[2],h=t[6],d=t[10],p=s+a+d;if(p>0){const m=.5/Math.sqrt(p+1);this._w=.25/m,this._x=(h-l)*m,this._y=(i-u)*m,this._z=(o-r)*m}else if(s>a&&s>d){const m=2*Math.sqrt(1+s-a-d);this._w=(h-l)/m,this._x=.25*m,this._y=(r+o)/m,this._z=(i+u)/m}else if(a>d){const m=2*Math.sqrt(1+a-s-d);this._w=(i-u)/m,this._x=(r+o)/m,this._y=.25*m,this._z=(l+h)/m}else{const m=2*Math.sqrt(1+d-s-a);this._w=(o-r)/m,this._x=(i+u)/m,this._y=(l+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let s=e.dot(t)+1;return s<Number.EPSILON?(s=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=s):(this._x=0,this._y=-e.z,this._z=e.y,this._w=s)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=s),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(_n(this.dot(e),-1,1)))}rotateTowards(e,t){const s=this.angleTo(e);if(s===0)return this;const r=Math.min(1,t/s);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const s=e._x,r=e._y,i=e._z,o=e._w,a=t._x,l=t._y,u=t._z,h=t._w;return this._x=s*h+o*a+r*u-i*l,this._y=r*h+o*l+i*a-s*u,this._z=i*h+o*u+s*l-r*a,this._w=o*h-s*a-r*l-i*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const s=this._x,r=this._y,i=this._z,o=this._w;let a=o*e._w+s*e._x+r*e._y+i*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=s,this._y=r,this._z=i,this;const l=1-a*a;if(l<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*s+t*this._x,this._y=m*r+t*this._y,this._z=m*i+t*this._z,this.normalize(),this}const u=Math.sqrt(l),h=Math.atan2(u,a),d=Math.sin((1-t)*h)/u,p=Math.sin(t*h)/u;return this._w=o*d+this._w*p,this._x=s*d+this._x*p,this._y=r*d+this._y*p,this._z=i*d+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,s){return this.copy(e).slerp(t,s)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),s=Math.random(),r=Math.sqrt(1-s),i=Math.sqrt(s);return this.set(r*Math.sin(e),r*Math.cos(e),i*Math.sin(t),i*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class $e{constructor(e=0,t=0,s=0){$e.prototype.isVector3=!0,this.x=e,this.y=t,this.z=s}set(e,t,s){return s===void 0&&(s=this.z),this.x=e,this.y=t,this.z=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(lk.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(lk.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,s=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*s+i[6]*r,this.y=i[1]*t+i[4]*s+i[7]*r,this.z=i[2]*t+i[5]*s+i[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,s=this.y,r=this.z,i=e.elements,o=1/(i[3]*t+i[7]*s+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*s+i[8]*r+i[12])*o,this.y=(i[1]*t+i[5]*s+i[9]*r+i[13])*o,this.z=(i[2]*t+i[6]*s+i[10]*r+i[14])*o,this}applyQuaternion(e){const t=this.x,s=this.y,r=this.z,i=e.x,o=e.y,a=e.z,l=e.w,u=2*(o*r-a*s),h=2*(a*t-i*r),d=2*(i*s-o*t);return this.x=t+l*u+o*d-a*h,this.y=s+l*h+a*u-i*d,this.z=r+l*d+i*h-o*u,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,s=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*s+i[8]*r,this.y=i[1]*t+i[5]*s+i[9]*r,this.z=i[2]*t+i[6]*s+i[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=_n(this.x,e.x,t.x),this.y=_n(this.y,e.y,t.y),this.z=_n(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=_n(this.x,e,t),this.y=_n(this.y,e,t),this.z=_n(this.z,e,t),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(_n(s,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this.z=e.z+(t.z-e.z)*s,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const s=e.x,r=e.y,i=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-i*a,this.y=i*o-s*l,this.z=s*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const s=e.dot(this)/t;return this.copy(e).multiplyScalar(s)}projectOnPlane(e){return vS.copy(this).projectOnVector(e),this.sub(vS)}reflect(e){return this.sub(vS.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const s=this.dot(e)/t;return Math.acos(_n(s,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,s=this.y-e.y,r=this.z-e.z;return t*t+s*s+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,s){const r=Math.sin(t)*e;return this.x=r*Math.sin(s),this.y=Math.cos(t)*e,this.z=r*Math.cos(s),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,s){return this.x=e*Math.sin(t),this.y=s,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),s=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=s,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,s=Math.sqrt(1-t*t);return this.x=s*Math.cos(e),this.y=t,this.z=s*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const vS=new $e,lk=new Wg;class Gg{constructor(e=new $e(1/0,1/0,1/0),t=new $e(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,s=e.length;t<s;t+=3)this.expandByPoint(bo.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,s=e.count;t<s;t++)this.expandByPoint(bo.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,s=e.length;t<s;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const s=bo.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(s),this.max.copy(e).add(s),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const s=e.geometry;if(s!==void 0){const i=s.getAttribute("position");if(t===!0&&i!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=i.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,bo):bo.fromBufferAttribute(i,o),bo.applyMatrix4(e.matrixWorld),this.expandByPoint(bo);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),w0.copy(e.boundingBox)):(s.boundingBox===null&&s.computeBoundingBox(),w0.copy(s.boundingBox)),w0.applyMatrix4(e.matrixWorld),this.union(w0)}const r=e.children;for(let i=0,o=r.length;i<o;i++)this.expandByObject(r[i],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,bo),bo.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,s;return e.normal.x>0?(t=e.normal.x*this.min.x,s=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,s=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,s+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,s+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,s+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,s+=e.normal.z*this.min.z),t<=-e.constant&&s>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(vp),S0.subVectors(this.max,vp),Mh.subVectors(e.a,vp),Dh.subVectors(e.b,vp),$h.subVectors(e.c,vp),Ll.subVectors(Dh,Mh),Ul.subVectors($h,Dh),qu.subVectors(Mh,$h);let t=[0,-Ll.z,Ll.y,0,-Ul.z,Ul.y,0,-qu.z,qu.y,Ll.z,0,-Ll.x,Ul.z,0,-Ul.x,qu.z,0,-qu.x,-Ll.y,Ll.x,0,-Ul.y,Ul.x,0,-qu.y,qu.x,0];return!bS(t,Mh,Dh,$h,S0)||(t=[1,0,0,0,1,0,0,0,1],!bS(t,Mh,Dh,$h,S0))?!1:(_0.crossVectors(Ll,Ul),t=[_0.x,_0.y,_0.z],bS(t,Mh,Dh,$h,S0))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,bo).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(bo).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:($a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),$a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),$a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),$a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),$a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),$a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),$a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),$a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints($a),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const $a=[new $e,new $e,new $e,new $e,new $e,new $e,new $e,new $e],bo=new $e,w0=new Gg,Mh=new $e,Dh=new $e,$h=new $e,Ll=new $e,Ul=new $e,qu=new $e,vp=new $e,S0=new $e,_0=new $e,Ku=new $e;function bS(n,e,t,s,r){for(let i=0,o=n.length-3;i<=o;i+=3){Ku.fromArray(n,i);const a=r.x*Math.abs(Ku.x)+r.y*Math.abs(Ku.y)+r.z*Math.abs(Ku.z),l=e.dot(Ku),u=t.dot(Ku),h=s.dot(Ku);if(Math.max(-Math.max(l,u,h),Math.min(l,u,h))>a)return!1}return!0}const spe=new Gg,bp=new $e,wS=new $e;class AI{constructor(e=new $e,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const s=this.center;t!==void 0?s.copy(t):spe.setFromPoints(e).getCenter(s);let r=0;for(let i=0,o=e.length;i<o;i++)r=Math.max(r,s.distanceToSquared(e[i]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const s=this.center.distanceToSquared(e);return t.copy(e),s>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;bp.subVectors(e,this.center);const t=bp.lengthSq();if(t>this.radius*this.radius){const s=Math.sqrt(t),r=(s-this.radius)*.5;this.center.addScaledVector(bp,r/s),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(wS.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(bp.copy(e.center).add(wS)),this.expandByPoint(bp.copy(e.center).sub(wS))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Fa=new $e,SS=new $e,T0=new $e,zl=new $e,_S=new $e,E0=new $e,TS=new $e;class rpe{constructor(e=new $e,t=new $e(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Fa)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const s=t.dot(this.direction);return s<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,s)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Fa.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Fa.copy(this.origin).addScaledVector(this.direction,t),Fa.distanceToSquared(e))}distanceSqToSegment(e,t,s,r){SS.copy(e).add(t).multiplyScalar(.5),T0.copy(t).sub(e).normalize(),zl.copy(this.origin).sub(SS);const i=e.distanceTo(t)*.5,o=-this.direction.dot(T0),a=zl.dot(this.direction),l=-zl.dot(T0),u=zl.lengthSq(),h=Math.abs(1-o*o);let d,p,m,g;if(h>0)if(d=o*l-a,p=o*a-l,g=i*h,d>=0)if(p>=-g)if(p<=g){const b=1/h;d*=b,p*=b,m=d*(d+o*p+2*a)+p*(o*d+p+2*l)+u}else p=i,d=Math.max(0,-(o*p+a)),m=-d*d+p*(p+2*l)+u;else p=-i,d=Math.max(0,-(o*p+a)),m=-d*d+p*(p+2*l)+u;else p<=-g?(d=Math.max(0,-(-o*i+a)),p=d>0?-i:Math.min(Math.max(-i,-l),i),m=-d*d+p*(p+2*l)+u):p<=g?(d=0,p=Math.min(Math.max(-i,-l),i),m=p*(p+2*l)+u):(d=Math.max(0,-(o*i+a)),p=d>0?i:Math.min(Math.max(-i,-l),i),m=-d*d+p*(p+2*l)+u);else p=o>0?-i:i,d=Math.max(0,-(o*p+a)),m=-d*d+p*(p+2*l)+u;return s&&s.copy(this.origin).addScaledVector(this.direction,d),r&&r.copy(SS).addScaledVector(T0,p),m}intersectSphere(e,t){Fa.subVectors(e.center,this.origin);const s=Fa.dot(this.direction),r=Fa.dot(Fa)-s*s,i=e.radius*e.radius;if(r>i)return null;const o=Math.sqrt(i-r),a=s-o,l=s+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const s=-(this.origin.dot(e.normal)+e.constant)/t;return s>=0?s:null}intersectPlane(e,t){const s=this.distanceToPlane(e);return s===null?null:this.at(s,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let s,r,i,o,a,l;const u=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,p=this.origin;return u>=0?(s=(e.min.x-p.x)*u,r=(e.max.x-p.x)*u):(s=(e.max.x-p.x)*u,r=(e.min.x-p.x)*u),h>=0?(i=(e.min.y-p.y)*h,o=(e.max.y-p.y)*h):(i=(e.max.y-p.y)*h,o=(e.min.y-p.y)*h),s>o||i>r||((i>s||isNaN(s))&&(s=i),(o<r||isNaN(r))&&(r=o),d>=0?(a=(e.min.z-p.z)*d,l=(e.max.z-p.z)*d):(a=(e.max.z-p.z)*d,l=(e.min.z-p.z)*d),s>l||a>r)||((a>s||s!==s)&&(s=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(s>=0?s:r,t)}intersectsBox(e){return this.intersectBox(e,Fa)!==null}intersectTriangle(e,t,s,r,i){_S.subVectors(t,e),E0.subVectors(s,e),TS.crossVectors(_S,E0);let o=this.direction.dot(TS),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;zl.subVectors(this.origin,e);const l=a*this.direction.dot(E0.crossVectors(zl,E0));if(l<0)return null;const u=a*this.direction.dot(_S.cross(zl));if(u<0||l+u>o)return null;const h=-a*zl.dot(TS);return h<0?null:this.at(h/o,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class xs{constructor(e,t,s,r,i,o,a,l,u,h,d,p,m,g,b,y){xs.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,s,r,i,o,a,l,u,h,d,p,m,g,b,y)}set(e,t,s,r,i,o,a,l,u,h,d,p,m,g,b,y){const v=this.elements;return v[0]=e,v[4]=t,v[8]=s,v[12]=r,v[1]=i,v[5]=o,v[9]=a,v[13]=l,v[2]=u,v[6]=h,v[10]=d,v[14]=p,v[3]=m,v[7]=g,v[11]=b,v[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new xs().fromArray(this.elements)}copy(e){const t=this.elements,s=e.elements;return t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3],t[4]=s[4],t[5]=s[5],t[6]=s[6],t[7]=s[7],t[8]=s[8],t[9]=s[9],t[10]=s[10],t[11]=s[11],t[12]=s[12],t[13]=s[13],t[14]=s[14],t[15]=s[15],this}copyPosition(e){const t=this.elements,s=e.elements;return t[12]=s[12],t[13]=s[13],t[14]=s[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,s){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(e,t,s){return this.set(e.x,t.x,s.x,0,e.y,t.y,s.y,0,e.z,t.z,s.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,s=e.elements,r=1/Fh.setFromMatrixColumn(e,0).length(),i=1/Fh.setFromMatrixColumn(e,1).length(),o=1/Fh.setFromMatrixColumn(e,2).length();return t[0]=s[0]*r,t[1]=s[1]*r,t[2]=s[2]*r,t[3]=0,t[4]=s[4]*i,t[5]=s[5]*i,t[6]=s[6]*i,t[7]=0,t[8]=s[8]*o,t[9]=s[9]*o,t[10]=s[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,s=e.x,r=e.y,i=e.z,o=Math.cos(s),a=Math.sin(s),l=Math.cos(r),u=Math.sin(r),h=Math.cos(i),d=Math.sin(i);if(e.order==="XYZ"){const p=o*h,m=o*d,g=a*h,b=a*d;t[0]=l*h,t[4]=-l*d,t[8]=u,t[1]=m+g*u,t[5]=p-b*u,t[9]=-a*l,t[2]=b-p*u,t[6]=g+m*u,t[10]=o*l}else if(e.order==="YXZ"){const p=l*h,m=l*d,g=u*h,b=u*d;t[0]=p+b*a,t[4]=g*a-m,t[8]=o*u,t[1]=o*d,t[5]=o*h,t[9]=-a,t[2]=m*a-g,t[6]=b+p*a,t[10]=o*l}else if(e.order==="ZXY"){const p=l*h,m=l*d,g=u*h,b=u*d;t[0]=p-b*a,t[4]=-o*d,t[8]=g+m*a,t[1]=m+g*a,t[5]=o*h,t[9]=b-p*a,t[2]=-o*u,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const p=o*h,m=o*d,g=a*h,b=a*d;t[0]=l*h,t[4]=g*u-m,t[8]=p*u+b,t[1]=l*d,t[5]=b*u+p,t[9]=m*u-g,t[2]=-u,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const p=o*l,m=o*u,g=a*l,b=a*u;t[0]=l*h,t[4]=b-p*d,t[8]=g*d+m,t[1]=d,t[5]=o*h,t[9]=-a*h,t[2]=-u*h,t[6]=m*d+g,t[10]=p-b*d}else if(e.order==="XZY"){const p=o*l,m=o*u,g=a*l,b=a*u;t[0]=l*h,t[4]=-d,t[8]=u*h,t[1]=p*d+b,t[5]=o*h,t[9]=m*d-g,t[2]=g*d-m,t[6]=a*h,t[10]=b*d+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ipe,e,ope)}lookAt(e,t,s){const r=this.elements;return ki.subVectors(e,t),ki.lengthSq()===0&&(ki.z=1),ki.normalize(),Bl.crossVectors(s,ki),Bl.lengthSq()===0&&(Math.abs(s.z)===1?ki.x+=1e-4:ki.z+=1e-4,ki.normalize(),Bl.crossVectors(s,ki)),Bl.normalize(),C0.crossVectors(ki,Bl),r[0]=Bl.x,r[4]=C0.x,r[8]=ki.x,r[1]=Bl.y,r[5]=C0.y,r[9]=ki.y,r[2]=Bl.z,r[6]=C0.z,r[10]=ki.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const s=e.elements,r=t.elements,i=this.elements,o=s[0],a=s[4],l=s[8],u=s[12],h=s[1],d=s[5],p=s[9],m=s[13],g=s[2],b=s[6],y=s[10],v=s[14],w=s[3],E=s[7],T=s[11],I=s[15],M=r[0],$=r[4],O=r[8],k=r[12],N=r[1],A=r[5],B=r[9],W=r[13],K=r[2],q=r[6],Y=r[10],J=r[14],G=r[3],ee=r[7],te=r[11],j=r[15];return i[0]=o*M+a*N+l*K+u*G,i[4]=o*$+a*A+l*q+u*ee,i[8]=o*O+a*B+l*Y+u*te,i[12]=o*k+a*W+l*J+u*j,i[1]=h*M+d*N+p*K+m*G,i[5]=h*$+d*A+p*q+m*ee,i[9]=h*O+d*B+p*Y+m*te,i[13]=h*k+d*W+p*J+m*j,i[2]=g*M+b*N+y*K+v*G,i[6]=g*$+b*A+y*q+v*ee,i[10]=g*O+b*B+y*Y+v*te,i[14]=g*k+b*W+y*J+v*j,i[3]=w*M+E*N+T*K+I*G,i[7]=w*$+E*A+T*q+I*ee,i[11]=w*O+E*B+T*Y+I*te,i[15]=w*k+E*W+T*J+I*j,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],s=e[4],r=e[8],i=e[12],o=e[1],a=e[5],l=e[9],u=e[13],h=e[2],d=e[6],p=e[10],m=e[14],g=e[3],b=e[7],y=e[11],v=e[15];return g*(+i*l*d-r*u*d-i*a*p+s*u*p+r*a*m-s*l*m)+b*(+t*l*m-t*u*p+i*o*p-r*o*m+r*u*h-i*l*h)+y*(+t*u*d-t*a*m-i*o*d+s*o*m+i*a*h-s*u*h)+v*(-r*a*h-t*l*d+t*a*p+r*o*d-s*o*p+s*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,s){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=s),this}invert(){const e=this.elements,t=e[0],s=e[1],r=e[2],i=e[3],o=e[4],a=e[5],l=e[6],u=e[7],h=e[8],d=e[9],p=e[10],m=e[11],g=e[12],b=e[13],y=e[14],v=e[15],w=d*y*u-b*p*u+b*l*m-a*y*m-d*l*v+a*p*v,E=g*p*u-h*y*u-g*l*m+o*y*m+h*l*v-o*p*v,T=h*b*u-g*d*u+g*a*m-o*b*m-h*a*v+o*d*v,I=g*d*l-h*b*l-g*a*p+o*b*p+h*a*y-o*d*y,M=t*w+s*E+r*T+i*I;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const $=1/M;return e[0]=w*$,e[1]=(b*p*i-d*y*i-b*r*m+s*y*m+d*r*v-s*p*v)*$,e[2]=(a*y*i-b*l*i+b*r*u-s*y*u-a*r*v+s*l*v)*$,e[3]=(d*l*i-a*p*i-d*r*u+s*p*u+a*r*m-s*l*m)*$,e[4]=E*$,e[5]=(h*y*i-g*p*i+g*r*m-t*y*m-h*r*v+t*p*v)*$,e[6]=(g*l*i-o*y*i-g*r*u+t*y*u+o*r*v-t*l*v)*$,e[7]=(o*p*i-h*l*i+h*r*u-t*p*u-o*r*m+t*l*m)*$,e[8]=T*$,e[9]=(g*d*i-h*b*i-g*s*m+t*b*m+h*s*v-t*d*v)*$,e[10]=(o*b*i-g*a*i+g*s*u-t*b*u-o*s*v+t*a*v)*$,e[11]=(h*a*i-o*d*i-h*s*u+t*d*u+o*s*m-t*a*m)*$,e[12]=I*$,e[13]=(h*b*r-g*d*r+g*s*p-t*b*p-h*s*y+t*d*y)*$,e[14]=(g*a*r-o*b*r-g*s*l+t*b*l+o*s*y-t*a*y)*$,e[15]=(o*d*r-h*a*r+h*s*l-t*d*l-o*s*p+t*a*p)*$,this}scale(e){const t=this.elements,s=e.x,r=e.y,i=e.z;return t[0]*=s,t[4]*=r,t[8]*=i,t[1]*=s,t[5]*=r,t[9]*=i,t[2]*=s,t[6]*=r,t[10]*=i,t[3]*=s,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],s=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,s,r))}makeTranslation(e,t,s){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,s,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),s=Math.sin(e);return this.set(1,0,0,0,0,t,-s,0,0,s,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,0,s,0,0,1,0,0,-s,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,-s,0,0,s,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const s=Math.cos(t),r=Math.sin(t),i=1-s,o=e.x,a=e.y,l=e.z,u=i*o,h=i*a;return this.set(u*o+s,u*a-r*l,u*l+r*a,0,u*a+r*l,h*a+s,h*l-r*o,0,u*l-r*a,h*l+r*o,i*l*l+s,0,0,0,0,1),this}makeScale(e,t,s){return this.set(e,0,0,0,0,t,0,0,0,0,s,0,0,0,0,1),this}makeShear(e,t,s,r,i,o){return this.set(1,s,i,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,s){const r=this.elements,i=t._x,o=t._y,a=t._z,l=t._w,u=i+i,h=o+o,d=a+a,p=i*u,m=i*h,g=i*d,b=o*h,y=o*d,v=a*d,w=l*u,E=l*h,T=l*d,I=s.x,M=s.y,$=s.z;return r[0]=(1-(b+v))*I,r[1]=(m+T)*I,r[2]=(g-E)*I,r[3]=0,r[4]=(m-T)*M,r[5]=(1-(p+v))*M,r[6]=(y+w)*M,r[7]=0,r[8]=(g+E)*$,r[9]=(y-w)*$,r[10]=(1-(p+b))*$,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,s){const r=this.elements;let i=Fh.set(r[0],r[1],r[2]).length();const o=Fh.set(r[4],r[5],r[6]).length(),a=Fh.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],wo.copy(this);const u=1/i,h=1/o,d=1/a;return wo.elements[0]*=u,wo.elements[1]*=u,wo.elements[2]*=u,wo.elements[4]*=h,wo.elements[5]*=h,wo.elements[6]*=h,wo.elements[8]*=d,wo.elements[9]*=d,wo.elements[10]*=d,t.setFromRotationMatrix(wo),s.x=i,s.y=o,s.z=a,this}makePerspective(e,t,s,r,i,o,a=Xa){const l=this.elements,u=2*i/(t-e),h=2*i/(s-r),d=(t+e)/(t-e),p=(s+r)/(s-r);let m,g;if(a===Xa)m=-(o+i)/(o-i),g=-2*o*i/(o-i);else if(a===Px)m=-o/(o-i),g=-o*i/(o-i);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=u,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=h,l[9]=p,l[13]=0,l[2]=0,l[6]=0,l[10]=m,l[14]=g,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,s,r,i,o,a=Xa){const l=this.elements,u=1/(t-e),h=1/(s-r),d=1/(o-i),p=(t+e)*u,m=(s+r)*h;let g,b;if(a===Xa)g=(o+i)*d,b=-2*d;else if(a===Px)g=i*d,b=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*u,l[4]=0,l[8]=0,l[12]=-p,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-m,l[2]=0,l[6]=0,l[10]=b,l[14]=-g,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,s=e.elements;for(let r=0;r<16;r++)if(t[r]!==s[r])return!1;return!0}fromArray(e,t=0){for(let s=0;s<16;s++)this.elements[s]=e[s+t];return this}toArray(e=[],t=0){const s=this.elements;return e[t]=s[0],e[t+1]=s[1],e[t+2]=s[2],e[t+3]=s[3],e[t+4]=s[4],e[t+5]=s[5],e[t+6]=s[6],e[t+7]=s[7],e[t+8]=s[8],e[t+9]=s[9],e[t+10]=s[10],e[t+11]=s[11],e[t+12]=s[12],e[t+13]=s[13],e[t+14]=s[14],e[t+15]=s[15],e}}const Fh=new $e,wo=new xs,ipe=new $e(0,0,0),ope=new $e(1,1,1),Bl=new $e,C0=new $e,ki=new $e,uk=new xs,ck=new Wg;class xa{constructor(e=0,t=0,s=0,r=xa.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=s,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,s,r=this._order){return this._x=e,this._y=t,this._z=s,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,s=!0){const r=e.elements,i=r[0],o=r[4],a=r[8],l=r[1],u=r[5],h=r[9],d=r[2],p=r[6],m=r[10];switch(t){case"XYZ":this._y=Math.asin(_n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,m),this._z=Math.atan2(-o,i)):(this._x=Math.atan2(p,u),this._z=0);break;case"YXZ":this._x=Math.asin(-_n(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-d,i),this._z=0);break;case"ZXY":this._x=Math.asin(_n(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-d,m),this._z=Math.atan2(-o,u)):(this._y=0,this._z=Math.atan2(l,i));break;case"ZYX":this._y=Math.asin(-_n(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(p,m),this._z=Math.atan2(l,i)):(this._x=0,this._z=Math.atan2(-o,u));break;case"YZX":this._z=Math.asin(_n(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,u),this._y=Math.atan2(-d,i)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-_n(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,u),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-h,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,s===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,s){return uk.makeRotationFromQuaternion(e),this.setFromRotationMatrix(uk,t,s)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ck.setFromEuler(this),this.setFromQuaternion(ck,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}xa.DEFAULT_ORDER="XYZ";class A3{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ape=0;const hk=new $e,Ph=new Wg,Pa=new xs,I0=new $e,wp=new $e,lpe=new $e,upe=new Wg,dk=new $e(1,0,0),fk=new $e(0,1,0),pk=new $e(0,0,1),mk={type:"added"},cpe={type:"removed"},Oh={type:"childadded",child:null},ES={type:"childremoved",child:null};class zr extends Df{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ape++}),this.uuid=Vg(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=zr.DEFAULT_UP.clone();const e=new $e,t=new xa,s=new Wg,r=new $e(1,1,1);function i(){s.setFromEuler(t,!1)}function o(){t.setFromQuaternion(s,void 0,!1)}t._onChange(i),s._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:s},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new xs},normalMatrix:{value:new rn}}),this.matrix=new xs,this.matrixWorld=new xs,this.matrixAutoUpdate=zr.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=zr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new A3,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ph.setFromAxisAngle(e,t),this.quaternion.multiply(Ph),this}rotateOnWorldAxis(e,t){return Ph.setFromAxisAngle(e,t),this.quaternion.premultiply(Ph),this}rotateX(e){return this.rotateOnAxis(dk,e)}rotateY(e){return this.rotateOnAxis(fk,e)}rotateZ(e){return this.rotateOnAxis(pk,e)}translateOnAxis(e,t){return hk.copy(e).applyQuaternion(this.quaternion),this.position.add(hk.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(dk,e)}translateY(e){return this.translateOnAxis(fk,e)}translateZ(e){return this.translateOnAxis(pk,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Pa.copy(this.matrixWorld).invert())}lookAt(e,t,s){e.isVector3?I0.copy(e):I0.set(e,t,s);const r=this.parent;this.updateWorldMatrix(!0,!1),wp.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Pa.lookAt(wp,I0,this.up):Pa.lookAt(I0,wp,this.up),this.quaternion.setFromRotationMatrix(Pa),r&&(Pa.extractRotation(r.matrixWorld),Ph.setFromRotationMatrix(Pa),this.quaternion.premultiply(Ph.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(mk),Oh.child=e,this.dispatchEvent(Oh),Oh.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.remove(arguments[s]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(cpe),ES.child=e,this.dispatchEvent(ES),ES.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Pa.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Pa.multiply(e.parent.matrixWorld)),e.applyMatrix4(Pa),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(mk),Oh.child=e,this.dispatchEvent(Oh),Oh.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let s=0,r=this.children.length;s<r;s++){const o=this.children[s].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,s=[]){this[e]===t&&s.push(this);const r=this.children;for(let i=0,o=r.length;i<o;i++)r[i].getObjectsByProperty(e,t,s);return s}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wp,e,lpe),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wp,upe,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let s=0,r=t.length;s<r;s++)t[s].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let s=0,r=t.length;s<r;s++)t[s].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let s=0,r=t.length;s<r;s++)t[s].updateMatrixWorld(e)}updateWorldMatrix(e,t){const s=this.parent;if(e===!0&&s!==null&&s.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let i=0,o=r.length;i<o;i++)r[i].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",s={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},s.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function i(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let u=0,h=l.length;u<h;u++){const d=l[u];i(e.shapes,d)}else i(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,u=this.material.length;l<u;l++)a.push(i(e.materials,this.material[l]));r.material=a}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(i(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),u=o(e.textures),h=o(e.images),d=o(e.shapes),p=o(e.skeletons),m=o(e.animations),g=o(e.nodes);a.length>0&&(s.geometries=a),l.length>0&&(s.materials=l),u.length>0&&(s.textures=u),h.length>0&&(s.images=h),d.length>0&&(s.shapes=d),p.length>0&&(s.skeletons=p),m.length>0&&(s.animations=m),g.length>0&&(s.nodes=g)}return s.object=r,s;function o(a){const l=[];for(const u in a){const h=a[u];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let s=0;s<e.children.length;s++){const r=e.children[s];this.add(r.clone())}return this}}zr.DEFAULT_UP=new $e(0,1,0);zr.DEFAULT_MATRIX_AUTO_UPDATE=!0;zr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const So=new $e,Oa=new $e,CS=new $e,La=new $e,Lh=new $e,Uh=new $e,gk=new $e,IS=new $e,NS=new $e,AS=new $e,RS=new gs,kS=new gs,MS=new gs;class No{constructor(e=new $e,t=new $e,s=new $e){this.a=e,this.b=t,this.c=s}static getNormal(e,t,s,r){r.subVectors(s,t),So.subVectors(e,t),r.cross(So);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(e,t,s,r,i){So.subVectors(r,t),Oa.subVectors(s,t),CS.subVectors(e,t);const o=So.dot(So),a=So.dot(Oa),l=So.dot(CS),u=Oa.dot(Oa),h=Oa.dot(CS),d=o*u-a*a;if(d===0)return i.set(0,0,0),null;const p=1/d,m=(u*l-a*h)*p,g=(o*h-a*l)*p;return i.set(1-m-g,g,m)}static containsPoint(e,t,s,r){return this.getBarycoord(e,t,s,r,La)===null?!1:La.x>=0&&La.y>=0&&La.x+La.y<=1}static getInterpolation(e,t,s,r,i,o,a,l){return this.getBarycoord(e,t,s,r,La)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(i,La.x),l.addScaledVector(o,La.y),l.addScaledVector(a,La.z),l)}static getInterpolatedAttribute(e,t,s,r,i,o){return RS.setScalar(0),kS.setScalar(0),MS.setScalar(0),RS.fromBufferAttribute(e,t),kS.fromBufferAttribute(e,s),MS.fromBufferAttribute(e,r),o.setScalar(0),o.addScaledVector(RS,i.x),o.addScaledVector(kS,i.y),o.addScaledVector(MS,i.z),o}static isFrontFacing(e,t,s,r){return So.subVectors(s,t),Oa.subVectors(e,t),So.cross(Oa).dot(r)<0}set(e,t,s){return this.a.copy(e),this.b.copy(t),this.c.copy(s),this}setFromPointsAndIndices(e,t,s,r){return this.a.copy(e[t]),this.b.copy(e[s]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,s,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,s),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return So.subVectors(this.c,this.b),Oa.subVectors(this.a,this.b),So.cross(Oa).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return No.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return No.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,s,r,i){return No.getInterpolation(e,this.a,this.b,this.c,t,s,r,i)}containsPoint(e){return No.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return No.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const s=this.a,r=this.b,i=this.c;let o,a;Lh.subVectors(r,s),Uh.subVectors(i,s),IS.subVectors(e,s);const l=Lh.dot(IS),u=Uh.dot(IS);if(l<=0&&u<=0)return t.copy(s);NS.subVectors(e,r);const h=Lh.dot(NS),d=Uh.dot(NS);if(h>=0&&d<=h)return t.copy(r);const p=l*d-h*u;if(p<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(s).addScaledVector(Lh,o);AS.subVectors(e,i);const m=Lh.dot(AS),g=Uh.dot(AS);if(g>=0&&m<=g)return t.copy(i);const b=m*u-l*g;if(b<=0&&u>=0&&g<=0)return a=u/(u-g),t.copy(s).addScaledVector(Uh,a);const y=h*g-m*d;if(y<=0&&d-h>=0&&m-g>=0)return gk.subVectors(i,r),a=(d-h)/(d-h+(m-g)),t.copy(r).addScaledVector(gk,a);const v=1/(y+b+p);return o=b*v,a=p*v,t.copy(s).addScaledVector(Lh,o).addScaledVector(Uh,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const R3={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Vl={h:0,s:0,l:0},N0={h:0,s:0,l:0};function DS(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class kn{constructor(e,t,s){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,s)}set(e,t,s){if(t===void 0&&s===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,s);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=io){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Rn.toWorkingColorSpace(this,t),this}setRGB(e,t,s,r=Rn.workingColorSpace){return this.r=e,this.g=t,this.b=s,Rn.toWorkingColorSpace(this,r),this}setHSL(e,t,s,r=Rn.workingColorSpace){if(e=jfe(e,1),t=_n(t,0,1),s=_n(s,0,1),t===0)this.r=this.g=this.b=s;else{const i=s<=.5?s*(1+t):s+t-s*t,o=2*s-i;this.r=DS(o,i,e+1/3),this.g=DS(o,i,e),this.b=DS(o,i,e-1/3)}return Rn.toWorkingColorSpace(this,r),this}setStyle(e,t=io){function s(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,t);if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,t);break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=r[1],o=i.length;if(o===3)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(i,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=io){const s=R3[e.toLowerCase()];return s!==void 0?this.setHex(s,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ka(e.r),this.g=Ka(e.g),this.b=Ka(e.b),this}copyLinearToSRGB(e){return this.r=ed(e.r),this.g=ed(e.g),this.b=ed(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=io){return Rn.fromWorkingColorSpace(kr.copy(this),e),Math.round(_n(kr.r*255,0,255))*65536+Math.round(_n(kr.g*255,0,255))*256+Math.round(_n(kr.b*255,0,255))}getHexString(e=io){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Rn.workingColorSpace){Rn.fromWorkingColorSpace(kr.copy(this),t);const s=kr.r,r=kr.g,i=kr.b,o=Math.max(s,r,i),a=Math.min(s,r,i);let l,u;const h=(a+o)/2;if(a===o)l=0,u=0;else{const d=o-a;switch(u=h<=.5?d/(o+a):d/(2-o-a),o){case s:l=(r-i)/d+(r<i?6:0);break;case r:l=(i-s)/d+2;break;case i:l=(s-r)/d+4;break}l/=6}return e.h=l,e.s=u,e.l=h,e}getRGB(e,t=Rn.workingColorSpace){return Rn.fromWorkingColorSpace(kr.copy(this),t),e.r=kr.r,e.g=kr.g,e.b=kr.b,e}getStyle(e=io){Rn.fromWorkingColorSpace(kr.copy(this),e);const t=kr.r,s=kr.g,r=kr.b;return e!==io?`color(${e} ${t.toFixed(3)} ${s.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(s*255)},${Math.round(r*255)})`}offsetHSL(e,t,s){return this.getHSL(Vl),this.setHSL(Vl.h+e,Vl.s+t,Vl.l+s)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,s){return this.r=e.r+(t.r-e.r)*s,this.g=e.g+(t.g-e.g)*s,this.b=e.b+(t.b-e.b)*s,this}lerpHSL(e,t){this.getHSL(Vl),e.getHSL(N0);const s=gS(Vl.h,N0.h,t),r=gS(Vl.s,N0.s,t),i=gS(Vl.l,N0.l,t);return this.setHSL(s,r,i),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,s=this.g,r=this.b,i=e.elements;return this.r=i[0]*t+i[3]*s+i[6]*r,this.g=i[1]*t+i[4]*s+i[7]*r,this.b=i[2]*t+i[5]*s+i[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const kr=new kn;kn.NAMES=R3;let hpe=0;class Hg extends Df{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:hpe++}),this.uuid=Vg(),this.name="",this.type="Material",this.blending=Qh,this.side=fu,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=V_,this.blendDst=W_,this.blendEquation=uc,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new kn(0,0,0),this.blendAlpha=0,this.depthFunc=pd,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=nk,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Rh,this.stencilZFail=Rh,this.stencilZPass=Rh,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const s=e[t];if(s===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(s):r&&r.isVector3&&s&&s.isVector3?r.copy(s):this[t]=s}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const s={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.color&&this.color.isColor&&(s.color=this.color.getHex()),this.roughness!==void 0&&(s.roughness=this.roughness),this.metalness!==void 0&&(s.metalness=this.metalness),this.sheen!==void 0&&(s.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(s.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(s.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(s.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(s.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(s.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(s.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(s.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(s.shininess=this.shininess),this.clearcoat!==void 0&&(s.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(s.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(s.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(s.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(s.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,s.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(s.dispersion=this.dispersion),this.iridescence!==void 0&&(s.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(s.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(s.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(s.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(s.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(s.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(s.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(s.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(s.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(s.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(s.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(s.lightMap=this.lightMap.toJSON(e).uuid,s.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(s.aoMap=this.aoMap.toJSON(e).uuid,s.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(s.bumpMap=this.bumpMap.toJSON(e).uuid,s.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(s.normalMap=this.normalMap.toJSON(e).uuid,s.normalMapType=this.normalMapType,s.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(s.displacementMap=this.displacementMap.toJSON(e).uuid,s.displacementScale=this.displacementScale,s.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(s.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(s.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(s.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(s.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(s.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(s.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(s.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(s.combine=this.combine)),this.envMapRotation!==void 0&&(s.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(s.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(s.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(s.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(s.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(s.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(s.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(s.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(s.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(s.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(s.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(s.size=this.size),this.shadowSide!==null&&(s.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(s.sizeAttenuation=this.sizeAttenuation),this.blending!==Qh&&(s.blending=this.blending),this.side!==fu&&(s.side=this.side),this.vertexColors===!0&&(s.vertexColors=!0),this.opacity<1&&(s.opacity=this.opacity),this.transparent===!0&&(s.transparent=!0),this.blendSrc!==V_&&(s.blendSrc=this.blendSrc),this.blendDst!==W_&&(s.blendDst=this.blendDst),this.blendEquation!==uc&&(s.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(s.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(s.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(s.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(s.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(s.blendAlpha=this.blendAlpha),this.depthFunc!==pd&&(s.depthFunc=this.depthFunc),this.depthTest===!1&&(s.depthTest=this.depthTest),this.depthWrite===!1&&(s.depthWrite=this.depthWrite),this.colorWrite===!1&&(s.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(s.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==nk&&(s.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(s.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(s.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Rh&&(s.stencilFail=this.stencilFail),this.stencilZFail!==Rh&&(s.stencilZFail=this.stencilZFail),this.stencilZPass!==Rh&&(s.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(s.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(s.rotation=this.rotation),this.polygonOffset===!0&&(s.polygonOffset=!0),this.polygonOffsetFactor!==0&&(s.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(s.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(s.linewidth=this.linewidth),this.dashSize!==void 0&&(s.dashSize=this.dashSize),this.gapSize!==void 0&&(s.gapSize=this.gapSize),this.scale!==void 0&&(s.scale=this.scale),this.dithering===!0&&(s.dithering=!0),this.alphaTest>0&&(s.alphaTest=this.alphaTest),this.alphaHash===!0&&(s.alphaHash=!0),this.alphaToCoverage===!0&&(s.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(s.premultipliedAlpha=!0),this.forceSinglePass===!0&&(s.forceSinglePass=!0),this.wireframe===!0&&(s.wireframe=!0),this.wireframeLinewidth>1&&(s.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(s.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(s.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(s.flatShading=!0),this.visible===!1&&(s.visible=!1),this.toneMapped===!1&&(s.toneMapped=!1),this.fog===!1&&(s.fog=!1),Object.keys(this.userData).length>0&&(s.userData=this.userData);function r(i){const o=[];for(const a in i){const l=i[a];delete l.metadata,o.push(l)}return o}if(t){const i=r(e.textures),o=r(e.images);i.length>0&&(s.textures=i),o.length>0&&(s.images=o)}return s}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let s=null;if(t!==null){const r=t.length;s=new Array(r);for(let i=0;i!==r;++i)s[i]=t[i].clone()}return this.clippingPlanes=s,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class k3 extends Hg{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new kn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new xa,this.combine=SI,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ms=new $e,A0=new Fn;let dpe=0;class ha{constructor(e,t,s=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:dpe++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=s,this.usage=sk,this.updateRanges=[],this.gpuType=ja,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,s){e*=this.itemSize,s*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[s+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,s=this.count;t<s;t++)A0.fromBufferAttribute(this,t),A0.applyMatrix3(e),this.setXY(t,A0.x,A0.y);else if(this.itemSize===3)for(let t=0,s=this.count;t<s;t++)Ms.fromBufferAttribute(this,t),Ms.applyMatrix3(e),this.setXYZ(t,Ms.x,Ms.y,Ms.z);return this}applyMatrix4(e){for(let t=0,s=this.count;t<s;t++)Ms.fromBufferAttribute(this,t),Ms.applyMatrix4(e),this.setXYZ(t,Ms.x,Ms.y,Ms.z);return this}applyNormalMatrix(e){for(let t=0,s=this.count;t<s;t++)Ms.fromBufferAttribute(this,t),Ms.applyNormalMatrix(e),this.setXYZ(t,Ms.x,Ms.y,Ms.z);return this}transformDirection(e){for(let t=0,s=this.count;t<s;t++)Ms.fromBufferAttribute(this,t),Ms.transformDirection(e),this.setXYZ(t,Ms.x,Ms.y,Ms.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let s=this.array[e*this.itemSize+t];return this.normalized&&(s=xp(s,this.array)),s}setComponent(e,t,s){return this.normalized&&(s=fi(s,this.array)),this.array[e*this.itemSize+t]=s,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=xp(t,this.array)),t}setX(e,t){return this.normalized&&(t=fi(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=xp(t,this.array)),t}setY(e,t){return this.normalized&&(t=fi(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=xp(t,this.array)),t}setZ(e,t){return this.normalized&&(t=fi(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=xp(t,this.array)),t}setW(e,t){return this.normalized&&(t=fi(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,s){return e*=this.itemSize,this.normalized&&(t=fi(t,this.array),s=fi(s,this.array)),this.array[e+0]=t,this.array[e+1]=s,this}setXYZ(e,t,s,r){return e*=this.itemSize,this.normalized&&(t=fi(t,this.array),s=fi(s,this.array),r=fi(r,this.array)),this.array[e+0]=t,this.array[e+1]=s,this.array[e+2]=r,this}setXYZW(e,t,s,r,i){return e*=this.itemSize,this.normalized&&(t=fi(t,this.array),s=fi(s,this.array),r=fi(r,this.array),i=fi(i,this.array)),this.array[e+0]=t,this.array[e+1]=s,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==sk&&(e.usage=this.usage),e}}class M3 extends ha{constructor(e,t,s){super(new Uint16Array(e),t,s)}}class D3 extends ha{constructor(e,t,s){super(new Uint32Array(e),t,s)}}class wc extends ha{constructor(e,t,s){super(new Float32Array(e),t,s)}}let fpe=0;const no=new xs,$S=new zr,zh=new $e,Mi=new Gg,Sp=new Gg,or=new $e;class Qc extends Df{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:fpe++}),this.uuid=Vg(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(C3(e)?D3:M3)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,s=0){this.groups.push({start:e,count:t,materialIndex:s})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const s=this.attributes.normal;if(s!==void 0){const i=new rn().getNormalMatrix(e);s.applyNormalMatrix(i),s.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return no.makeRotationFromQuaternion(e),this.applyMatrix4(no),this}rotateX(e){return no.makeRotationX(e),this.applyMatrix4(no),this}rotateY(e){return no.makeRotationY(e),this.applyMatrix4(no),this}rotateZ(e){return no.makeRotationZ(e),this.applyMatrix4(no),this}translate(e,t,s){return no.makeTranslation(e,t,s),this.applyMatrix4(no),this}scale(e,t,s){return no.makeScale(e,t,s),this.applyMatrix4(no),this}lookAt(e){return $S.lookAt(e),$S.updateMatrix(),this.applyMatrix4($S.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(zh).negate(),this.translate(zh.x,zh.y,zh.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const s=[];for(let r=0,i=e.length;r<i;r++){const o=e[r];s.push(o.x,o.y,o.z||0)}this.setAttribute("position",new wc(s,3))}else{const s=Math.min(e.length,t.count);for(let r=0;r<s;r++){const i=e[r];t.setXYZ(r,i.x,i.y,i.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gg);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new $e(-1/0,-1/0,-1/0),new $e(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const i=t[s];Mi.setFromBufferAttribute(i),this.morphTargetsRelative?(or.addVectors(this.boundingBox.min,Mi.min),this.boundingBox.expandByPoint(or),or.addVectors(this.boundingBox.max,Mi.max),this.boundingBox.expandByPoint(or)):(this.boundingBox.expandByPoint(Mi.min),this.boundingBox.expandByPoint(Mi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new AI);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new $e,1/0);return}if(e){const s=this.boundingSphere.center;if(Mi.setFromBufferAttribute(e),t)for(let i=0,o=t.length;i<o;i++){const a=t[i];Sp.setFromBufferAttribute(a),this.morphTargetsRelative?(or.addVectors(Mi.min,Sp.min),Mi.expandByPoint(or),or.addVectors(Mi.max,Sp.max),Mi.expandByPoint(or)):(Mi.expandByPoint(Sp.min),Mi.expandByPoint(Sp.max))}Mi.getCenter(s);let r=0;for(let i=0,o=e.count;i<o;i++)or.fromBufferAttribute(e,i),r=Math.max(r,s.distanceToSquared(or));if(t)for(let i=0,o=t.length;i<o;i++){const a=t[i],l=this.morphTargetsRelative;for(let u=0,h=a.count;u<h;u++)or.fromBufferAttribute(a,u),l&&(zh.fromBufferAttribute(e,u),or.add(zh)),r=Math.max(r,s.distanceToSquared(or))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const s=t.position,r=t.normal,i=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ha(new Float32Array(4*s.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let O=0;O<s.count;O++)a[O]=new $e,l[O]=new $e;const u=new $e,h=new $e,d=new $e,p=new Fn,m=new Fn,g=new Fn,b=new $e,y=new $e;function v(O,k,N){u.fromBufferAttribute(s,O),h.fromBufferAttribute(s,k),d.fromBufferAttribute(s,N),p.fromBufferAttribute(i,O),m.fromBufferAttribute(i,k),g.fromBufferAttribute(i,N),h.sub(u),d.sub(u),m.sub(p),g.sub(p);const A=1/(m.x*g.y-g.x*m.y);isFinite(A)&&(b.copy(h).multiplyScalar(g.y).addScaledVector(d,-m.y).multiplyScalar(A),y.copy(d).multiplyScalar(m.x).addScaledVector(h,-g.x).multiplyScalar(A),a[O].add(b),a[k].add(b),a[N].add(b),l[O].add(y),l[k].add(y),l[N].add(y))}let w=this.groups;w.length===0&&(w=[{start:0,count:e.count}]);for(let O=0,k=w.length;O<k;++O){const N=w[O],A=N.start,B=N.count;for(let W=A,K=A+B;W<K;W+=3)v(e.getX(W+0),e.getX(W+1),e.getX(W+2))}const E=new $e,T=new $e,I=new $e,M=new $e;function $(O){I.fromBufferAttribute(r,O),M.copy(I);const k=a[O];E.copy(k),E.sub(I.multiplyScalar(I.dot(k))).normalize(),T.crossVectors(M,k);const A=T.dot(l[O])<0?-1:1;o.setXYZW(O,E.x,E.y,E.z,A)}for(let O=0,k=w.length;O<k;++O){const N=w[O],A=N.start,B=N.count;for(let W=A,K=A+B;W<K;W+=3)$(e.getX(W+0)),$(e.getX(W+1)),$(e.getX(W+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let s=this.getAttribute("normal");if(s===void 0)s=new ha(new Float32Array(t.count*3),3),this.setAttribute("normal",s);else for(let p=0,m=s.count;p<m;p++)s.setXYZ(p,0,0,0);const r=new $e,i=new $e,o=new $e,a=new $e,l=new $e,u=new $e,h=new $e,d=new $e;if(e)for(let p=0,m=e.count;p<m;p+=3){const g=e.getX(p+0),b=e.getX(p+1),y=e.getX(p+2);r.fromBufferAttribute(t,g),i.fromBufferAttribute(t,b),o.fromBufferAttribute(t,y),h.subVectors(o,i),d.subVectors(r,i),h.cross(d),a.fromBufferAttribute(s,g),l.fromBufferAttribute(s,b),u.fromBufferAttribute(s,y),a.add(h),l.add(h),u.add(h),s.setXYZ(g,a.x,a.y,a.z),s.setXYZ(b,l.x,l.y,l.z),s.setXYZ(y,u.x,u.y,u.z)}else for(let p=0,m=t.count;p<m;p+=3)r.fromBufferAttribute(t,p+0),i.fromBufferAttribute(t,p+1),o.fromBufferAttribute(t,p+2),h.subVectors(o,i),d.subVectors(r,i),h.cross(d),s.setXYZ(p+0,h.x,h.y,h.z),s.setXYZ(p+1,h.x,h.y,h.z),s.setXYZ(p+2,h.x,h.y,h.z);this.normalizeNormals(),s.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,s=e.count;t<s;t++)or.fromBufferAttribute(e,t),or.normalize(),e.setXYZ(t,or.x,or.y,or.z)}toNonIndexed(){function e(a,l){const u=a.array,h=a.itemSize,d=a.normalized,p=new u.constructor(l.length*h);let m=0,g=0;for(let b=0,y=l.length;b<y;b++){a.isInterleavedBufferAttribute?m=l[b]*a.data.stride+a.offset:m=l[b]*h;for(let v=0;v<h;v++)p[g++]=u[m++]}return new ha(p,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Qc,s=this.index.array,r=this.attributes;for(const a in r){const l=r[a],u=e(l,s);t.setAttribute(a,u)}const i=this.morphAttributes;for(const a in i){const l=[],u=i[a];for(let h=0,d=u.length;h<d;h++){const p=u[h],m=e(p,s);l.push(m)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const u=o[a];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const u in l)l[u]!==void 0&&(e[u]=l[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const s=this.attributes;for(const l in s){const u=s[l];e.data.attributes[l]=u.toJSON(e.data)}const r={};let i=!1;for(const l in this.morphAttributes){const u=this.morphAttributes[l],h=[];for(let d=0,p=u.length;d<p;d++){const m=u[d];h.push(m.toJSON(e.data))}h.length>0&&(r[l]=h,i=!0)}i&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const s=e.index;s!==null&&this.setIndex(s.clone(t));const r=e.attributes;for(const u in r){const h=r[u];this.setAttribute(u,h.clone(t))}const i=e.morphAttributes;for(const u in i){const h=[],d=i[u];for(let p=0,m=d.length;p<m;p++)h.push(d[p].clone(t));this.morphAttributes[u]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let u=0,h=o.length;u<h;u++){const d=o[u];this.addGroup(d.start,d.count,d.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const yk=new xs,Yu=new rpe,R0=new AI,xk=new $e,k0=new $e,M0=new $e,D0=new $e,FS=new $e,$0=new $e,vk=new $e,F0=new $e;class ia extends zr{constructor(e=new Qc,t=new k3){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,s=Object.keys(t);if(s.length>0){const r=t[s[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,o=r.length;i<o;i++){const a=r[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=i}}}}getVertexPosition(e,t){const s=this.geometry,r=s.attributes.position,i=s.morphAttributes.position,o=s.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(i&&a){$0.set(0,0,0);for(let l=0,u=i.length;l<u;l++){const h=a[l],d=i[l];h!==0&&(FS.fromBufferAttribute(d,e),o?$0.addScaledVector(FS,h):$0.addScaledVector(FS.sub(t),h))}t.add($0)}return t}raycast(e,t){const s=this.geometry,r=this.material,i=this.matrixWorld;r!==void 0&&(s.boundingSphere===null&&s.computeBoundingSphere(),R0.copy(s.boundingSphere),R0.applyMatrix4(i),Yu.copy(e.ray).recast(e.near),!(R0.containsPoint(Yu.origin)===!1&&(Yu.intersectSphere(R0,xk)===null||Yu.origin.distanceToSquared(xk)>(e.far-e.near)**2))&&(yk.copy(i).invert(),Yu.copy(e.ray).applyMatrix4(yk),!(s.boundingBox!==null&&Yu.intersectsBox(s.boundingBox)===!1)&&this._computeIntersections(e,t,Yu)))}_computeIntersections(e,t,s){let r;const i=this.geometry,o=this.material,a=i.index,l=i.attributes.position,u=i.attributes.uv,h=i.attributes.uv1,d=i.attributes.normal,p=i.groups,m=i.drawRange;if(a!==null)if(Array.isArray(o))for(let g=0,b=p.length;g<b;g++){const y=p[g],v=o[y.materialIndex],w=Math.max(y.start,m.start),E=Math.min(a.count,Math.min(y.start+y.count,m.start+m.count));for(let T=w,I=E;T<I;T+=3){const M=a.getX(T),$=a.getX(T+1),O=a.getX(T+2);r=P0(this,v,e,s,u,h,d,M,$,O),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=y.materialIndex,t.push(r))}}else{const g=Math.max(0,m.start),b=Math.min(a.count,m.start+m.count);for(let y=g,v=b;y<v;y+=3){const w=a.getX(y),E=a.getX(y+1),T=a.getX(y+2);r=P0(this,o,e,s,u,h,d,w,E,T),r&&(r.faceIndex=Math.floor(y/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let g=0,b=p.length;g<b;g++){const y=p[g],v=o[y.materialIndex],w=Math.max(y.start,m.start),E=Math.min(l.count,Math.min(y.start+y.count,m.start+m.count));for(let T=w,I=E;T<I;T+=3){const M=T,$=T+1,O=T+2;r=P0(this,v,e,s,u,h,d,M,$,O),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=y.materialIndex,t.push(r))}}else{const g=Math.max(0,m.start),b=Math.min(l.count,m.start+m.count);for(let y=g,v=b;y<v;y+=3){const w=y,E=y+1,T=y+2;r=P0(this,o,e,s,u,h,d,w,E,T),r&&(r.faceIndex=Math.floor(y/3),t.push(r))}}}}function ppe(n,e,t,s,r,i,o,a){let l;if(e.side===xi?l=s.intersectTriangle(o,i,r,!0,a):l=s.intersectTriangle(r,i,o,e.side===fu,a),l===null)return null;F0.copy(a),F0.applyMatrix4(n.matrixWorld);const u=t.ray.origin.distanceTo(F0);return u<t.near||u>t.far?null:{distance:u,point:F0.clone(),object:n}}function P0(n,e,t,s,r,i,o,a,l,u){n.getVertexPosition(a,k0),n.getVertexPosition(l,M0),n.getVertexPosition(u,D0);const h=ppe(n,e,t,s,k0,M0,D0,vk);if(h){const d=new $e;No.getBarycoord(vk,k0,M0,D0,d),r&&(h.uv=No.getInterpolatedAttribute(r,a,l,u,d,new Fn)),i&&(h.uv1=No.getInterpolatedAttribute(i,a,l,u,d,new Fn)),o&&(h.normal=No.getInterpolatedAttribute(o,a,l,u,d,new $e),h.normal.dot(s.direction)>0&&h.normal.multiplyScalar(-1));const p={a,b:l,c:u,normal:new $e,materialIndex:0};No.getNormal(k0,M0,D0,p.normal),h.face=p,h.barycoord=d}return h}class $f extends Qc{constructor(e=1,t=1,s=1,r=1,i=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:s,widthSegments:r,heightSegments:i,depthSegments:o};const a=this;r=Math.floor(r),i=Math.floor(i),o=Math.floor(o);const l=[],u=[],h=[],d=[];let p=0,m=0;g("z","y","x",-1,-1,s,t,e,o,i,0),g("z","y","x",1,-1,s,t,-e,o,i,1),g("x","z","y",1,1,e,s,t,r,o,2),g("x","z","y",1,-1,e,s,-t,r,o,3),g("x","y","z",1,-1,e,t,s,r,i,4),g("x","y","z",-1,-1,e,t,-s,r,i,5),this.setIndex(l),this.setAttribute("position",new wc(u,3)),this.setAttribute("normal",new wc(h,3)),this.setAttribute("uv",new wc(d,2));function g(b,y,v,w,E,T,I,M,$,O,k){const N=T/$,A=I/O,B=T/2,W=I/2,K=M/2,q=$+1,Y=O+1;let J=0,G=0;const ee=new $e;for(let te=0;te<Y;te++){const j=te*A-W;for(let se=0;se<q;se++){const be=se*N-B;ee[b]=be*w,ee[y]=j*E,ee[v]=K,u.push(ee.x,ee.y,ee.z),ee[b]=0,ee[y]=0,ee[v]=M>0?1:-1,h.push(ee.x,ee.y,ee.z),d.push(se/$),d.push(1-te/O),J+=1}}for(let te=0;te<O;te++)for(let j=0;j<$;j++){const se=p+j+q*te,be=p+j+q*(te+1),ae=p+(j+1)+q*(te+1),de=p+(j+1)+q*te;l.push(se,be,de),l.push(be,ae,de),G+=6}a.addGroup(m,G,k),m+=G,p+=J}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $f(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function bd(n){const e={};for(const t in n){e[t]={};for(const s in n[t]){const r=n[t][s];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][s]=null):e[t][s]=r.clone():Array.isArray(r)?e[t][s]=r.slice():e[t][s]=r}}return e}function qr(n){const e={};for(let t=0;t<n.length;t++){const s=bd(n[t]);for(const r in s)e[r]=s[r]}return e}function mpe(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function $3(n){const e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Rn.workingColorSpace}const gpe={clone:bd,merge:qr};var ype=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,xpe=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class pu extends Hg{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ype,this.fragmentShader=xpe,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=bd(e.uniforms),this.uniformsGroups=mpe(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const s={};for(const r in this.extensions)this.extensions[r]===!0&&(s[r]=!0);return Object.keys(s).length>0&&(t.extensions=s),t}}let F3=class extends zr{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new xs,this.projectionMatrix=new xs,this.projectionMatrixInverse=new xs,this.coordinateSystem=Xa}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const Wl=new $e,bk=new Fn,wk=new Fn;class Io extends F3{constructor(e=50,t=1,s=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=s,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=IT*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(mS*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return IT*2*Math.atan(Math.tan(mS*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,s){Wl.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Wl.x,Wl.y).multiplyScalar(-e/Wl.z),Wl.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),s.set(Wl.x,Wl.y).multiplyScalar(-e/Wl.z)}getViewSize(e,t){return this.getViewBounds(e,bk,wk),t.subVectors(wk,bk)}setViewOffset(e,t,s,r,i,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=s,this.view.offsetY=r,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(mS*.5*this.fov)/this.zoom,s=2*t,r=this.aspect*s,i=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,u=o.fullHeight;i+=o.offsetX*r/l,t-=o.offsetY*s/u,r*=o.width/l,s*=o.height/u}const a=this.filmOffset;a!==0&&(i+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-s,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Bh=-90,Vh=1;class vpe extends zr{constructor(e,t,s){super(),this.type="CubeCamera",this.renderTarget=s,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Io(Bh,Vh,e,t);r.layers=this.layers,this.add(r);const i=new Io(Bh,Vh,e,t);i.layers=this.layers,this.add(i);const o=new Io(Bh,Vh,e,t);o.layers=this.layers,this.add(o);const a=new Io(Bh,Vh,e,t);a.layers=this.layers,this.add(a);const l=new Io(Bh,Vh,e,t);l.layers=this.layers,this.add(l);const u=new Io(Bh,Vh,e,t);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[s,r,i,o,a,l]=t;for(const u of t)this.remove(u);if(e===Xa)s.up.set(0,1,0),s.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Px)s.up.set(0,-1,0),s.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of t)this.add(u),u.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:s,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,o,a,l,u,h]=this.children,d=e.getRenderTarget(),p=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),g=e.xr.enabled;e.xr.enabled=!1;const b=s.texture.generateMipmaps;s.texture.generateMipmaps=!1,e.setRenderTarget(s,0,r),e.render(t,i),e.setRenderTarget(s,1,r),e.render(t,o),e.setRenderTarget(s,2,r),e.render(t,a),e.setRenderTarget(s,3,r),e.render(t,l),e.setRenderTarget(s,4,r),e.render(t,u),s.texture.generateMipmaps=b,e.setRenderTarget(s,5,r),e.render(t,h),e.setRenderTarget(d,p,m),e.xr.enabled=g,s.texture.needsPMREMUpdate=!0}}class P3 extends vi{constructor(e,t,s,r,i,o,a,l,u,h){e=e!==void 0?e:[],t=t!==void 0?t:md,super(e,t,s,r,i,o,a,l,u,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class bpe extends Oc{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const s={width:e,height:e,depth:1},r=[s,s,s,s,s,s];this.texture=new P3(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ra}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new $f(5,5,5),i=new pu({name:"CubemapFromEquirect",uniforms:bd(s.uniforms),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,side:xi,blending:Ql});i.uniforms.tEquirect.value=t;const o=new ia(r,i),a=t.minFilter;return t.minFilter===pc&&(t.minFilter=ra),new vpe(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,s,r){const i=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,s,r);e.setRenderTarget(i)}}class O0 extends zr{constructor(){super(),this.isGroup=!0,this.type="Group"}}const wpe={type:"move"};class PS{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new O0,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new O0,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new $e,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new $e),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new O0,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new $e,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new $e),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const s of e.hand.values())this._getHandJoint(t,s)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,s){let r=null,i=null,o=null;const a=this._targetRay,l=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){o=!0;for(const b of e.hand.values()){const y=t.getJointPose(b,s),v=this._getHandJoint(u,b);y!==null&&(v.matrix.fromArray(y.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=y.radius),v.visible=y!==null}const h=u.joints["index-finger-tip"],d=u.joints["thumb-tip"],p=h.position.distanceTo(d.position),m=.02,g=.005;u.inputState.pinching&&p>m+g?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&p<=m-g&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(i=t.getPose(e.gripSpace,s),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,s),r===null&&i!==null&&(r=i),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(wpe)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=i!==null),u!==null&&(u.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const s=new O0;s.matrixAutoUpdate=!1,s.visible=!1,e.joints[t.jointName]=s,e.add(s)}return e.joints[t.jointName]}}class Spe extends zr{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new xa,this.environmentIntensity=1,this.environmentRotation=new xa,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}const OS=new $e,_pe=new $e,Tpe=new rn;class nc{constructor(e=new $e(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,s,r){return this.normal.set(e,t,s),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,s){const r=OS.subVectors(s,t).cross(_pe.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const s=e.delta(OS),r=this.normal.dot(s);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:t.copy(e.start).addScaledVector(s,i)}intersectsLine(e){const t=this.distanceToPoint(e.start),s=this.distanceToPoint(e.end);return t<0&&s>0||s<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const s=t||Tpe.getNormalMatrix(e),r=this.coplanarPoint(OS).applyMatrix4(e),i=this.normal.applyMatrix3(s).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Zu=new AI,L0=new $e;class RI{constructor(e=new nc,t=new nc,s=new nc,r=new nc,i=new nc,o=new nc){this.planes=[e,t,s,r,i,o]}set(e,t,s,r,i,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(s),a[3].copy(r),a[4].copy(i),a[5].copy(o),this}copy(e){const t=this.planes;for(let s=0;s<6;s++)t[s].copy(e.planes[s]);return this}setFromProjectionMatrix(e,t=Xa){const s=this.planes,r=e.elements,i=r[0],o=r[1],a=r[2],l=r[3],u=r[4],h=r[5],d=r[6],p=r[7],m=r[8],g=r[9],b=r[10],y=r[11],v=r[12],w=r[13],E=r[14],T=r[15];if(s[0].setComponents(l-i,p-u,y-m,T-v).normalize(),s[1].setComponents(l+i,p+u,y+m,T+v).normalize(),s[2].setComponents(l+o,p+h,y+g,T+w).normalize(),s[3].setComponents(l-o,p-h,y-g,T-w).normalize(),s[4].setComponents(l-a,p-d,y-b,T-E).normalize(),t===Xa)s[5].setComponents(l+a,p+d,y+b,T+E).normalize();else if(t===Px)s[5].setComponents(a,d,b,E).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Zu.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Zu.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Zu)}intersectsSprite(e){return Zu.center.set(0,0,0),Zu.radius=.7071067811865476,Zu.applyMatrix4(e.matrixWorld),this.intersectsSphere(Zu)}intersectsSphere(e){const t=this.planes,s=e.center,r=-e.radius;for(let i=0;i<6;i++)if(t[i].distanceToPoint(s)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let s=0;s<6;s++){const r=t[s];if(L0.x=r.normal.x>0?e.max.x:e.min.x,L0.y=r.normal.y>0?e.max.y:e.min.y,L0.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(L0)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let s=0;s<6;s++)if(t[s].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class O3 extends vi{constructor(e,t,s,r,i,o,a,l,u,h=Jh){if(h!==Jh&&h!==xd)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");s===void 0&&h===Jh&&(s=Pc),s===void 0&&h===xd&&(s=yd),super(null,r,i,o,a,l,h,s,u),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Mo,this.minFilter=l!==void 0?l:Mo,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class ow extends Qc{constructor(e=1,t=1,s=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:s,heightSegments:r};const i=e/2,o=t/2,a=Math.floor(s),l=Math.floor(r),u=a+1,h=l+1,d=e/a,p=t/l,m=[],g=[],b=[],y=[];for(let v=0;v<h;v++){const w=v*p-o;for(let E=0;E<u;E++){const T=E*d-i;g.push(T,-w,0),b.push(0,0,1),y.push(E/a),y.push(1-v/l)}}for(let v=0;v<l;v++)for(let w=0;w<a;w++){const E=w+u*v,T=w+u*(v+1),I=w+1+u*(v+1),M=w+1+u*v;m.push(E,T,M),m.push(T,I,M)}this.setIndex(m),this.setAttribute("position",new wc(g,3)),this.setAttribute("normal",new wc(b,3)),this.setAttribute("uv",new wc(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ow(e.width,e.height,e.widthSegments,e.heightSegments)}}class Epe extends Hg{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new kn(16777215),this.specular=new kn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=T3,this.normalScale=new Fn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new xa,this.combine=SI,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cpe extends Hg{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Pfe,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Ipe extends Hg{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class L3 extends zr{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new kn(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}const LS=new xs,Sk=new $e,_k=new $e;class Npe{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Fn(512,512),this.map=null,this.mapPass=null,this.matrix=new xs,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new RI,this._frameExtents=new Fn(1,1),this._viewportCount=1,this._viewports=[new gs(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,s=this.matrix;Sk.setFromMatrixPosition(e.matrixWorld),t.position.copy(Sk),_k.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(_k),t.updateMatrixWorld(),LS.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(LS),s.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),s.multiply(LS)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class kI extends F3{constructor(e=-1,t=1,s=1,r=-1,i=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=s,this.bottom=r,this.near=i,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,s,r,i,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=s,this.view.offsetY=r,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),s=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=s-e,o=s+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=u*this.view.offsetX,o=i+u*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(i,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class Ape extends Npe{constructor(){super(new kI(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Rpe extends L3{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(zr.DEFAULT_UP),this.updateMatrix(),this.target=new zr,this.shadow=new Ape}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class kpe extends L3{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Mpe extends Io{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}function Tk(n,e,t,s){const r=Dpe(s);switch(t){case y3:return n*e;case v3:return n*e;case b3:return n*e*2;case w3:return n*e/r.components*r.byteLength;case CI:return n*e/r.components*r.byteLength;case S3:return n*e*2/r.components*r.byteLength;case II:return n*e*2/r.components*r.byteLength;case x3:return n*e*3/r.components*r.byteLength;case Ao:return n*e*4/r.components*r.byteLength;case NI:return n*e*4/r.components*r.byteLength;case J0:case ex:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case tx:case nx:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case nT:case rT:return Math.max(n,16)*Math.max(e,8)/4;case tT:case sT:return Math.max(n,8)*Math.max(e,8)/2;case iT:case oT:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case aT:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case lT:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case uT:return Math.floor((n+4)/5)*Math.floor((e+3)/4)*16;case cT:return Math.floor((n+4)/5)*Math.floor((e+4)/5)*16;case hT:return Math.floor((n+5)/6)*Math.floor((e+4)/5)*16;case dT:return Math.floor((n+5)/6)*Math.floor((e+5)/6)*16;case fT:return Math.floor((n+7)/8)*Math.floor((e+4)/5)*16;case pT:return Math.floor((n+7)/8)*Math.floor((e+5)/6)*16;case mT:return Math.floor((n+7)/8)*Math.floor((e+7)/8)*16;case gT:return Math.floor((n+9)/10)*Math.floor((e+4)/5)*16;case yT:return Math.floor((n+9)/10)*Math.floor((e+5)/6)*16;case xT:return Math.floor((n+9)/10)*Math.floor((e+7)/8)*16;case vT:return Math.floor((n+9)/10)*Math.floor((e+9)/10)*16;case bT:return Math.floor((n+11)/12)*Math.floor((e+9)/10)*16;case wT:return Math.floor((n+11)/12)*Math.floor((e+11)/12)*16;case sx:case ST:case _T:return Math.ceil(n/4)*Math.ceil(e/4)*16;case _3:case TT:return Math.ceil(n/4)*Math.ceil(e/4)*8;case ET:case CT:return Math.ceil(n/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function Dpe(n){switch(n){case nl:case p3:return{byteLength:1,components:1};case em:case m3:case Bg:return{byteLength:2,components:1};case TI:case EI:return{byteLength:2,components:4};case Pc:case _I:case ja:return{byteLength:4,components:1};case g3:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${n}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:wI}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=wI);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function U3(){let n=null,e=!1,t=null,s=null;function r(i,o){t(i,o),s=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(s=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(s),e=!1},setAnimationLoop:function(i){t=i},setContext:function(i){n=i}}}function $pe(n){const e=new WeakMap;function t(a,l){const u=a.array,h=a.usage,d=u.byteLength,p=n.createBuffer();n.bindBuffer(l,p),n.bufferData(l,u,h),a.onUploadCallback();let m;if(u instanceof Float32Array)m=n.FLOAT;else if(u instanceof Uint16Array)a.isFloat16BufferAttribute?m=n.HALF_FLOAT:m=n.UNSIGNED_SHORT;else if(u instanceof Int16Array)m=n.SHORT;else if(u instanceof Uint32Array)m=n.UNSIGNED_INT;else if(u instanceof Int32Array)m=n.INT;else if(u instanceof Int8Array)m=n.BYTE;else if(u instanceof Uint8Array)m=n.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)m=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:p,type:m,bytesPerElement:u.BYTES_PER_ELEMENT,version:a.version,size:d}}function s(a,l,u){const h=l.array,d=l.updateRanges;if(n.bindBuffer(u,a),d.length===0)n.bufferSubData(u,0,h);else{d.sort((m,g)=>m.start-g.start);let p=0;for(let m=1;m<d.length;m++){const g=d[p],b=d[m];b.start<=g.start+g.count+1?g.count=Math.max(g.count,b.start+b.count-g.start):(++p,d[p]=b)}d.length=p+1;for(let m=0,g=d.length;m<g;m++){const b=d[m];n.bufferSubData(u,b.start*h.BYTES_PER_ELEMENT,h,b.start,b.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function i(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(n.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const u=e.get(a);if(u===void 0)e.set(a,t(a,l));else if(u.version<a.version){if(u.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(u.buffer,a,l),u.version=a.version}}return{get:r,remove:i,update:o}}var Fpe=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,Ppe=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Ope=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Lpe=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Upe=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,zpe=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Bpe=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Vpe=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Wpe=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,Gpe=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Hpe=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,jpe=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Xpe=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,qpe=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Kpe=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Ype=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Zpe=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Qpe=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Jpe=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,eme=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,tme=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,nme=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,sme=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,rme=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,ime=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ome=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ame=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,lme=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,ume=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,cme=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,hme="gl_FragColor = linearToOutputTexel( gl_FragColor );",dme=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,fme=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,pme=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,mme=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,gme=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,yme=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,xme=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,vme=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,bme=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,wme=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Sme=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,_me=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Tme=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Eme=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Cme=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Ime=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Nme=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Ame=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Rme=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,kme=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Mme=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Dme=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,$me=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Fme=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Pme=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Ome=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Lme=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Ume=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,zme=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Bme=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Vme=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Wme=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Gme=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Hme=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,jme=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Xme=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,qme=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Kme=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Yme=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Zme=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Qme=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Jme=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,ege=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,tge=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nge=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,sge=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,rge=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,ige=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,oge=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,age=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,lge=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,uge=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,cge=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,hge=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dge=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,fge=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,pge=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,mge=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,gge=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,yge=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,xge=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,vge=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,bge=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,wge=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Sge=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,_ge=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Tge=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Ege=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Cge=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Ige=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Nge=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Age=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Rge=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,kge=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Mge=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Dge=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const $ge=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Fge=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Pge=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Oge=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Lge=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Uge=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,zge=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Bge=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Vge=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Wge=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Gge=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Hge=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,jge=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Xge=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,qge=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Kge=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Yge=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Zge=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Qge=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Jge=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eye=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,tye=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,nye=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sye=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rye=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,iye=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oye=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aye=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lye=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,uye=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,cye=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,hye=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,dye=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fye=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,un={alphahash_fragment:Fpe,alphahash_pars_fragment:Ppe,alphamap_fragment:Ope,alphamap_pars_fragment:Lpe,alphatest_fragment:Upe,alphatest_pars_fragment:zpe,aomap_fragment:Bpe,aomap_pars_fragment:Vpe,batching_pars_vertex:Wpe,batching_vertex:Gpe,begin_vertex:Hpe,beginnormal_vertex:jpe,bsdfs:Xpe,iridescence_fragment:qpe,bumpmap_pars_fragment:Kpe,clipping_planes_fragment:Ype,clipping_planes_pars_fragment:Zpe,clipping_planes_pars_vertex:Qpe,clipping_planes_vertex:Jpe,color_fragment:eme,color_pars_fragment:tme,color_pars_vertex:nme,color_vertex:sme,common:rme,cube_uv_reflection_fragment:ime,defaultnormal_vertex:ome,displacementmap_pars_vertex:ame,displacementmap_vertex:lme,emissivemap_fragment:ume,emissivemap_pars_fragment:cme,colorspace_fragment:hme,colorspace_pars_fragment:dme,envmap_fragment:fme,envmap_common_pars_fragment:pme,envmap_pars_fragment:mme,envmap_pars_vertex:gme,envmap_physical_pars_fragment:Ime,envmap_vertex:yme,fog_vertex:xme,fog_pars_vertex:vme,fog_fragment:bme,fog_pars_fragment:wme,gradientmap_pars_fragment:Sme,lightmap_pars_fragment:_me,lights_lambert_fragment:Tme,lights_lambert_pars_fragment:Eme,lights_pars_begin:Cme,lights_toon_fragment:Nme,lights_toon_pars_fragment:Ame,lights_phong_fragment:Rme,lights_phong_pars_fragment:kme,lights_physical_fragment:Mme,lights_physical_pars_fragment:Dme,lights_fragment_begin:$me,lights_fragment_maps:Fme,lights_fragment_end:Pme,logdepthbuf_fragment:Ome,logdepthbuf_pars_fragment:Lme,logdepthbuf_pars_vertex:Ume,logdepthbuf_vertex:zme,map_fragment:Bme,map_pars_fragment:Vme,map_particle_fragment:Wme,map_particle_pars_fragment:Gme,metalnessmap_fragment:Hme,metalnessmap_pars_fragment:jme,morphinstance_vertex:Xme,morphcolor_vertex:qme,morphnormal_vertex:Kme,morphtarget_pars_vertex:Yme,morphtarget_vertex:Zme,normal_fragment_begin:Qme,normal_fragment_maps:Jme,normal_pars_fragment:ege,normal_pars_vertex:tge,normal_vertex:nge,normalmap_pars_fragment:sge,clearcoat_normal_fragment_begin:rge,clearcoat_normal_fragment_maps:ige,clearcoat_pars_fragment:oge,iridescence_pars_fragment:age,opaque_fragment:lge,packing:uge,premultiplied_alpha_fragment:cge,project_vertex:hge,dithering_fragment:dge,dithering_pars_fragment:fge,roughnessmap_fragment:pge,roughnessmap_pars_fragment:mge,shadowmap_pars_fragment:gge,shadowmap_pars_vertex:yge,shadowmap_vertex:xge,shadowmask_pars_fragment:vge,skinbase_vertex:bge,skinning_pars_vertex:wge,skinning_vertex:Sge,skinnormal_vertex:_ge,specularmap_fragment:Tge,specularmap_pars_fragment:Ege,tonemapping_fragment:Cge,tonemapping_pars_fragment:Ige,transmission_fragment:Nge,transmission_pars_fragment:Age,uv_pars_fragment:Rge,uv_pars_vertex:kge,uv_vertex:Mge,worldpos_vertex:Dge,background_vert:$ge,background_frag:Fge,backgroundCube_vert:Pge,backgroundCube_frag:Oge,cube_vert:Lge,cube_frag:Uge,depth_vert:zge,depth_frag:Bge,distanceRGBA_vert:Vge,distanceRGBA_frag:Wge,equirect_vert:Gge,equirect_frag:Hge,linedashed_vert:jge,linedashed_frag:Xge,meshbasic_vert:qge,meshbasic_frag:Kge,meshlambert_vert:Yge,meshlambert_frag:Zge,meshmatcap_vert:Qge,meshmatcap_frag:Jge,meshnormal_vert:eye,meshnormal_frag:tye,meshphong_vert:nye,meshphong_frag:sye,meshphysical_vert:rye,meshphysical_frag:iye,meshtoon_vert:oye,meshtoon_frag:aye,points_vert:lye,points_frag:uye,shadow_vert:cye,shadow_frag:hye,sprite_vert:dye,sprite_frag:fye},dt={common:{diffuse:{value:new kn(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new rn},alphaMap:{value:null},alphaMapTransform:{value:new rn},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new rn}},envmap:{envMap:{value:null},envMapRotation:{value:new rn},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new rn}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new rn}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new rn},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new rn},normalScale:{value:new Fn(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new rn},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new rn}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new rn}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new rn}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new kn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new kn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new rn},alphaTest:{value:0},uvTransform:{value:new rn}},sprite:{diffuse:{value:new kn(16777215)},opacity:{value:1},center:{value:new Fn(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new rn},alphaMap:{value:null},alphaMapTransform:{value:new rn},alphaTest:{value:0}}},ta={basic:{uniforms:qr([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.fog]),vertexShader:un.meshbasic_vert,fragmentShader:un.meshbasic_frag},lambert:{uniforms:qr([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,dt.lights,{emissive:{value:new kn(0)}}]),vertexShader:un.meshlambert_vert,fragmentShader:un.meshlambert_frag},phong:{uniforms:qr([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,dt.lights,{emissive:{value:new kn(0)},specular:{value:new kn(1118481)},shininess:{value:30}}]),vertexShader:un.meshphong_vert,fragmentShader:un.meshphong_frag},standard:{uniforms:qr([dt.common,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.roughnessmap,dt.metalnessmap,dt.fog,dt.lights,{emissive:{value:new kn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:un.meshphysical_vert,fragmentShader:un.meshphysical_frag},toon:{uniforms:qr([dt.common,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.gradientmap,dt.fog,dt.lights,{emissive:{value:new kn(0)}}]),vertexShader:un.meshtoon_vert,fragmentShader:un.meshtoon_frag},matcap:{uniforms:qr([dt.common,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,{matcap:{value:null}}]),vertexShader:un.meshmatcap_vert,fragmentShader:un.meshmatcap_frag},points:{uniforms:qr([dt.points,dt.fog]),vertexShader:un.points_vert,fragmentShader:un.points_frag},dashed:{uniforms:qr([dt.common,dt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:un.linedashed_vert,fragmentShader:un.linedashed_frag},depth:{uniforms:qr([dt.common,dt.displacementmap]),vertexShader:un.depth_vert,fragmentShader:un.depth_frag},normal:{uniforms:qr([dt.common,dt.bumpmap,dt.normalmap,dt.displacementmap,{opacity:{value:1}}]),vertexShader:un.meshnormal_vert,fragmentShader:un.meshnormal_frag},sprite:{uniforms:qr([dt.sprite,dt.fog]),vertexShader:un.sprite_vert,fragmentShader:un.sprite_frag},background:{uniforms:{uvTransform:{value:new rn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:un.background_vert,fragmentShader:un.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new rn}},vertexShader:un.backgroundCube_vert,fragmentShader:un.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:un.cube_vert,fragmentShader:un.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:un.equirect_vert,fragmentShader:un.equirect_frag},distanceRGBA:{uniforms:qr([dt.common,dt.displacementmap,{referencePosition:{value:new $e},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:un.distanceRGBA_vert,fragmentShader:un.distanceRGBA_frag},shadow:{uniforms:qr([dt.lights,dt.fog,{color:{value:new kn(0)},opacity:{value:1}}]),vertexShader:un.shadow_vert,fragmentShader:un.shadow_frag}};ta.physical={uniforms:qr([ta.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new rn},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new rn},clearcoatNormalScale:{value:new Fn(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new rn},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new rn},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new rn},sheen:{value:0},sheenColor:{value:new kn(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new rn},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new rn},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new rn},transmissionSamplerSize:{value:new Fn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new rn},attenuationDistance:{value:0},attenuationColor:{value:new kn(0)},specularColor:{value:new kn(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new rn},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new rn},anisotropyVector:{value:new Fn},anisotropyMap:{value:null},anisotropyMapTransform:{value:new rn}}]),vertexShader:un.meshphysical_vert,fragmentShader:un.meshphysical_frag};const U0={r:0,b:0,g:0},Qu=new xa,pye=new xs;function mye(n,e,t,s,r,i,o){const a=new kn(0);let l=i===!0?0:1,u,h,d=null,p=0,m=null;function g(E){let T=E.isScene===!0?E.background:null;return T&&T.isTexture&&(T=(E.backgroundBlurriness>0?t:e).get(T)),T}function b(E){let T=!1;const I=g(E);I===null?v(a,l):I&&I.isColor&&(v(I,1),T=!0);const M=n.xr.getEnvironmentBlendMode();M==="additive"?s.buffers.color.setClear(0,0,0,1,o):M==="alpha-blend"&&s.buffers.color.setClear(0,0,0,0,o),(n.autoClear||T)&&(s.buffers.depth.setTest(!0),s.buffers.depth.setMask(!0),s.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function y(E,T){const I=g(T);I&&(I.isCubeTexture||I.mapping===iw)?(h===void 0&&(h=new ia(new $f(1,1,1),new pu({name:"BackgroundCubeMaterial",uniforms:bd(ta.backgroundCube.uniforms),vertexShader:ta.backgroundCube.vertexShader,fragmentShader:ta.backgroundCube.fragmentShader,side:xi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(M,$,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),Qu.copy(T.backgroundRotation),Qu.x*=-1,Qu.y*=-1,Qu.z*=-1,I.isCubeTexture&&I.isRenderTargetTexture===!1&&(Qu.y*=-1,Qu.z*=-1),h.material.uniforms.envMap.value=I,h.material.uniforms.flipEnvMap.value=I.isCubeTexture&&I.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(pye.makeRotationFromEuler(Qu)),h.material.toneMapped=Rn.getTransfer(I.colorSpace)!==Vn,(d!==I||p!==I.version||m!==n.toneMapping)&&(h.material.needsUpdate=!0,d=I,p=I.version,m=n.toneMapping),h.layers.enableAll(),E.unshift(h,h.geometry,h.material,0,0,null)):I&&I.isTexture&&(u===void 0&&(u=new ia(new ow(2,2),new pu({name:"BackgroundMaterial",uniforms:bd(ta.background.uniforms),vertexShader:ta.background.vertexShader,fragmentShader:ta.background.fragmentShader,side:fu,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(u)),u.material.uniforms.t2D.value=I,u.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,u.material.toneMapped=Rn.getTransfer(I.colorSpace)!==Vn,I.matrixAutoUpdate===!0&&I.updateMatrix(),u.material.uniforms.uvTransform.value.copy(I.matrix),(d!==I||p!==I.version||m!==n.toneMapping)&&(u.material.needsUpdate=!0,d=I,p=I.version,m=n.toneMapping),u.layers.enableAll(),E.unshift(u,u.geometry,u.material,0,0,null))}function v(E,T){E.getRGB(U0,$3(n)),s.buffers.color.setClear(U0.r,U0.g,U0.b,T,o)}function w(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0)}return{getClearColor:function(){return a},setClearColor:function(E,T=1){a.set(E),l=T,v(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(E){l=E,v(a,l)},render:b,addToRenderList:y,dispose:w}}function gye(n,e){const t=n.getParameter(n.MAX_VERTEX_ATTRIBS),s={},r=p(null);let i=r,o=!1;function a(N,A,B,W,K){let q=!1;const Y=d(W,B,A);i!==Y&&(i=Y,u(i.object)),q=m(N,W,B,K),q&&g(N,W,B,K),K!==null&&e.update(K,n.ELEMENT_ARRAY_BUFFER),(q||o)&&(o=!1,T(N,A,B,W),K!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(K).buffer))}function l(){return n.createVertexArray()}function u(N){return n.bindVertexArray(N)}function h(N){return n.deleteVertexArray(N)}function d(N,A,B){const W=B.wireframe===!0;let K=s[N.id];K===void 0&&(K={},s[N.id]=K);let q=K[A.id];q===void 0&&(q={},K[A.id]=q);let Y=q[W];return Y===void 0&&(Y=p(l()),q[W]=Y),Y}function p(N){const A=[],B=[],W=[];for(let K=0;K<t;K++)A[K]=0,B[K]=0,W[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:A,enabledAttributes:B,attributeDivisors:W,object:N,attributes:{},index:null}}function m(N,A,B,W){const K=i.attributes,q=A.attributes;let Y=0;const J=B.getAttributes();for(const G in J)if(J[G].location>=0){const te=K[G];let j=q[G];if(j===void 0&&(G==="instanceMatrix"&&N.instanceMatrix&&(j=N.instanceMatrix),G==="instanceColor"&&N.instanceColor&&(j=N.instanceColor)),te===void 0||te.attribute!==j||j&&te.data!==j.data)return!0;Y++}return i.attributesNum!==Y||i.index!==W}function g(N,A,B,W){const K={},q=A.attributes;let Y=0;const J=B.getAttributes();for(const G in J)if(J[G].location>=0){let te=q[G];te===void 0&&(G==="instanceMatrix"&&N.instanceMatrix&&(te=N.instanceMatrix),G==="instanceColor"&&N.instanceColor&&(te=N.instanceColor));const j={};j.attribute=te,te&&te.data&&(j.data=te.data),K[G]=j,Y++}i.attributes=K,i.attributesNum=Y,i.index=W}function b(){const N=i.newAttributes;for(let A=0,B=N.length;A<B;A++)N[A]=0}function y(N){v(N,0)}function v(N,A){const B=i.newAttributes,W=i.enabledAttributes,K=i.attributeDivisors;B[N]=1,W[N]===0&&(n.enableVertexAttribArray(N),W[N]=1),K[N]!==A&&(n.vertexAttribDivisor(N,A),K[N]=A)}function w(){const N=i.newAttributes,A=i.enabledAttributes;for(let B=0,W=A.length;B<W;B++)A[B]!==N[B]&&(n.disableVertexAttribArray(B),A[B]=0)}function E(N,A,B,W,K,q,Y){Y===!0?n.vertexAttribIPointer(N,A,B,K,q):n.vertexAttribPointer(N,A,B,W,K,q)}function T(N,A,B,W){b();const K=W.attributes,q=B.getAttributes(),Y=A.defaultAttributeValues;for(const J in q){const G=q[J];if(G.location>=0){let ee=K[J];if(ee===void 0&&(J==="instanceMatrix"&&N.instanceMatrix&&(ee=N.instanceMatrix),J==="instanceColor"&&N.instanceColor&&(ee=N.instanceColor)),ee!==void 0){const te=ee.normalized,j=ee.itemSize,se=e.get(ee);if(se===void 0)continue;const be=se.buffer,ae=se.type,de=se.bytesPerElement,Se=ae===n.INT||ae===n.UNSIGNED_INT||ee.gpuType===_I;if(ee.isInterleavedBufferAttribute){const Te=ee.data,De=Te.stride,Ue=ee.offset;if(Te.isInstancedInterleavedBuffer){for(let We=0;We<G.locationSize;We++)v(G.location+We,Te.meshPerAttribute);N.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=Te.meshPerAttribute*Te.count)}else for(let We=0;We<G.locationSize;We++)y(G.location+We);n.bindBuffer(n.ARRAY_BUFFER,be);for(let We=0;We<G.locationSize;We++)E(G.location+We,j/G.locationSize,ae,te,De*de,(Ue+j/G.locationSize*We)*de,Se)}else{if(ee.isInstancedBufferAttribute){for(let Te=0;Te<G.locationSize;Te++)v(G.location+Te,ee.meshPerAttribute);N.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=ee.meshPerAttribute*ee.count)}else for(let Te=0;Te<G.locationSize;Te++)y(G.location+Te);n.bindBuffer(n.ARRAY_BUFFER,be);for(let Te=0;Te<G.locationSize;Te++)E(G.location+Te,j/G.locationSize,ae,te,j*de,j/G.locationSize*Te*de,Se)}}else if(Y!==void 0){const te=Y[J];if(te!==void 0)switch(te.length){case 2:n.vertexAttrib2fv(G.location,te);break;case 3:n.vertexAttrib3fv(G.location,te);break;case 4:n.vertexAttrib4fv(G.location,te);break;default:n.vertexAttrib1fv(G.location,te)}}}}w()}function I(){O();for(const N in s){const A=s[N];for(const B in A){const W=A[B];for(const K in W)h(W[K].object),delete W[K];delete A[B]}delete s[N]}}function M(N){if(s[N.id]===void 0)return;const A=s[N.id];for(const B in A){const W=A[B];for(const K in W)h(W[K].object),delete W[K];delete A[B]}delete s[N.id]}function $(N){for(const A in s){const B=s[A];if(B[N.id]===void 0)continue;const W=B[N.id];for(const K in W)h(W[K].object),delete W[K];delete B[N.id]}}function O(){k(),o=!0,i!==r&&(i=r,u(i.object))}function k(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:a,reset:O,resetDefaultState:k,dispose:I,releaseStatesOfGeometry:M,releaseStatesOfProgram:$,initAttributes:b,enableAttribute:y,disableUnusedAttributes:w}}function yye(n,e,t){let s;function r(u){s=u}function i(u,h){n.drawArrays(s,u,h),t.update(h,s,1)}function o(u,h,d){d!==0&&(n.drawArraysInstanced(s,u,h,d),t.update(h,s,d))}function a(u,h,d){if(d===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(s,u,0,h,0,d);let m=0;for(let g=0;g<d;g++)m+=h[g];t.update(m,s,1)}function l(u,h,d,p){if(d===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<u.length;g++)o(u[g],h[g],p[g]);else{m.multiDrawArraysInstancedWEBGL(s,u,0,h,0,p,0,d);let g=0;for(let b=0;b<d;b++)g+=h[b]*p[b];t.update(g,s,1)}}this.setMode=r,this.render=i,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function xye(n,e,t,s){let r;function i(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const $=e.get("EXT_texture_filter_anisotropic");r=n.getParameter($.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o($){return!($!==Ao&&s.convert($)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function a($){const O=$===Bg&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!($!==nl&&s.convert($)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&$!==ja&&!O)}function l($){if($==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";$="mediump"}return $==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let u=t.precision!==void 0?t.precision:"highp";const h=l(u);h!==u&&(console.warn("THREE.WebGLRenderer:",u,"not supported, using",h,"instead."),u=h);const d=t.logarithmicDepthBuffer===!0,p=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),m=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),g=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=n.getParameter(n.MAX_TEXTURE_SIZE),y=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),v=n.getParameter(n.MAX_VERTEX_ATTRIBS),w=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),E=n.getParameter(n.MAX_VARYING_VECTORS),T=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),I=g>0,M=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:i,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:u,logarithmicDepthBuffer:d,reverseDepthBuffer:p,maxTextures:m,maxVertexTextures:g,maxTextureSize:b,maxCubemapSize:y,maxAttributes:v,maxVertexUniforms:w,maxVaryings:E,maxFragmentUniforms:T,vertexTextures:I,maxSamples:M}}function vye(n){const e=this;let t=null,s=0,r=!1,i=!1;const o=new nc,a=new rn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,p){const m=d.length!==0||p||s!==0||r;return r=p,s=d.length,m},this.beginShadows=function(){i=!0,h(null)},this.endShadows=function(){i=!1},this.setGlobalState=function(d,p){t=h(d,p,0)},this.setState=function(d,p,m){const g=d.clippingPlanes,b=d.clipIntersection,y=d.clipShadows,v=n.get(d);if(!r||g===null||g.length===0||i&&!y)i?h(null):u();else{const w=i?0:s,E=w*4;let T=v.clippingState||null;l.value=T,T=h(g,p,E,m);for(let I=0;I!==E;++I)T[I]=t[I];v.clippingState=T,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=w}};function u(){l.value!==t&&(l.value=t,l.needsUpdate=s>0),e.numPlanes=s,e.numIntersection=0}function h(d,p,m,g){const b=d!==null?d.length:0;let y=null;if(b!==0){if(y=l.value,g!==!0||y===null){const v=m+b*4,w=p.matrixWorldInverse;a.getNormalMatrix(w),(y===null||y.length<v)&&(y=new Float32Array(v));for(let E=0,T=m;E!==b;++E,T+=4)o.copy(d[E]).applyMatrix4(w,a),o.normal.toArray(y,T),y[T+3]=o.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=b,e.numIntersection=0,y}}function bye(n){let e=new WeakMap;function t(o,a){return a===Z_?o.mapping=md:a===Q_&&(o.mapping=gd),o}function s(o){if(o&&o.isTexture){const a=o.mapping;if(a===Z_||a===Q_)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const u=new bpe(l.height);return u.fromEquirectangularTexture(n,o),e.set(o,u),o.addEventListener("dispose",r),t(u.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function i(){e=new WeakMap}return{get:s,dispose:i}}const Xh=4,Ek=[.125,.215,.35,.446,.526,.582],cc=20,US=new kI,Ck=new kn;let zS=null,BS=0,VS=0,WS=!1;const sc=(1+Math.sqrt(5))/2,Wh=1/sc,Ik=[new $e(-sc,Wh,0),new $e(sc,Wh,0),new $e(-Wh,0,sc),new $e(Wh,0,sc),new $e(0,sc,-Wh),new $e(0,sc,Wh),new $e(-1,1,-1),new $e(1,1,-1),new $e(-1,1,1),new $e(1,1,1)];class Nk{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,s=.1,r=100){zS=this._renderer.getRenderTarget(),BS=this._renderer.getActiveCubeFace(),VS=this._renderer.getActiveMipmapLevel(),WS=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,s,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=kk(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Rk(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(zS,BS,VS),this._renderer.xr.enabled=WS,e.scissorTest=!1,z0(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===md||e.mapping===gd?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),zS=this._renderer.getRenderTarget(),BS=this._renderer.getActiveCubeFace(),VS=this._renderer.getActiveMipmapLevel(),WS=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const s=t||this._allocateTargets();return this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,s={magFilter:ra,minFilter:ra,generateMipmaps:!1,type:Bg,format:Ao,colorSpace:vd,depthBuffer:!1},r=Ak(e,t,s);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ak(e,t,s);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=wye(i)),this._blurMaterial=Sye(i,e,t)}return r}_compileMaterial(e){const t=new ia(this._lodPlanes[0],e);this._renderer.compile(t,US)}_sceneToCubeUV(e,t,s,r){const a=new Io(90,1,t,s),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,p=h.toneMapping;h.getClearColor(Ck),h.toneMapping=Jl,h.autoClear=!1;const m=new k3({name:"PMREM.Background",side:xi,depthWrite:!1,depthTest:!1}),g=new ia(new $f,m);let b=!1;const y=e.background;y?y.isColor&&(m.color.copy(y),e.background=null,b=!0):(m.color.copy(Ck),b=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(a.up.set(0,l[v],0),a.lookAt(u[v],0,0)):w===1?(a.up.set(0,0,l[v]),a.lookAt(0,u[v],0)):(a.up.set(0,l[v],0),a.lookAt(0,0,u[v]));const E=this._cubeSize;z0(r,w*E,v>2?E:0,E,E),h.setRenderTarget(r),b&&h.render(g,a),h.render(e,a)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=p,h.autoClear=d,e.background=y}_textureToCubeUV(e,t){const s=this._renderer,r=e.mapping===md||e.mapping===gd;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=kk()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Rk());const i=r?this._cubemapMaterial:this._equirectMaterial,o=new ia(this._lodPlanes[0],i),a=i.uniforms;a.envMap.value=e;const l=this._cubeSize;z0(t,0,0,3*l,2*l),s.setRenderTarget(t),s.render(o,US)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let i=1;i<r;i++){const o=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=Ik[(r-i-1)%Ik.length];this._blur(e,i-1,i,o,a)}t.autoClear=s}_blur(e,t,s,r,i){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,s,r,"latitudinal",i),this._halfBlur(o,e,s,s,r,"longitudinal",i)}_halfBlur(e,t,s,r,i,o,a){const l=this._renderer,u=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new ia(this._lodPlanes[r],u),p=u.uniforms,m=this._sizeLods[s]-1,g=isFinite(i)?Math.PI/(2*m):2*Math.PI/(2*cc-1),b=i/g,y=isFinite(i)?1+Math.floor(h*b):cc;y>cc&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${cc}`);const v=[];let w=0;for(let $=0;$<cc;++$){const O=$/b,k=Math.exp(-O*O/2);v.push(k),$===0?w+=k:$<y&&(w+=2*k)}for(let $=0;$<v.length;$++)v[$]=v[$]/w;p.envMap.value=e.texture,p.samples.value=y,p.weights.value=v,p.latitudinal.value=o==="latitudinal",a&&(p.poleAxis.value=a);const{_lodMax:E}=this;p.dTheta.value=g,p.mipInt.value=E-s;const T=this._sizeLods[r],I=3*T*(r>E-Xh?r-E+Xh:0),M=4*(this._cubeSize-T);z0(t,I,M,3*T,2*T),l.setRenderTarget(t),l.render(d,US)}}function wye(n){const e=[],t=[],s=[];let r=n;const i=n-Xh+1+Ek.length;for(let o=0;o<i;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>n-Xh?l=Ek[o-n+Xh-1]:o===0&&(l=0),s.push(l);const u=1/(a-2),h=-u,d=1+u,p=[h,h,d,h,d,d,h,h,d,d,h,d],m=6,g=6,b=3,y=2,v=1,w=new Float32Array(b*g*m),E=new Float32Array(y*g*m),T=new Float32Array(v*g*m);for(let M=0;M<m;M++){const $=M%3*2/3-1,O=M>2?0:-1,k=[$,O,0,$+2/3,O,0,$+2/3,O+1,0,$,O,0,$+2/3,O+1,0,$,O+1,0];w.set(k,b*g*M),E.set(p,y*g*M);const N=[M,M,M,M,M,M];T.set(N,v*g*M)}const I=new Qc;I.setAttribute("position",new ha(w,b)),I.setAttribute("uv",new ha(E,y)),I.setAttribute("faceIndex",new ha(T,v)),e.push(I),r>Xh&&r--}return{lodPlanes:e,sizeLods:t,sigmas:s}}function Ak(n,e,t){const s=new Oc(n,e,t);return s.texture.mapping=iw,s.texture.name="PMREM.cubeUv",s.scissorTest=!0,s}function z0(n,e,t,s,r){n.viewport.set(e,t,s,r),n.scissor.set(e,t,s,r)}function Sye(n,e,t){const s=new Float32Array(cc),r=new $e(0,1,0);return new pu({name:"SphericalGaussianBlur",defines:{n:cc,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:s},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:MI(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ql,depthTest:!1,depthWrite:!1})}function Rk(){return new pu({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:MI(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ql,depthTest:!1,depthWrite:!1})}function kk(){return new pu({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:MI(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ql,depthTest:!1,depthWrite:!1})}function MI(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function _ye(n){let e=new WeakMap,t=null;function s(a){if(a&&a.isTexture){const l=a.mapping,u=l===Z_||l===Q_,h=l===md||l===gd;if(u||h){let d=e.get(a);const p=d!==void 0?d.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==p)return t===null&&(t=new Nk(n)),d=u?t.fromEquirectangular(a,d):t.fromCubemap(a,d),d.texture.pmremVersion=a.pmremVersion,e.set(a,d),d.texture;if(d!==void 0)return d.texture;{const m=a.image;return u&&m&&m.height>0||h&&m&&r(m)?(t===null&&(t=new Nk(n)),d=u?t.fromEquirectangular(a):t.fromCubemap(a),d.texture.pmremVersion=a.pmremVersion,e.set(a,d),a.addEventListener("dispose",i),d.texture):null}}}return a}function r(a){let l=0;const u=6;for(let h=0;h<u;h++)a[h]!==void 0&&l++;return l===u}function i(a){const l=a.target;l.removeEventListener("dispose",i);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:s,dispose:o}}function Tye(n){const e={};function t(s){if(e[s]!==void 0)return e[s];let r;switch(s){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(s)}return e[s]=r,r}return{has:function(s){return t(s)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(s){const r=t(s);return r===null&&jh("THREE.WebGLRenderer: "+s+" extension not supported."),r}}}function Eye(n,e,t,s){const r={},i=new WeakMap;function o(d){const p=d.target;p.index!==null&&e.remove(p.index);for(const g in p.attributes)e.remove(p.attributes[g]);p.removeEventListener("dispose",o),delete r[p.id];const m=i.get(p);m&&(e.remove(m),i.delete(p)),s.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function a(d,p){return r[p.id]===!0||(p.addEventListener("dispose",o),r[p.id]=!0,t.memory.geometries++),p}function l(d){const p=d.attributes;for(const m in p)e.update(p[m],n.ARRAY_BUFFER)}function u(d){const p=[],m=d.index,g=d.attributes.position;let b=0;if(m!==null){const w=m.array;b=m.version;for(let E=0,T=w.length;E<T;E+=3){const I=w[E+0],M=w[E+1],$=w[E+2];p.push(I,M,M,$,$,I)}}else if(g!==void 0){const w=g.array;b=g.version;for(let E=0,T=w.length/3-1;E<T;E+=3){const I=E+0,M=E+1,$=E+2;p.push(I,M,M,$,$,I)}}else return;const y=new(C3(p)?D3:M3)(p,1);y.version=b;const v=i.get(d);v&&e.remove(v),i.set(d,y)}function h(d){const p=i.get(d);if(p){const m=d.index;m!==null&&p.version<m.version&&u(d)}else u(d);return i.get(d)}return{get:a,update:l,getWireframeAttribute:h}}function Cye(n,e,t){let s;function r(p){s=p}let i,o;function a(p){i=p.type,o=p.bytesPerElement}function l(p,m){n.drawElements(s,m,i,p*o),t.update(m,s,1)}function u(p,m,g){g!==0&&(n.drawElementsInstanced(s,m,i,p*o,g),t.update(m,s,g))}function h(p,m,g){if(g===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(s,m,0,i,p,0,g);let y=0;for(let v=0;v<g;v++)y+=m[v];t.update(y,s,1)}function d(p,m,g,b){if(g===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let v=0;v<p.length;v++)u(p[v]/o,m[v],b[v]);else{y.multiDrawElementsInstancedWEBGL(s,m,0,i,p,0,b,0,g);let v=0;for(let w=0;w<g;w++)v+=m[w]*b[w];t.update(v,s,1)}}this.setMode=r,this.setIndex=a,this.render=l,this.renderInstances=u,this.renderMultiDraw=h,this.renderMultiDrawInstances=d}function Iye(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function s(i,o,a){switch(t.calls++,o){case n.TRIANGLES:t.triangles+=a*(i/3);break;case n.LINES:t.lines+=a*(i/2);break;case n.LINE_STRIP:t.lines+=a*(i-1);break;case n.LINE_LOOP:t.lines+=a*i;break;case n.POINTS:t.points+=a*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:s}}function Nye(n,e,t){const s=new WeakMap,r=new gs;function i(o,a,l){const u=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,d=h!==void 0?h.length:0;let p=s.get(a);if(p===void 0||p.count!==d){let N=function(){O.dispose(),s.delete(a),a.removeEventListener("dispose",N)};var m=N;p!==void 0&&p.texture.dispose();const g=a.morphAttributes.position!==void 0,b=a.morphAttributes.normal!==void 0,y=a.morphAttributes.color!==void 0,v=a.morphAttributes.position||[],w=a.morphAttributes.normal||[],E=a.morphAttributes.color||[];let T=0;g===!0&&(T=1),b===!0&&(T=2),y===!0&&(T=3);let I=a.attributes.position.count*T,M=1;I>e.maxTextureSize&&(M=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const $=new Float32Array(I*M*4*d),O=new N3($,I,M,d);O.type=ja,O.needsUpdate=!0;const k=T*4;for(let A=0;A<d;A++){const B=v[A],W=w[A],K=E[A],q=I*M*4*A;for(let Y=0;Y<B.count;Y++){const J=Y*k;g===!0&&(r.fromBufferAttribute(B,Y),$[q+J+0]=r.x,$[q+J+1]=r.y,$[q+J+2]=r.z,$[q+J+3]=0),b===!0&&(r.fromBufferAttribute(W,Y),$[q+J+4]=r.x,$[q+J+5]=r.y,$[q+J+6]=r.z,$[q+J+7]=0),y===!0&&(r.fromBufferAttribute(K,Y),$[q+J+8]=r.x,$[q+J+9]=r.y,$[q+J+10]=r.z,$[q+J+11]=K.itemSize===4?r.w:1)}}p={count:d,texture:O,size:new Fn(I,M)},s.set(a,p),a.addEventListener("dispose",N)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(n,"morphTexture",o.morphTexture,t);else{let g=0;for(let y=0;y<u.length;y++)g+=u[y];const b=a.morphTargetsRelative?1:1-g;l.getUniforms().setValue(n,"morphTargetBaseInfluence",b),l.getUniforms().setValue(n,"morphTargetInfluences",u)}l.getUniforms().setValue(n,"morphTargetsTexture",p.texture,t),l.getUniforms().setValue(n,"morphTargetsTextureSize",p.size)}return{update:i}}function Aye(n,e,t,s){let r=new WeakMap;function i(l){const u=s.render.frame,h=l.geometry,d=e.get(l,h);if(r.get(d)!==u&&(e.update(d),r.set(d,u)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==u&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),r.set(l,u))),l.isSkinnedMesh){const p=l.skeleton;r.get(p)!==u&&(p.update(),r.set(p,u))}return d}function o(){r=new WeakMap}function a(l){const u=l.target;u.removeEventListener("dispose",a),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:i,dispose:o}}const z3=new vi,Mk=new O3(1,1),B3=new N3,V3=new npe,W3=new P3,Dk=[],$k=[],Fk=new Float32Array(16),Pk=new Float32Array(9),Ok=new Float32Array(4);function Ff(n,e,t){const s=n[0];if(s<=0||s>0)return n;const r=e*t;let i=Dk[r];if(i===void 0&&(i=new Float32Array(r),Dk[r]=i),e!==0){s.toArray(i,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(i,a)}return i}function Qs(n,e){if(n.length!==e.length)return!1;for(let t=0,s=n.length;t<s;t++)if(n[t]!==e[t])return!1;return!0}function Js(n,e){for(let t=0,s=e.length;t<s;t++)n[t]=e[t]}function aw(n,e){let t=$k[e];t===void 0&&(t=new Int32Array(e),$k[e]=t);for(let s=0;s!==e;++s)t[s]=n.allocateTextureUnit();return t}function Rye(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function kye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Qs(t,e))return;n.uniform2fv(this.addr,e),Js(t,e)}}function Mye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Qs(t,e))return;n.uniform3fv(this.addr,e),Js(t,e)}}function Dye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Qs(t,e))return;n.uniform4fv(this.addr,e),Js(t,e)}}function $ye(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(Qs(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Js(t,e)}else{if(Qs(t,s))return;Ok.set(s),n.uniformMatrix2fv(this.addr,!1,Ok),Js(t,s)}}function Fye(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(Qs(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Js(t,e)}else{if(Qs(t,s))return;Pk.set(s),n.uniformMatrix3fv(this.addr,!1,Pk),Js(t,s)}}function Pye(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(Qs(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Js(t,e)}else{if(Qs(t,s))return;Fk.set(s),n.uniformMatrix4fv(this.addr,!1,Fk),Js(t,s)}}function Oye(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function Lye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Qs(t,e))return;n.uniform2iv(this.addr,e),Js(t,e)}}function Uye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Qs(t,e))return;n.uniform3iv(this.addr,e),Js(t,e)}}function zye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Qs(t,e))return;n.uniform4iv(this.addr,e),Js(t,e)}}function Bye(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function Vye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Qs(t,e))return;n.uniform2uiv(this.addr,e),Js(t,e)}}function Wye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Qs(t,e))return;n.uniform3uiv(this.addr,e),Js(t,e)}}function Gye(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Qs(t,e))return;n.uniform4uiv(this.addr,e),Js(t,e)}}function Hye(n,e,t){const s=this.cache,r=t.allocateTextureUnit();s[0]!==r&&(n.uniform1i(this.addr,r),s[0]=r);let i;this.type===n.SAMPLER_2D_SHADOW?(Mk.compareFunction=E3,i=Mk):i=z3,t.setTexture2D(e||i,r)}function jye(n,e,t){const s=this.cache,r=t.allocateTextureUnit();s[0]!==r&&(n.uniform1i(this.addr,r),s[0]=r),t.setTexture3D(e||V3,r)}function Xye(n,e,t){const s=this.cache,r=t.allocateTextureUnit();s[0]!==r&&(n.uniform1i(this.addr,r),s[0]=r),t.setTextureCube(e||W3,r)}function qye(n,e,t){const s=this.cache,r=t.allocateTextureUnit();s[0]!==r&&(n.uniform1i(this.addr,r),s[0]=r),t.setTexture2DArray(e||B3,r)}function Kye(n){switch(n){case 5126:return Rye;case 35664:return kye;case 35665:return Mye;case 35666:return Dye;case 35674:return $ye;case 35675:return Fye;case 35676:return Pye;case 5124:case 35670:return Oye;case 35667:case 35671:return Lye;case 35668:case 35672:return Uye;case 35669:case 35673:return zye;case 5125:return Bye;case 36294:return Vye;case 36295:return Wye;case 36296:return Gye;case 35678:case 36198:case 36298:case 36306:case 35682:return Hye;case 35679:case 36299:case 36307:return jye;case 35680:case 36300:case 36308:case 36293:return Xye;case 36289:case 36303:case 36311:case 36292:return qye}}function Yye(n,e){n.uniform1fv(this.addr,e)}function Zye(n,e){const t=Ff(e,this.size,2);n.uniform2fv(this.addr,t)}function Qye(n,e){const t=Ff(e,this.size,3);n.uniform3fv(this.addr,t)}function Jye(n,e){const t=Ff(e,this.size,4);n.uniform4fv(this.addr,t)}function e0e(n,e){const t=Ff(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function t0e(n,e){const t=Ff(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function n0e(n,e){const t=Ff(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function s0e(n,e){n.uniform1iv(this.addr,e)}function r0e(n,e){n.uniform2iv(this.addr,e)}function i0e(n,e){n.uniform3iv(this.addr,e)}function o0e(n,e){n.uniform4iv(this.addr,e)}function a0e(n,e){n.uniform1uiv(this.addr,e)}function l0e(n,e){n.uniform2uiv(this.addr,e)}function u0e(n,e){n.uniform3uiv(this.addr,e)}function c0e(n,e){n.uniform4uiv(this.addr,e)}function h0e(n,e,t){const s=this.cache,r=e.length,i=aw(t,r);Qs(s,i)||(n.uniform1iv(this.addr,i),Js(s,i));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||z3,i[o])}function d0e(n,e,t){const s=this.cache,r=e.length,i=aw(t,r);Qs(s,i)||(n.uniform1iv(this.addr,i),Js(s,i));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||V3,i[o])}function f0e(n,e,t){const s=this.cache,r=e.length,i=aw(t,r);Qs(s,i)||(n.uniform1iv(this.addr,i),Js(s,i));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||W3,i[o])}function p0e(n,e,t){const s=this.cache,r=e.length,i=aw(t,r);Qs(s,i)||(n.uniform1iv(this.addr,i),Js(s,i));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||B3,i[o])}function m0e(n){switch(n){case 5126:return Yye;case 35664:return Zye;case 35665:return Qye;case 35666:return Jye;case 35674:return e0e;case 35675:return t0e;case 35676:return n0e;case 5124:case 35670:return s0e;case 35667:case 35671:return r0e;case 35668:case 35672:return i0e;case 35669:case 35673:return o0e;case 5125:return a0e;case 36294:return l0e;case 36295:return u0e;case 36296:return c0e;case 35678:case 36198:case 36298:case 36306:case 35682:return h0e;case 35679:case 36299:case 36307:return d0e;case 35680:case 36300:case 36308:case 36293:return f0e;case 36289:case 36303:case 36311:case 36292:return p0e}}class g0e{constructor(e,t,s){this.id=e,this.addr=s,this.cache=[],this.type=t.type,this.setValue=Kye(t.type)}}class y0e{constructor(e,t,s){this.id=e,this.addr=s,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=m0e(t.type)}}class x0e{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,s){const r=this.seq;for(let i=0,o=r.length;i!==o;++i){const a=r[i];a.setValue(e,t[a.id],s)}}}const GS=/(\w+)(\])?(\[|\.)?/g;function Lk(n,e){n.seq.push(e),n.map[e.id]=e}function v0e(n,e,t){const s=n.name,r=s.length;for(GS.lastIndex=0;;){const i=GS.exec(s),o=GS.lastIndex;let a=i[1];const l=i[2]==="]",u=i[3];if(l&&(a=a|0),u===void 0||u==="["&&o+2===r){Lk(t,u===void 0?new g0e(a,n,e):new y0e(a,n,e));break}else{let d=t.map[a];d===void 0&&(d=new x0e(a),Lk(t,d)),t=d}}}class rx{constructor(e,t){this.seq=[],this.map={};const s=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<s;++r){const i=e.getActiveUniform(t,r),o=e.getUniformLocation(t,i.name);v0e(i,o,this)}}setValue(e,t,s,r){const i=this.map[t];i!==void 0&&i.setValue(e,s,r)}setOptional(e,t,s){const r=t[s];r!==void 0&&this.setValue(e,s,r)}static upload(e,t,s,r){for(let i=0,o=t.length;i!==o;++i){const a=t[i],l=s[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const s=[];for(let r=0,i=e.length;r!==i;++r){const o=e[r];o.id in t&&s.push(o)}return s}}function Uk(n,e,t){const s=n.createShader(e);return n.shaderSource(s,t),n.compileShader(s),s}const b0e=37297;let w0e=0;function S0e(n,e){const t=n.split(`
`),s=[],r=Math.max(e-6,0),i=Math.min(e+6,t.length);for(let o=r;o<i;o++){const a=o+1;s.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return s.join(`
`)}const zk=new rn;function _0e(n){Rn._getMatrix(zk,Rn.workingColorSpace,n);const e=`mat3( ${zk.elements.map(t=>t.toFixed(4))} )`;switch(Rn.getTransfer(n)){case Fx:return[e,"LinearTransferOETF"];case Vn:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",n),[e,"LinearTransferOETF"]}}function Bk(n,e,t){const s=n.getShaderParameter(e,n.COMPILE_STATUS),r=n.getShaderInfoLog(e).trim();if(s&&r==="")return"";const i=/ERROR: 0:(\d+)/.exec(r);if(i){const o=parseInt(i[1]);return t.toUpperCase()+`

`+r+`

`+S0e(n.getShaderSource(e),o)}else return r}function T0e(n,e){const t=_0e(e);return[`vec4 ${n}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function E0e(n,e){let t;switch(e){case Nfe:t="Linear";break;case Afe:t="Reinhard";break;case Rfe:t="Cineon";break;case kfe:t="ACESFilmic";break;case Dfe:t="AgX";break;case $fe:t="Neutral";break;case Mfe:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const B0=new $e;function C0e(){Rn.getLuminanceCoefficients(B0);const n=B0.x.toFixed(4),e=B0.y.toFixed(4),t=B0.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${n}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function I0e(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(kp).join(`
`)}function N0e(n){const e=[];for(const t in n){const s=n[t];s!==!1&&e.push("#define "+t+" "+s)}return e.join(`
`)}function A0e(n,e){const t={},s=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<s;r++){const i=n.getActiveAttrib(e,r),o=i.name;let a=1;i.type===n.FLOAT_MAT2&&(a=2),i.type===n.FLOAT_MAT3&&(a=3),i.type===n.FLOAT_MAT4&&(a=4),t[o]={type:i.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function kp(n){return n!==""}function Vk(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Wk(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const R0e=/^[ \t]*#include +<([\w\d./]+)>/gm;function NT(n){return n.replace(R0e,M0e)}const k0e=new Map;function M0e(n,e){let t=un[e];if(t===void 0){const s=k0e.get(e);if(s!==void 0)t=un[s],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,s);else throw new Error("Can not resolve #include <"+e+">")}return NT(t)}const D0e=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Gk(n){return n.replace(D0e,$0e)}function $0e(n,e,t,s){let r="";for(let i=parseInt(e);i<parseInt(t);i++)r+=s.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return r}function Hk(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function F0e(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===d3?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===afe?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Ua&&(e="SHADOWMAP_TYPE_VSM"),e}function P0e(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case md:case gd:e="ENVMAP_TYPE_CUBE";break;case iw:e="ENVMAP_TYPE_CUBE_UV";break}return e}function O0e(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case gd:e="ENVMAP_MODE_REFRACTION";break}return e}function L0e(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case SI:e="ENVMAP_BLENDING_MULTIPLY";break;case Cfe:e="ENVMAP_BLENDING_MIX";break;case Ife:e="ENVMAP_BLENDING_ADD";break}return e}function U0e(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,s=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:s,maxMip:t}}function z0e(n,e,t,s){const r=n.getContext(),i=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=F0e(t),u=P0e(t),h=O0e(t),d=L0e(t),p=U0e(t),m=I0e(t),g=N0e(i),b=r.createProgram();let y,v,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(kp).join(`
`),y.length>0&&(y+=`
`),v=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(kp).join(`
`),v.length>0&&(v+=`
`)):(y=[Hk(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(kp).join(`
`),v=[Hk(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Jl?"#define TONE_MAPPING":"",t.toneMapping!==Jl?un.tonemapping_pars_fragment:"",t.toneMapping!==Jl?E0e("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",un.colorspace_pars_fragment,T0e("linearToOutputTexel",t.outputColorSpace),C0e(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(kp).join(`
`)),o=NT(o),o=Vk(o,t),o=Wk(o,t),a=NT(a),a=Vk(a,t),a=Wk(a,t),o=Gk(o),a=Gk(a),t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,y=[m,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,v=["#define varying in",t.glslVersion===rk?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===rk?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const E=w+y+o,T=w+v+a,I=Uk(r,r.VERTEX_SHADER,E),M=Uk(r,r.FRAGMENT_SHADER,T);r.attachShader(b,I),r.attachShader(b,M),t.index0AttributeName!==void 0?r.bindAttribLocation(b,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(b,0,"position"),r.linkProgram(b);function $(A){if(n.debug.checkShaderErrors){const B=r.getProgramInfoLog(b).trim(),W=r.getShaderInfoLog(I).trim(),K=r.getShaderInfoLog(M).trim();let q=!0,Y=!0;if(r.getProgramParameter(b,r.LINK_STATUS)===!1)if(q=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,b,I,M);else{const J=Bk(r,I,"vertex"),G=Bk(r,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(b,r.VALIDATE_STATUS)+`

Material Name: `+A.name+`
Material Type: `+A.type+`

Program Info Log: `+B+`
`+J+`
`+G)}else B!==""?console.warn("THREE.WebGLProgram: Program Info Log:",B):(W===""||K==="")&&(Y=!1);Y&&(A.diagnostics={runnable:q,programLog:B,vertexShader:{log:W,prefix:y},fragmentShader:{log:K,prefix:v}})}r.deleteShader(I),r.deleteShader(M),O=new rx(r,b),k=A0e(r,b)}let O;this.getUniforms=function(){return O===void 0&&$(this),O};let k;this.getAttributes=function(){return k===void 0&&$(this),k};let N=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return N===!1&&(N=r.getProgramParameter(b,b0e)),N},this.destroy=function(){s.releaseStatesOfProgram(this),r.deleteProgram(b),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=w0e++,this.cacheKey=e,this.usedTimes=1,this.program=b,this.vertexShader=I,this.fragmentShader=M,this}let B0e=0;class V0e{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,s=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(s),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(i)===!1&&(o.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const s of t)s.usedTimes--,s.usedTimes===0&&this.shaderCache.delete(s.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let s=t.get(e);return s===void 0&&(s=new Set,t.set(e,s)),s}_getShaderStage(e){const t=this.shaderCache;let s=t.get(e);return s===void 0&&(s=new W0e(e),t.set(e,s)),s}}class W0e{constructor(e){this.id=B0e++,this.code=e,this.usedTimes=0}}function G0e(n,e,t,s,r,i,o){const a=new A3,l=new V0e,u=new Set,h=[],d=r.logarithmicDepthBuffer,p=r.vertexTextures;let m=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(k){return u.add(k),k===0?"uv":`uv${k}`}function y(k,N,A,B,W){const K=B.fog,q=W.geometry,Y=k.isMeshStandardMaterial?B.environment:null,J=(k.isMeshStandardMaterial?t:e).get(k.envMap||Y),G=J&&J.mapping===iw?J.image.height:null,ee=g[k.type];k.precision!==null&&(m=r.getMaxPrecision(k.precision),m!==k.precision&&console.warn("THREE.WebGLProgram.getParameters:",k.precision,"not supported, using",m,"instead."));const te=q.morphAttributes.position||q.morphAttributes.normal||q.morphAttributes.color,j=te!==void 0?te.length:0;let se=0;q.morphAttributes.position!==void 0&&(se=1),q.morphAttributes.normal!==void 0&&(se=2),q.morphAttributes.color!==void 0&&(se=3);let be,ae,de,Se;if(ee){const fn=ta[ee];be=fn.vertexShader,ae=fn.fragmentShader}else be=k.vertexShader,ae=k.fragmentShader,l.update(k),de=l.getVertexShaderID(k),Se=l.getFragmentShaderID(k);const Te=n.getRenderTarget(),De=n.state.buffers.depth.getReversed(),Ue=W.isInstancedMesh===!0,We=W.isBatchedMesh===!0,lt=!!k.map,Ft=!!k.matcap,Je=!!J,ie=!!k.aoMap,Kt=!!k.lightMap,bt=!!k.bumpMap,_t=!!k.normalMap,tt=!!k.displacementMap,nn=!!k.emissiveMap,nt=!!k.metalnessMap,Z=!!k.roughnessMap,V=k.anisotropy>0,Ie=k.clearcoat>0,Oe=k.dispersion>0,Be=k.iridescence>0,Le=k.sheen>0,gt=k.transmission>0,et=V&&!!k.anisotropyMap,ut=Ie&&!!k.clearcoatMap,Zt=Ie&&!!k.clearcoatNormalMap,Xe=Ie&&!!k.clearcoatRoughnessMap,yt=Be&&!!k.iridescenceMap,Rt=Be&&!!k.iridescenceThicknessMap,Ut=Le&&!!k.sheenColorMap,xt=Le&&!!k.sheenRoughnessMap,ln=!!k.specularMap,Xt=!!k.specularColorMap,En=!!k.specularIntensityMap,ge=gt&&!!k.transmissionMap,st=gt&&!!k.thicknessMap,Pe=!!k.gradientMap,ze=!!k.alphaMap,ct=k.alphaTest>0,ht=!!k.alphaHash,Bt=!!k.extensions;let On=Jl;k.toneMapped&&(Te===null||Te.isXRRenderTarget===!0)&&(On=n.toneMapping);const ps={shaderID:ee,shaderType:k.type,shaderName:k.name,vertexShader:be,fragmentShader:ae,defines:k.defines,customVertexShaderID:de,customFragmentShaderID:Se,isRawShaderMaterial:k.isRawShaderMaterial===!0,glslVersion:k.glslVersion,precision:m,batching:We,batchingColor:We&&W._colorsTexture!==null,instancing:Ue,instancingColor:Ue&&W.instanceColor!==null,instancingMorph:Ue&&W.morphTexture!==null,supportsVertexTextures:p,outputColorSpace:Te===null?n.outputColorSpace:Te.isXRRenderTarget===!0?Te.texture.colorSpace:vd,alphaToCoverage:!!k.alphaToCoverage,map:lt,matcap:Ft,envMap:Je,envMapMode:Je&&J.mapping,envMapCubeUVHeight:G,aoMap:ie,lightMap:Kt,bumpMap:bt,normalMap:_t,displacementMap:p&&tt,emissiveMap:nn,normalMapObjectSpace:_t&&k.normalMapType===Lfe,normalMapTangentSpace:_t&&k.normalMapType===T3,metalnessMap:nt,roughnessMap:Z,anisotropy:V,anisotropyMap:et,clearcoat:Ie,clearcoatMap:ut,clearcoatNormalMap:Zt,clearcoatRoughnessMap:Xe,dispersion:Oe,iridescence:Be,iridescenceMap:yt,iridescenceThicknessMap:Rt,sheen:Le,sheenColorMap:Ut,sheenRoughnessMap:xt,specularMap:ln,specularColorMap:Xt,specularIntensityMap:En,transmission:gt,transmissionMap:ge,thicknessMap:st,gradientMap:Pe,opaque:k.transparent===!1&&k.blending===Qh&&k.alphaToCoverage===!1,alphaMap:ze,alphaTest:ct,alphaHash:ht,combine:k.combine,mapUv:lt&&b(k.map.channel),aoMapUv:ie&&b(k.aoMap.channel),lightMapUv:Kt&&b(k.lightMap.channel),bumpMapUv:bt&&b(k.bumpMap.channel),normalMapUv:_t&&b(k.normalMap.channel),displacementMapUv:tt&&b(k.displacementMap.channel),emissiveMapUv:nn&&b(k.emissiveMap.channel),metalnessMapUv:nt&&b(k.metalnessMap.channel),roughnessMapUv:Z&&b(k.roughnessMap.channel),anisotropyMapUv:et&&b(k.anisotropyMap.channel),clearcoatMapUv:ut&&b(k.clearcoatMap.channel),clearcoatNormalMapUv:Zt&&b(k.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Xe&&b(k.clearcoatRoughnessMap.channel),iridescenceMapUv:yt&&b(k.iridescenceMap.channel),iridescenceThicknessMapUv:Rt&&b(k.iridescenceThicknessMap.channel),sheenColorMapUv:Ut&&b(k.sheenColorMap.channel),sheenRoughnessMapUv:xt&&b(k.sheenRoughnessMap.channel),specularMapUv:ln&&b(k.specularMap.channel),specularColorMapUv:Xt&&b(k.specularColorMap.channel),specularIntensityMapUv:En&&b(k.specularIntensityMap.channel),transmissionMapUv:ge&&b(k.transmissionMap.channel),thicknessMapUv:st&&b(k.thicknessMap.channel),alphaMapUv:ze&&b(k.alphaMap.channel),vertexTangents:!!q.attributes.tangent&&(_t||V),vertexColors:k.vertexColors,vertexAlphas:k.vertexColors===!0&&!!q.attributes.color&&q.attributes.color.itemSize===4,pointsUvs:W.isPoints===!0&&!!q.attributes.uv&&(lt||ze),fog:!!K,useFog:k.fog===!0,fogExp2:!!K&&K.isFogExp2,flatShading:k.flatShading===!0,sizeAttenuation:k.sizeAttenuation===!0,logarithmicDepthBuffer:d,reverseDepthBuffer:De,skinning:W.isSkinnedMesh===!0,morphTargets:q.morphAttributes.position!==void 0,morphNormals:q.morphAttributes.normal!==void 0,morphColors:q.morphAttributes.color!==void 0,morphTargetsCount:j,morphTextureStride:se,numDirLights:N.directional.length,numPointLights:N.point.length,numSpotLights:N.spot.length,numSpotLightMaps:N.spotLightMap.length,numRectAreaLights:N.rectArea.length,numHemiLights:N.hemi.length,numDirLightShadows:N.directionalShadowMap.length,numPointLightShadows:N.pointShadowMap.length,numSpotLightShadows:N.spotShadowMap.length,numSpotLightShadowsWithMaps:N.numSpotLightShadowsWithMaps,numLightProbes:N.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:k.dithering,shadowMapEnabled:n.shadowMap.enabled&&A.length>0,shadowMapType:n.shadowMap.type,toneMapping:On,decodeVideoTexture:lt&&k.map.isVideoTexture===!0&&Rn.getTransfer(k.map.colorSpace)===Vn,decodeVideoTextureEmissive:nn&&k.emissiveMap.isVideoTexture===!0&&Rn.getTransfer(k.emissiveMap.colorSpace)===Vn,premultipliedAlpha:k.premultipliedAlpha,doubleSided:k.side===Ha,flipSided:k.side===xi,useDepthPacking:k.depthPacking>=0,depthPacking:k.depthPacking||0,index0AttributeName:k.index0AttributeName,extensionClipCullDistance:Bt&&k.extensions.clipCullDistance===!0&&s.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Bt&&k.extensions.multiDraw===!0||We)&&s.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:s.has("KHR_parallel_shader_compile"),customProgramCacheKey:k.customProgramCacheKey()};return ps.vertexUv1s=u.has(1),ps.vertexUv2s=u.has(2),ps.vertexUv3s=u.has(3),u.clear(),ps}function v(k){const N=[];if(k.shaderID?N.push(k.shaderID):(N.push(k.customVertexShaderID),N.push(k.customFragmentShaderID)),k.defines!==void 0)for(const A in k.defines)N.push(A),N.push(k.defines[A]);return k.isRawShaderMaterial===!1&&(w(N,k),E(N,k),N.push(n.outputColorSpace)),N.push(k.customProgramCacheKey),N.join()}function w(k,N){k.push(N.precision),k.push(N.outputColorSpace),k.push(N.envMapMode),k.push(N.envMapCubeUVHeight),k.push(N.mapUv),k.push(N.alphaMapUv),k.push(N.lightMapUv),k.push(N.aoMapUv),k.push(N.bumpMapUv),k.push(N.normalMapUv),k.push(N.displacementMapUv),k.push(N.emissiveMapUv),k.push(N.metalnessMapUv),k.push(N.roughnessMapUv),k.push(N.anisotropyMapUv),k.push(N.clearcoatMapUv),k.push(N.clearcoatNormalMapUv),k.push(N.clearcoatRoughnessMapUv),k.push(N.iridescenceMapUv),k.push(N.iridescenceThicknessMapUv),k.push(N.sheenColorMapUv),k.push(N.sheenRoughnessMapUv),k.push(N.specularMapUv),k.push(N.specularColorMapUv),k.push(N.specularIntensityMapUv),k.push(N.transmissionMapUv),k.push(N.thicknessMapUv),k.push(N.combine),k.push(N.fogExp2),k.push(N.sizeAttenuation),k.push(N.morphTargetsCount),k.push(N.morphAttributeCount),k.push(N.numDirLights),k.push(N.numPointLights),k.push(N.numSpotLights),k.push(N.numSpotLightMaps),k.push(N.numHemiLights),k.push(N.numRectAreaLights),k.push(N.numDirLightShadows),k.push(N.numPointLightShadows),k.push(N.numSpotLightShadows),k.push(N.numSpotLightShadowsWithMaps),k.push(N.numLightProbes),k.push(N.shadowMapType),k.push(N.toneMapping),k.push(N.numClippingPlanes),k.push(N.numClipIntersection),k.push(N.depthPacking)}function E(k,N){a.disableAll(),N.supportsVertexTextures&&a.enable(0),N.instancing&&a.enable(1),N.instancingColor&&a.enable(2),N.instancingMorph&&a.enable(3),N.matcap&&a.enable(4),N.envMap&&a.enable(5),N.normalMapObjectSpace&&a.enable(6),N.normalMapTangentSpace&&a.enable(7),N.clearcoat&&a.enable(8),N.iridescence&&a.enable(9),N.alphaTest&&a.enable(10),N.vertexColors&&a.enable(11),N.vertexAlphas&&a.enable(12),N.vertexUv1s&&a.enable(13),N.vertexUv2s&&a.enable(14),N.vertexUv3s&&a.enable(15),N.vertexTangents&&a.enable(16),N.anisotropy&&a.enable(17),N.alphaHash&&a.enable(18),N.batching&&a.enable(19),N.dispersion&&a.enable(20),N.batchingColor&&a.enable(21),k.push(a.mask),a.disableAll(),N.fog&&a.enable(0),N.useFog&&a.enable(1),N.flatShading&&a.enable(2),N.logarithmicDepthBuffer&&a.enable(3),N.reverseDepthBuffer&&a.enable(4),N.skinning&&a.enable(5),N.morphTargets&&a.enable(6),N.morphNormals&&a.enable(7),N.morphColors&&a.enable(8),N.premultipliedAlpha&&a.enable(9),N.shadowMapEnabled&&a.enable(10),N.doubleSided&&a.enable(11),N.flipSided&&a.enable(12),N.useDepthPacking&&a.enable(13),N.dithering&&a.enable(14),N.transmission&&a.enable(15),N.sheen&&a.enable(16),N.opaque&&a.enable(17),N.pointsUvs&&a.enable(18),N.decodeVideoTexture&&a.enable(19),N.decodeVideoTextureEmissive&&a.enable(20),N.alphaToCoverage&&a.enable(21),k.push(a.mask)}function T(k){const N=g[k.type];let A;if(N){const B=ta[N];A=gpe.clone(B.uniforms)}else A=k.uniforms;return A}function I(k,N){let A;for(let B=0,W=h.length;B<W;B++){const K=h[B];if(K.cacheKey===N){A=K,++A.usedTimes;break}}return A===void 0&&(A=new z0e(n,N,k,i),h.push(A)),A}function M(k){if(--k.usedTimes===0){const N=h.indexOf(k);h[N]=h[h.length-1],h.pop(),k.destroy()}}function $(k){l.remove(k)}function O(){l.dispose()}return{getParameters:y,getProgramCacheKey:v,getUniforms:T,acquireProgram:I,releaseProgram:M,releaseShaderCache:$,programs:h,dispose:O}}function H0e(){let n=new WeakMap;function e(o){return n.has(o)}function t(o){let a=n.get(o);return a===void 0&&(a={},n.set(o,a)),a}function s(o){n.delete(o)}function r(o,a,l){n.get(o)[a]=l}function i(){n=new WeakMap}return{has:e,get:t,remove:s,update:r,dispose:i}}function j0e(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function jk(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function Xk(){const n=[];let e=0;const t=[],s=[],r=[];function i(){e=0,t.length=0,s.length=0,r.length=0}function o(d,p,m,g,b,y){let v=n[e];return v===void 0?(v={id:d.id,object:d,geometry:p,material:m,groupOrder:g,renderOrder:d.renderOrder,z:b,group:y},n[e]=v):(v.id=d.id,v.object=d,v.geometry=p,v.material=m,v.groupOrder=g,v.renderOrder=d.renderOrder,v.z=b,v.group=y),e++,v}function a(d,p,m,g,b,y){const v=o(d,p,m,g,b,y);m.transmission>0?s.push(v):m.transparent===!0?r.push(v):t.push(v)}function l(d,p,m,g,b,y){const v=o(d,p,m,g,b,y);m.transmission>0?s.unshift(v):m.transparent===!0?r.unshift(v):t.unshift(v)}function u(d,p){t.length>1&&t.sort(d||j0e),s.length>1&&s.sort(p||jk),r.length>1&&r.sort(p||jk)}function h(){for(let d=e,p=n.length;d<p;d++){const m=n[d];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:s,transparent:r,init:i,push:a,unshift:l,finish:h,sort:u}}function X0e(){let n=new WeakMap;function e(s,r){const i=n.get(s);let o;return i===void 0?(o=new Xk,n.set(s,[o])):r>=i.length?(o=new Xk,i.push(o)):o=i[r],o}function t(){n=new WeakMap}return{get:e,dispose:t}}function q0e(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new $e,color:new kn};break;case"SpotLight":t={position:new $e,direction:new $e,color:new kn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new $e,color:new kn,distance:0,decay:0};break;case"HemisphereLight":t={direction:new $e,skyColor:new kn,groundColor:new kn};break;case"RectAreaLight":t={color:new kn,position:new $e,halfWidth:new $e,halfHeight:new $e};break}return n[e.id]=t,t}}}function K0e(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Fn};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Fn};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Fn,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let Y0e=0;function Z0e(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function Q0e(n){const e=new q0e,t=K0e(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)s.probe.push(new $e);const r=new $e,i=new xs,o=new xs;function a(u){let h=0,d=0,p=0;for(let k=0;k<9;k++)s.probe[k].set(0,0,0);let m=0,g=0,b=0,y=0,v=0,w=0,E=0,T=0,I=0,M=0,$=0;u.sort(Z0e);for(let k=0,N=u.length;k<N;k++){const A=u[k],B=A.color,W=A.intensity,K=A.distance,q=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)h+=B.r*W,d+=B.g*W,p+=B.b*W;else if(A.isLightProbe){for(let Y=0;Y<9;Y++)s.probe[Y].addScaledVector(A.sh.coefficients[Y],W);$++}else if(A.isDirectionalLight){const Y=e.get(A);if(Y.color.copy(A.color).multiplyScalar(A.intensity),A.castShadow){const J=A.shadow,G=t.get(A);G.shadowIntensity=J.intensity,G.shadowBias=J.bias,G.shadowNormalBias=J.normalBias,G.shadowRadius=J.radius,G.shadowMapSize=J.mapSize,s.directionalShadow[m]=G,s.directionalShadowMap[m]=q,s.directionalShadowMatrix[m]=A.shadow.matrix,w++}s.directional[m]=Y,m++}else if(A.isSpotLight){const Y=e.get(A);Y.position.setFromMatrixPosition(A.matrixWorld),Y.color.copy(B).multiplyScalar(W),Y.distance=K,Y.coneCos=Math.cos(A.angle),Y.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),Y.decay=A.decay,s.spot[b]=Y;const J=A.shadow;if(A.map&&(s.spotLightMap[I]=A.map,I++,J.updateMatrices(A),A.castShadow&&M++),s.spotLightMatrix[b]=J.matrix,A.castShadow){const G=t.get(A);G.shadowIntensity=J.intensity,G.shadowBias=J.bias,G.shadowNormalBias=J.normalBias,G.shadowRadius=J.radius,G.shadowMapSize=J.mapSize,s.spotShadow[b]=G,s.spotShadowMap[b]=q,T++}b++}else if(A.isRectAreaLight){const Y=e.get(A);Y.color.copy(B).multiplyScalar(W),Y.halfWidth.set(A.width*.5,0,0),Y.halfHeight.set(0,A.height*.5,0),s.rectArea[y]=Y,y++}else if(A.isPointLight){const Y=e.get(A);if(Y.color.copy(A.color).multiplyScalar(A.intensity),Y.distance=A.distance,Y.decay=A.decay,A.castShadow){const J=A.shadow,G=t.get(A);G.shadowIntensity=J.intensity,G.shadowBias=J.bias,G.shadowNormalBias=J.normalBias,G.shadowRadius=J.radius,G.shadowMapSize=J.mapSize,G.shadowCameraNear=J.camera.near,G.shadowCameraFar=J.camera.far,s.pointShadow[g]=G,s.pointShadowMap[g]=q,s.pointShadowMatrix[g]=A.shadow.matrix,E++}s.point[g]=Y,g++}else if(A.isHemisphereLight){const Y=e.get(A);Y.skyColor.copy(A.color).multiplyScalar(W),Y.groundColor.copy(A.groundColor).multiplyScalar(W),s.hemi[v]=Y,v++}}y>0&&(n.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=dt.LTC_FLOAT_1,s.rectAreaLTC2=dt.LTC_FLOAT_2):(s.rectAreaLTC1=dt.LTC_HALF_1,s.rectAreaLTC2=dt.LTC_HALF_2)),s.ambient[0]=h,s.ambient[1]=d,s.ambient[2]=p;const O=s.hash;(O.directionalLength!==m||O.pointLength!==g||O.spotLength!==b||O.rectAreaLength!==y||O.hemiLength!==v||O.numDirectionalShadows!==w||O.numPointShadows!==E||O.numSpotShadows!==T||O.numSpotMaps!==I||O.numLightProbes!==$)&&(s.directional.length=m,s.spot.length=b,s.rectArea.length=y,s.point.length=g,s.hemi.length=v,s.directionalShadow.length=w,s.directionalShadowMap.length=w,s.pointShadow.length=E,s.pointShadowMap.length=E,s.spotShadow.length=T,s.spotShadowMap.length=T,s.directionalShadowMatrix.length=w,s.pointShadowMatrix.length=E,s.spotLightMatrix.length=T+I-M,s.spotLightMap.length=I,s.numSpotLightShadowsWithMaps=M,s.numLightProbes=$,O.directionalLength=m,O.pointLength=g,O.spotLength=b,O.rectAreaLength=y,O.hemiLength=v,O.numDirectionalShadows=w,O.numPointShadows=E,O.numSpotShadows=T,O.numSpotMaps=I,O.numLightProbes=$,s.version=Y0e++)}function l(u,h){let d=0,p=0,m=0,g=0,b=0;const y=h.matrixWorldInverse;for(let v=0,w=u.length;v<w;v++){const E=u[v];if(E.isDirectionalLight){const T=s.directional[d];T.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(y),d++}else if(E.isSpotLight){const T=s.spot[m];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(y),T.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(y),m++}else if(E.isRectAreaLight){const T=s.rectArea[g];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(y),o.identity(),i.copy(E.matrixWorld),i.premultiply(y),o.extractRotation(i),T.halfWidth.set(E.width*.5,0,0),T.halfHeight.set(0,E.height*.5,0),T.halfWidth.applyMatrix4(o),T.halfHeight.applyMatrix4(o),g++}else if(E.isPointLight){const T=s.point[p];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(y),p++}else if(E.isHemisphereLight){const T=s.hemi[b];T.direction.setFromMatrixPosition(E.matrixWorld),T.direction.transformDirection(y),b++}}}return{setup:a,setupView:l,state:s}}function qk(n){const e=new Q0e(n),t=[],s=[];function r(h){u.camera=h,t.length=0,s.length=0}function i(h){t.push(h)}function o(h){s.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const u={lightsArray:t,shadowsArray:s,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:u,setupLights:a,setupLightsView:l,pushLight:i,pushShadow:o}}function J0e(n){let e=new WeakMap;function t(r,i=0){const o=e.get(r);let a;return o===void 0?(a=new qk(n),e.set(r,[a])):i>=o.length?(a=new qk(n),o.push(a)):a=o[i],a}function s(){e=new WeakMap}return{get:t,dispose:s}}const exe=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,txe=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function nxe(n,e,t){let s=new RI;const r=new Fn,i=new Fn,o=new gs,a=new Cpe({depthPacking:Ofe}),l=new Ipe,u={},h=t.maxTextureSize,d={[fu]:xi,[xi]:fu,[Ha]:Ha},p=new pu({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Fn},radius:{value:4}},vertexShader:exe,fragmentShader:txe}),m=p.clone();m.defines.HORIZONTAL_PASS=1;const g=new Qc;g.setAttribute("position",new ha(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new ia(g,p),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=d3;let v=this.type;this.render=function(M,$,O){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||M.length===0)return;const k=n.getRenderTarget(),N=n.getActiveCubeFace(),A=n.getActiveMipmapLevel(),B=n.state;B.setBlending(Ql),B.buffers.color.setClear(1,1,1,1),B.buffers.depth.setTest(!0),B.setScissorTest(!1);const W=v!==Ua&&this.type===Ua,K=v===Ua&&this.type!==Ua;for(let q=0,Y=M.length;q<Y;q++){const J=M[q],G=J.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",J,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;r.copy(G.mapSize);const ee=G.getFrameExtents();if(r.multiply(ee),i.copy(G.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(i.x=Math.floor(h/ee.x),r.x=i.x*ee.x,G.mapSize.x=i.x),r.y>h&&(i.y=Math.floor(h/ee.y),r.y=i.y*ee.y,G.mapSize.y=i.y)),G.map===null||W===!0||K===!0){const j=this.type!==Ua?{minFilter:Mo,magFilter:Mo}:{};G.map!==null&&G.map.dispose(),G.map=new Oc(r.x,r.y,j),G.map.texture.name=J.name+".shadowMap",G.camera.updateProjectionMatrix()}n.setRenderTarget(G.map),n.clear();const te=G.getViewportCount();for(let j=0;j<te;j++){const se=G.getViewport(j);o.set(i.x*se.x,i.y*se.y,i.x*se.z,i.y*se.w),B.viewport(o),G.updateMatrices(J,j),s=G.getFrustum(),T($,O,G.camera,J,this.type)}G.isPointLightShadow!==!0&&this.type===Ua&&w(G,O),G.needsUpdate=!1}v=this.type,y.needsUpdate=!1,n.setRenderTarget(k,N,A)};function w(M,$){const O=e.update(b);p.defines.VSM_SAMPLES!==M.blurSamples&&(p.defines.VSM_SAMPLES=M.blurSamples,m.defines.VSM_SAMPLES=M.blurSamples,p.needsUpdate=!0,m.needsUpdate=!0),M.mapPass===null&&(M.mapPass=new Oc(r.x,r.y)),p.uniforms.shadow_pass.value=M.map.texture,p.uniforms.resolution.value=M.mapSize,p.uniforms.radius.value=M.radius,n.setRenderTarget(M.mapPass),n.clear(),n.renderBufferDirect($,null,O,p,b,null),m.uniforms.shadow_pass.value=M.mapPass.texture,m.uniforms.resolution.value=M.mapSize,m.uniforms.radius.value=M.radius,n.setRenderTarget(M.map),n.clear(),n.renderBufferDirect($,null,O,m,b,null)}function E(M,$,O,k){let N=null;const A=O.isPointLight===!0?M.customDistanceMaterial:M.customDepthMaterial;if(A!==void 0)N=A;else if(N=O.isPointLight===!0?l:a,n.localClippingEnabled&&$.clipShadows===!0&&Array.isArray($.clippingPlanes)&&$.clippingPlanes.length!==0||$.displacementMap&&$.displacementScale!==0||$.alphaMap&&$.alphaTest>0||$.map&&$.alphaTest>0){const B=N.uuid,W=$.uuid;let K=u[B];K===void 0&&(K={},u[B]=K);let q=K[W];q===void 0&&(q=N.clone(),K[W]=q,$.addEventListener("dispose",I)),N=q}if(N.visible=$.visible,N.wireframe=$.wireframe,k===Ua?N.side=$.shadowSide!==null?$.shadowSide:$.side:N.side=$.shadowSide!==null?$.shadowSide:d[$.side],N.alphaMap=$.alphaMap,N.alphaTest=$.alphaTest,N.map=$.map,N.clipShadows=$.clipShadows,N.clippingPlanes=$.clippingPlanes,N.clipIntersection=$.clipIntersection,N.displacementMap=$.displacementMap,N.displacementScale=$.displacementScale,N.displacementBias=$.displacementBias,N.wireframeLinewidth=$.wireframeLinewidth,N.linewidth=$.linewidth,O.isPointLight===!0&&N.isMeshDistanceMaterial===!0){const B=n.properties.get(N);B.light=O}return N}function T(M,$,O,k,N){if(M.visible===!1)return;if(M.layers.test($.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&N===Ua)&&(!M.frustumCulled||s.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,M.matrixWorld);const W=e.update(M),K=M.material;if(Array.isArray(K)){const q=W.groups;for(let Y=0,J=q.length;Y<J;Y++){const G=q[Y],ee=K[G.materialIndex];if(ee&&ee.visible){const te=E(M,ee,k,N);M.onBeforeShadow(n,M,$,O,W,te,G),n.renderBufferDirect(O,null,W,te,M,G),M.onAfterShadow(n,M,$,O,W,te,G)}}}else if(K.visible){const q=E(M,K,k,N);M.onBeforeShadow(n,M,$,O,W,q,null),n.renderBufferDirect(O,null,W,q,M,null),M.onAfterShadow(n,M,$,O,W,q,null)}}const B=M.children;for(let W=0,K=B.length;W<K;W++)T(B[W],$,O,k,N)}function I(M){M.target.removeEventListener("dispose",I);for(const O in u){const k=u[O],N=M.target.uuid;N in k&&(k[N].dispose(),delete k[N])}}}const sxe={[G_]:H_,[j_]:K_,[X_]:Y_,[pd]:q_,[H_]:G_,[K_]:j_,[Y_]:X_,[q_]:pd};function rxe(n,e){function t(){let ge=!1;const st=new gs;let Pe=null;const ze=new gs(0,0,0,0);return{setMask:function(ct){Pe!==ct&&!ge&&(n.colorMask(ct,ct,ct,ct),Pe=ct)},setLocked:function(ct){ge=ct},setClear:function(ct,ht,Bt,On,ps){ps===!0&&(ct*=On,ht*=On,Bt*=On),st.set(ct,ht,Bt,On),ze.equals(st)===!1&&(n.clearColor(ct,ht,Bt,On),ze.copy(st))},reset:function(){ge=!1,Pe=null,ze.set(-1,0,0,0)}}}function s(){let ge=!1,st=!1,Pe=null,ze=null,ct=null;return{setReversed:function(ht){if(st!==ht){const Bt=e.get("EXT_clip_control");st?Bt.clipControlEXT(Bt.LOWER_LEFT_EXT,Bt.ZERO_TO_ONE_EXT):Bt.clipControlEXT(Bt.LOWER_LEFT_EXT,Bt.NEGATIVE_ONE_TO_ONE_EXT);const On=ct;ct=null,this.setClear(On)}st=ht},getReversed:function(){return st},setTest:function(ht){ht?Te(n.DEPTH_TEST):De(n.DEPTH_TEST)},setMask:function(ht){Pe!==ht&&!ge&&(n.depthMask(ht),Pe=ht)},setFunc:function(ht){if(st&&(ht=sxe[ht]),ze!==ht){switch(ht){case G_:n.depthFunc(n.NEVER);break;case H_:n.depthFunc(n.ALWAYS);break;case j_:n.depthFunc(n.LESS);break;case pd:n.depthFunc(n.LEQUAL);break;case X_:n.depthFunc(n.EQUAL);break;case q_:n.depthFunc(n.GEQUAL);break;case K_:n.depthFunc(n.GREATER);break;case Y_:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}ze=ht}},setLocked:function(ht){ge=ht},setClear:function(ht){ct!==ht&&(st&&(ht=1-ht),n.clearDepth(ht),ct=ht)},reset:function(){ge=!1,Pe=null,ze=null,ct=null,st=!1}}}function r(){let ge=!1,st=null,Pe=null,ze=null,ct=null,ht=null,Bt=null,On=null,ps=null;return{setTest:function(fn){ge||(fn?Te(n.STENCIL_TEST):De(n.STENCIL_TEST))},setMask:function(fn){st!==fn&&!ge&&(n.stencilMask(fn),st=fn)},setFunc:function(fn,Us,gr){(Pe!==fn||ze!==Us||ct!==gr)&&(n.stencilFunc(fn,Us,gr),Pe=fn,ze=Us,ct=gr)},setOp:function(fn,Us,gr){(ht!==fn||Bt!==Us||On!==gr)&&(n.stencilOp(fn,Us,gr),ht=fn,Bt=Us,On=gr)},setLocked:function(fn){ge=fn},setClear:function(fn){ps!==fn&&(n.clearStencil(fn),ps=fn)},reset:function(){ge=!1,st=null,Pe=null,ze=null,ct=null,ht=null,Bt=null,On=null,ps=null}}}const i=new t,o=new s,a=new r,l=new WeakMap,u=new WeakMap;let h={},d={},p=new WeakMap,m=[],g=null,b=!1,y=null,v=null,w=null,E=null,T=null,I=null,M=null,$=new kn(0,0,0),O=0,k=!1,N=null,A=null,B=null,W=null,K=null;const q=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Y=!1,J=0;const G=n.getParameter(n.VERSION);G.indexOf("WebGL")!==-1?(J=parseFloat(/^WebGL (\d)/.exec(G)[1]),Y=J>=1):G.indexOf("OpenGL ES")!==-1&&(J=parseFloat(/^OpenGL ES (\d)/.exec(G)[1]),Y=J>=2);let ee=null,te={};const j=n.getParameter(n.SCISSOR_BOX),se=n.getParameter(n.VIEWPORT),be=new gs().fromArray(j),ae=new gs().fromArray(se);function de(ge,st,Pe,ze){const ct=new Uint8Array(4),ht=n.createTexture();n.bindTexture(ge,ht),n.texParameteri(ge,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(ge,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let Bt=0;Bt<Pe;Bt++)ge===n.TEXTURE_3D||ge===n.TEXTURE_2D_ARRAY?n.texImage3D(st,0,n.RGBA,1,1,ze,0,n.RGBA,n.UNSIGNED_BYTE,ct):n.texImage2D(st+Bt,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,ct);return ht}const Se={};Se[n.TEXTURE_2D]=de(n.TEXTURE_2D,n.TEXTURE_2D,1),Se[n.TEXTURE_CUBE_MAP]=de(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),Se[n.TEXTURE_2D_ARRAY]=de(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),Se[n.TEXTURE_3D]=de(n.TEXTURE_3D,n.TEXTURE_3D,1,1),i.setClear(0,0,0,1),o.setClear(1),a.setClear(0),Te(n.DEPTH_TEST),o.setFunc(pd),bt(!1),_t(QR),Te(n.CULL_FACE),ie(Ql);function Te(ge){h[ge]!==!0&&(n.enable(ge),h[ge]=!0)}function De(ge){h[ge]!==!1&&(n.disable(ge),h[ge]=!1)}function Ue(ge,st){return d[ge]!==st?(n.bindFramebuffer(ge,st),d[ge]=st,ge===n.DRAW_FRAMEBUFFER&&(d[n.FRAMEBUFFER]=st),ge===n.FRAMEBUFFER&&(d[n.DRAW_FRAMEBUFFER]=st),!0):!1}function We(ge,st){let Pe=m,ze=!1;if(ge){Pe=p.get(st),Pe===void 0&&(Pe=[],p.set(st,Pe));const ct=ge.textures;if(Pe.length!==ct.length||Pe[0]!==n.COLOR_ATTACHMENT0){for(let ht=0,Bt=ct.length;ht<Bt;ht++)Pe[ht]=n.COLOR_ATTACHMENT0+ht;Pe.length=ct.length,ze=!0}}else Pe[0]!==n.BACK&&(Pe[0]=n.BACK,ze=!0);ze&&n.drawBuffers(Pe)}function lt(ge){return g!==ge?(n.useProgram(ge),g=ge,!0):!1}const Ft={[uc]:n.FUNC_ADD,[ufe]:n.FUNC_SUBTRACT,[cfe]:n.FUNC_REVERSE_SUBTRACT};Ft[hfe]=n.MIN,Ft[dfe]=n.MAX;const Je={[ffe]:n.ZERO,[pfe]:n.ONE,[mfe]:n.SRC_COLOR,[V_]:n.SRC_ALPHA,[wfe]:n.SRC_ALPHA_SATURATE,[vfe]:n.DST_COLOR,[yfe]:n.DST_ALPHA,[gfe]:n.ONE_MINUS_SRC_COLOR,[W_]:n.ONE_MINUS_SRC_ALPHA,[bfe]:n.ONE_MINUS_DST_COLOR,[xfe]:n.ONE_MINUS_DST_ALPHA,[Sfe]:n.CONSTANT_COLOR,[_fe]:n.ONE_MINUS_CONSTANT_COLOR,[Tfe]:n.CONSTANT_ALPHA,[Efe]:n.ONE_MINUS_CONSTANT_ALPHA};function ie(ge,st,Pe,ze,ct,ht,Bt,On,ps,fn){if(ge===Ql){b===!0&&(De(n.BLEND),b=!1);return}if(b===!1&&(Te(n.BLEND),b=!0),ge!==lfe){if(ge!==y||fn!==k){if((v!==uc||T!==uc)&&(n.blendEquation(n.FUNC_ADD),v=uc,T=uc),fn)switch(ge){case Qh:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case JR:n.blendFunc(n.ONE,n.ONE);break;case ek:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case tk:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",ge);break}else switch(ge){case Qh:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case JR:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case ek:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case tk:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",ge);break}w=null,E=null,I=null,M=null,$.set(0,0,0),O=0,y=ge,k=fn}return}ct=ct||st,ht=ht||Pe,Bt=Bt||ze,(st!==v||ct!==T)&&(n.blendEquationSeparate(Ft[st],Ft[ct]),v=st,T=ct),(Pe!==w||ze!==E||ht!==I||Bt!==M)&&(n.blendFuncSeparate(Je[Pe],Je[ze],Je[ht],Je[Bt]),w=Pe,E=ze,I=ht,M=Bt),(On.equals($)===!1||ps!==O)&&(n.blendColor(On.r,On.g,On.b,ps),$.copy(On),O=ps),y=ge,k=!1}function Kt(ge,st){ge.side===Ha?De(n.CULL_FACE):Te(n.CULL_FACE);let Pe=ge.side===xi;st&&(Pe=!Pe),bt(Pe),ge.blending===Qh&&ge.transparent===!1?ie(Ql):ie(ge.blending,ge.blendEquation,ge.blendSrc,ge.blendDst,ge.blendEquationAlpha,ge.blendSrcAlpha,ge.blendDstAlpha,ge.blendColor,ge.blendAlpha,ge.premultipliedAlpha),o.setFunc(ge.depthFunc),o.setTest(ge.depthTest),o.setMask(ge.depthWrite),i.setMask(ge.colorWrite);const ze=ge.stencilWrite;a.setTest(ze),ze&&(a.setMask(ge.stencilWriteMask),a.setFunc(ge.stencilFunc,ge.stencilRef,ge.stencilFuncMask),a.setOp(ge.stencilFail,ge.stencilZFail,ge.stencilZPass)),nn(ge.polygonOffset,ge.polygonOffsetFactor,ge.polygonOffsetUnits),ge.alphaToCoverage===!0?Te(n.SAMPLE_ALPHA_TO_COVERAGE):De(n.SAMPLE_ALPHA_TO_COVERAGE)}function bt(ge){N!==ge&&(ge?n.frontFace(n.CW):n.frontFace(n.CCW),N=ge)}function _t(ge){ge!==ife?(Te(n.CULL_FACE),ge!==A&&(ge===QR?n.cullFace(n.BACK):ge===ofe?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):De(n.CULL_FACE),A=ge}function tt(ge){ge!==B&&(Y&&n.lineWidth(ge),B=ge)}function nn(ge,st,Pe){ge?(Te(n.POLYGON_OFFSET_FILL),(W!==st||K!==Pe)&&(n.polygonOffset(st,Pe),W=st,K=Pe)):De(n.POLYGON_OFFSET_FILL)}function nt(ge){ge?Te(n.SCISSOR_TEST):De(n.SCISSOR_TEST)}function Z(ge){ge===void 0&&(ge=n.TEXTURE0+q-1),ee!==ge&&(n.activeTexture(ge),ee=ge)}function V(ge,st,Pe){Pe===void 0&&(ee===null?Pe=n.TEXTURE0+q-1:Pe=ee);let ze=te[Pe];ze===void 0&&(ze={type:void 0,texture:void 0},te[Pe]=ze),(ze.type!==ge||ze.texture!==st)&&(ee!==Pe&&(n.activeTexture(Pe),ee=Pe),n.bindTexture(ge,st||Se[ge]),ze.type=ge,ze.texture=st)}function Ie(){const ge=te[ee];ge!==void 0&&ge.type!==void 0&&(n.bindTexture(ge.type,null),ge.type=void 0,ge.texture=void 0)}function Oe(){try{n.compressedTexImage2D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function Be(){try{n.compressedTexImage3D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function Le(){try{n.texSubImage2D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function gt(){try{n.texSubImage3D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function et(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function ut(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function Zt(){try{n.texStorage2D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function Xe(){try{n.texStorage3D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function yt(){try{n.texImage2D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function Rt(){try{n.texImage3D.apply(n,arguments)}catch(ge){console.error("THREE.WebGLState:",ge)}}function Ut(ge){be.equals(ge)===!1&&(n.scissor(ge.x,ge.y,ge.z,ge.w),be.copy(ge))}function xt(ge){ae.equals(ge)===!1&&(n.viewport(ge.x,ge.y,ge.z,ge.w),ae.copy(ge))}function ln(ge,st){let Pe=u.get(st);Pe===void 0&&(Pe=new WeakMap,u.set(st,Pe));let ze=Pe.get(ge);ze===void 0&&(ze=n.getUniformBlockIndex(st,ge.name),Pe.set(ge,ze))}function Xt(ge,st){const ze=u.get(st).get(ge);l.get(st)!==ze&&(n.uniformBlockBinding(st,ze,ge.__bindingPointIndex),l.set(st,ze))}function En(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),o.setReversed(!1),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),h={},ee=null,te={},d={},p=new WeakMap,m=[],g=null,b=!1,y=null,v=null,w=null,E=null,T=null,I=null,M=null,$=new kn(0,0,0),O=0,k=!1,N=null,A=null,B=null,W=null,K=null,be.set(0,0,n.canvas.width,n.canvas.height),ae.set(0,0,n.canvas.width,n.canvas.height),i.reset(),o.reset(),a.reset()}return{buffers:{color:i,depth:o,stencil:a},enable:Te,disable:De,bindFramebuffer:Ue,drawBuffers:We,useProgram:lt,setBlending:ie,setMaterial:Kt,setFlipSided:bt,setCullFace:_t,setLineWidth:tt,setPolygonOffset:nn,setScissorTest:nt,activeTexture:Z,bindTexture:V,unbindTexture:Ie,compressedTexImage2D:Oe,compressedTexImage3D:Be,texImage2D:yt,texImage3D:Rt,updateUBOMapping:ln,uniformBlockBinding:Xt,texStorage2D:Zt,texStorage3D:Xe,texSubImage2D:Le,texSubImage3D:gt,compressedTexSubImage2D:et,compressedTexSubImage3D:ut,scissor:Ut,viewport:xt,reset:En}}function ixe(n,e,t,s,r,i,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),u=new Fn,h=new WeakMap;let d;const p=new WeakMap;let m=!1;try{m=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(Z,V){return m?new OffscreenCanvas(Z,V):Ox("canvas")}function b(Z,V,Ie){let Oe=1;const Be=nt(Z);if((Be.width>Ie||Be.height>Ie)&&(Oe=Ie/Math.max(Be.width,Be.height)),Oe<1)if(typeof HTMLImageElement<"u"&&Z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&Z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&Z instanceof ImageBitmap||typeof VideoFrame<"u"&&Z instanceof VideoFrame){const Le=Math.floor(Oe*Be.width),gt=Math.floor(Oe*Be.height);d===void 0&&(d=g(Le,gt));const et=V?g(Le,gt):d;return et.width=Le,et.height=gt,et.getContext("2d").drawImage(Z,0,0,Le,gt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+Be.width+"x"+Be.height+") to ("+Le+"x"+gt+")."),et}else return"data"in Z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+Be.width+"x"+Be.height+")."),Z;return Z}function y(Z){return Z.generateMipmaps}function v(Z){n.generateMipmap(Z)}function w(Z){return Z.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:Z.isWebGL3DRenderTarget?n.TEXTURE_3D:Z.isWebGLArrayRenderTarget||Z.isCompressedArrayTexture?n.TEXTURE_2D_ARRAY:n.TEXTURE_2D}function E(Z,V,Ie,Oe,Be=!1){if(Z!==null){if(n[Z]!==void 0)return n[Z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+Z+"'")}let Le=V;if(V===n.RED&&(Ie===n.FLOAT&&(Le=n.R32F),Ie===n.HALF_FLOAT&&(Le=n.R16F),Ie===n.UNSIGNED_BYTE&&(Le=n.R8)),V===n.RED_INTEGER&&(Ie===n.UNSIGNED_BYTE&&(Le=n.R8UI),Ie===n.UNSIGNED_SHORT&&(Le=n.R16UI),Ie===n.UNSIGNED_INT&&(Le=n.R32UI),Ie===n.BYTE&&(Le=n.R8I),Ie===n.SHORT&&(Le=n.R16I),Ie===n.INT&&(Le=n.R32I)),V===n.RG&&(Ie===n.FLOAT&&(Le=n.RG32F),Ie===n.HALF_FLOAT&&(Le=n.RG16F),Ie===n.UNSIGNED_BYTE&&(Le=n.RG8)),V===n.RG_INTEGER&&(Ie===n.UNSIGNED_BYTE&&(Le=n.RG8UI),Ie===n.UNSIGNED_SHORT&&(Le=n.RG16UI),Ie===n.UNSIGNED_INT&&(Le=n.RG32UI),Ie===n.BYTE&&(Le=n.RG8I),Ie===n.SHORT&&(Le=n.RG16I),Ie===n.INT&&(Le=n.RG32I)),V===n.RGB_INTEGER&&(Ie===n.UNSIGNED_BYTE&&(Le=n.RGB8UI),Ie===n.UNSIGNED_SHORT&&(Le=n.RGB16UI),Ie===n.UNSIGNED_INT&&(Le=n.RGB32UI),Ie===n.BYTE&&(Le=n.RGB8I),Ie===n.SHORT&&(Le=n.RGB16I),Ie===n.INT&&(Le=n.RGB32I)),V===n.RGBA_INTEGER&&(Ie===n.UNSIGNED_BYTE&&(Le=n.RGBA8UI),Ie===n.UNSIGNED_SHORT&&(Le=n.RGBA16UI),Ie===n.UNSIGNED_INT&&(Le=n.RGBA32UI),Ie===n.BYTE&&(Le=n.RGBA8I),Ie===n.SHORT&&(Le=n.RGBA16I),Ie===n.INT&&(Le=n.RGBA32I)),V===n.RGB&&Ie===n.UNSIGNED_INT_5_9_9_9_REV&&(Le=n.RGB9_E5),V===n.RGBA){const gt=Be?Fx:Rn.getTransfer(Oe);Ie===n.FLOAT&&(Le=n.RGBA32F),Ie===n.HALF_FLOAT&&(Le=n.RGBA16F),Ie===n.UNSIGNED_BYTE&&(Le=gt===Vn?n.SRGB8_ALPHA8:n.RGBA8),Ie===n.UNSIGNED_SHORT_4_4_4_4&&(Le=n.RGBA4),Ie===n.UNSIGNED_SHORT_5_5_5_1&&(Le=n.RGB5_A1)}return(Le===n.R16F||Le===n.R32F||Le===n.RG16F||Le===n.RG32F||Le===n.RGBA16F||Le===n.RGBA32F)&&e.get("EXT_color_buffer_float"),Le}function T(Z,V){let Ie;return Z?V===null||V===Pc||V===yd?Ie=n.DEPTH24_STENCIL8:V===ja?Ie=n.DEPTH32F_STENCIL8:V===em&&(Ie=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):V===null||V===Pc||V===yd?Ie=n.DEPTH_COMPONENT24:V===ja?Ie=n.DEPTH_COMPONENT32F:V===em&&(Ie=n.DEPTH_COMPONENT16),Ie}function I(Z,V){return y(Z)===!0||Z.isFramebufferTexture&&Z.minFilter!==Mo&&Z.minFilter!==ra?Math.log2(Math.max(V.width,V.height))+1:Z.mipmaps!==void 0&&Z.mipmaps.length>0?Z.mipmaps.length:Z.isCompressedTexture&&Array.isArray(Z.image)?V.mipmaps.length:1}function M(Z){const V=Z.target;V.removeEventListener("dispose",M),O(V),V.isVideoTexture&&h.delete(V)}function $(Z){const V=Z.target;V.removeEventListener("dispose",$),N(V)}function O(Z){const V=s.get(Z);if(V.__webglInit===void 0)return;const Ie=Z.source,Oe=p.get(Ie);if(Oe){const Be=Oe[V.__cacheKey];Be.usedTimes--,Be.usedTimes===0&&k(Z),Object.keys(Oe).length===0&&p.delete(Ie)}s.remove(Z)}function k(Z){const V=s.get(Z);n.deleteTexture(V.__webglTexture);const Ie=Z.source,Oe=p.get(Ie);delete Oe[V.__cacheKey],o.memory.textures--}function N(Z){const V=s.get(Z);if(Z.depthTexture&&(Z.depthTexture.dispose(),s.remove(Z.depthTexture)),Z.isWebGLCubeRenderTarget)for(let Oe=0;Oe<6;Oe++){if(Array.isArray(V.__webglFramebuffer[Oe]))for(let Be=0;Be<V.__webglFramebuffer[Oe].length;Be++)n.deleteFramebuffer(V.__webglFramebuffer[Oe][Be]);else n.deleteFramebuffer(V.__webglFramebuffer[Oe]);V.__webglDepthbuffer&&n.deleteRenderbuffer(V.__webglDepthbuffer[Oe])}else{if(Array.isArray(V.__webglFramebuffer))for(let Oe=0;Oe<V.__webglFramebuffer.length;Oe++)n.deleteFramebuffer(V.__webglFramebuffer[Oe]);else n.deleteFramebuffer(V.__webglFramebuffer);if(V.__webglDepthbuffer&&n.deleteRenderbuffer(V.__webglDepthbuffer),V.__webglMultisampledFramebuffer&&n.deleteFramebuffer(V.__webglMultisampledFramebuffer),V.__webglColorRenderbuffer)for(let Oe=0;Oe<V.__webglColorRenderbuffer.length;Oe++)V.__webglColorRenderbuffer[Oe]&&n.deleteRenderbuffer(V.__webglColorRenderbuffer[Oe]);V.__webglDepthRenderbuffer&&n.deleteRenderbuffer(V.__webglDepthRenderbuffer)}const Ie=Z.textures;for(let Oe=0,Be=Ie.length;Oe<Be;Oe++){const Le=s.get(Ie[Oe]);Le.__webglTexture&&(n.deleteTexture(Le.__webglTexture),o.memory.textures--),s.remove(Ie[Oe])}s.remove(Z)}let A=0;function B(){A=0}function W(){const Z=A;return Z>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+Z+" texture units while this GPU supports only "+r.maxTextures),A+=1,Z}function K(Z){const V=[];return V.push(Z.wrapS),V.push(Z.wrapT),V.push(Z.wrapR||0),V.push(Z.magFilter),V.push(Z.minFilter),V.push(Z.anisotropy),V.push(Z.internalFormat),V.push(Z.format),V.push(Z.type),V.push(Z.generateMipmaps),V.push(Z.premultiplyAlpha),V.push(Z.flipY),V.push(Z.unpackAlignment),V.push(Z.colorSpace),V.join()}function q(Z,V){const Ie=s.get(Z);if(Z.isVideoTexture&&tt(Z),Z.isRenderTargetTexture===!1&&Z.version>0&&Ie.__version!==Z.version){const Oe=Z.image;if(Oe===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Oe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ae(Ie,Z,V);return}}t.bindTexture(n.TEXTURE_2D,Ie.__webglTexture,n.TEXTURE0+V)}function Y(Z,V){const Ie=s.get(Z);if(Z.version>0&&Ie.__version!==Z.version){ae(Ie,Z,V);return}t.bindTexture(n.TEXTURE_2D_ARRAY,Ie.__webglTexture,n.TEXTURE0+V)}function J(Z,V){const Ie=s.get(Z);if(Z.version>0&&Ie.__version!==Z.version){ae(Ie,Z,V);return}t.bindTexture(n.TEXTURE_3D,Ie.__webglTexture,n.TEXTURE0+V)}function G(Z,V){const Ie=s.get(Z);if(Z.version>0&&Ie.__version!==Z.version){de(Ie,Z,V);return}t.bindTexture(n.TEXTURE_CUBE_MAP,Ie.__webglTexture,n.TEXTURE0+V)}const ee={[J_]:n.REPEAT,[fc]:n.CLAMP_TO_EDGE,[eT]:n.MIRRORED_REPEAT},te={[Mo]:n.NEAREST,[Ffe]:n.NEAREST_MIPMAP_NEAREST,[b0]:n.NEAREST_MIPMAP_LINEAR,[ra]:n.LINEAR,[pS]:n.LINEAR_MIPMAP_NEAREST,[pc]:n.LINEAR_MIPMAP_LINEAR},j={[Ufe]:n.NEVER,[Hfe]:n.ALWAYS,[zfe]:n.LESS,[E3]:n.LEQUAL,[Bfe]:n.EQUAL,[Gfe]:n.GEQUAL,[Vfe]:n.GREATER,[Wfe]:n.NOTEQUAL};function se(Z,V){if(V.type===ja&&e.has("OES_texture_float_linear")===!1&&(V.magFilter===ra||V.magFilter===pS||V.magFilter===b0||V.magFilter===pc||V.minFilter===ra||V.minFilter===pS||V.minFilter===b0||V.minFilter===pc)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(Z,n.TEXTURE_WRAP_S,ee[V.wrapS]),n.texParameteri(Z,n.TEXTURE_WRAP_T,ee[V.wrapT]),(Z===n.TEXTURE_3D||Z===n.TEXTURE_2D_ARRAY)&&n.texParameteri(Z,n.TEXTURE_WRAP_R,ee[V.wrapR]),n.texParameteri(Z,n.TEXTURE_MAG_FILTER,te[V.magFilter]),n.texParameteri(Z,n.TEXTURE_MIN_FILTER,te[V.minFilter]),V.compareFunction&&(n.texParameteri(Z,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(Z,n.TEXTURE_COMPARE_FUNC,j[V.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(V.magFilter===Mo||V.minFilter!==b0&&V.minFilter!==pc||V.type===ja&&e.has("OES_texture_float_linear")===!1)return;if(V.anisotropy>1||s.get(V).__currentAnisotropy){const Ie=e.get("EXT_texture_filter_anisotropic");n.texParameterf(Z,Ie.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(V.anisotropy,r.getMaxAnisotropy())),s.get(V).__currentAnisotropy=V.anisotropy}}}function be(Z,V){let Ie=!1;Z.__webglInit===void 0&&(Z.__webglInit=!0,V.addEventListener("dispose",M));const Oe=V.source;let Be=p.get(Oe);Be===void 0&&(Be={},p.set(Oe,Be));const Le=K(V);if(Le!==Z.__cacheKey){Be[Le]===void 0&&(Be[Le]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,Ie=!0),Be[Le].usedTimes++;const gt=Be[Z.__cacheKey];gt!==void 0&&(Be[Z.__cacheKey].usedTimes--,gt.usedTimes===0&&k(V)),Z.__cacheKey=Le,Z.__webglTexture=Be[Le].texture}return Ie}function ae(Z,V,Ie){let Oe=n.TEXTURE_2D;(V.isDataArrayTexture||V.isCompressedArrayTexture)&&(Oe=n.TEXTURE_2D_ARRAY),V.isData3DTexture&&(Oe=n.TEXTURE_3D);const Be=be(Z,V),Le=V.source;t.bindTexture(Oe,Z.__webglTexture,n.TEXTURE0+Ie);const gt=s.get(Le);if(Le.version!==gt.__version||Be===!0){t.activeTexture(n.TEXTURE0+Ie);const et=Rn.getPrimaries(Rn.workingColorSpace),ut=V.colorSpace===Hl?null:Rn.getPrimaries(V.colorSpace),Zt=V.colorSpace===Hl||et===ut?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,V.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,V.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,V.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Zt);let Xe=b(V.image,!1,r.maxTextureSize);Xe=nn(V,Xe);const yt=i.convert(V.format,V.colorSpace),Rt=i.convert(V.type);let Ut=E(V.internalFormat,yt,Rt,V.colorSpace,V.isVideoTexture);se(Oe,V);let xt;const ln=V.mipmaps,Xt=V.isVideoTexture!==!0,En=gt.__version===void 0||Be===!0,ge=Le.dataReady,st=I(V,Xe);if(V.isDepthTexture)Ut=T(V.format===xd,V.type),En&&(Xt?t.texStorage2D(n.TEXTURE_2D,1,Ut,Xe.width,Xe.height):t.texImage2D(n.TEXTURE_2D,0,Ut,Xe.width,Xe.height,0,yt,Rt,null));else if(V.isDataTexture)if(ln.length>0){Xt&&En&&t.texStorage2D(n.TEXTURE_2D,st,Ut,ln[0].width,ln[0].height);for(let Pe=0,ze=ln.length;Pe<ze;Pe++)xt=ln[Pe],Xt?ge&&t.texSubImage2D(n.TEXTURE_2D,Pe,0,0,xt.width,xt.height,yt,Rt,xt.data):t.texImage2D(n.TEXTURE_2D,Pe,Ut,xt.width,xt.height,0,yt,Rt,xt.data);V.generateMipmaps=!1}else Xt?(En&&t.texStorage2D(n.TEXTURE_2D,st,Ut,Xe.width,Xe.height),ge&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,Xe.width,Xe.height,yt,Rt,Xe.data)):t.texImage2D(n.TEXTURE_2D,0,Ut,Xe.width,Xe.height,0,yt,Rt,Xe.data);else if(V.isCompressedTexture)if(V.isCompressedArrayTexture){Xt&&En&&t.texStorage3D(n.TEXTURE_2D_ARRAY,st,Ut,ln[0].width,ln[0].height,Xe.depth);for(let Pe=0,ze=ln.length;Pe<ze;Pe++)if(xt=ln[Pe],V.format!==Ao)if(yt!==null)if(Xt){if(ge)if(V.layerUpdates.size>0){const ct=Tk(xt.width,xt.height,V.format,V.type);for(const ht of V.layerUpdates){const Bt=xt.data.subarray(ht*ct/xt.data.BYTES_PER_ELEMENT,(ht+1)*ct/xt.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,Pe,0,0,ht,xt.width,xt.height,1,yt,Bt)}V.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,Pe,0,0,0,xt.width,xt.height,Xe.depth,yt,xt.data)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,Pe,Ut,xt.width,xt.height,Xe.depth,0,xt.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else Xt?ge&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,Pe,0,0,0,xt.width,xt.height,Xe.depth,yt,Rt,xt.data):t.texImage3D(n.TEXTURE_2D_ARRAY,Pe,Ut,xt.width,xt.height,Xe.depth,0,yt,Rt,xt.data)}else{Xt&&En&&t.texStorage2D(n.TEXTURE_2D,st,Ut,ln[0].width,ln[0].height);for(let Pe=0,ze=ln.length;Pe<ze;Pe++)xt=ln[Pe],V.format!==Ao?yt!==null?Xt?ge&&t.compressedTexSubImage2D(n.TEXTURE_2D,Pe,0,0,xt.width,xt.height,yt,xt.data):t.compressedTexImage2D(n.TEXTURE_2D,Pe,Ut,xt.width,xt.height,0,xt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Xt?ge&&t.texSubImage2D(n.TEXTURE_2D,Pe,0,0,xt.width,xt.height,yt,Rt,xt.data):t.texImage2D(n.TEXTURE_2D,Pe,Ut,xt.width,xt.height,0,yt,Rt,xt.data)}else if(V.isDataArrayTexture)if(Xt){if(En&&t.texStorage3D(n.TEXTURE_2D_ARRAY,st,Ut,Xe.width,Xe.height,Xe.depth),ge)if(V.layerUpdates.size>0){const Pe=Tk(Xe.width,Xe.height,V.format,V.type);for(const ze of V.layerUpdates){const ct=Xe.data.subarray(ze*Pe/Xe.data.BYTES_PER_ELEMENT,(ze+1)*Pe/Xe.data.BYTES_PER_ELEMENT);t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,ze,Xe.width,Xe.height,1,yt,Rt,ct)}V.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,Xe.width,Xe.height,Xe.depth,yt,Rt,Xe.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,Ut,Xe.width,Xe.height,Xe.depth,0,yt,Rt,Xe.data);else if(V.isData3DTexture)Xt?(En&&t.texStorage3D(n.TEXTURE_3D,st,Ut,Xe.width,Xe.height,Xe.depth),ge&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,Xe.width,Xe.height,Xe.depth,yt,Rt,Xe.data)):t.texImage3D(n.TEXTURE_3D,0,Ut,Xe.width,Xe.height,Xe.depth,0,yt,Rt,Xe.data);else if(V.isFramebufferTexture){if(En)if(Xt)t.texStorage2D(n.TEXTURE_2D,st,Ut,Xe.width,Xe.height);else{let Pe=Xe.width,ze=Xe.height;for(let ct=0;ct<st;ct++)t.texImage2D(n.TEXTURE_2D,ct,Ut,Pe,ze,0,yt,Rt,null),Pe>>=1,ze>>=1}}else if(ln.length>0){if(Xt&&En){const Pe=nt(ln[0]);t.texStorage2D(n.TEXTURE_2D,st,Ut,Pe.width,Pe.height)}for(let Pe=0,ze=ln.length;Pe<ze;Pe++)xt=ln[Pe],Xt?ge&&t.texSubImage2D(n.TEXTURE_2D,Pe,0,0,yt,Rt,xt):t.texImage2D(n.TEXTURE_2D,Pe,Ut,yt,Rt,xt);V.generateMipmaps=!1}else if(Xt){if(En){const Pe=nt(Xe);t.texStorage2D(n.TEXTURE_2D,st,Ut,Pe.width,Pe.height)}ge&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,yt,Rt,Xe)}else t.texImage2D(n.TEXTURE_2D,0,Ut,yt,Rt,Xe);y(V)&&v(Oe),gt.__version=Le.version,V.onUpdate&&V.onUpdate(V)}Z.__version=V.version}function de(Z,V,Ie){if(V.image.length!==6)return;const Oe=be(Z,V),Be=V.source;t.bindTexture(n.TEXTURE_CUBE_MAP,Z.__webglTexture,n.TEXTURE0+Ie);const Le=s.get(Be);if(Be.version!==Le.__version||Oe===!0){t.activeTexture(n.TEXTURE0+Ie);const gt=Rn.getPrimaries(Rn.workingColorSpace),et=V.colorSpace===Hl?null:Rn.getPrimaries(V.colorSpace),ut=V.colorSpace===Hl||gt===et?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,V.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,V.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,V.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,ut);const Zt=V.isCompressedTexture||V.image[0].isCompressedTexture,Xe=V.image[0]&&V.image[0].isDataTexture,yt=[];for(let ze=0;ze<6;ze++)!Zt&&!Xe?yt[ze]=b(V.image[ze],!0,r.maxCubemapSize):yt[ze]=Xe?V.image[ze].image:V.image[ze],yt[ze]=nn(V,yt[ze]);const Rt=yt[0],Ut=i.convert(V.format,V.colorSpace),xt=i.convert(V.type),ln=E(V.internalFormat,Ut,xt,V.colorSpace),Xt=V.isVideoTexture!==!0,En=Le.__version===void 0||Oe===!0,ge=Be.dataReady;let st=I(V,Rt);se(n.TEXTURE_CUBE_MAP,V);let Pe;if(Zt){Xt&&En&&t.texStorage2D(n.TEXTURE_CUBE_MAP,st,ln,Rt.width,Rt.height);for(let ze=0;ze<6;ze++){Pe=yt[ze].mipmaps;for(let ct=0;ct<Pe.length;ct++){const ht=Pe[ct];V.format!==Ao?Ut!==null?Xt?ge&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,ct,0,0,ht.width,ht.height,Ut,ht.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,ct,ln,ht.width,ht.height,0,ht.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Xt?ge&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,ct,0,0,ht.width,ht.height,Ut,xt,ht.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,ct,ln,ht.width,ht.height,0,Ut,xt,ht.data)}}}else{if(Pe=V.mipmaps,Xt&&En){Pe.length>0&&st++;const ze=nt(yt[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,st,ln,ze.width,ze.height)}for(let ze=0;ze<6;ze++)if(Xe){Xt?ge&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,0,0,0,yt[ze].width,yt[ze].height,Ut,xt,yt[ze].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,0,ln,yt[ze].width,yt[ze].height,0,Ut,xt,yt[ze].data);for(let ct=0;ct<Pe.length;ct++){const Bt=Pe[ct].image[ze].image;Xt?ge&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,ct+1,0,0,Bt.width,Bt.height,Ut,xt,Bt.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,ct+1,ln,Bt.width,Bt.height,0,Ut,xt,Bt.data)}}else{Xt?ge&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,0,0,0,Ut,xt,yt[ze]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,0,ln,Ut,xt,yt[ze]);for(let ct=0;ct<Pe.length;ct++){const ht=Pe[ct];Xt?ge&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,ct+1,0,0,Ut,xt,ht.image[ze]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ze,ct+1,ln,Ut,xt,ht.image[ze])}}}y(V)&&v(n.TEXTURE_CUBE_MAP),Le.__version=Be.version,V.onUpdate&&V.onUpdate(V)}Z.__version=V.version}function Se(Z,V,Ie,Oe,Be,Le){const gt=i.convert(Ie.format,Ie.colorSpace),et=i.convert(Ie.type),ut=E(Ie.internalFormat,gt,et,Ie.colorSpace),Zt=s.get(V),Xe=s.get(Ie);if(Xe.__renderTarget=V,!Zt.__hasExternalTextures){const yt=Math.max(1,V.width>>Le),Rt=Math.max(1,V.height>>Le);Be===n.TEXTURE_3D||Be===n.TEXTURE_2D_ARRAY?t.texImage3D(Be,Le,ut,yt,Rt,V.depth,0,gt,et,null):t.texImage2D(Be,Le,ut,yt,Rt,0,gt,et,null)}t.bindFramebuffer(n.FRAMEBUFFER,Z),_t(V)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,Oe,Be,Xe.__webglTexture,0,bt(V)):(Be===n.TEXTURE_2D||Be>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&Be<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,Oe,Be,Xe.__webglTexture,Le),t.bindFramebuffer(n.FRAMEBUFFER,null)}function Te(Z,V,Ie){if(n.bindRenderbuffer(n.RENDERBUFFER,Z),V.depthBuffer){const Oe=V.depthTexture,Be=Oe&&Oe.isDepthTexture?Oe.type:null,Le=T(V.stencilBuffer,Be),gt=V.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,et=bt(V);_t(V)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,et,Le,V.width,V.height):Ie?n.renderbufferStorageMultisample(n.RENDERBUFFER,et,Le,V.width,V.height):n.renderbufferStorage(n.RENDERBUFFER,Le,V.width,V.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,gt,n.RENDERBUFFER,Z)}else{const Oe=V.textures;for(let Be=0;Be<Oe.length;Be++){const Le=Oe[Be],gt=i.convert(Le.format,Le.colorSpace),et=i.convert(Le.type),ut=E(Le.internalFormat,gt,et,Le.colorSpace),Zt=bt(V);Ie&&_t(V)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,Zt,ut,V.width,V.height):_t(V)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Zt,ut,V.width,V.height):n.renderbufferStorage(n.RENDERBUFFER,ut,V.width,V.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function De(Z,V){if(V&&V.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,Z),!(V.depthTexture&&V.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Oe=s.get(V.depthTexture);Oe.__renderTarget=V,(!Oe.__webglTexture||V.depthTexture.image.width!==V.width||V.depthTexture.image.height!==V.height)&&(V.depthTexture.image.width=V.width,V.depthTexture.image.height=V.height,V.depthTexture.needsUpdate=!0),q(V.depthTexture,0);const Be=Oe.__webglTexture,Le=bt(V);if(V.depthTexture.format===Jh)_t(V)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,Be,0,Le):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,Be,0);else if(V.depthTexture.format===xd)_t(V)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,Be,0,Le):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,Be,0);else throw new Error("Unknown depthTexture format")}function Ue(Z){const V=s.get(Z),Ie=Z.isWebGLCubeRenderTarget===!0;if(V.__boundDepthTexture!==Z.depthTexture){const Oe=Z.depthTexture;if(V.__depthDisposeCallback&&V.__depthDisposeCallback(),Oe){const Be=()=>{delete V.__boundDepthTexture,delete V.__depthDisposeCallback,Oe.removeEventListener("dispose",Be)};Oe.addEventListener("dispose",Be),V.__depthDisposeCallback=Be}V.__boundDepthTexture=Oe}if(Z.depthTexture&&!V.__autoAllocateDepthBuffer){if(Ie)throw new Error("target.depthTexture not supported in Cube render targets");De(V.__webglFramebuffer,Z)}else if(Ie){V.__webglDepthbuffer=[];for(let Oe=0;Oe<6;Oe++)if(t.bindFramebuffer(n.FRAMEBUFFER,V.__webglFramebuffer[Oe]),V.__webglDepthbuffer[Oe]===void 0)V.__webglDepthbuffer[Oe]=n.createRenderbuffer(),Te(V.__webglDepthbuffer[Oe],Z,!1);else{const Be=Z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Le=V.__webglDepthbuffer[Oe];n.bindRenderbuffer(n.RENDERBUFFER,Le),n.framebufferRenderbuffer(n.FRAMEBUFFER,Be,n.RENDERBUFFER,Le)}}else if(t.bindFramebuffer(n.FRAMEBUFFER,V.__webglFramebuffer),V.__webglDepthbuffer===void 0)V.__webglDepthbuffer=n.createRenderbuffer(),Te(V.__webglDepthbuffer,Z,!1);else{const Oe=Z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Be=V.__webglDepthbuffer;n.bindRenderbuffer(n.RENDERBUFFER,Be),n.framebufferRenderbuffer(n.FRAMEBUFFER,Oe,n.RENDERBUFFER,Be)}t.bindFramebuffer(n.FRAMEBUFFER,null)}function We(Z,V,Ie){const Oe=s.get(Z);V!==void 0&&Se(Oe.__webglFramebuffer,Z,Z.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),Ie!==void 0&&Ue(Z)}function lt(Z){const V=Z.texture,Ie=s.get(Z),Oe=s.get(V);Z.addEventListener("dispose",$);const Be=Z.textures,Le=Z.isWebGLCubeRenderTarget===!0,gt=Be.length>1;if(gt||(Oe.__webglTexture===void 0&&(Oe.__webglTexture=n.createTexture()),Oe.__version=V.version,o.memory.textures++),Le){Ie.__webglFramebuffer=[];for(let et=0;et<6;et++)if(V.mipmaps&&V.mipmaps.length>0){Ie.__webglFramebuffer[et]=[];for(let ut=0;ut<V.mipmaps.length;ut++)Ie.__webglFramebuffer[et][ut]=n.createFramebuffer()}else Ie.__webglFramebuffer[et]=n.createFramebuffer()}else{if(V.mipmaps&&V.mipmaps.length>0){Ie.__webglFramebuffer=[];for(let et=0;et<V.mipmaps.length;et++)Ie.__webglFramebuffer[et]=n.createFramebuffer()}else Ie.__webglFramebuffer=n.createFramebuffer();if(gt)for(let et=0,ut=Be.length;et<ut;et++){const Zt=s.get(Be[et]);Zt.__webglTexture===void 0&&(Zt.__webglTexture=n.createTexture(),o.memory.textures++)}if(Z.samples>0&&_t(Z)===!1){Ie.__webglMultisampledFramebuffer=n.createFramebuffer(),Ie.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,Ie.__webglMultisampledFramebuffer);for(let et=0;et<Be.length;et++){const ut=Be[et];Ie.__webglColorRenderbuffer[et]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,Ie.__webglColorRenderbuffer[et]);const Zt=i.convert(ut.format,ut.colorSpace),Xe=i.convert(ut.type),yt=E(ut.internalFormat,Zt,Xe,ut.colorSpace,Z.isXRRenderTarget===!0),Rt=bt(Z);n.renderbufferStorageMultisample(n.RENDERBUFFER,Rt,yt,Z.width,Z.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+et,n.RENDERBUFFER,Ie.__webglColorRenderbuffer[et])}n.bindRenderbuffer(n.RENDERBUFFER,null),Z.depthBuffer&&(Ie.__webglDepthRenderbuffer=n.createRenderbuffer(),Te(Ie.__webglDepthRenderbuffer,Z,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(Le){t.bindTexture(n.TEXTURE_CUBE_MAP,Oe.__webglTexture),se(n.TEXTURE_CUBE_MAP,V);for(let et=0;et<6;et++)if(V.mipmaps&&V.mipmaps.length>0)for(let ut=0;ut<V.mipmaps.length;ut++)Se(Ie.__webglFramebuffer[et][ut],Z,V,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+et,ut);else Se(Ie.__webglFramebuffer[et],Z,V,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+et,0);y(V)&&v(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(gt){for(let et=0,ut=Be.length;et<ut;et++){const Zt=Be[et],Xe=s.get(Zt);t.bindTexture(n.TEXTURE_2D,Xe.__webglTexture),se(n.TEXTURE_2D,Zt),Se(Ie.__webglFramebuffer,Z,Zt,n.COLOR_ATTACHMENT0+et,n.TEXTURE_2D,0),y(Zt)&&v(n.TEXTURE_2D)}t.unbindTexture()}else{let et=n.TEXTURE_2D;if((Z.isWebGL3DRenderTarget||Z.isWebGLArrayRenderTarget)&&(et=Z.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(et,Oe.__webglTexture),se(et,V),V.mipmaps&&V.mipmaps.length>0)for(let ut=0;ut<V.mipmaps.length;ut++)Se(Ie.__webglFramebuffer[ut],Z,V,n.COLOR_ATTACHMENT0,et,ut);else Se(Ie.__webglFramebuffer,Z,V,n.COLOR_ATTACHMENT0,et,0);y(V)&&v(et),t.unbindTexture()}Z.depthBuffer&&Ue(Z)}function Ft(Z){const V=Z.textures;for(let Ie=0,Oe=V.length;Ie<Oe;Ie++){const Be=V[Ie];if(y(Be)){const Le=w(Z),gt=s.get(Be).__webglTexture;t.bindTexture(Le,gt),v(Le),t.unbindTexture()}}}const Je=[],ie=[];function Kt(Z){if(Z.samples>0){if(_t(Z)===!1){const V=Z.textures,Ie=Z.width,Oe=Z.height;let Be=n.COLOR_BUFFER_BIT;const Le=Z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,gt=s.get(Z),et=V.length>1;if(et)for(let ut=0;ut<V.length;ut++)t.bindFramebuffer(n.FRAMEBUFFER,gt.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+ut,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,gt.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+ut,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,gt.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,gt.__webglFramebuffer);for(let ut=0;ut<V.length;ut++){if(Z.resolveDepthBuffer&&(Z.depthBuffer&&(Be|=n.DEPTH_BUFFER_BIT),Z.stencilBuffer&&Z.resolveStencilBuffer&&(Be|=n.STENCIL_BUFFER_BIT)),et){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,gt.__webglColorRenderbuffer[ut]);const Zt=s.get(V[ut]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,Zt,0)}n.blitFramebuffer(0,0,Ie,Oe,0,0,Ie,Oe,Be,n.NEAREST),l===!0&&(Je.length=0,ie.length=0,Je.push(n.COLOR_ATTACHMENT0+ut),Z.depthBuffer&&Z.resolveDepthBuffer===!1&&(Je.push(Le),ie.push(Le),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,ie)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,Je))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),et)for(let ut=0;ut<V.length;ut++){t.bindFramebuffer(n.FRAMEBUFFER,gt.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+ut,n.RENDERBUFFER,gt.__webglColorRenderbuffer[ut]);const Zt=s.get(V[ut]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,gt.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+ut,n.TEXTURE_2D,Zt,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,gt.__webglMultisampledFramebuffer)}else if(Z.depthBuffer&&Z.resolveDepthBuffer===!1&&l){const V=Z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[V])}}}function bt(Z){return Math.min(r.maxSamples,Z.samples)}function _t(Z){const V=s.get(Z);return Z.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&V.__useRenderToTexture!==!1}function tt(Z){const V=o.render.frame;h.get(Z)!==V&&(h.set(Z,V),Z.update())}function nn(Z,V){const Ie=Z.colorSpace,Oe=Z.format,Be=Z.type;return Z.isCompressedTexture===!0||Z.isVideoTexture===!0||Ie!==vd&&Ie!==Hl&&(Rn.getTransfer(Ie)===Vn?(Oe!==Ao||Be!==nl)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Ie)),V}function nt(Z){return typeof HTMLImageElement<"u"&&Z instanceof HTMLImageElement?(u.width=Z.naturalWidth||Z.width,u.height=Z.naturalHeight||Z.height):typeof VideoFrame<"u"&&Z instanceof VideoFrame?(u.width=Z.displayWidth,u.height=Z.displayHeight):(u.width=Z.width,u.height=Z.height),u}this.allocateTextureUnit=W,this.resetTextureUnits=B,this.setTexture2D=q,this.setTexture2DArray=Y,this.setTexture3D=J,this.setTextureCube=G,this.rebindTextures=We,this.setupRenderTarget=lt,this.updateRenderTargetMipmap=Ft,this.updateMultisampleRenderTarget=Kt,this.setupDepthRenderbuffer=Ue,this.setupFrameBufferTexture=Se,this.useMultisampledRTT=_t}function oxe(n,e){function t(s,r=Hl){let i;const o=Rn.getTransfer(r);if(s===nl)return n.UNSIGNED_BYTE;if(s===TI)return n.UNSIGNED_SHORT_4_4_4_4;if(s===EI)return n.UNSIGNED_SHORT_5_5_5_1;if(s===g3)return n.UNSIGNED_INT_5_9_9_9_REV;if(s===p3)return n.BYTE;if(s===m3)return n.SHORT;if(s===em)return n.UNSIGNED_SHORT;if(s===_I)return n.INT;if(s===Pc)return n.UNSIGNED_INT;if(s===ja)return n.FLOAT;if(s===Bg)return n.HALF_FLOAT;if(s===y3)return n.ALPHA;if(s===x3)return n.RGB;if(s===Ao)return n.RGBA;if(s===v3)return n.LUMINANCE;if(s===b3)return n.LUMINANCE_ALPHA;if(s===Jh)return n.DEPTH_COMPONENT;if(s===xd)return n.DEPTH_STENCIL;if(s===w3)return n.RED;if(s===CI)return n.RED_INTEGER;if(s===S3)return n.RG;if(s===II)return n.RG_INTEGER;if(s===NI)return n.RGBA_INTEGER;if(s===J0||s===ex||s===tx||s===nx)if(o===Vn)if(i=e.get("WEBGL_compressed_texture_s3tc_srgb"),i!==null){if(s===J0)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===ex)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===tx)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===nx)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(i=e.get("WEBGL_compressed_texture_s3tc"),i!==null){if(s===J0)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===ex)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===tx)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===nx)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===tT||s===nT||s===sT||s===rT)if(i=e.get("WEBGL_compressed_texture_pvrtc"),i!==null){if(s===tT)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===nT)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===sT)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===rT)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===iT||s===oT||s===aT)if(i=e.get("WEBGL_compressed_texture_etc"),i!==null){if(s===iT||s===oT)return o===Vn?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(s===aT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===lT||s===uT||s===cT||s===hT||s===dT||s===fT||s===pT||s===mT||s===gT||s===yT||s===xT||s===vT||s===bT||s===wT)if(i=e.get("WEBGL_compressed_texture_astc"),i!==null){if(s===lT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===uT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===cT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===hT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===dT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===fT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===pT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===mT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===gT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===yT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===xT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===vT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===bT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===wT)return o===Vn?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===sx||s===ST||s===_T)if(i=e.get("EXT_texture_compression_bptc"),i!==null){if(s===sx)return o===Vn?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===ST)return i.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===_T)return i.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===_3||s===TT||s===ET||s===CT)if(i=e.get("EXT_texture_compression_rgtc"),i!==null){if(s===sx)return i.COMPRESSED_RED_RGTC1_EXT;if(s===TT)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===ET)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===CT)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===yd?n.UNSIGNED_INT_24_8:n[s]!==void 0?n[s]:null}return{convert:t}}const axe=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,lxe=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class uxe{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,s){if(this.texture===null){const r=new vi,i=e.properties.get(r);i.__webglTexture=t.texture,(t.depthNear!==s.depthNear||t.depthFar!==s.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,s=new pu({vertexShader:axe,fragmentShader:lxe,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new ia(new ow(20,20),s)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class cxe extends Df{constructor(e,t){super();const s=this;let r=null,i=1,o=null,a="local-floor",l=1,u=null,h=null,d=null,p=null,m=null,g=null;const b=new uxe,y=t.getContextAttributes();let v=null,w=null;const E=[],T=[],I=new Fn;let M=null;const $=new Io;$.viewport=new gs;const O=new Io;O.viewport=new gs;const k=[$,O],N=new Mpe;let A=null,B=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ae){let de=E[ae];return de===void 0&&(de=new PS,E[ae]=de),de.getTargetRaySpace()},this.getControllerGrip=function(ae){let de=E[ae];return de===void 0&&(de=new PS,E[ae]=de),de.getGripSpace()},this.getHand=function(ae){let de=E[ae];return de===void 0&&(de=new PS,E[ae]=de),de.getHandSpace()};function W(ae){const de=T.indexOf(ae.inputSource);if(de===-1)return;const Se=E[de];Se!==void 0&&(Se.update(ae.inputSource,ae.frame,u||o),Se.dispatchEvent({type:ae.type,data:ae.inputSource}))}function K(){r.removeEventListener("select",W),r.removeEventListener("selectstart",W),r.removeEventListener("selectend",W),r.removeEventListener("squeeze",W),r.removeEventListener("squeezestart",W),r.removeEventListener("squeezeend",W),r.removeEventListener("end",K),r.removeEventListener("inputsourceschange",q);for(let ae=0;ae<E.length;ae++){const de=T[ae];de!==null&&(T[ae]=null,E[ae].disconnect(de))}A=null,B=null,b.reset(),e.setRenderTarget(v),m=null,p=null,d=null,r=null,w=null,be.stop(),s.isPresenting=!1,e.setPixelRatio(M),e.setSize(I.width,I.height,!1),s.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ae){i=ae,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ae){a=ae,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||o},this.setReferenceSpace=function(ae){u=ae},this.getBaseLayer=function(){return p!==null?p:m},this.getBinding=function(){return d},this.getFrame=function(){return g},this.getSession=function(){return r},this.setSession=async function(ae){if(r=ae,r!==null){if(v=e.getRenderTarget(),r.addEventListener("select",W),r.addEventListener("selectstart",W),r.addEventListener("selectend",W),r.addEventListener("squeeze",W),r.addEventListener("squeezestart",W),r.addEventListener("squeezeend",W),r.addEventListener("end",K),r.addEventListener("inputsourceschange",q),y.xrCompatible!==!0&&await t.makeXRCompatible(),M=e.getPixelRatio(),e.getSize(I),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Se=null,Te=null,De=null;y.depth&&(De=y.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Se=y.stencil?xd:Jh,Te=y.stencil?yd:Pc);const Ue={colorFormat:t.RGBA8,depthFormat:De,scaleFactor:i};d=new XRWebGLBinding(r,t),p=d.createProjectionLayer(Ue),r.updateRenderState({layers:[p]}),e.setPixelRatio(1),e.setSize(p.textureWidth,p.textureHeight,!1),w=new Oc(p.textureWidth,p.textureHeight,{format:Ao,type:nl,depthTexture:new O3(p.textureWidth,p.textureHeight,Te,void 0,void 0,void 0,void 0,void 0,void 0,Se),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0,resolveDepthBuffer:p.ignoreDepthValues===!1})}else{const Se={antialias:y.antialias,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:i};m=new XRWebGLLayer(r,t,Se),r.updateRenderState({baseLayer:m}),e.setPixelRatio(1),e.setSize(m.framebufferWidth,m.framebufferHeight,!1),w=new Oc(m.framebufferWidth,m.framebufferHeight,{format:Ao,type:nl,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil})}w.isXRRenderTarget=!0,this.setFoveation(l),u=null,o=await r.requestReferenceSpace(a),be.setContext(r),be.start(),s.isPresenting=!0,s.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return b.getDepthTexture()};function q(ae){for(let de=0;de<ae.removed.length;de++){const Se=ae.removed[de],Te=T.indexOf(Se);Te>=0&&(T[Te]=null,E[Te].disconnect(Se))}for(let de=0;de<ae.added.length;de++){const Se=ae.added[de];let Te=T.indexOf(Se);if(Te===-1){for(let Ue=0;Ue<E.length;Ue++)if(Ue>=T.length){T.push(Se),Te=Ue;break}else if(T[Ue]===null){T[Ue]=Se,Te=Ue;break}if(Te===-1)break}const De=E[Te];De&&De.connect(Se)}}const Y=new $e,J=new $e;function G(ae,de,Se){Y.setFromMatrixPosition(de.matrixWorld),J.setFromMatrixPosition(Se.matrixWorld);const Te=Y.distanceTo(J),De=de.projectionMatrix.elements,Ue=Se.projectionMatrix.elements,We=De[14]/(De[10]-1),lt=De[14]/(De[10]+1),Ft=(De[9]+1)/De[5],Je=(De[9]-1)/De[5],ie=(De[8]-1)/De[0],Kt=(Ue[8]+1)/Ue[0],bt=We*ie,_t=We*Kt,tt=Te/(-ie+Kt),nn=tt*-ie;if(de.matrixWorld.decompose(ae.position,ae.quaternion,ae.scale),ae.translateX(nn),ae.translateZ(tt),ae.matrixWorld.compose(ae.position,ae.quaternion,ae.scale),ae.matrixWorldInverse.copy(ae.matrixWorld).invert(),De[10]===-1)ae.projectionMatrix.copy(de.projectionMatrix),ae.projectionMatrixInverse.copy(de.projectionMatrixInverse);else{const nt=We+tt,Z=lt+tt,V=bt-nn,Ie=_t+(Te-nn),Oe=Ft*lt/Z*nt,Be=Je*lt/Z*nt;ae.projectionMatrix.makePerspective(V,Ie,Oe,Be,nt,Z),ae.projectionMatrixInverse.copy(ae.projectionMatrix).invert()}}function ee(ae,de){de===null?ae.matrixWorld.copy(ae.matrix):ae.matrixWorld.multiplyMatrices(de.matrixWorld,ae.matrix),ae.matrixWorldInverse.copy(ae.matrixWorld).invert()}this.updateCamera=function(ae){if(r===null)return;let de=ae.near,Se=ae.far;b.texture!==null&&(b.depthNear>0&&(de=b.depthNear),b.depthFar>0&&(Se=b.depthFar)),N.near=O.near=$.near=de,N.far=O.far=$.far=Se,(A!==N.near||B!==N.far)&&(r.updateRenderState({depthNear:N.near,depthFar:N.far}),A=N.near,B=N.far),$.layers.mask=ae.layers.mask|2,O.layers.mask=ae.layers.mask|4,N.layers.mask=$.layers.mask|O.layers.mask;const Te=ae.parent,De=N.cameras;ee(N,Te);for(let Ue=0;Ue<De.length;Ue++)ee(De[Ue],Te);De.length===2?G(N,$,O):N.projectionMatrix.copy($.projectionMatrix),te(ae,N,Te)};function te(ae,de,Se){Se===null?ae.matrix.copy(de.matrixWorld):(ae.matrix.copy(Se.matrixWorld),ae.matrix.invert(),ae.matrix.multiply(de.matrixWorld)),ae.matrix.decompose(ae.position,ae.quaternion,ae.scale),ae.updateMatrixWorld(!0),ae.projectionMatrix.copy(de.projectionMatrix),ae.projectionMatrixInverse.copy(de.projectionMatrixInverse),ae.isPerspectiveCamera&&(ae.fov=IT*2*Math.atan(1/ae.projectionMatrix.elements[5]),ae.zoom=1)}this.getCamera=function(){return N},this.getFoveation=function(){if(!(p===null&&m===null))return l},this.setFoveation=function(ae){l=ae,p!==null&&(p.fixedFoveation=ae),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=ae)},this.hasDepthSensing=function(){return b.texture!==null},this.getDepthSensingMesh=function(){return b.getMesh(N)};let j=null;function se(ae,de){if(h=de.getViewerPose(u||o),g=de,h!==null){const Se=h.views;m!==null&&(e.setRenderTargetFramebuffer(w,m.framebuffer),e.setRenderTarget(w));let Te=!1;Se.length!==N.cameras.length&&(N.cameras.length=0,Te=!0);for(let We=0;We<Se.length;We++){const lt=Se[We];let Ft=null;if(m!==null)Ft=m.getViewport(lt);else{const ie=d.getViewSubImage(p,lt);Ft=ie.viewport,We===0&&(e.setRenderTargetTextures(w,ie.colorTexture,p.ignoreDepthValues?void 0:ie.depthStencilTexture),e.setRenderTarget(w))}let Je=k[We];Je===void 0&&(Je=new Io,Je.layers.enable(We),Je.viewport=new gs,k[We]=Je),Je.matrix.fromArray(lt.transform.matrix),Je.matrix.decompose(Je.position,Je.quaternion,Je.scale),Je.projectionMatrix.fromArray(lt.projectionMatrix),Je.projectionMatrixInverse.copy(Je.projectionMatrix).invert(),Je.viewport.set(Ft.x,Ft.y,Ft.width,Ft.height),We===0&&(N.matrix.copy(Je.matrix),N.matrix.decompose(N.position,N.quaternion,N.scale)),Te===!0&&N.cameras.push(Je)}const De=r.enabledFeatures;if(De&&De.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&d){const We=d.getDepthInformation(Se[0]);We&&We.isValid&&We.texture&&b.init(e,We,r.renderState)}}for(let Se=0;Se<E.length;Se++){const Te=T[Se],De=E[Se];Te!==null&&De!==void 0&&De.update(Te,de,u||o)}j&&j(ae,de),de.detectedPlanes&&s.dispatchEvent({type:"planesdetected",data:de}),g=null}const be=new U3;be.setAnimationLoop(se),this.setAnimationLoop=function(ae){j=ae},this.dispose=function(){}}}const Ju=new xa,hxe=new xs;function dxe(n,e){function t(y,v){y.matrixAutoUpdate===!0&&y.updateMatrix(),v.value.copy(y.matrix)}function s(y,v){v.color.getRGB(y.fogColor.value,$3(n)),v.isFog?(y.fogNear.value=v.near,y.fogFar.value=v.far):v.isFogExp2&&(y.fogDensity.value=v.density)}function r(y,v,w,E,T){v.isMeshBasicMaterial||v.isMeshLambertMaterial?i(y,v):v.isMeshToonMaterial?(i(y,v),d(y,v)):v.isMeshPhongMaterial?(i(y,v),h(y,v)):v.isMeshStandardMaterial?(i(y,v),p(y,v),v.isMeshPhysicalMaterial&&m(y,v,T)):v.isMeshMatcapMaterial?(i(y,v),g(y,v)):v.isMeshDepthMaterial?i(y,v):v.isMeshDistanceMaterial?(i(y,v),b(y,v)):v.isMeshNormalMaterial?i(y,v):v.isLineBasicMaterial?(o(y,v),v.isLineDashedMaterial&&a(y,v)):v.isPointsMaterial?l(y,v,w,E):v.isSpriteMaterial?u(y,v):v.isShadowMaterial?(y.color.value.copy(v.color),y.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function i(y,v){y.opacity.value=v.opacity,v.color&&y.diffuse.value.copy(v.color),v.emissive&&y.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(y.map.value=v.map,t(v.map,y.mapTransform)),v.alphaMap&&(y.alphaMap.value=v.alphaMap,t(v.alphaMap,y.alphaMapTransform)),v.bumpMap&&(y.bumpMap.value=v.bumpMap,t(v.bumpMap,y.bumpMapTransform),y.bumpScale.value=v.bumpScale,v.side===xi&&(y.bumpScale.value*=-1)),v.normalMap&&(y.normalMap.value=v.normalMap,t(v.normalMap,y.normalMapTransform),y.normalScale.value.copy(v.normalScale),v.side===xi&&y.normalScale.value.negate()),v.displacementMap&&(y.displacementMap.value=v.displacementMap,t(v.displacementMap,y.displacementMapTransform),y.displacementScale.value=v.displacementScale,y.displacementBias.value=v.displacementBias),v.emissiveMap&&(y.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,y.emissiveMapTransform)),v.specularMap&&(y.specularMap.value=v.specularMap,t(v.specularMap,y.specularMapTransform)),v.alphaTest>0&&(y.alphaTest.value=v.alphaTest);const w=e.get(v),E=w.envMap,T=w.envMapRotation;E&&(y.envMap.value=E,Ju.copy(T),Ju.x*=-1,Ju.y*=-1,Ju.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(Ju.y*=-1,Ju.z*=-1),y.envMapRotation.value.setFromMatrix4(hxe.makeRotationFromEuler(Ju)),y.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=v.reflectivity,y.ior.value=v.ior,y.refractionRatio.value=v.refractionRatio),v.lightMap&&(y.lightMap.value=v.lightMap,y.lightMapIntensity.value=v.lightMapIntensity,t(v.lightMap,y.lightMapTransform)),v.aoMap&&(y.aoMap.value=v.aoMap,y.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,y.aoMapTransform))}function o(y,v){y.diffuse.value.copy(v.color),y.opacity.value=v.opacity,v.map&&(y.map.value=v.map,t(v.map,y.mapTransform))}function a(y,v){y.dashSize.value=v.dashSize,y.totalSize.value=v.dashSize+v.gapSize,y.scale.value=v.scale}function l(y,v,w,E){y.diffuse.value.copy(v.color),y.opacity.value=v.opacity,y.size.value=v.size*w,y.scale.value=E*.5,v.map&&(y.map.value=v.map,t(v.map,y.uvTransform)),v.alphaMap&&(y.alphaMap.value=v.alphaMap,t(v.alphaMap,y.alphaMapTransform)),v.alphaTest>0&&(y.alphaTest.value=v.alphaTest)}function u(y,v){y.diffuse.value.copy(v.color),y.opacity.value=v.opacity,y.rotation.value=v.rotation,v.map&&(y.map.value=v.map,t(v.map,y.mapTransform)),v.alphaMap&&(y.alphaMap.value=v.alphaMap,t(v.alphaMap,y.alphaMapTransform)),v.alphaTest>0&&(y.alphaTest.value=v.alphaTest)}function h(y,v){y.specular.value.copy(v.specular),y.shininess.value=Math.max(v.shininess,1e-4)}function d(y,v){v.gradientMap&&(y.gradientMap.value=v.gradientMap)}function p(y,v){y.metalness.value=v.metalness,v.metalnessMap&&(y.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,y.metalnessMapTransform)),y.roughness.value=v.roughness,v.roughnessMap&&(y.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,y.roughnessMapTransform)),v.envMap&&(y.envMapIntensity.value=v.envMapIntensity)}function m(y,v,w){y.ior.value=v.ior,v.sheen>0&&(y.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),y.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(y.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,y.sheenColorMapTransform)),v.sheenRoughnessMap&&(y.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,y.sheenRoughnessMapTransform))),v.clearcoat>0&&(y.clearcoat.value=v.clearcoat,y.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(y.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,y.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(y.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===xi&&y.clearcoatNormalScale.value.negate())),v.dispersion>0&&(y.dispersion.value=v.dispersion),v.iridescence>0&&(y.iridescence.value=v.iridescence,y.iridescenceIOR.value=v.iridescenceIOR,y.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(y.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,y.iridescenceMapTransform)),v.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),v.transmission>0&&(y.transmission.value=v.transmission,y.transmissionSamplerMap.value=w.texture,y.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(y.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,y.transmissionMapTransform)),y.thickness.value=v.thickness,v.thicknessMap&&(y.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=v.attenuationDistance,y.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(y.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(y.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=v.specularIntensity,y.specularColor.value.copy(v.specularColor),v.specularColorMap&&(y.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,y.specularColorMapTransform)),v.specularIntensityMap&&(y.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,y.specularIntensityMapTransform))}function g(y,v){v.matcap&&(y.matcap.value=v.matcap)}function b(y,v){const w=e.get(v).light;y.referencePosition.value.setFromMatrixPosition(w.matrixWorld),y.nearDistance.value=w.shadow.camera.near,y.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:s,refreshMaterialUniforms:r}}function fxe(n,e,t,s){let r={},i={},o=[];const a=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function l(w,E){const T=E.program;s.uniformBlockBinding(w,T)}function u(w,E){let T=r[w.id];T===void 0&&(g(w),T=h(w),r[w.id]=T,w.addEventListener("dispose",y));const I=E.program;s.updateUBOMapping(w,I);const M=e.render.frame;i[w.id]!==M&&(p(w),i[w.id]=M)}function h(w){const E=d();w.__bindingPointIndex=E;const T=n.createBuffer(),I=w.__size,M=w.usage;return n.bindBuffer(n.UNIFORM_BUFFER,T),n.bufferData(n.UNIFORM_BUFFER,I,M),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,E,T),T}function d(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(w){const E=r[w.id],T=w.uniforms,I=w.__cache;n.bindBuffer(n.UNIFORM_BUFFER,E);for(let M=0,$=T.length;M<$;M++){const O=Array.isArray(T[M])?T[M]:[T[M]];for(let k=0,N=O.length;k<N;k++){const A=O[k];if(m(A,M,k,I)===!0){const B=A.__offset,W=Array.isArray(A.value)?A.value:[A.value];let K=0;for(let q=0;q<W.length;q++){const Y=W[q],J=b(Y);typeof Y=="number"||typeof Y=="boolean"?(A.__data[0]=Y,n.bufferSubData(n.UNIFORM_BUFFER,B+K,A.__data)):Y.isMatrix3?(A.__data[0]=Y.elements[0],A.__data[1]=Y.elements[1],A.__data[2]=Y.elements[2],A.__data[3]=0,A.__data[4]=Y.elements[3],A.__data[5]=Y.elements[4],A.__data[6]=Y.elements[5],A.__data[7]=0,A.__data[8]=Y.elements[6],A.__data[9]=Y.elements[7],A.__data[10]=Y.elements[8],A.__data[11]=0):(Y.toArray(A.__data,K),K+=J.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,B,A.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function m(w,E,T,I){const M=w.value,$=E+"_"+T;if(I[$]===void 0)return typeof M=="number"||typeof M=="boolean"?I[$]=M:I[$]=M.clone(),!0;{const O=I[$];if(typeof M=="number"||typeof M=="boolean"){if(O!==M)return I[$]=M,!0}else if(O.equals(M)===!1)return O.copy(M),!0}return!1}function g(w){const E=w.uniforms;let T=0;const I=16;for(let $=0,O=E.length;$<O;$++){const k=Array.isArray(E[$])?E[$]:[E[$]];for(let N=0,A=k.length;N<A;N++){const B=k[N],W=Array.isArray(B.value)?B.value:[B.value];for(let K=0,q=W.length;K<q;K++){const Y=W[K],J=b(Y),G=T%I,ee=G%J.boundary,te=G+ee;T+=ee,te!==0&&I-te<J.storage&&(T+=I-te),B.__data=new Float32Array(J.storage/Float32Array.BYTES_PER_ELEMENT),B.__offset=T,T+=J.storage}}}const M=T%I;return M>0&&(T+=I-M),w.__size=T,w.__cache={},this}function b(w){const E={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(E.boundary=4,E.storage=4):w.isVector2?(E.boundary=8,E.storage=8):w.isVector3||w.isColor?(E.boundary=16,E.storage=12):w.isVector4?(E.boundary=16,E.storage=16):w.isMatrix3?(E.boundary=48,E.storage=48):w.isMatrix4?(E.boundary=64,E.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),E}function y(w){const E=w.target;E.removeEventListener("dispose",y);const T=o.indexOf(E.__bindingPointIndex);o.splice(T,1),n.deleteBuffer(r[E.id]),delete r[E.id],delete i[E.id]}function v(){for(const w in r)n.deleteBuffer(r[w]);o=[],r={},i={}}return{bind:l,update:u,dispose:v}}class pxe{constructor(e={}){const{canvas:t=Xfe(),context:s=null,depth:r=!0,stencil:i=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1,reverseDepthBuffer:p=!1}=e;this.isWebGLRenderer=!0;let m;if(s!==null){if(typeof WebGLRenderingContext<"u"&&s instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");m=s.getContextAttributes().alpha}else m=o;const g=new Uint32Array(4),b=new Int32Array(4);let y=null,v=null;const w=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=io,this.toneMapping=Jl,this.toneMappingExposure=1;const T=this;let I=!1,M=0,$=0,O=null,k=-1,N=null;const A=new gs,B=new gs;let W=null;const K=new kn(0);let q=0,Y=t.width,J=t.height,G=1,ee=null,te=null;const j=new gs(0,0,Y,J),se=new gs(0,0,Y,J);let be=!1;const ae=new RI;let de=!1,Se=!1;this.transmissionResolutionScale=1;const Te=new xs,De=new xs,Ue=new $e,We=new gs,lt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Ft=!1;function Je(){return O===null?G:1}let ie=s;function Kt(X,ve){return t.getContext(X,ve)}try{const X={alpha:!0,depth:r,stencil:i,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${wI}`),t.addEventListener("webglcontextlost",ze,!1),t.addEventListener("webglcontextrestored",ct,!1),t.addEventListener("webglcontextcreationerror",ht,!1),ie===null){const ve="webgl2";if(ie=Kt(ve,X),ie===null)throw Kt(ve)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(X){throw console.error("THREE.WebGLRenderer: "+X.message),X}let bt,_t,tt,nn,nt,Z,V,Ie,Oe,Be,Le,gt,et,ut,Zt,Xe,yt,Rt,Ut,xt,ln,Xt,En,ge;function st(){bt=new Tye(ie),bt.init(),Xt=new oxe(ie,bt),_t=new xye(ie,bt,e,Xt),tt=new rxe(ie,bt),_t.reverseDepthBuffer&&p&&tt.buffers.depth.setReversed(!0),nn=new Iye(ie),nt=new H0e,Z=new ixe(ie,bt,tt,nt,_t,Xt,nn),V=new bye(T),Ie=new _ye(T),Oe=new $pe(ie),En=new gye(ie,Oe),Be=new Eye(ie,Oe,nn,En),Le=new Aye(ie,Be,Oe,nn),Ut=new Nye(ie,_t,Z),Xe=new vye(nt),gt=new G0e(T,V,Ie,bt,_t,En,Xe),et=new dxe(T,nt),ut=new X0e,Zt=new J0e(bt),Rt=new mye(T,V,Ie,tt,Le,m,l),yt=new nxe(T,Le,_t),ge=new fxe(ie,nn,_t,tt),xt=new yye(ie,bt,nn),ln=new Cye(ie,bt,nn),nn.programs=gt.programs,T.capabilities=_t,T.extensions=bt,T.properties=nt,T.renderLists=ut,T.shadowMap=yt,T.state=tt,T.info=nn}st();const Pe=new cxe(T,ie);this.xr=Pe,this.getContext=function(){return ie},this.getContextAttributes=function(){return ie.getContextAttributes()},this.forceContextLoss=function(){const X=bt.get("WEBGL_lose_context");X&&X.loseContext()},this.forceContextRestore=function(){const X=bt.get("WEBGL_lose_context");X&&X.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(X){X!==void 0&&(G=X,this.setSize(Y,J,!1))},this.getSize=function(X){return X.set(Y,J)},this.setSize=function(X,ve,Ae=!0){if(Pe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Y=X,J=ve,t.width=Math.floor(X*G),t.height=Math.floor(ve*G),Ae===!0&&(t.style.width=X+"px",t.style.height=ve+"px"),this.setViewport(0,0,X,ve)},this.getDrawingBufferSize=function(X){return X.set(Y*G,J*G).floor()},this.setDrawingBufferSize=function(X,ve,Ae){Y=X,J=ve,G=Ae,t.width=Math.floor(X*Ae),t.height=Math.floor(ve*Ae),this.setViewport(0,0,X,ve)},this.getCurrentViewport=function(X){return X.copy(A)},this.getViewport=function(X){return X.copy(j)},this.setViewport=function(X,ve,Ae,Ee){X.isVector4?j.set(X.x,X.y,X.z,X.w):j.set(X,ve,Ae,Ee),tt.viewport(A.copy(j).multiplyScalar(G).round())},this.getScissor=function(X){return X.copy(se)},this.setScissor=function(X,ve,Ae,Ee){X.isVector4?se.set(X.x,X.y,X.z,X.w):se.set(X,ve,Ae,Ee),tt.scissor(B.copy(se).multiplyScalar(G).round())},this.getScissorTest=function(){return be},this.setScissorTest=function(X){tt.setScissorTest(be=X)},this.setOpaqueSort=function(X){ee=X},this.setTransparentSort=function(X){te=X},this.getClearColor=function(X){return X.copy(Rt.getClearColor())},this.setClearColor=function(){Rt.setClearColor.apply(Rt,arguments)},this.getClearAlpha=function(){return Rt.getClearAlpha()},this.setClearAlpha=function(){Rt.setClearAlpha.apply(Rt,arguments)},this.clear=function(X=!0,ve=!0,Ae=!0){let Ee=0;if(X){let we=!1;if(O!==null){const Ke=O.texture.format;we=Ke===NI||Ke===II||Ke===CI}if(we){const Ke=O.texture.type,at=Ke===nl||Ke===Pc||Ke===em||Ke===yd||Ke===TI||Ke===EI,it=Rt.getClearColor(),wt=Rt.getClearAlpha(),zt=it.r,Dt=it.g,St=it.b;at?(g[0]=zt,g[1]=Dt,g[2]=St,g[3]=wt,ie.clearBufferuiv(ie.COLOR,0,g)):(b[0]=zt,b[1]=Dt,b[2]=St,b[3]=wt,ie.clearBufferiv(ie.COLOR,0,b))}else Ee|=ie.COLOR_BUFFER_BIT}ve&&(Ee|=ie.DEPTH_BUFFER_BIT),Ae&&(Ee|=ie.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),ie.clear(Ee)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ze,!1),t.removeEventListener("webglcontextrestored",ct,!1),t.removeEventListener("webglcontextcreationerror",ht,!1),Rt.dispose(),ut.dispose(),Zt.dispose(),nt.dispose(),V.dispose(),Ie.dispose(),Le.dispose(),En.dispose(),ge.dispose(),gt.dispose(),Pe.dispose(),Pe.removeEventListener("sessionstart",Ci),Pe.removeEventListener("sessionend",zo),zs.stop()};function ze(X){X.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),I=!0}function ct(){console.log("THREE.WebGLRenderer: Context Restored."),I=!1;const X=nn.autoReset,ve=yt.enabled,Ae=yt.autoUpdate,Ee=yt.needsUpdate,we=yt.type;st(),nn.autoReset=X,yt.enabled=ve,yt.autoUpdate=Ae,yt.needsUpdate=Ee,yt.type=we}function ht(X){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",X.statusMessage)}function Bt(X){const ve=X.target;ve.removeEventListener("dispose",Bt),On(ve)}function On(X){ps(X),nt.remove(X)}function ps(X){const ve=nt.get(X).programs;ve!==void 0&&(ve.forEach(function(Ae){gt.releaseProgram(Ae)}),X.isShaderMaterial&&gt.releaseShaderCache(X))}this.renderBufferDirect=function(X,ve,Ae,Ee,we,Ke){ve===null&&(ve=lt);const at=we.isMesh&&we.matrixWorld.determinant()<0,it=_a(X,ve,Ae,Ee,we);tt.setMaterial(Ee,at);let wt=Ae.index,zt=1;if(Ee.wireframe===!0){if(wt=Be.getWireframeAttribute(Ae),wt===void 0)return;zt=2}const Dt=Ae.drawRange,St=Ae.attributes.position;let xn=Dt.start*zt,Qt=(Dt.start+Dt.count)*zt;Ke!==null&&(xn=Math.max(xn,Ke.start*zt),Qt=Math.min(Qt,(Ke.start+Ke.count)*zt)),wt!==null?(xn=Math.max(xn,0),Qt=Math.min(Qt,wt.count)):St!=null&&(xn=Math.max(xn,0),Qt=Math.min(Qt,St.count));const qn=Qt-xn;if(qn<0||qn===1/0)return;En.setup(we,Ee,it,Ae,wt);let Kn,bn=xt;if(wt!==null&&(Kn=Oe.get(wt),bn=ln,bn.setIndex(Kn)),we.isMesh)Ee.wireframe===!0?(tt.setLineWidth(Ee.wireframeLinewidth*Je()),bn.setMode(ie.LINES)):bn.setMode(ie.TRIANGLES);else if(we.isLine){let Pt=Ee.linewidth;Pt===void 0&&(Pt=1),tt.setLineWidth(Pt*Je()),we.isLineSegments?bn.setMode(ie.LINES):we.isLineLoop?bn.setMode(ie.LINE_LOOP):bn.setMode(ie.LINE_STRIP)}else we.isPoints?bn.setMode(ie.POINTS):we.isSprite&&bn.setMode(ie.TRIANGLES);if(we.isBatchedMesh)if(we._multiDrawInstances!==null)bn.renderMultiDrawInstances(we._multiDrawStarts,we._multiDrawCounts,we._multiDrawCount,we._multiDrawInstances);else if(bt.get("WEBGL_multi_draw"))bn.renderMultiDraw(we._multiDrawStarts,we._multiDrawCounts,we._multiDrawCount);else{const Pt=we._multiDrawStarts,Zn=we._multiDrawCounts,hn=we._multiDrawCount,Vs=wt?Oe.get(wt).bytesPerElement:1,us=nt.get(Ee).currentProgram.getUniforms();for(let nr=0;nr<hn;nr++)us.setValue(ie,"_gl_DrawID",nr),bn.render(Pt[nr]/Vs,Zn[nr])}else if(we.isInstancedMesh)bn.renderInstances(xn,qn,we.count);else if(Ae.isInstancedBufferGeometry){const Pt=Ae._maxInstanceCount!==void 0?Ae._maxInstanceCount:1/0,Zn=Math.min(Ae.instanceCount,Pt);bn.renderInstances(xn,qn,Zn)}else bn.render(xn,qn)};function fn(X,ve,Ae){X.transparent===!0&&X.side===Ha&&X.forceSinglePass===!1?(X.side=xi,X.needsUpdate=!0,dl(X,ve,Ae),X.side=fu,X.needsUpdate=!0,dl(X,ve,Ae),X.side=Ha):dl(X,ve,Ae)}this.compile=function(X,ve,Ae=null){Ae===null&&(Ae=X),v=Zt.get(Ae),v.init(ve),E.push(v),Ae.traverseVisible(function(we){we.isLight&&we.layers.test(ve.layers)&&(v.pushLight(we),we.castShadow&&v.pushShadow(we))}),X!==Ae&&X.traverseVisible(function(we){we.isLight&&we.layers.test(ve.layers)&&(v.pushLight(we),we.castShadow&&v.pushShadow(we))}),v.setupLights();const Ee=new Set;return X.traverse(function(we){if(!(we.isMesh||we.isPoints||we.isLine||we.isSprite))return;const Ke=we.material;if(Ke)if(Array.isArray(Ke))for(let at=0;at<Ke.length;at++){const it=Ke[at];fn(it,Ae,we),Ee.add(it)}else fn(Ke,Ae,we),Ee.add(Ke)}),E.pop(),v=null,Ee},this.compileAsync=function(X,ve,Ae=null){const Ee=this.compile(X,ve,Ae);return new Promise(we=>{function Ke(){if(Ee.forEach(function(at){nt.get(at).currentProgram.isReady()&&Ee.delete(at)}),Ee.size===0){we(X);return}setTimeout(Ke,10)}bt.get("KHR_parallel_shader_compile")!==null?Ke():setTimeout(Ke,10)})};let Us=null;function gr(X){Us&&Us(X)}function Ci(){zs.stop()}function zo(){zs.start()}const zs=new U3;zs.setAnimationLoop(gr),typeof self<"u"&&zs.setContext(self),this.setAnimationLoop=function(X){Us=X,Pe.setAnimationLoop(X),X===null?zs.stop():zs.start()},Pe.addEventListener("sessionstart",Ci),Pe.addEventListener("sessionend",zo),this.render=function(X,ve){if(ve!==void 0&&ve.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(I===!0)return;if(X.matrixWorldAutoUpdate===!0&&X.updateMatrixWorld(),ve.parent===null&&ve.matrixWorldAutoUpdate===!0&&ve.updateMatrixWorld(),Pe.enabled===!0&&Pe.isPresenting===!0&&(Pe.cameraAutoUpdate===!0&&Pe.updateCamera(ve),ve=Pe.getCamera()),X.isScene===!0&&X.onBeforeRender(T,X,ve,O),v=Zt.get(X,E.length),v.init(ve),E.push(v),De.multiplyMatrices(ve.projectionMatrix,ve.matrixWorldInverse),ae.setFromProjectionMatrix(De),Se=this.localClippingEnabled,de=Xe.init(this.clippingPlanes,Se),y=ut.get(X,w.length),y.init(),w.push(y),Pe.enabled===!0&&Pe.isPresenting===!0){const Ke=T.xr.getDepthSensingMesh();Ke!==null&&yr(Ke,ve,-1/0,T.sortObjects)}yr(X,ve,0,T.sortObjects),y.finish(),T.sortObjects===!0&&y.sort(ee,te),Ft=Pe.enabled===!1||Pe.isPresenting===!1||Pe.hasDepthSensing()===!1,Ft&&Rt.addToRenderList(y,X),this.info.render.frame++,de===!0&&Xe.beginShadows();const Ae=v.state.shadowsArray;yt.render(Ae,X,ve),de===!0&&Xe.endShadows(),this.info.autoReset===!0&&this.info.reset();const Ee=y.opaque,we=y.transmissive;if(v.setupLights(),ve.isArrayCamera){const Ke=ve.cameras;if(we.length>0)for(let at=0,it=Ke.length;at<it;at++){const wt=Ke[at];Ln(Ee,we,X,wt)}Ft&&Rt.render(X);for(let at=0,it=Ke.length;at<it;at++){const wt=Ke[at];Bo(y,X,wt,wt.viewport)}}else we.length>0&&Ln(Ee,we,X,ve),Ft&&Rt.render(X),Bo(y,X,ve);O!==null&&$===0&&(Z.updateMultisampleRenderTarget(O),Z.updateRenderTargetMipmap(O)),X.isScene===!0&&X.onAfterRender(T,X,ve),En.resetDefaultState(),k=-1,N=null,E.pop(),E.length>0?(v=E[E.length-1],de===!0&&Xe.setGlobalState(T.clippingPlanes,v.state.camera)):v=null,w.pop(),w.length>0?y=w[w.length-1]:y=null};function yr(X,ve,Ae,Ee){if(X.visible===!1)return;if(X.layers.test(ve.layers)){if(X.isGroup)Ae=X.renderOrder;else if(X.isLOD)X.autoUpdate===!0&&X.update(ve);else if(X.isLight)v.pushLight(X),X.castShadow&&v.pushShadow(X);else if(X.isSprite){if(!X.frustumCulled||ae.intersectsSprite(X)){Ee&&We.setFromMatrixPosition(X.matrixWorld).applyMatrix4(De);const at=Le.update(X),it=X.material;it.visible&&y.push(X,at,it,Ae,We.z,null)}}else if((X.isMesh||X.isLine||X.isPoints)&&(!X.frustumCulled||ae.intersectsObject(X))){const at=Le.update(X),it=X.material;if(Ee&&(X.boundingSphere!==void 0?(X.boundingSphere===null&&X.computeBoundingSphere(),We.copy(X.boundingSphere.center)):(at.boundingSphere===null&&at.computeBoundingSphere(),We.copy(at.boundingSphere.center)),We.applyMatrix4(X.matrixWorld).applyMatrix4(De)),Array.isArray(it)){const wt=at.groups;for(let zt=0,Dt=wt.length;zt<Dt;zt++){const St=wt[zt],xn=it[St.materialIndex];xn&&xn.visible&&y.push(X,at,xn,Ae,We.z,St)}}else it.visible&&y.push(X,at,it,Ae,We.z,null)}}const Ke=X.children;for(let at=0,it=Ke.length;at<it;at++)yr(Ke[at],ve,Ae,Ee)}function Bo(X,ve,Ae,Ee){const we=X.opaque,Ke=X.transmissive,at=X.transparent;v.setupLightsView(Ae),de===!0&&Xe.setGlobalState(T.clippingPlanes,Ae),Ee&&tt.viewport(A.copy(Ee)),we.length>0&&Bs(we,ve,Ae),Ke.length>0&&Bs(Ke,ve,Ae),at.length>0&&Bs(at,ve,Ae),tt.buffers.depth.setTest(!0),tt.buffers.depth.setMask(!0),tt.buffers.color.setMask(!0),tt.setPolygonOffset(!1)}function Ln(X,ve,Ae,Ee){if((Ae.isScene===!0?Ae.overrideMaterial:null)!==null)return;v.state.transmissionRenderTarget[Ee.id]===void 0&&(v.state.transmissionRenderTarget[Ee.id]=new Oc(1,1,{generateMipmaps:!0,type:bt.has("EXT_color_buffer_half_float")||bt.has("EXT_color_buffer_float")?Bg:nl,minFilter:pc,samples:4,stencilBuffer:i,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Rn.workingColorSpace}));const Ke=v.state.transmissionRenderTarget[Ee.id],at=Ee.viewport||A;Ke.setSize(at.z*T.transmissionResolutionScale,at.w*T.transmissionResolutionScale);const it=T.getRenderTarget();T.setRenderTarget(Ke),T.getClearColor(K),q=T.getClearAlpha(),q<1&&T.setClearColor(16777215,.5),T.clear(),Ft&&Rt.render(Ae);const wt=T.toneMapping;T.toneMapping=Jl;const zt=Ee.viewport;if(Ee.viewport!==void 0&&(Ee.viewport=void 0),v.setupLightsView(Ee),de===!0&&Xe.setGlobalState(T.clippingPlanes,Ee),Bs(X,Ae,Ee),Z.updateMultisampleRenderTarget(Ke),Z.updateRenderTargetMipmap(Ke),bt.has("WEBGL_multisampled_render_to_texture")===!1){let Dt=!1;for(let St=0,xn=ve.length;St<xn;St++){const Qt=ve[St],qn=Qt.object,Kn=Qt.geometry,bn=Qt.material,Pt=Qt.group;if(bn.side===Ha&&qn.layers.test(Ee.layers)){const Zn=bn.side;bn.side=xi,bn.needsUpdate=!0,hl(qn,Ae,Ee,Kn,bn,Pt),bn.side=Zn,bn.needsUpdate=!0,Dt=!0}}Dt===!0&&(Z.updateMultisampleRenderTarget(Ke),Z.updateRenderTargetMipmap(Ke))}T.setRenderTarget(it),T.setClearColor(K,q),zt!==void 0&&(Ee.viewport=zt),T.toneMapping=wt}function Bs(X,ve,Ae){const Ee=ve.isScene===!0?ve.overrideMaterial:null;for(let we=0,Ke=X.length;we<Ke;we++){const at=X[we],it=at.object,wt=at.geometry,zt=Ee===null?at.material:Ee,Dt=at.group;it.layers.test(Ae.layers)&&hl(it,ve,Ae,wt,zt,Dt)}}function hl(X,ve,Ae,Ee,we,Ke){X.onBeforeRender(T,ve,Ae,Ee,we,Ke),X.modelViewMatrix.multiplyMatrices(Ae.matrixWorldInverse,X.matrixWorld),X.normalMatrix.getNormalMatrix(X.modelViewMatrix),we.onBeforeRender(T,ve,Ae,Ee,X,Ke),we.transparent===!0&&we.side===Ha&&we.forceSinglePass===!1?(we.side=xi,we.needsUpdate=!0,T.renderBufferDirect(Ae,ve,Ee,we,X,Ke),we.side=fu,we.needsUpdate=!0,T.renderBufferDirect(Ae,ve,Ee,we,X,Ke),we.side=Ha):T.renderBufferDirect(Ae,ve,Ee,we,X,Ke),X.onAfterRender(T,ve,Ae,Ee,we,Ke)}function dl(X,ve,Ae){ve.isScene!==!0&&(ve=lt);const Ee=nt.get(X),we=v.state.lights,Ke=v.state.shadowsArray,at=we.state.version,it=gt.getParameters(X,we.state,Ke,ve,Ae),wt=gt.getProgramCacheKey(it);let zt=Ee.programs;Ee.environment=X.isMeshStandardMaterial?ve.environment:null,Ee.fog=ve.fog,Ee.envMap=(X.isMeshStandardMaterial?Ie:V).get(X.envMap||Ee.environment),Ee.envMapRotation=Ee.environment!==null&&X.envMap===null?ve.environmentRotation:X.envMapRotation,zt===void 0&&(X.addEventListener("dispose",Bt),zt=new Map,Ee.programs=zt);let Dt=zt.get(wt);if(Dt!==void 0){if(Ee.currentProgram===Dt&&Ee.lightsStateVersion===at)return ri(X,it),Dt}else it.uniforms=gt.getUniforms(X),X.onBeforeCompile(it,T),Dt=gt.acquireProgram(it,wt),zt.set(wt,Dt),Ee.uniforms=it.uniforms;const St=Ee.uniforms;return(!X.isShaderMaterial&&!X.isRawShaderMaterial||X.clipping===!0)&&(St.clippingPlanes=Xe.uniform),ri(X,it),Ee.needsLights=Jc(X),Ee.lightsStateVersion=at,Ee.needsLights&&(St.ambientLightColor.value=we.state.ambient,St.lightProbe.value=we.state.probe,St.directionalLights.value=we.state.directional,St.directionalLightShadows.value=we.state.directionalShadow,St.spotLights.value=we.state.spot,St.spotLightShadows.value=we.state.spotShadow,St.rectAreaLights.value=we.state.rectArea,St.ltc_1.value=we.state.rectAreaLTC1,St.ltc_2.value=we.state.rectAreaLTC2,St.pointLights.value=we.state.point,St.pointLightShadows.value=we.state.pointShadow,St.hemisphereLights.value=we.state.hemi,St.directionalShadowMap.value=we.state.directionalShadowMap,St.directionalShadowMatrix.value=we.state.directionalShadowMatrix,St.spotShadowMap.value=we.state.spotShadowMap,St.spotLightMatrix.value=we.state.spotLightMatrix,St.spotLightMap.value=we.state.spotLightMap,St.pointShadowMap.value=we.state.pointShadowMap,St.pointShadowMatrix.value=we.state.pointShadowMatrix),Ee.currentProgram=Dt,Ee.uniformsList=null,Dt}function Sa(X){if(X.uniformsList===null){const ve=X.currentProgram.getUniforms();X.uniformsList=rx.seqWithValue(ve.seq,X.uniforms)}return X.uniformsList}function ri(X,ve){const Ae=nt.get(X);Ae.outputColorSpace=ve.outputColorSpace,Ae.batching=ve.batching,Ae.batchingColor=ve.batchingColor,Ae.instancing=ve.instancing,Ae.instancingColor=ve.instancingColor,Ae.instancingMorph=ve.instancingMorph,Ae.skinning=ve.skinning,Ae.morphTargets=ve.morphTargets,Ae.morphNormals=ve.morphNormals,Ae.morphColors=ve.morphColors,Ae.morphTargetsCount=ve.morphTargetsCount,Ae.numClippingPlanes=ve.numClippingPlanes,Ae.numIntersection=ve.numClipIntersection,Ae.vertexAlphas=ve.vertexAlphas,Ae.vertexTangents=ve.vertexTangents,Ae.toneMapping=ve.toneMapping}function _a(X,ve,Ae,Ee,we){ve.isScene!==!0&&(ve=lt),Z.resetTextureUnits();const Ke=ve.fog,at=Ee.isMeshStandardMaterial?ve.environment:null,it=O===null?T.outputColorSpace:O.isXRRenderTarget===!0?O.texture.colorSpace:vd,wt=(Ee.isMeshStandardMaterial?Ie:V).get(Ee.envMap||at),zt=Ee.vertexColors===!0&&!!Ae.attributes.color&&Ae.attributes.color.itemSize===4,Dt=!!Ae.attributes.tangent&&(!!Ee.normalMap||Ee.anisotropy>0),St=!!Ae.morphAttributes.position,xn=!!Ae.morphAttributes.normal,Qt=!!Ae.morphAttributes.color;let qn=Jl;Ee.toneMapped&&(O===null||O.isXRRenderTarget===!0)&&(qn=T.toneMapping);const Kn=Ae.morphAttributes.position||Ae.morphAttributes.normal||Ae.morphAttributes.color,bn=Kn!==void 0?Kn.length:0,Pt=nt.get(Ee),Zn=v.state.lights;if(de===!0&&(Se===!0||X!==N)){const Gs=X===N&&Ee.id===k;Xe.setState(Ee,X,Gs)}let hn=!1;Ee.version===Pt.__version?(Pt.needsLights&&Pt.lightsStateVersion!==Zn.state.version||Pt.outputColorSpace!==it||we.isBatchedMesh&&Pt.batching===!1||!we.isBatchedMesh&&Pt.batching===!0||we.isBatchedMesh&&Pt.batchingColor===!0&&we.colorTexture===null||we.isBatchedMesh&&Pt.batchingColor===!1&&we.colorTexture!==null||we.isInstancedMesh&&Pt.instancing===!1||!we.isInstancedMesh&&Pt.instancing===!0||we.isSkinnedMesh&&Pt.skinning===!1||!we.isSkinnedMesh&&Pt.skinning===!0||we.isInstancedMesh&&Pt.instancingColor===!0&&we.instanceColor===null||we.isInstancedMesh&&Pt.instancingColor===!1&&we.instanceColor!==null||we.isInstancedMesh&&Pt.instancingMorph===!0&&we.morphTexture===null||we.isInstancedMesh&&Pt.instancingMorph===!1&&we.morphTexture!==null||Pt.envMap!==wt||Ee.fog===!0&&Pt.fog!==Ke||Pt.numClippingPlanes!==void 0&&(Pt.numClippingPlanes!==Xe.numPlanes||Pt.numIntersection!==Xe.numIntersection)||Pt.vertexAlphas!==zt||Pt.vertexTangents!==Dt||Pt.morphTargets!==St||Pt.morphNormals!==xn||Pt.morphColors!==Qt||Pt.toneMapping!==qn||Pt.morphTargetsCount!==bn)&&(hn=!0):(hn=!0,Pt.__version=Ee.version);let Vs=Pt.currentProgram;hn===!0&&(Vs=dl(Ee,ve,we));let us=!1,nr=!1,ji=!1;const Nn=Vs.getUniforms(),Ws=Pt.uniforms;if(tt.useProgram(Vs.program)&&(us=!0,nr=!0,ji=!0),Ee.id!==k&&(k=Ee.id,nr=!0),us||N!==X){tt.buffers.depth.getReversed()?(Te.copy(X.projectionMatrix),Kfe(Te),Yfe(Te),Nn.setValue(ie,"projectionMatrix",Te)):Nn.setValue(ie,"projectionMatrix",X.projectionMatrix),Nn.setValue(ie,"viewMatrix",X.matrixWorldInverse);const As=Nn.map.cameraPosition;As!==void 0&&As.setValue(ie,Ue.setFromMatrixPosition(X.matrixWorld)),_t.logarithmicDepthBuffer&&Nn.setValue(ie,"logDepthBufFC",2/(Math.log(X.far+1)/Math.LN2)),(Ee.isMeshPhongMaterial||Ee.isMeshToonMaterial||Ee.isMeshLambertMaterial||Ee.isMeshBasicMaterial||Ee.isMeshStandardMaterial||Ee.isShaderMaterial)&&Nn.setValue(ie,"isOrthographic",X.isOrthographicCamera===!0),N!==X&&(N=X,nr=!0,ji=!0)}if(we.isSkinnedMesh){Nn.setOptional(ie,we,"bindMatrix"),Nn.setOptional(ie,we,"bindMatrixInverse");const Gs=we.skeleton;Gs&&(Gs.boneTexture===null&&Gs.computeBoneTexture(),Nn.setValue(ie,"boneTexture",Gs.boneTexture,Z))}we.isBatchedMesh&&(Nn.setOptional(ie,we,"batchingTexture"),Nn.setValue(ie,"batchingTexture",we._matricesTexture,Z),Nn.setOptional(ie,we,"batchingIdTexture"),Nn.setValue(ie,"batchingIdTexture",we._indirectTexture,Z),Nn.setOptional(ie,we,"batchingColorTexture"),we._colorsTexture!==null&&Nn.setValue(ie,"batchingColorTexture",we._colorsTexture,Z));const _s=Ae.morphAttributes;if((_s.position!==void 0||_s.normal!==void 0||_s.color!==void 0)&&Ut.update(we,Ae,Vs),(nr||Pt.receiveShadow!==we.receiveShadow)&&(Pt.receiveShadow=we.receiveShadow,Nn.setValue(ie,"receiveShadow",we.receiveShadow)),Ee.isMeshGouraudMaterial&&Ee.envMap!==null&&(Ws.envMap.value=wt,Ws.flipEnvMap.value=wt.isCubeTexture&&wt.isRenderTargetTexture===!1?-1:1),Ee.isMeshStandardMaterial&&Ee.envMap===null&&ve.environment!==null&&(Ws.envMapIntensity.value=ve.environmentIntensity),nr&&(Nn.setValue(ie,"toneMappingExposure",T.toneMappingExposure),Pt.needsLights&&Vo(Ws,ji),Ke&&Ee.fog===!0&&et.refreshFogUniforms(Ws,Ke),et.refreshMaterialUniforms(Ws,Ee,G,J,v.state.transmissionRenderTarget[X.id]),rx.upload(ie,Sa(Pt),Ws,Z)),Ee.isShaderMaterial&&Ee.uniformsNeedUpdate===!0&&(rx.upload(ie,Sa(Pt),Ws,Z),Ee.uniformsNeedUpdate=!1),Ee.isSpriteMaterial&&Nn.setValue(ie,"center",we.center),Nn.setValue(ie,"modelViewMatrix",we.modelViewMatrix),Nn.setValue(ie,"normalMatrix",we.normalMatrix),Nn.setValue(ie,"modelMatrix",we.matrixWorld),Ee.isShaderMaterial||Ee.isRawShaderMaterial){const Gs=Ee.uniformsGroups;for(let As=0,wn=Gs.length;As<wn;As++){const Ii=Gs[As];ge.update(Ii,Vs),ge.bind(Ii,Vs)}}return Vs}function Vo(X,ve){X.ambientLightColor.needsUpdate=ve,X.lightProbe.needsUpdate=ve,X.directionalLights.needsUpdate=ve,X.directionalLightShadows.needsUpdate=ve,X.pointLights.needsUpdate=ve,X.pointLightShadows.needsUpdate=ve,X.spotLights.needsUpdate=ve,X.spotLightShadows.needsUpdate=ve,X.rectAreaLights.needsUpdate=ve,X.hemisphereLights.needsUpdate=ve}function Jc(X){return X.isMeshLambertMaterial||X.isMeshToonMaterial||X.isMeshPhongMaterial||X.isMeshStandardMaterial||X.isShadowMaterial||X.isShaderMaterial&&X.lights===!0}this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return $},this.getRenderTarget=function(){return O},this.setRenderTargetTextures=function(X,ve,Ae){nt.get(X.texture).__webglTexture=ve,nt.get(X.depthTexture).__webglTexture=Ae;const Ee=nt.get(X);Ee.__hasExternalTextures=!0,Ee.__autoAllocateDepthBuffer=Ae===void 0,Ee.__autoAllocateDepthBuffer||bt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Ee.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(X,ve){const Ae=nt.get(X);Ae.__webglFramebuffer=ve,Ae.__useDefaultFramebuffer=ve===void 0};const fl=ie.createFramebuffer();this.setRenderTarget=function(X,ve=0,Ae=0){O=X,M=ve,$=Ae;let Ee=!0,we=null,Ke=!1,at=!1;if(X){const wt=nt.get(X);if(wt.__useDefaultFramebuffer!==void 0)tt.bindFramebuffer(ie.FRAMEBUFFER,null),Ee=!1;else if(wt.__webglFramebuffer===void 0)Z.setupRenderTarget(X);else if(wt.__hasExternalTextures)Z.rebindTextures(X,nt.get(X.texture).__webglTexture,nt.get(X.depthTexture).__webglTexture);else if(X.depthBuffer){const St=X.depthTexture;if(wt.__boundDepthTexture!==St){if(St!==null&&nt.has(St)&&(X.width!==St.image.width||X.height!==St.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Z.setupDepthRenderbuffer(X)}}const zt=X.texture;(zt.isData3DTexture||zt.isDataArrayTexture||zt.isCompressedArrayTexture)&&(at=!0);const Dt=nt.get(X).__webglFramebuffer;X.isWebGLCubeRenderTarget?(Array.isArray(Dt[ve])?we=Dt[ve][Ae]:we=Dt[ve],Ke=!0):X.samples>0&&Z.useMultisampledRTT(X)===!1?we=nt.get(X).__webglMultisampledFramebuffer:Array.isArray(Dt)?we=Dt[Ae]:we=Dt,A.copy(X.viewport),B.copy(X.scissor),W=X.scissorTest}else A.copy(j).multiplyScalar(G).floor(),B.copy(se).multiplyScalar(G).floor(),W=be;if(Ae!==0&&(we=fl),tt.bindFramebuffer(ie.FRAMEBUFFER,we)&&Ee&&tt.drawBuffers(X,we),tt.viewport(A),tt.scissor(B),tt.setScissorTest(W),Ke){const wt=nt.get(X.texture);ie.framebufferTexture2D(ie.FRAMEBUFFER,ie.COLOR_ATTACHMENT0,ie.TEXTURE_CUBE_MAP_POSITIVE_X+ve,wt.__webglTexture,Ae)}else if(at){const wt=nt.get(X.texture),zt=ve;ie.framebufferTextureLayer(ie.FRAMEBUFFER,ie.COLOR_ATTACHMENT0,wt.__webglTexture,Ae,zt)}else if(X!==null&&Ae!==0){const wt=nt.get(X.texture);ie.framebufferTexture2D(ie.FRAMEBUFFER,ie.COLOR_ATTACHMENT0,ie.TEXTURE_2D,wt.__webglTexture,Ae)}k=-1},this.readRenderTargetPixels=function(X,ve,Ae,Ee,we,Ke,at){if(!(X&&X.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let it=nt.get(X).__webglFramebuffer;if(X.isWebGLCubeRenderTarget&&at!==void 0&&(it=it[at]),it){tt.bindFramebuffer(ie.FRAMEBUFFER,it);try{const wt=X.texture,zt=wt.format,Dt=wt.type;if(!_t.textureFormatReadable(zt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!_t.textureTypeReadable(Dt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ve>=0&&ve<=X.width-Ee&&Ae>=0&&Ae<=X.height-we&&ie.readPixels(ve,Ae,Ee,we,Xt.convert(zt),Xt.convert(Dt),Ke)}finally{const wt=O!==null?nt.get(O).__webglFramebuffer:null;tt.bindFramebuffer(ie.FRAMEBUFFER,wt)}}},this.readRenderTargetPixelsAsync=async function(X,ve,Ae,Ee,we,Ke,at){if(!(X&&X.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let it=nt.get(X).__webglFramebuffer;if(X.isWebGLCubeRenderTarget&&at!==void 0&&(it=it[at]),it){const wt=X.texture,zt=wt.format,Dt=wt.type;if(!_t.textureFormatReadable(zt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!_t.textureTypeReadable(Dt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(ve>=0&&ve<=X.width-Ee&&Ae>=0&&Ae<=X.height-we){tt.bindFramebuffer(ie.FRAMEBUFFER,it);const St=ie.createBuffer();ie.bindBuffer(ie.PIXEL_PACK_BUFFER,St),ie.bufferData(ie.PIXEL_PACK_BUFFER,Ke.byteLength,ie.STREAM_READ),ie.readPixels(ve,Ae,Ee,we,Xt.convert(zt),Xt.convert(Dt),0);const xn=O!==null?nt.get(O).__webglFramebuffer:null;tt.bindFramebuffer(ie.FRAMEBUFFER,xn);const Qt=ie.fenceSync(ie.SYNC_GPU_COMMANDS_COMPLETE,0);return ie.flush(),await qfe(ie,Qt,4),ie.bindBuffer(ie.PIXEL_PACK_BUFFER,St),ie.getBufferSubData(ie.PIXEL_PACK_BUFFER,0,Ke),ie.deleteBuffer(St),ie.deleteSync(Qt),Ke}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(X,ve=null,Ae=0){X.isTexture!==!0&&(jh("WebGLRenderer: copyFramebufferToTexture function signature has changed."),ve=arguments[0]||null,X=arguments[1]);const Ee=Math.pow(2,-Ae),we=Math.floor(X.image.width*Ee),Ke=Math.floor(X.image.height*Ee),at=ve!==null?ve.x:0,it=ve!==null?ve.y:0;Z.setTexture2D(X,0),ie.copyTexSubImage2D(ie.TEXTURE_2D,Ae,0,0,at,it,we,Ke),tt.unbindTexture()};const pl=ie.createFramebuffer(),Eu=ie.createFramebuffer();this.copyTextureToTexture=function(X,ve,Ae=null,Ee=null,we=0,Ke=null){X.isTexture!==!0&&(jh("WebGLRenderer: copyTextureToTexture function signature has changed."),Ee=arguments[0]||null,X=arguments[1],ve=arguments[2],Ke=arguments[3]||0,Ae=null),Ke===null&&(we!==0?(jh("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Ke=we,we=0):Ke=0);let at,it,wt,zt,Dt,St,xn,Qt,qn;const Kn=X.isCompressedTexture?X.mipmaps[Ke]:X.image;if(Ae!==null)at=Ae.max.x-Ae.min.x,it=Ae.max.y-Ae.min.y,wt=Ae.isBox3?Ae.max.z-Ae.min.z:1,zt=Ae.min.x,Dt=Ae.min.y,St=Ae.isBox3?Ae.min.z:0;else{const _s=Math.pow(2,-we);at=Math.floor(Kn.width*_s),it=Math.floor(Kn.height*_s),X.isDataArrayTexture?wt=Kn.depth:X.isData3DTexture?wt=Math.floor(Kn.depth*_s):wt=1,zt=0,Dt=0,St=0}Ee!==null?(xn=Ee.x,Qt=Ee.y,qn=Ee.z):(xn=0,Qt=0,qn=0);const bn=Xt.convert(ve.format),Pt=Xt.convert(ve.type);let Zn;ve.isData3DTexture?(Z.setTexture3D(ve,0),Zn=ie.TEXTURE_3D):ve.isDataArrayTexture||ve.isCompressedArrayTexture?(Z.setTexture2DArray(ve,0),Zn=ie.TEXTURE_2D_ARRAY):(Z.setTexture2D(ve,0),Zn=ie.TEXTURE_2D),ie.pixelStorei(ie.UNPACK_FLIP_Y_WEBGL,ve.flipY),ie.pixelStorei(ie.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ve.premultiplyAlpha),ie.pixelStorei(ie.UNPACK_ALIGNMENT,ve.unpackAlignment);const hn=ie.getParameter(ie.UNPACK_ROW_LENGTH),Vs=ie.getParameter(ie.UNPACK_IMAGE_HEIGHT),us=ie.getParameter(ie.UNPACK_SKIP_PIXELS),nr=ie.getParameter(ie.UNPACK_SKIP_ROWS),ji=ie.getParameter(ie.UNPACK_SKIP_IMAGES);ie.pixelStorei(ie.UNPACK_ROW_LENGTH,Kn.width),ie.pixelStorei(ie.UNPACK_IMAGE_HEIGHT,Kn.height),ie.pixelStorei(ie.UNPACK_SKIP_PIXELS,zt),ie.pixelStorei(ie.UNPACK_SKIP_ROWS,Dt),ie.pixelStorei(ie.UNPACK_SKIP_IMAGES,St);const Nn=X.isDataArrayTexture||X.isData3DTexture,Ws=ve.isDataArrayTexture||ve.isData3DTexture;if(X.isDepthTexture){const _s=nt.get(X),Gs=nt.get(ve),As=nt.get(_s.__renderTarget),wn=nt.get(Gs.__renderTarget);tt.bindFramebuffer(ie.READ_FRAMEBUFFER,As.__webglFramebuffer),tt.bindFramebuffer(ie.DRAW_FRAMEBUFFER,wn.__webglFramebuffer);for(let Ii=0;Ii<wt;Ii++)Nn&&(ie.framebufferTextureLayer(ie.READ_FRAMEBUFFER,ie.COLOR_ATTACHMENT0,nt.get(X).__webglTexture,we,St+Ii),ie.framebufferTextureLayer(ie.DRAW_FRAMEBUFFER,ie.COLOR_ATTACHMENT0,nt.get(ve).__webglTexture,Ke,qn+Ii)),ie.blitFramebuffer(zt,Dt,at,it,xn,Qt,at,it,ie.DEPTH_BUFFER_BIT,ie.NEAREST);tt.bindFramebuffer(ie.READ_FRAMEBUFFER,null),tt.bindFramebuffer(ie.DRAW_FRAMEBUFFER,null)}else if(we!==0||X.isRenderTargetTexture||nt.has(X)){const _s=nt.get(X),Gs=nt.get(ve);tt.bindFramebuffer(ie.READ_FRAMEBUFFER,pl),tt.bindFramebuffer(ie.DRAW_FRAMEBUFFER,Eu);for(let As=0;As<wt;As++)Nn?ie.framebufferTextureLayer(ie.READ_FRAMEBUFFER,ie.COLOR_ATTACHMENT0,_s.__webglTexture,we,St+As):ie.framebufferTexture2D(ie.READ_FRAMEBUFFER,ie.COLOR_ATTACHMENT0,ie.TEXTURE_2D,_s.__webglTexture,we),Ws?ie.framebufferTextureLayer(ie.DRAW_FRAMEBUFFER,ie.COLOR_ATTACHMENT0,Gs.__webglTexture,Ke,qn+As):ie.framebufferTexture2D(ie.DRAW_FRAMEBUFFER,ie.COLOR_ATTACHMENT0,ie.TEXTURE_2D,Gs.__webglTexture,Ke),we!==0?ie.blitFramebuffer(zt,Dt,at,it,xn,Qt,at,it,ie.COLOR_BUFFER_BIT,ie.NEAREST):Ws?ie.copyTexSubImage3D(Zn,Ke,xn,Qt,qn+As,zt,Dt,at,it):ie.copyTexSubImage2D(Zn,Ke,xn,Qt,zt,Dt,at,it);tt.bindFramebuffer(ie.READ_FRAMEBUFFER,null),tt.bindFramebuffer(ie.DRAW_FRAMEBUFFER,null)}else Ws?X.isDataTexture||X.isData3DTexture?ie.texSubImage3D(Zn,Ke,xn,Qt,qn,at,it,wt,bn,Pt,Kn.data):ve.isCompressedArrayTexture?ie.compressedTexSubImage3D(Zn,Ke,xn,Qt,qn,at,it,wt,bn,Kn.data):ie.texSubImage3D(Zn,Ke,xn,Qt,qn,at,it,wt,bn,Pt,Kn):X.isDataTexture?ie.texSubImage2D(ie.TEXTURE_2D,Ke,xn,Qt,at,it,bn,Pt,Kn.data):X.isCompressedTexture?ie.compressedTexSubImage2D(ie.TEXTURE_2D,Ke,xn,Qt,Kn.width,Kn.height,bn,Kn.data):ie.texSubImage2D(ie.TEXTURE_2D,Ke,xn,Qt,at,it,bn,Pt,Kn);ie.pixelStorei(ie.UNPACK_ROW_LENGTH,hn),ie.pixelStorei(ie.UNPACK_IMAGE_HEIGHT,Vs),ie.pixelStorei(ie.UNPACK_SKIP_PIXELS,us),ie.pixelStorei(ie.UNPACK_SKIP_ROWS,nr),ie.pixelStorei(ie.UNPACK_SKIP_IMAGES,ji),Ke===0&&ve.generateMipmaps&&ie.generateMipmap(Zn),tt.unbindTexture()},this.copyTextureToTexture3D=function(X,ve,Ae=null,Ee=null,we=0){return X.isTexture!==!0&&(jh("WebGLRenderer: copyTextureToTexture3D function signature has changed."),Ae=arguments[0]||null,Ee=arguments[1]||null,X=arguments[2],ve=arguments[3],we=arguments[4]||0),jh('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(X,ve,Ae,Ee,we)},this.initRenderTarget=function(X){nt.get(X).__webglFramebuffer===void 0&&Z.setupRenderTarget(X)},this.initTexture=function(X){X.isCubeTexture?Z.setTextureCube(X,0):X.isData3DTexture?Z.setTexture3D(X,0):X.isDataArrayTexture||X.isCompressedArrayTexture?Z.setTexture2DArray(X,0):Z.setTexture2D(X,0),tt.unbindTexture()},this.resetState=function(){M=0,$=0,O=null,tt.reset(),En.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Xa}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=Rn._getDrawingBufferColorSpace(e),t.unpackColorSpace=Rn._getUnpackColorSpace()}}class mxe{constructor(e){$N(this,"animate",()=>{this.cube&&(this.cube.rotation.x+=.01,this.cube.rotation.y+=.01,this.renderer.render(this.scene,this.camera)),requestAnimationFrame(this.animate)});this.canvas=e,this.scene=null,this.camera=null,this.renderer=null,this.cube=null,this.init()}init(){this.scene=new Spe,this.camera=new kI(-1,1,1,-1,.1,1e3),this.camera.position.z=5,this.renderer=new pxe({canvas:this.canvas,alpha:!0,antialias:!0}),this.renderer.setSize(640,480),this.renderer.setClearColor(0,0);const e=new $f(.2,.2,.2),t=new Epe({color:6581503,transparent:!0,opacity:.8,shininess:100});this.cube=new ia(e,t),this.cube.position.z=0,this.scene.add(this.cube);const s=new Rpe(16777215,1);s.position.set(0,0,5),this.scene.add(s);const r=new kpe(4210752);this.scene.add(r),this.animate()}updateCubePosition(e,t,s){this.cube&&(this.cube.position.x=e,this.cube.position.y=t,this.cube.scale.set(s,s,s),this.renderer.render(this.scene,this.camera))}}class gxe{constructor(e){this.canvas=e,this.width=e.width,this.height=e.height}async processSegmentation(e){if(!e.length)return null;try{const t=await this.createMask(e),{centerX:s,centerY:r,count:i}=this.calculateCenter(t);if(i>0){const o=s/this.width*2-1,a=-(r/this.height)*2+1,l=Math.sqrt(i/(this.width*this.height)),u=Math.max(.3,Math.min(1,l*2));return{position:{x:o,y:a},scale:u}}}catch(t){console.error("处理分割结果时出错:",t)}return null}async createMask(e){return await rfe(e,{r:255,g:255,b:255,a:255},{r:0,g:0,b:0,a:0})}calculateCenter(e){let t=0,s=0,r=0;const i=e.data;for(let o=0;o<i.length;o+=4)if(i[o]===255){const a=o/4,l=a%this.width,u=Math.floor(a/this.width);t+=l,s+=u,r++}return r>0&&(t/=r,s/=r),{centerX:t,centerY:s,count:r}}}const yxe=()=>{const n=Di.useRef(null),e=Di.useRef(null),t=Di.useRef(null),[s,r]=Di.useState(null),[i,o]=Di.useState(!0),[a,l]=Di.useState(0),u=Di.useRef(null),h=Di.useRef(null),d=Di.useRef(0),p=Di.useRef(performance.now()),m=async()=>{try{await SM(),await wM("webgl");const w=await tfe(Jp.MediaPipeSelfieSegmentation,{runtime:"tfjs",modelType:"general"});r(w),o(!1)}catch(w){console.error("模型加载失败:",w),o(!1)}},g=async()=>{if(n.current)try{const w=await navigator.mediaDevices.getUserMedia({video:{width:640,height:480,facingMode:"user"},audio:!1}),E=n.current;return E.srcObject=w,await new Promise(T=>{E.onloadedmetadata=()=>{E.play(),T()}}),!0}catch(w){return console.error("摄像头访问失败:",w),!1}},b=()=>{const w=performance.now(),E=w-p.current;E>=1e3&&(l(Math.round(d.current*1e3/E)),d.current=0,p.current=w),d.current++},y=async()=>{if(!(!s||!n.current||!e.current))try{const w=n.current,E=e.current,T=E.getContext("2d");if(w.readyState<2)return;const I=await s.segmentPeople(w,{flipHorizontal:!1,multiSegmentation:!1,segmentBodyParts:!1});if(I.length>0){const M=await h.current.processSegmentation(I);if(M){const{position:q,scale:Y}=M;u.current.updateCubePosition(q.x,q.y,Y)}const $=await h.current.createMask(I),O=document.createElement("canvas");O.width=E.width,O.height=E.height;const k=O.getContext("2d");k.drawImage(w,0,0,E.width,E.height);const N=k.getImageData(0,0,E.width,E.height),A=new ImageData(E.width,E.height),B=A.data,W=$.data,K=N.data;for(let q=0;q<B.length;q+=4)W[q]===255?(B[q]=K[q],B[q+1]=K[q+1],B[q+2]=K[q+2],B[q+3]=255):(B[q]=0,B[q+1]=0,B[q+2]=0,B[q+3]=180);T.clearRect(0,0,E.width,E.height),T.putImageData(A,0,0)}else T.drawImage(w,0,0,E.width,E.height);b(),T.fillStyle="white",T.font="24px Arial",T.fillText(`FPS: ${a}`,10,30)}catch(w){console.error("分割过程出错:",w)}},v=async()=>{if(await g()){const w=async()=>{await y(),requestAnimationFrame(w)};w()}};return Di.useEffect(()=>{m(),u.current=new mxe(t.current),h.current=new gxe(e.current)},[]),Di.useEffect(()=>{s&&v()},[s]),$i.jsxs("div",{className:"camera-container",children:[i&&$i.jsx("div",{className:"loading",children:$i.jsx("p",{children:"模型加载中..."})}),$i.jsxs("div",{className:"video-container",children:[$i.jsx("video",{ref:n,width:"640",height:"480",playsInline:!0,autoPlay:!0,style:{display:"none"}}),$i.jsx("canvas",{ref:e,width:"640",height:"480"}),$i.jsx("canvas",{ref:t,width:"640",height:"480",style:{position:"absolute",top:0,left:0,pointerEvents:"none"}})]}),$i.jsxs("div",{className:"fps-display",children:["FPS: ",a]})]})};function xxe(){return $i.jsxs("div",{className:"App",children:[$i.jsx("h1",{children:"WebAR 语义分割演示"}),$i.jsx(yxe,{})]})}nz.createRoot(document.getElementById("root")).render($i.jsx(Di.StrictMode,{children:$i.jsx(xxe,{})}));
